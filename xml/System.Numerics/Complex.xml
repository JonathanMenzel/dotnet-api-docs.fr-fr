<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Complex.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51adbe02d035bfc5cd2896e8b0e40079375718a5e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1adbe02d035bfc5cd2896e8b0e40079375718a5e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Represents a complex number.</source>
          <target state="translated">Représente un nombre complexe.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number is a number that comprises a real number part and an imaginary number part.</source>
          <target state="translated">Un nombre complexe est un nombre qui comprend une partie réelle et une partie imaginaire.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number z is usually written in the form z = x + yi, where <bpt id="p1">*</bpt>x<ept id="p1">*</ept> and <bpt id="p2">*</bpt>y<ept id="p2">*</ept> are real numbers, and <bpt id="p3">*</bpt>i<ept id="p3">*</ept> is the imaginary unit that has the property <bpt id="p4">*</bpt>i<ept id="p4">*</ept><bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</source>
          <target state="translated">Un nombre complexe de z est généralement écrites sous la forme z = x + yi, où <bpt id="p1">*</bpt>x<ept id="p1">*</ept> et <bpt id="p2">*</bpt>y<ept id="p2">*</ept> sont des nombres réels et <bpt id="p3">*</bpt>i<ept id="p3">*</ept> est l’unité imaginaire qui a la propriété <bpt id="p4">*</bpt>i<ept id="p4">*</ept> <bpt id="p5">&lt;sup&gt;</bpt>2<ept id="p5">&lt;/sup&gt;</ept> = -1.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is represented by <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, and the imaginary part of the complex number is represented by <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</source>
          <target state="translated">La partie réelle du nombre complexe est représentée par <bpt id="p1">*</bpt>x<ept id="p1">*</ept>, et la partie imaginaire du nombre complexe est représentée par <bpt id="p2">*</bpt>y<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> type utilise le système de coordonnées cartésiennes (réel, imaginaire) lors de l’instanciation et la manipulation des nombres complexes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane.</source>
          <target state="translated">Un nombre complexe peut être représenté comme un point dans un système de coordonnées à deux dimensions, appelé plan complexe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).</source>
          <target state="translated">La partie réelle du nombre complexe est positionnée sur l’axe des abscisses (l’axe horizontal), et la partie imaginaire est positionnée sur l’axe des ordonnées (axe vertical).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:</source>
          <target state="translated">N’importe quel point dans le plan complexe peut également être exprimée en fonction de sa valeur absolue, en utilisant le polaire repère., dans des coordonnées polaires, un point se caractérise par deux nombres :</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).</source>
          <target state="translated">Sa grandeur, qui est la distance entre le point à partir de l’origine (autrement dit, 0,0, ou au point auquel l’axe des abscisses et l’axe des y).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Its phase, which is the angle between the real axis and the line drawn from the origin to the point.</source>
          <target state="translated">Sa phase, qui est l’angle entre le véritable axe et la ligne dessinée à l’origine pour le point.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instantiating a Complex Number</source>
          <target state="translated">Instanciation d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can assign a value to a complex number in one of the following ways:</source>
          <target state="translated">Vous pouvez affecter une valeur à un nombre complexe dans une des manières suivantes :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By passing two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values to its constructor.</source>
          <target state="translated">En passant deux <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs à son constructeur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The first value represents the real part of the complex number, and the second value represents its imaginary part.</source>
          <target state="translated">La première valeur représente la partie réelle du nombre complexe, et la deuxième valeur représente la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.</source>
          <target state="translated">Ces valeurs représentent la position du nombre complexe dans le système de coordonnées cartésien à deux dimensions.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By calling the static (<ph id="ph1">`Shared`</ph> in Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> method to create a complex number from its polar coordinates.</source>
          <target state="translated">En appelant la méthode statique (<ph id="ph1">`Shared`</ph> en Visual Basic) <ph id="ph2">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph> méthode pour créer un nombre complexe à partir de ses coordonnées polaires.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning a <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, or <ph id="ph10">&lt;xref:System.Double&gt;</ph> value to a <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">En assignant un <ph id="ph1">&lt;xref:System.Byte&gt;</ph>, <ph id="ph2">&lt;xref:System.SByte&gt;</ph>, <ph id="ph3">&lt;xref:System.Int16&gt;</ph>, <ph id="ph4">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph5">&lt;xref:System.Int32&gt;</ph>, <ph id="ph6">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph7">&lt;xref:System.Int64&gt;</ph>, <ph id="ph8">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph9">&lt;xref:System.Single&gt;</ph>, ou <ph id="ph10">&lt;xref:System.Double&gt;</ph> valeur un <ph id="ph11">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">La valeur devient la partie réelle du nombre complexe, et sa partie imaginaire est égal à 0.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By casting (in C#) or converting (in Visual Basic) a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">En effectuer un cast (en c#) ou en convertissant (en Visual Basic) un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> ou <ph id="ph2">&lt;xref:System.Numerics.BigInteger&gt;</ph> valeur un <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The value becomes the real part of the complex number, and its imaginary part equals 0.</source>
          <target state="translated">La valeur devient la partie réelle du nombre complexe, et sa partie imaginaire est égal à 0.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By assigning the complex number that is returned by a method or operator to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">En assignant le nombre complexe qui est retourné par une méthode ou un opérateur pour un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> is a static method that returns a complex number that is the sum of two complex numbers, and the <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> operator adds two complex numbers and returns the result.</source>
          <target state="translated">Par exemple, <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=nameWithType&gt;</ph> est une méthode statique qui retourne un nombre complexe qui est la somme de deux nombres complexes, et le <ph id="ph2">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=nameWithType&gt;</ph> opérateur ajoute deux nombres complexes et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example demonstrates each of these five ways of assigning a value to a complex number.</source>
          <target state="translated">L’exemple suivant illustre chacune de ces cinq façons d’assigner une valeur à un nombre complexe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operations with Complex Numbers</source>
          <target state="translated">Opérations avec des nombres complexes</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> structure in the .NET Framework includes members that provide the following functionality:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> structure dans le .NET Framework inclut des membres qui fournissent les fonctionnalités suivantes :</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to compare two complex numbers to determine whether they are equal.</source>
          <target state="translated">Méthodes permettant de comparer deux nombres complexes pour déterminer s’ils sont égaux.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Operators to perform arithmetic operations on complex numbers.</source>
          <target state="translated">Opérateurs pour effectuer des opérations arithmétiques sur les nombres complexes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> opérateurs permettent d’effectuer une addition, soustraction, multiplication, division et la négation unaire avec des nombres complexes.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform other numerical operations on complex numbers.</source>
          <target state="translated">Méthodes pour effectuer d’autres opérations numériques sur les nombres complexes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.</source>
          <target state="translated">En plus de quatre opérations arithmétiques fondamentales, vous pouvez élever un nombre complexe à une puissance spécifiée, recherche la racine carrée d’un nombre complexe et obtenir la valeur absolue d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Methods to perform trigonometric operations on complex numbers.</source>
          <target state="translated">Méthodes pour effectuer des opérations trigonométriques sur les nombres complexes.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, you can calculate the tangent of an angle represented by a complex number.</source>
          <target state="translated">Par exemple, vous pouvez calculer la tangente d’un angle représentée par un nombre complexe.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that, because the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> properties are read-only, you cannot modify the value of an existing <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Notez que, étant donné que la <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propriétés sont en lecture seule, vous ne pouvez pas modifier la valeur d’un objet <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>All methods that perform an operation on a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, if their return value is of type <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, return a new <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> number.</source>
          <target state="translated">Toutes les méthodes qui effectuent une opération sur un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, si leur valeur de retour est de type <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph>, retournent un nouvel <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> nombre.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Precision and Complex Numbers</source>
          <target state="translated">Précision et nombres complexes</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by two double-precision floating-point values.</source>
          <target state="translated">Les parties imaginaires et réelle d’un nombre complexe sont représentées par deux valeurs à virgule flottante double précision.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values, like double-precision floating-point values, can lose precision as a result of numerical operations.</source>
          <target state="translated">Cela signifie que <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valeurs, telles que les valeurs à virgule flottante double précision, peuvent perdre en précision à la suite d’opérations numériques.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>This means that strict comparisons for equality of two <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> values may fail, even if the difference between the two values is due to a loss of precision.</source>
          <target state="translated">Cela signifie que stricte les comparaisons d’égalité de deux <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> valeurs peuvent échouer, même si la différence entre les deux valeurs en raison d’une perte de précision.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, performing exponentiation on the logarithm of a number should return the original number.</source>
          <target state="translated">Par exemple, l’exécution de l’élévation sur le logarithme d’un nombre doit retourner le nombre d’origine.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.</source>
          <target state="translated">Toutefois, dans certains cas, la perte de précision de valeurs à virgule flottante risque de légères différences entre les deux valeurs, comme l’illustre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, the following example, which calculates the square root of a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.</source>
          <target state="translated">De même, l’exemple suivant, qui calcule la racine carrée d’un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> number, produit des résultats légèrement différents sur les 32 bits et IA64 des versions du .NET Framework.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Complex Numbers, Infinity, and NaN</source>
          <target state="translated">Nombres complexes, l’infini et NaN</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The real and imaginary parts of a complex number are represented by <ph id="ph1">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">Les parties imaginaires et réelle d’un nombre complexe sont représentées par <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In addition to ranging from <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, the real or imaginary part of a complex number can have a value of <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">En plus d’allant <ph id="ph1">&lt;xref:System.Double.MinValue?displayProperty=nameWithType&gt;</ph> à <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph>, la partie réelle ou imaginaire d’un nombre complexe peut avoir une valeur de <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph5">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> all propagate in any arithmetic or trigonometric operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, et <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> tous les propagent dans toutes les opérations arithmétiques ou trigonométriques.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In the following example, division by <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produces a complex number whose real and imaginary parts are both <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dans l’exemple suivant, la division par <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produit un nombre complexe dont les parties réelles et imaginaires sont toutes deux <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Par conséquent, l’exécution de la multiplication avec cette valeur produit également un nombre complexe dont les parties réelles et imaginaires sont <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Similarly, performing a multiplication that overflows the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type produces a complex number whose real part is <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">De même, effectuer une multiplication qui dépasse la plage de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> type génère un nombre complexe dont la partie réelle est <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> et dont la partie imaginaire est <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Subsequently performing division with this complex number returns a complex number whose real part is <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and whose imaginary part is <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Par la suite effectuer une division avec ce nombre complexe retourne un nombre complexe dont la partie réelle est <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> et dont la partie imaginaire est <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Mathematical operations with complex numbers that are invalid or that overflow the range of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type do not throw an exception.</source>
          <target state="translated">Les opérations mathématiques avec des nombres complexes qui ne sont pas valides ou qui dépassent la plage de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> type de données ne lèvent pas d’exception.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Instead, they return a <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> under the following conditions:</source>
          <target state="translated">Au lieu de cela, elles retournent un <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> dans les conditions suivantes :</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a positive number by zero returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La division d’un nombre positif par zéro retourne <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the upper bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Toute opération qui dépasse la limite supérieure de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> retourne de type de données <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a negative number by zero returns <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La division d’un nombre négatif par zéro retourne <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that overflows the lower bound of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type returns <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Toute opération qui dépasse la limite inférieure de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> retourne de type de données <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The division of a zero by zero returns <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La division d’un zéro par zéro retourne <ph id="ph1">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Any operation that is performed on operands whose values are <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, or <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, depending on the specific operation.</source>
          <target state="translated">Toute opération qui est exécutée sur les opérandes dont les valeurs sont <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> retourne <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, ou <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, en fonction de l’opération spécifique.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Note that this applies to any intermediate calculations performed by a method.</source>
          <target state="translated">Notez que cela s’applique à tous les calculs intermédiaires effectuées par une méthode.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>For example, the multiplication of <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> uses the formula (ac - bd) + (ad + bc)i.</source>
          <target state="translated">Par exemple, la multiplication de <ph id="ph1">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> utilise la formule (ac - bd) + (ad + bc) i.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5.</source>
          <target state="translated">Le calcul de l’élément réel qui résulte de la multiplication évalue l’expression 9e308 * 2.5 - 9e308 * 3.5.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Each intermediate multiplication in this expression returns <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and the attempt to subtract <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> from <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> returns <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Chaque multiplication intermédiaire dans cette expression retourne <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>et la tentative de soustraction <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> de <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> retourne <ph id="ph4">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Formatting a Complex Number</source>
          <target state="translated">Mise en forme d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>By default, the string representation of a complex number takes the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>real<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginary<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>real<ept id="p3">*</ept> and <bpt id="p4">*</bpt>imaginary<ept id="p4">*</ept> are the string representations of the <ph id="ph4">&lt;xref:System.Double&gt;</ph> values that form the complex number's real and imaginary components.</source>
          <target state="translated">Par défaut, la représentation sous forme de chaîne d’un nombre complexe prend la forme <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>réel<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>imaginaire<ept id="p2">*</ept><ph id="ph3">`)`</ph>, où <bpt id="p3">*</bpt>réel<ept id="p3">*</ept> et <bpt id="p4">*</bpt>imaginaire<ept id="p4">*</ept> sont les représentations sous forme de chaîne de la <ph id="ph4">&lt;xref:System.Double&gt;</ph> les valeurs qui forment les composants réels et imaginaires du nombre complexe.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>Some overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> method allow customization of the string representations of these <ph id="ph2">&lt;xref:System.Double&gt;</ph> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string.</source>
          <target state="translated">Certaines surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> méthode permettent de personnaliser les représentations sous forme de chaîne de ces <ph id="ph2">&lt;xref:System.Double&gt;</ph> valeurs reflètent les conventions de mise en forme d’une culture particulière ou s’affichent dans un format particulier défini par une valeur numérique standard ou personnalisée chaîne de format.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>(For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</source>
          <target state="translated">(Pour plus d’informations, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component.</source>
          <target state="translated">Une des façons plus courantes d’exprimer la représentation sous forme de chaîne d’un nombre complexe prend la forme a + bi, où un est le composant réel du nombre de complexe, et b est la partie imaginaire du nombre complexe.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>In electrical engineering, a complex number is most commonly expressed as a + bj.</source>
          <target state="translated">Dans l’équipe d’ingénierie électrique, un nombre complexe est généralement exprimé en un + bj.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>You can return the string representation of a complex number in either of these two forms.</source>
          <target state="translated">Vous pouvez retourner la représentation sous forme de chaîne d’un nombre complexe dans une de ces deux formes.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>To do this, define a custom format provider by implementing the <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, and then call the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour ce faire, définissez un fournisseur de format personnalisé en implémentant le <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph> et <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, puis appelez le <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example defines a <ph id="ph1">`ComplexFormatter`</ph> class that represents a complex number as a string in the form of either a + bi or a + bj.</source>
          <target state="translated">L’exemple suivant définit un <ph id="ph1">`ComplexFormatter`</ph> classe qui représente un nombre complexe en tant que chaîne sous la forme d’un a + bi ou un + bj.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Complex">
          <source>The following example then uses this custom formatter to display the string representation of a complex number.</source>
          <target state="translated">L’exemple suivant utilise ensuite ce formateur personnalisé pour afficher la représentation sous forme de chaîne d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The real part of the complex number.</source>
          <target state="translated">Partie réelle du nombre complexe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The imaginary part of the complex number.</source>
          <target state="translated">Partie imaginaire du nombre complexe.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> structure using the specified real and imaginary values.</source>
          <target state="translated">Initialise une nouvelle instance de la structure <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> à l'aide des valeurs réelles et imaginaires spécifiées.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The <ph id="ph1">`real`</ph> or <ph id="ph2">`imaginary`</ph> arguments may lose precision if they are data types that require an explicit cast to <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">`real`</ph> ou <ph id="ph2">`imaginary`</ph> arguments peuvent perdre en précision si elles sont des types de données qui nécessitent une conversion explicite en <ph id="ph3">&lt;xref:System.Double&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.#ctor(System.Double,System.Double)">
          <source>The following example instantiates two complex numbers, and then uses them in addition, subtraction, multiplication, and division operations.</source>
          <target state="translated">L’exemple suivant instancie deux nombres complexes et les utilise dans les opérations d’addition, soustraction, multiplication et division.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>Gets the absolute value (or magnitude) of a complex number.</source>
          <target state="translated">Obtient la valeur absolue (ou ordre de grandeur) d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Valeur absolue de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a complex number is equivalent to its <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">La valeur absolue d’un nombre complexe est équivalente à son <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The absolute value of a real number a + bi is calculated as follows:</source>
          <target state="translated">La valeur absolue d’un nombre réel un + bi est calculé comme suit :</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b = 0, the result is 0.</source>
          <target state="translated">Si b = 0, le résultat est 0.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If a &gt; b, the result is a *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si un &gt; b, le résultat est un *<ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + b<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/a<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If b &gt; a, the result is b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si b &gt; un, le résultat est b * <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(1 + un<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>/b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If the calculation of the absolute value results in an overflow, the method returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si le calcul de la valeur absolue provoque un dépassement de capacité, la méthode retourne <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>If either the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> and the other property is neither <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> nor <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propriété <ph id="ph3">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph> et l’autre propriété n’est ni <ph id="ph4">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ni <ph id="ph5">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, la méthode retourne <ph id="ph6">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Abs(System.Numerics.Complex)">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant calcule la valeur absolue d’un nombre complexe et montre qu’il est équivalent à la valeur de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>A complex number that represents a cosine.</source>
          <target state="translated">Nombre complexe qui représente un cosinus.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>Returns the angle that is the arc cosine of the specified complex number.</source>
          <target state="translated">Retourne l'angle qui correspond au cosinus d'arc du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The angle, measured in radians, which is the arc cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">L'angle, mesuré en radians, qui correspond au cosinus d'arc de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Acos%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> méthode utilise la formule suivante :</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</source>
          <target state="translated">(-<ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">`value`</ph><ph id="ph4"> + </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph6">*</ph><ph id="ph7">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph8">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph9"> - </ph><ph id="ph10">`value`</ph><ph id="ph11"> * </ph><ph id="ph12">`value`</ph>)))</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Acos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to add.</source>
          <target state="translated">Premier nombre complexe à ajouter.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to add.</source>
          <target state="translated">Deuxième nombre complexe à ajouter.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers and returns the result.</source>
          <target state="translated">Ajoute deux nombres complexes et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Somme de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> et <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">L’ajout d’un type complexe, a + bi, et un deuxième nombre complexe, le c + l’injection de dépendance, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i.</source>
          <target state="translated">(a + c) + (b + d) i.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of the component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’appel de méthode provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur du composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method to perform addition with complex numbers.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent utiliser la <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> méthode pour effectuer une addition avec des nombres complexes.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">L’exemple suivant illustre l’addition avec des nombres complexes.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>Returns the angle that is the arc sine of the specified complex number.</source>
          <target state="translated">Retourne l'angle qui correspond au sinus d'arc du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The angle which is the arc sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Angle qui correspond au sinus d'arc de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Asin%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> méthode utilise la formule suivante :</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> - value * value))</source>
          <target state="translated"><ph id="ph1">-</ph><ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id="ph3"> * </ph><ph id="ph4">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * valeur + <ph id="ph6">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> -valeur * valeur))</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Asin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>Returns the angle that is the arc tangent of the specified complex number.</source>
          <target state="translated">Retourne l'angle qui correspond à la tangente d'arc du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The angle that is the arc tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Angle qui correspond à la tangente d'arc de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Atan%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method uses the following formula:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> méthode utilise la formule suivante :</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / new Complex(2.0, 0.0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id="ph4"> - </ph><ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value) - <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * value)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / nouveau complexe (2.0, 0,0)) * (<ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph3">&lt;xref:System.Numerics.Complex.One&gt;</ph> <ph id="ph4"> - </ph> <ph id="ph5">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * valeur)- <ph id="ph6">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id="ph7">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * valeur)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Atan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>Computes the conjugate of a complex number and returns the result.</source>
          <target state="translated">Calcule le conjugué d'un nombre complexe et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Conjugué de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component.</source>
          <target state="translated">Le conjugué d’un nombre complexe inverse le signe du composant imaginaire ; Autrement dit, elle s’applique négation unaire la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>If a + bi is a complex number, its conjugate is a - bi.</source>
          <target state="translated">Si un + bi est un nombre complexe, son conjugué est a - bi.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)">
          <source>The following example displays the conjugate of two complex numbers.</source>
          <target state="translated">L’exemple suivant affiche le conjugué de deux nombres complexes.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>Returns the cosine of the specified complex number.</source>
          <target state="translated">Retourne le cosinus du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Cosinus de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method uses the following formula to calculate the cosine of the complex number a + bi:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> méthode utilise la formule suivante pour calculer le cosinus du nombre complexe a + bi :</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id="ph3">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cos(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>Returns the hyperbolic cosine of the specified complex number.</source>
          <target state="translated">Retourne le cosinus hyperbolique du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The hyperbolic cosine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Cosinus hyperbolique de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Cosh%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> méthode utilise la formule suivante pour calculer le cosinus hyperbolique du nombre complexe a + bi :</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Cosh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to be divided.</source>
          <target state="translated">Nombre complexe à diviser.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number to divide by.</source>
          <target state="translated">Nombre complexe par lequel diviser.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides one complex number by another and returns the result.</source>
          <target state="translated">Divise un nombre complexe par un autre et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The quotient of the division.</source>
          <target state="translated">Quotient de la division.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:</source>
          <target state="translated">La division d’un nombre complexe, un + bi, par un deuxième nombre complexe, du nombre, de l’entrepôt c + di, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((AC + BD) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) i</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si le calcul du quotient provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method can be used by languages that do not support custom operators.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> méthode peut être utilisée par les langages qui ne prennent pas en charge les opérateurs personnalisés.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to division using the division operator.</source>
          <target state="translated">Son comportement est identique à la division à l’aide de l’opérateur de division.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example divides a complex number by each element in an array of complex numbers.</source>
          <target state="translated">L’exemple suivant divise un nombre complexe par chaque élément dans un tableau de nombres complexes.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">Retourne une valeur qui indique si deux nombres complexes sont égaux.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The complex number to compare.</source>
          <target state="translated">Nombre complexe à comparer.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Returns a value that indicates whether the current instance and a specified complex number have the same value.</source>
          <target state="translated">Retourne une valeur qui indique si l'instance actuelle et un nombre complexe spécifié ont la même valeur.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this complex number and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> have the same value; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si ce nombre complexe et <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ont la même valeur ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method provides the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implementation for the <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> structure.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> méthode fournit le <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> implémentation pour la <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It performs slightly better than <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method because it does not have to convert its parameter to a complex number.</source>
          <target state="translated">Il effectue légèrement meilleures que celles <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> (méthode), car il n’a pas à convertir son paramètre en un nombre complexe.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Deux nombres complexes sont égales si leurs parties réelles sont égales et leurs parties imaginaires sont égales.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> méthode est équivalente à l’expression suivante :</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> méthode avec précaution, car deux valeurs qui sont apparemment équivalentes peuvent être considérées comme inégales en raison de la précision différente de leurs composants réels et imaginaires.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example reports that <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> are not equal.</source>
          <target state="translated">L’exemple suivant indique que <bpt id="p1">&lt;c&gt;</bpt>(3.33333, 0.142857)<ept id="p1">&lt;/c&gt;</ept> et <bpt id="p2">&lt;c&gt;</bpt>(10/3, 1/7)<ept id="p2">&lt;/c&gt;</ept> ne sont pas égales.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">Une technique recommandée consiste à définir une marge acceptable de différence entre les deux valeurs (tel que. % 01 de l’un des composants des valeurs réelles et imaginaires) au lieu de comparer les valeurs sont égales.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision, and, therefore, the values are likely to be equal.</source>
          <target state="translated">Si la valeur absolue de la différence entre les deux valeurs est inférieure ou égale à cette marge, la différence est probablement en raison d’une différence de précision, et, par conséquent, les valeurs sont susceptibles d’être égale.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>The following example uses this technique to compare the two complex values that the previous code example found to be unequal.</source>
          <target state="translated">L’exemple suivant utilise cette technique pour comparer deux valeurs complexes que l’exemple de code précédent a japonaises.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Numerics.Complex)">
          <source>It finds the two complex numbers to be equal.</source>
          <target state="translated">Il recherche les deux nombres complexes pour être égale.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">Objet à comparer.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Returns a value that indicates whether the current instance and a specified object have the same value.</source>
          <target state="translated">Retourne une valeur qui indique si l'instance actuelle et un objet spécifié ont la même valeur.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> parameter is a <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object or a type capable of implicit conversion to a <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object, and its value is equal to the current <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le paramètre <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> est un objet <ph id="ph3">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> ou un type capable d'effectuer une conversion implicite en objet <ph id="ph4">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> et que sa valeur est égale à l'objet <ph id="ph5">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actuel ; sinon, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Deux nombres complexes sont égales si leurs parties réelles sont égales et leurs parties imaginaires sont égales.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> méthode est équivalente à l’expression suivante :</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the <ph id="ph1">`obj`</ph> parameter is not a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object, but it is a data type for which an implicit conversion is defined, the <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method converts <ph id="ph4">`obj`</ph> to a <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> object whose real part is equal to the value of <ph id="ph6">`obj`</ph> and whose imaginary part is equal to zero before it performs the comparison.</source>
          <target state="translated">Si le <ph id="ph1">`obj`</ph> paramètre n’est pas un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet, mais il est un type de données pour lequel une conversion implicite est définie, le <ph id="ph3">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> méthode convertit <ph id="ph4">`obj`</ph> à un <ph id="ph5">&lt;xref:System.Numerics.Complex&gt;</ph> objet dont la partie réelle est égale à la valeur de <ph id="ph6">`obj`</ph>et dont la partie imaginaire est égale à zéro avant d’effectuer la comparaison.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.</source>
          <target state="translated">L’exemple suivant illustre ce comportement en recherchant qu’un nombre complexe et une valeur à virgule flottante double précision sont égaux.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> method with caution, because two values that are apparently equivalent can be considered unequal due to the differing precision of their real and imaginary components.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;see cref="M:System.Numerics.Complex.Equals(System.Numerics.Complex)" /&gt;</ph> méthode avec précaution, car deux valeurs qui sont apparemment équivalentes peuvent être considérées comme inégales en raison de la précision différente de leurs composants réels et imaginaires.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The problem can be accentuated if <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> must be converted to a <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> before performing the comparison.</source>
          <target state="translated">Le problème peut être accentué si <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> doit être converti en un <ph id="ph2">&lt;see cref="T:System.Double" /&gt;</ph> avant d’effectuer la comparaison.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example compares a complex number whose real component appears to be equal to a <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value with that <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">L’exemple suivant compare un nombre complexe dont le composant réel semble être égale à un <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> valeur avec qui <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>As the output shows, the comparison for equality returns <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Comme le montre la sortie, la comparaison d’égalité retourne <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>One recommended technique is to define an acceptable margin of difference between the two values (such as .01% of one of the values' real and imaginary components) instead of comparing the values for equality.</source>
          <target state="translated">Une technique recommandée consiste à définir une marge acceptable de différence entre les deux valeurs (tel que. % 01 de l’un des composants des valeurs réelles et imaginaires) au lieu de comparer les valeurs sont égales.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to a difference in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">Si la valeur absolue de la différence entre les deux valeurs est inférieure ou égale à cette marge, la différence est probablement en raison d’une différence de précision et, par conséquent, les valeurs sont susceptibles d’être égale.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>The following example uses this technique to compare the two values that the previous code example found to be unequal.</source>
          <target state="translated">L’exemple suivant utilise cette technique pour comparer deux valeurs que l’exemple de code précédent a japonaises.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Equals(System.Object)">
          <source>It now finds them to be equal.</source>
          <target state="translated">Il détecte désormais être égale.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">Nombre complexe qui spécifie une puissance.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Returns <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power specified by a complex number.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see langword="e" /&gt;</ph> élevé à la puissance spécifiée par un nombre complexe.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The number <ph id="ph1">&lt;see langword="e" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Nombre <ph id="ph1">&lt;see langword="e" /&gt;</ph> élevé à la puissance <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>Use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> method to calculate the powers of other bases.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> méthode pour calculer les puissances d’autres bases.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Exp%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> est l’inverse de <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Exp(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que, avec une tolérance pour l’absence de précision de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> type de données, en passant la valeur retournée par la <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> méthode à la <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.</source>
          <target state="translated">Grandeur, à savoir la distance entre l'origine (intersection de l'axe des abscisses et de l'axe des ordonnées) et le nombre.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The phase, which is the angle from the line to the horizontal axis, measured in radians.</source>
          <target state="translated">Phase, à savoir l'angle de la ligne par rapport à l'axe horizontal, mesurée en radians.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Creates a complex number from a point's polar coordinates.</source>
          <target state="translated">Crée un nombre complexe à partir des coordonnées polaires d'un point.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method instantiates a complex number based on its polar coordinates.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> méthode instancie un nombre complexe selon ses coordonnées polaires.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>Because there are multiple representations of a point on a complex plane, the return value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method is normalized.</source>
          <target state="translated">Étant donné que plusieurs représentations sous forme d’un point sur un plan complexe, la valeur de retour de la <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> méthode est normalisée.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> to <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</source>
          <target state="translated">La grandeur est normalisée en un nombre positif, et la phase est normalisée par rapport à une valeur dans la plage de -<ph id="ph1">&lt;xref:System.Math.PI&gt;</ph> à <ph id="ph2">&lt;xref:System.Math.PI&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>As a result, the values of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> properties of the resulting complex number may not equal the original values of the <ph id="ph3">`magnitude`</ph> and <ph id="ph4">`phase`</ph> parameters.</source>
          <target state="translated">Par conséquent, les valeurs de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriétés du nombre complexe résultant ne peuvent pas égaler les valeurs d’origine de la <ph id="ph3">`magnitude`</ph> et <ph id="ph4">`phase`</ph> paramètres.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>To convert a value from degrees to radians for the <ph id="ph1">`phase`</ph> parameter, multiply it by <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>/180.</source>
          <target state="translated">Pour convertir une valeur de degrés en radians pour le <ph id="ph1">`phase`</ph> paramètre, multipliez-la par  <ph id="ph2">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph> /180.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> méthode pour instancier un nombre complexe selon ses coordonnées polaires et affiche ensuite la valeur de sa <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>Returns the hash code for the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Retourne le code de hachage pour l'objet <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Code de hachage d'un entier signé 32 bits.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Imaginary">
          <source>Gets the imaginary component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Obtient le composant imaginaire de l'objet <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The imaginary component of a complex number.</source>
          <target state="translated">Composant imaginaire d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property returns the value of b.</source>
          <target state="translated">Étant donné un nombre complexe a + bi, le <ph id="ph1">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> propriété retourne la valeur de b.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Imaginary">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">L’exemple suivant instancie un tableau de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> des objets et affiche les composants réels et imaginaires de chacun sous la forme a + bi.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to one.</source>
          <target state="translated">Retourne une nouvelle instance <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> avec un nombre réel égal à zéro et un nombre imaginaire égal à un.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant instancie un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to one.</source>
          <target state="translated">Il compare ensuite cette valeur à une autre valeur est instanciée en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructeur avec une partie réelle égale à zéro et une partie imaginaire égale à un.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.ImaginaryOne">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Comme le montre la sortie de l’exemple, les deux valeurs sont égales.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns the logarithm of a complex number.</source>
          <target state="translated">Retourne le logarithme d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>Returns the natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of a specified complex number.</source>
          <target state="translated">Retourne le logarithme naturel (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) d'un nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The natural (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) logarithm of <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Logarithme naturel (base <ph id="ph1">&lt;see langword="e" /&gt;</ph>) de <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex)">
          <source>It shows that, with some allowance for the lack of precision of the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type, passing the value returned by the <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> method to the <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method returns the original <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que, avec une tolérance pour l’absence de précision de la <ph id="ph1">&lt;xref:System.Double&gt;</ph> type de données, en passant la valeur retournée par la <ph id="ph2">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph> méthode à la <ph id="ph3">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph4">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The base of the logarithm.</source>
          <target state="translated">Base du logarithme.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>Returns the logarithm of a specified complex number in a specified base.</source>
          <target state="translated">Retourne le logarithme d'un nombre complexe spécifié dans une base spécifiée.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> in base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</source>
          <target state="translated">Logarithme de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> en base <ph id="ph2">&lt;paramref name="baseValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>Returns the base-10 logarithm of a specified complex number.</source>
          <target state="translated">Retourne le logarithme de base 10 d'un nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The base-10 logarithm of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Logarithme de base 10 de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Log10(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Log10%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Magnitude">
          <source>Gets the magnitude (or absolute value) of a complex number.</source>
          <target state="translated">Obtient l'ordre de grandeur (ou valeur absolue) d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The magnitude of the current instance.</source>
          <target state="translated">Grandeur de l'instance actuelle.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property is equivalent to the absolute value of a complex number.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriété est équivalente à la valeur absolue d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number.</source>
          <target state="translated">Il spécifie la distance entre l’origine (intersection de l’axe des x et y dans le système de coordonnées cartésiennes) et le point à deux dimensions représenté par un nombre complexe.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The absolute value is calculated as follows:</source>
          <target state="translated">La valeur absolue est calculée comme suit :</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>&amp;#124; a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(a * a + b * b)</source>
          <target state="translated">&amp;#124;a + bi &amp;#124; = <ph id="ph1">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(un * un + b * b)</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>If the calculation of the absolute value results in an overflow, this property returns either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si le calcul de la valeur absolue provoque un dépassement de capacité, cette propriété retourne <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties define the position of a point that represents a complex number in the polar coordinate system.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propriétés définissent la position d’un point qui représente un nombre complexe dans le système de coordonnées polaires.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez instancier un nombre complexe selon ses coordonnées polaires au lieu de ses coordonnées cartésiennes en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Magnitude">
          <source>The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant calcule la valeur absolue d’un nombre complexe et montre qu’il est équivalent à la valeur de la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to multiply.</source>
          <target state="translated">Premier nombre complexe à multiplier.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to multiply.</source>
          <target state="translated">Second nombre complexe à multiplier.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns the product of two complex numbers.</source>
          <target state="translated">Retourne le produit de deux nombres complexes.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of the <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph> parameters.</source>
          <target state="translated">Produit des paramètres <ph id="ph1">&lt;paramref name="left" /&gt;</ph> et <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La multiplication d’un type complexe, a + bi, et un deuxième nombre complexe, le c + l’injection de dépendance, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac - bd) + (ad + bc) i</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la multiplication provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> méthode est implémentée pour les langages qui ne prennent pas en charge les opérateurs personnalisés.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Its behavior is identical to multiplication using the multiplication operator.</source>
          <target state="translated">Son comportement est identique à la multiplication à l’aide de l’opérateur de multiplication.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example multiples a complex number by each element in an array of complex numbers.</source>
          <target state="translated">L’exemple suivant multiplie un nombre complexe par chaque élément dans un tableau de nombres complexes.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">Retourne l'inverse additif d'un nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated">Résultat des composants <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> du paramètre <ph id="ph3">&lt;paramref name="value" /&gt;</ph> multiplié par -1.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The additive inverse of a complex number is a complex number that produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> when it is added to the original complex number.</source>
          <target state="translated">L’inverse additif d’un nombre complexe est un nombre complexe qui produit une valeur de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> lorsqu’il est ajouté au nombre complexe d’origine.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.</source>
          <target state="translated">Cette méthode retourne un nombre complexe dans lequel les composants réelles et imaginaires du nombre complexe d’origine sont multipliés par -1.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> méthode est implémentée pour les langages qui ne prennent pas en charge les opérateurs personnalisés.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>Its behavior is identical to negation using the unary negation operator, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</source>
          <target state="translated">Son comportement est identique à la négation à l’aide de l’opérateur de négation unaire, <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Negate(System.Numerics.Complex)">
          <source>The following example obtains the additive inverse of each element in an array of complex numbers.</source>
          <target state="translated">L’exemple suivant obtient l’inverse additif de chaque élément dans un tableau de nombres complexes.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.One">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to one and an imaginary number equal to zero.</source>
          <target state="translated">Retourne une nouvelle instance <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> avec un nombre réel égal à un et un nombre imaginaire égal à zéro.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant instancie un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Numerics.Complex.One&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to one and an imaginary part equal to zero.</source>
          <target state="translated">Il compare ensuite cette valeur à une autre valeur est instanciée en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructeur avec une partie réelle égale à un et une partie imaginaire égale à zéro.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.One">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Comme le montre la sortie de l’exemple, les deux valeurs sont égales.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to add.</source>
          <target state="translated">Première valeur à ajouter.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to add.</source>
          <target state="translated">Seconde valeur à ajouter.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Adds two complex numbers.</source>
          <target state="translated">Ajoute deux nombres complexes.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The sum of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Somme de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> et <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> method defines the addition operation for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> méthode définit l’opération d’addition pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">L’ajout d’un type complexe, a + bi, et un deuxième nombre complexe, le c + l’injection de dépendance, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a + c) + (b + d)i</source>
          <target state="translated">(a + c) + (b + d) i</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’appel de méthode provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example illustrates addition with complex numbers.</source>
          <target state="translated">L’exemple suivant illustre l’addition avec des nombres complexes.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to be divided.</source>
          <target state="translated">Valeur à diviser.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to divide by.</source>
          <target state="translated">Valeur par laquelle diviser.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Divides a specified complex number by another specified complex number.</source>
          <target state="translated">Divise un nombre complexe spécifié par un autre nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Résultat de la division de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> par <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> method defines the division operation for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> méthode définit l’opération de division pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La division d’un type complexe, a + bi, et un deuxième nombre complexe, le c + l’injection de dépendance, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>((ac + bd) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>)i</source>
          <target state="translated">((AC + BD) / (c<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept> + d<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>)) + ((bc-ad) / (c<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + d<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>) i</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the division results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la division provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators and operator overloading can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés et la surcharge d’opérateur peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first complex number to compare.</source>
          <target state="translated">Premier nombre complexe à comparer.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second complex number to compare.</source>
          <target state="translated">Deuxième nombre complexe à comparer.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are equal.</source>
          <target state="translated">Retourne une valeur qui indique si deux nombres complexes sont égaux.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> parameters have the same value; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les paramètres <ph id="ph2">&lt;paramref name="left" /&gt;</ph> et <ph id="ph3">&lt;paramref name="right" /&gt;</ph> ont la même valeur ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> méthode définit l’opération de l’opérateur d’égalité pour <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.</source>
          <target state="translated">Deux nombres complexes sont égales si leurs parties réelles sont égales et leurs parties imaginaires sont égales.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method is equivalent to the following expression:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> méthode est équivalente à l’expression suivante :</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">Notez que, en raison de différences de précision, deux nombres complexes qui sont apparemment équivalentes peuvent être considérées comme inégales.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information and a possible workaround, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations et une solution de contournement possible, consultez le <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an explicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">Définit une conversion explicite entre un objet <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> et un autre type.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> value to a complex number.</source>
          <target state="translated">Définit une conversion explicite d'une valeur <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> en nombre complexe.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">Nombre complexe ayant un composant réel égal à <ph id="ph1">&lt;paramref name="value" /&gt;</ph> et un composant imaginaire égal à zéro.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Opérateurs de conversion explicites définissent des types qui peuvent être convertis en un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Compilateurs de langage n’exécutent pas automatiquement cette conversion, car elle peut impliquer une perte de données.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">Au lieu de cela, ils effectuent la conversion uniquement si un opérateur de cast (en c#) ou une fonction de conversion (tel que <ph id="ph1">`CType`</ph> en Visual Basic) est utilisée.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">Sinon, ils affichent une erreur du compilateur.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</source>
          <target state="translated">La conversion d’un <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeur à la partie réelle d’un nombre complexe peut entraîner une perte de précision, car un <ph id="ph2">&lt;xref:System.Double&gt;</ph>, qui est le type de du nombre complexe <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propriété, a moins de chiffres significatifs qu’un <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant illustre la conversion explicite de <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Defines an explicit conversion of a <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> value to a complex number.</source>
          <target state="translated">Définit une conversion explicite d'une valeur <ph id="ph1">&lt;see cref="T:System.Numerics.BigInteger" /&gt;</ph> en nombre complexe.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>A complex number that has a real component equal to <ph id="ph1">&lt;paramref name="value" /&gt;</ph> and an imaginary component equal to zero.</source>
          <target state="translated">Nombre complexe ayant un composant réel égal à <ph id="ph1">&lt;paramref name="value" /&gt;</ph> et un composant imaginaire égal à zéro.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Explicit conversion operators define types that can be converted to a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> object.</source>
          <target state="translated">Opérateurs de conversion explicites définissent des types qui peuvent être convertis en un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Language compilers do not perform this conversion automatically because it can involve data loss.</source>
          <target state="translated">Compilateurs de langage n’exécutent pas automatiquement cette conversion, car elle peut impliquer une perte de données.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as <ph id="ph1">`CType`</ph> in Visual Basic) is used.</source>
          <target state="translated">Au lieu de cela, ils effectuent la conversion uniquement si un opérateur de cast (en c#) ou une fonction de conversion (tel que <ph id="ph1">`CType`</ph> en Visual Basic) est utilisée.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Otherwise, they display a compiler error.</source>
          <target state="translated">Sinon, ils affichent une erreur du compilateur.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to the real part of a complex number can result in a loss of precision because a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, which is the type of the complex number's <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property, has fewer significant digits than a <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</source>
          <target state="translated">La conversion d’un <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valeur à la partie réelle d’un nombre complexe peut entraîner une perte de précision, car un <ph id="ph2">&lt;xref:System.Double&gt;</ph>, qui est le type de du nombre complexe <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propriété, a moins de chiffres significatifs qu’un <ph id="ph4">&lt;xref:System.Numerics.BigInteger&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If the conversion is unsuccessful because the <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> value is out of the range of the <ph id="ph2">&lt;xref:System.Double&gt;</ph> type, the operation does not throw an <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Si la conversion échoue, car le <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valeur est hors de portée de la <ph id="ph2">&lt;xref:System.Double&gt;</ph> type, l’opération ne lève pas une <ph id="ph3">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>Instead, if <ph id="ph1">`value`</ph> is less than <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">En revanche, si <ph id="ph1">`value`</ph> est inférieure à <ph id="ph2">&lt;xref:System.Double.MinValue&gt;</ph>, le résultat est un nombre complexe qui a une <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> égale à valeur de la propriété <ph id="ph4">&lt;xref:System.Double.NegativeInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>If <ph id="ph1">`value`</ph> is greater than <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, the result is a complex number that has a <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property value equal to <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est supérieur à <ph id="ph2">&lt;xref:System.Double.MaxValue&gt;</ph>, le résultat est un nombre complexe qui a une <ph id="ph3">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> égale à valeur de la propriété <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex">
          <source>The following example illustrates the explicit conversion of <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> values to <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> values.</source>
          <target state="translated">L’exemple suivant illustre la conversion explicite de <ph id="ph1">&lt;xref:System.Numerics.BigInteger&gt;</ph> valeurs <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valeurs.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Defines an implicit conversion between a <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object and another type.</source>
          <target state="translated">Définit une conversion implicite entre un objet <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> et un autre type.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of an unsigned byte to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un octet non signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valeur à un nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Byte&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à la <ph id="ph1">&lt;xref:System.Byte&gt;</ph> valeur et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a double-precision floating-point number to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un nombre à virgule flottante double précision en un nombre complexe.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeur à un nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Double&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à la <ph id="ph1">&lt;xref:System.Double&gt;</ph> valeur et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit signed integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 16 bits signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 16 bits signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier 16 bits signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit signed integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 32 bits signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 32 bits signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier 32 bits signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit signed integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 64 bits signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 64 bits signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier 64 bits signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a signed byte to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un octet signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a signed byte to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un octet signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the signed byte and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’octet signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a single-precision floating-point number to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un nombre à virgule flottante simple précision en un nombre complexe.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un <ph id="ph1">&lt;xref:System.Single&gt;</ph> valeur à un nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à la <ph id="ph1">&lt;xref:System.Single&gt;</ph> valeur et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 16-bit unsigned integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 16 bits non signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 16-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 16 bits non signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 16-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier 16 bits non signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 32-bit unsigned integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 32 bits non signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 32-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 32 bits non signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 32-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier non signé de 32 bits et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The value to convert to a complex number.</source>
          <target state="translated">Valeur à convertir en nombre complexe.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Defines an implicit conversion of a 64-bit unsigned integer to a complex number.</source>
          <target state="translated">Définit une conversion implicite d'un entier 64 bits non signé en nombre complexe.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This API is not CLS-compliant.</source>
          <target state="translated">Cette API n'est pas conforme CLS.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>An object that contains the value of the <ph id="ph1">&lt;paramref name="value" /&gt;</ph> parameter as its real part and zero as its imaginary part.</source>
          <target state="translated">Objet qui contient la valeur du paramètre <ph id="ph1">&lt;paramref name="value" /&gt;</ph> comme partie réelle et zéro comme partie imaginaire.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>The overloads of the <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> operator define the types from which a compiler can automatically convert a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> object without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</source>
          <target state="translated">Les surcharges de la <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Implicit%2A&gt;</ph> opérateur définissent les types à partir de laquelle un compilateur peut convertir automatiquement un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> objet sans opérateur de cast explicite (en c#) ou un appel à une fonction de conversion (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>They are widening conversions that do not involve data loss and do not throw an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">Ils sont des conversions étendues qui n’impliquent pas de perte de données et ne lèvent pas d’un <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>This overload lets the compiler handle conversions from an unsigned 64-bit integer to a complex number, as the following example shows.</source>
          <target state="translated">Cette surcharge permet au compilateur de gérer les conversions d’un entier 64 bits non signé en nombre complexe, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex">
          <source>Note that the result of the conversion is a complex number whose real part is equal to the unsigned 64-bit integer and whose imaginary part is equal to zero.</source>
          <target state="translated">Notez que le résultat de la conversion est un nombre complexe dont la partie réelle est égale à l’entier 64 bits non signé et dont la partie imaginaire est égale à zéro.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to compare.</source>
          <target state="translated">Première valeur à comparer.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to compare.</source>
          <target state="translated">Deuxième valeur à comparer.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a value that indicates whether two complex numbers are not equal.</source>
          <target state="translated">Retourne une valeur qui indique si deux nombres complexes sont différents.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="left" /&gt;</ph> et <ph id="ph3">&lt;paramref name="right" /&gt;</ph> ne sont pas égales ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the inequality operator for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> méthode définit l’opération de l’opérateur d’inégalité pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can test for inequality by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method and reversing its value.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent tester l’inégalité en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> (méthode) et en inversant sa valeur.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.</source>
          <target state="translated">Notez que, en raison de différences de précision, deux nombres complexes qui sont apparemment équivalentes peuvent être considérées comme inégales.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>One possible workaround is to implement a comparison method that returns <ph id="ph1">`true`</ph> only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers).</source>
          <target state="translated">Une solution de contournement possible consiste à implémenter une méthode de comparaison qui retourne <ph id="ph1">`true`</ph> uniquement si la différence entre les deux parties réelles et imaginaires des nombres complexes dépasse un certain seuil (tel que. % 01 de la valeur du composant réel ou imaginaire de un des nombres complexes).</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.</source>
          <target state="translated">Pour plus d'informations, voir la méthode <ph id="ph1">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The first value to multiply.</source>
          <target state="translated">Première valeur à multiplier.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The second value to multiply.</source>
          <target state="translated">Seconde valeur à multiplier.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Multiplies two specified complex numbers.</source>
          <target state="translated">Multiplie deux nombres complexes spécifiés.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The product of <ph id="ph1">&lt;paramref name="left" /&gt;</ph> and <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Produit de <ph id="ph1">&lt;paramref name="left" /&gt;</ph> et <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> méthode définit l’opération de l’opérateur de multiplication pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:</source>
          <target state="translated">La multiplication d’un type complexe, a + bi, et un deuxième nombre complexe, le c + l’injection de dépendance, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(ac - bd) + (ad + bc)i</source>
          <target state="translated">(ac - bd) + (ad + bc) i</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la multiplication provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Valeur à laquelle appliquer la soustraction (diminuende).</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Valeur à soustraire (diminuteur).</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts a complex number from another complex number.</source>
          <target state="translated">Soustrait un nombre complexe d'un autre nombre complexe.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Résultat de la soustraction de <ph id="ph1">&lt;paramref name="right" /&gt;</ph> de <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> méthode définit l’opération de l’opérateur de soustraction pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’appel de méthode provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">La soustraction d’un nombre complexe, le c + l’injection de dépendance, à partir d’un autre nombre complexe, un + bi, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d) i</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The value to negate.</source>
          <target state="translated">Valeur à rendre négative.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Returns the additive inverse of a specified complex number.</source>
          <target state="translated">Retourne l'inverse additif d'un nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The result of the <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> components of the <ph id="ph3">&lt;paramref name="value" /&gt;</ph> parameter multiplied by -1.</source>
          <target state="translated">Résultat des composants <ph id="ph1">&lt;see cref="P:System.Numerics.Complex.Real" /&gt;</ph> et <ph id="ph2">&lt;see cref="P:System.Numerics.Complex.Imaginary" /&gt;</ph> du paramètre <ph id="ph3">&lt;paramref name="value" /&gt;</ph> multiplié par -1.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation (additive inverse) operator for complex numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> méthode définit l’opération de l’opérateur de négation (inverse additif) unaire pour les nombres complexes.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>It enables code such as the following:</source>
          <target state="translated">Il permet de code semblable au suivant :</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The resulting complex number produces a value of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zero) when it is added to the original complex number.</source>
          <target state="translated">Le nombre complexe résultant produit une valeur de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zéro) lorsqu’il est ajouté au nombre complexe d’origine.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>Languages that do not support custom operators can call the <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method instead.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent appeler la <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></source>
          <target state="translated">La méthode équivalente pour cet opérateur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Phase">
          <source>Gets the phase of a complex number.</source>
          <target state="translated">Obtient la phase d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase of a complex number, in radians.</source>
          <target state="translated">Phase d'un nombre complexe, en radians.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>For a complex number a + bi, the phase is computed as <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, a).</source>
          <target state="translated">Pour un nombre complexe un + bi, la phase est calculée comme <ph id="ph1">&lt;xref:System.Math.Atan2%2A?displayProperty=nameWithType&gt;</ph>(b, un).</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates.</source>
          <target state="translated">Vous pouvez identifier un nombre complexe par ses coordonnées cartésiennes sur le plan complexe ou par ses coordonnées polaires.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number.</source>
          <target state="translated">La phase (argument) d’un nombre complexe est l’angle à l’axe réel d’une ligne dessinée à partir du point d’origine (intersection de l’axe des abscisses et l’axe des y) et le point représenté par le nombre complexe.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The magnitude (represented by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property) is the distance from the point of origin to the point that is represented by the complex number.</source>
          <target state="translated">La grandeur (représentée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> propriété) est la distance entre le point d’origine et le point représenté par le nombre complexe.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez instancier un nombre complexe selon ses coordonnées polaires au lieu de ses coordonnées cartésiennes en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>To convert the phase from radians to degrees, multiply it by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour convertir la phase de radians en degrés, multipliez-le par 180 /<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Phase">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method to instantiate a complex number based on its polar coordinates, and then displays the value of its <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> méthode pour instancier un nombre complexe selon ses coordonnées polaires, puis affiche la valeur de sa <ph id="ph2">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Returns a specified complex number raised to a specified power.</source>
          <target state="translated">Retourne un nombre complexe spécifié élevé à une puissance spécifiée.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">Nombre complexe à élever à une puissance.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>A double-precision floating-point number that specifies a power.</source>
          <target state="translated">Nombre à virgule flottante double précision. qui spécifie une puissance.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>Returns a specified complex number raised to a power specified by a double-precision floating-point number.</source>
          <target state="translated">Retourne un nombre complexe spécifié élevé à une puissance spécifiée par un nombre à virgule flottante double précision.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">Nombre complexe <ph id="ph1">&lt;paramref name="value" /&gt;</ph> élevé à la puissance <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, la méthode retourne <ph id="ph3">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>For other values, if <ph id="ph1">`power`</ph> is 0, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>, and if <ph id="ph3">`power`</ph> is 1, it returns <ph id="ph4">`value`</ph>.</source>
          <target state="translated">Pour les autres valeurs, si <ph id="ph1">`power`</ph> est 0, la méthode retourne <ph id="ph2">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>et si <ph id="ph3">`power`</ph> est 1, elle retourne <ph id="ph4">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>This method corresponds to the <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> method for primitive numeric types.</source>
          <target state="translated">Cette méthode correspond à la <ph id="ph1">&lt;xref:System.Math.Pow%2A?displayProperty=nameWithType&gt;</ph> méthode pour les types numériques primitifs.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)">
          <source>The following example illustrates exponentiation using a complex number and an exponent whose value ranges from -1 to 10.</source>
          <target state="translated">L’exemple suivant illustre élévation à la puissance à l’aide d’un nombre complexe et un exposant dont la valeur est comprise entre -1 et 10.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number to be raised to a power.</source>
          <target state="translated">Nombre complexe à élever à une puissance.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>A complex number that specifies a power.</source>
          <target state="translated">Nombre complexe qui spécifie une puissance.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Returns a specified complex number raised to a power specified by a complex number.</source>
          <target state="translated">Retourne un nombre complexe spécifié élevé à une puissance spécifiée par un nombre complexe.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The complex number <ph id="ph1">&lt;paramref name="value" /&gt;</ph> raised to the power <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</source>
          <target state="translated">Nombre complexe <ph id="ph1">&lt;paramref name="value" /&gt;</ph> élevé à la puissance <ph id="ph2">&lt;paramref name="power" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Numerics.Complex.Real">
          <source>Gets the real component of the current <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> object.</source>
          <target state="translated">Obtient le composant réel de l'objet <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The real component of a complex number.</source>
          <target state="translated">Composant réel d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>Given a complex number a + bi, the <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property returns the value of a.</source>
          <target state="translated">Étant donné un nombre complexe a + bi, le <ph id="ph1">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> propriété retourne la valeur d’un.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Complex.Real">
          <source>The following example instantiates an array of <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> objects and displays the real and imaginary components of each in the form a + bi.</source>
          <target state="translated">L’exemple suivant instancie un tableau de <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> des objets et affiche les composants réels et imaginaires de chacun sous la forme a + bi.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Returns the multiplicative inverse of a complex number.</source>
          <target state="translated">Retourne l'inverse multiplicatif d'un nombre complexe.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Réciproque de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal, or multiplicative inverse, of a number <bpt id="p1">*</bpt>x<ept id="p1">*</ept> is a number <bpt id="p2">*</bpt>y<ept id="p2">*</ept> where <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multiplied by <bpt id="p4">*</bpt>y<ept id="p4">*</ept> yields 1.</source>
          <target state="translated">Le réciproque, ou inverse multiplicatif, d’un nombre <bpt id="p1">*</bpt>x<ept id="p1">*</ept> est un nombre <bpt id="p2">*</bpt>y<ept id="p2">*</ept> où <bpt id="p3">*</bpt>x<ept id="p3">*</ept> multipliée par <bpt id="p4">*</bpt>y<ept id="p4">*</ept> donne 1.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The reciprocal of a complex number is the complex number that produces <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> when the two numbers are multiplied.</source>
          <target state="translated">L’inverse d’un nombre complexe est le nombre complexe qui produit <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> lorsque les deux nombres sont multipliés.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + -b/(a<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</source>
          <target state="translated">Si un nombre complexe est représenté par a + bi, son réciproque est représenté par l’expression une / (un<bpt id="p1">&lt;sup&gt;</bpt>2<ept id="p1">&lt;/sup&gt;</ept>+ b<bpt id="p2">&lt;sup&gt;</bpt>2<ept id="p2">&lt;/sup&gt;</ept>) + b-/ (un<bpt id="p3">&lt;sup&gt;</bpt>2<ept id="p3">&lt;/sup&gt;</ept> + b<bpt id="p4">&lt;sup&gt;</bpt>2<ept id="p4">&lt;/sup&gt;</ept>).</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>If value is <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, the method returns <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>, la méthode retourne <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>Otherwise, it returns the result of the expression <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph><ph id="ph2">/</ph><ph id="ph3">`value`</ph>.</source>
          <target state="translated">Sinon, elle retourne le résultat de l’expression <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph> <ph id="ph2">/</ph> <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> method to calculate the reciprocal values of several complex numbers.</source>
          <target state="translated">L’exemple suivant utilise la <ph id="ph1">&lt;xref:System.Numerics.Complex.Reciprocal%2A&gt;</ph> méthode pour calculer les valeurs réciproques de plusieurs nombres complexes.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)">
          <source>It also demonstrates that the result of multiplying a complex number by its reciprocal is <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Il montre également que le résultat de la multiplication d’un nombre complexe par son réciproque est <ph id="ph1">&lt;xref:System.Numerics.Complex.One?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>Returns the sine of the specified complex number.</source>
          <target state="translated">Retourne le sinus du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Sinus de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method uses the following formula to calculate the sine of the complex number a + bi:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> méthode utilise la formule suivante pour calculer le sinus du nombre complexe a + bi :</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sin(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>Returns the hyperbolic sine of the specified complex number.</source>
          <target state="translated">Retourne le sinus hyperbolique du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The hyperbolic sine of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Sinus hyperbolique de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Sinh%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> méthode utilise la formule suivante pour calculer le sinus hyperbolique du nombre complexe a + bi :</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sinh(System.Numerics.Complex)">
          <source>(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id="ph2">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id="ph3">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id="ph4">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>Returns the square root of a specified complex number.</source>
          <target state="translated">Retourne la racine carrée d'un nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Racine carrée de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The square root of the complex number <ph id="ph1">`value`</ph> is calculated by using the following formula:</source>
          <target state="translated">La racine carrée du nombre complexe <ph id="ph1">`value`</ph> est calculée à l’aide de la formule suivante :</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>(<ph id="ph3">`value`</ph>.<ph id="ph4">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id="ph5">`value`</ph>.<ph id="ph6">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract from (the minuend).</source>
          <target state="translated">Valeur à laquelle appliquer la soustraction (diminuende).</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The value to subtract (the subtrahend).</source>
          <target state="translated">Valeur à soustraire (diminuteur).</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Subtracts one complex number from another and returns the result.</source>
          <target state="translated">Soustrait un nombre complexe d'un autre et retourne le résultat.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The result of subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Résultat de la soustraction de <ph id="ph1">&lt;paramref name="right" /&gt;</ph> de <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:</source>
          <target state="translated">La soustraction d’un nombre complexe, le c + l’injection de dépendance, à partir d’un autre nombre complexe, un + bi, prend la forme suivante :</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>(a - c) + (b - d)i</source>
          <target state="translated">(a - c) + (b - d) i</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si l’appel de méthode provoque un dépassement de capacité dans le composant réel ou imaginaire, la valeur de ce composant est <ph id="ph1">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph> ou <ph id="ph2">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>Languages that do not support custom operators can use the <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method to perform subtraction using complex numbers.</source>
          <target state="translated">Les langages qui ne prennent pas en charge les opérateurs personnalisés peuvent utiliser la <ph id="ph1">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> méthode pour effectuer une soustraction à l’aide de nombres complexes.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)">
          <source>The following example subtracts each complex number in an array from a complex number.</source>
          <target state="translated">L’exemple suivant soustrait chaque nombre complexe dans un tableau à partir d’un nombre complexe.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>Returns the tangent of the specified complex number.</source>
          <target state="translated">Retourne la tangente du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Tangente de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Tan%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method uses the following formula to calculate the tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> méthode utilise la formule suivante pour calculer la tangente du nombre complexe <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>The following example illustrates the <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple suivant illustre la <ph id="ph1">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tan(System.Numerics.Complex)">
          <source>It shows that passing the value returned by the <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method to the <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method returns the original <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> value.</source>
          <target state="translated">Il montre que le passage de la valeur retournée par la <ph id="ph1">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> méthode à la <ph id="ph2">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> méthode retourne la version d’origine <ph id="ph3">&lt;xref:System.Numerics.Complex&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>A complex number.</source>
          <target state="translated">Nombre complexe.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>Returns the hyperbolic tangent of the specified complex number.</source>
          <target state="translated">Retourne la tangente hyperbolique du nombre complexe spécifié.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The hyperbolic tangent of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Tangente hyperbolique de <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method for complex numbers corresponds to the <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> method for real numbers.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> méthode pour les nombres complexes correspond à la <ph id="ph2">&lt;xref:System.Math.Tanh%2A?displayProperty=nameWithType&gt;</ph> méthode pour les nombres réels.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic tangent of the complex number <ph id="ph2">`value`</ph>:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> méthode utilise la formule suivante pour calculer la tangente hyperbolique du nombre complexe <ph id="ph2">`value`</ph>:</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.Tanh(System.Numerics.Complex)">
          <source><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id="ph2">`value`</ph>) / <ph id="ph3">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id="ph4">`value`</ph>)</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="T:System.Numerics.Complex">
          <source>Converts the value of a complex number to its equivalent string representation.</source>
          <target state="translated">Convertit la valeur d'un nombre complexe en sa représentation sous forme de chaîne équivalente.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form.</source>
          <target state="translated">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">Représentation sous forme de chaîne de l'instance actuelle au format cartésien.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The default string representation of a complex number displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La représentation sous forme de chaîne par défaut d’un nombre complexe affiche le nombre à l’aide de ses coordonnées cartésiennes sous la forme <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>un<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, où <bpt id="p3">*</bpt>un<ept id="p3">*</ept> est la partie réelle du nombre complexe, et <bpt id="p4">*</bpt>b<ept id="p4">*</ept> est la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the current system culture.</source>
          <target state="translated">Les deux <bpt id="p1">*</bpt>un<ept id="p1">*</ept> et <bpt id="p2">*</bpt>b<ept id="p2">*</ept> sont mis en forme à l’aide du spécificateur de format général (« G ») et les conventions de la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">L’exemple suivant affiche la représentation sous forme de chaîne de plusieurs nombres complexes.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString">
          <source>The output uses the formatting conventions of the English - United States ("en-US") culture, which, in this case, is the current system culture.</source>
          <target state="translated">La sortie utilise les conventions de mise en forme de l’anglais - États-Unis (« en-US ») culture, c'est-à-dire, dans ce cas, la culture système actuelle.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objet qui fournit des informations de mise en forme propres à la culture.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.</source>
          <target state="translated">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien à l'aide des informations de mise en forme propres à la culture spécifiées.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Représentation sous forme de chaîne de l'instance actuelle au format cartésien, telle que spécifiée par <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La représentation sous forme de chaîne du nombre complexe retourné par cette méthode affiche le nombre à l’aide de ses coordonnées cartésiennes sous la forme <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>un<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, où <bpt id="p3">*</bpt>un<ept id="p3">*</ept> est la partie réelle du nombre complexe, et <bpt id="p4">*</bpt>b<ept id="p4">*</ept> est la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the general format specifier ("G") and the conventions of the culture defined by <ph id="ph1">`provider`</ph>.</source>
          <target state="translated">Les deux <bpt id="p1">*</bpt>un<ept id="p1">*</ept> et <bpt id="p2">*</bpt>b<ept id="p2">*</ept> sont mis en forme à l’aide du spécificateur de format général (« G ») et les conventions de la culture définie par <ph id="ph1">`provider`</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> mise en œuvre.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode retourne un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations spécifiques à la culture sur le format des réelles et imaginaires des nombres dans la chaîne retournée.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la chaîne retournée est mise en forme à l’aide de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre peut prendre l’une des opérations suivantes :</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet qui représente la culture qui fournit des informations de mise en forme</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations de mise en forme.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">Un objet personnalisé qui implémente le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode retourne la <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations de mise en forme.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of several complex numbers.</source>
          <target state="translated">L’exemple suivant affiche la représentation sous forme de chaîne de plusieurs nombres complexes.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.IFormatProvider)">
          <source>The result uses the formatting conventions of the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">Le résultat utilise les conventions de mise en forme de l’anglais - États-Unis (« en-US ») et Français - les cultures France (« fr-FR »).</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Chaîne de format numérique standard ou personnalisée.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.</source>
          <target state="translated">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien en utilisant le format spécifié pour ses parties imaginaire et réelle.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the current instance in Cartesian form.</source>
          <target state="translated">Représentation sous forme de chaîne de l'instance actuelle au format cartésien.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La représentation sous forme de chaîne du nombre complexe retourné par cette méthode affiche le nombre à l’aide de ses coordonnées cartésiennes sous la forme <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>un<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, où <bpt id="p3">*</bpt>un<ept id="p3">*</ept> est la partie réelle du nombre complexe, et <bpt id="p4">*</bpt>b<ept id="p4">*</ept> est la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">Les deux <bpt id="p1">*</bpt>un<ept id="p1">*</ept> et <bpt id="p2">*</bpt>b<ept id="p2">*</ept> sont mis en forme à l’aide de la chaîne de format spécifiée par <ph id="ph1">`format`</ph>.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre peut être n’importe quel spécificateur de format numérique standard valide, ou toute combinaison de spécificateurs de format numériques personnalisées.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> est égal à <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">`null`</ph>, les parties réelles et imaginaires du nombre complexe sont mis en forme avec le spécificateur de format général (« G »).</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> une autre valeur, la méthode lève une exception un <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes :</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les chaînes de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme dans le .NET Framework, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The format of the returned string is determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">Le format de la chaîne retournée est déterminé par le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet pour la culture actuelle.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">Selon le <ph id="ph1">`format`</ph> paramètre, cet objet contrôle les symboles tels que le signe négatif, le séparateur de groupes et le symbole de séparateur décimal dans la chaîne de sortie.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>To provide formatting information for cultures other than the current culture, call the <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">Pour fournir des informations de mise en forme pour les cultures autres que la culture actuelle, appelez la <ph id="ph1">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source>The following example initializes a complex number and displays it using several standard format strings.</source>
          <target state="translated">L’exemple suivant initialise un nombre complexe et l’affiche à l’aide de plusieurs chaînes de format standard.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas une chaîne de format valide.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A standard or custom numeric format string.</source>
          <target state="translated">Chaîne de format numérique standard ou personnalisée.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Objet qui fournit des informations de mise en forme propres à la culture.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.</source>
          <target state="translated">Convertit la valeur du nombre complexe actuel en sa représentation sous forme de chaîne équivalente au format cartésien en utilisant le format et les informations de mise en forme spécifiques à la culture spécifiés pour ses parties imaginaire et réelle.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance in Cartesian form, as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated">Représentation sous forme de chaîne de l'instance actuelle au format cartésien, telle que spécifiée par <ph id="ph1">&lt;paramref name="format" /&gt;</ph> et <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id="ph1">`(`</ph><bpt id="p1">*</bpt>a<ept id="p1">*</ept><ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, where <bpt id="p3">*</bpt>a<ept id="p3">*</ept> is the real part of the complex number, and <bpt id="p4">*</bpt>b<ept id="p4">*</ept> is its imaginary part.</source>
          <target state="translated">La représentation sous forme de chaîne du nombre complexe retourné par cette méthode affiche le nombre à l’aide de ses coordonnées cartésiennes sous la forme <ph id="ph1">`(`</ph> <bpt id="p1">*</bpt>un<ept id="p1">*</ept> <ph id="ph2">`,`</ph> <bpt id="p2">*</bpt>b<ept id="p2">*</ept><ph id="ph3">`)`</ph>, où <bpt id="p3">*</bpt>un<ept id="p3">*</ept> est la partie réelle du nombre complexe, et <bpt id="p4">*</bpt>b<ept id="p4">*</ept> est la partie imaginaire.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Both <bpt id="p1">*</bpt>a<ept id="p1">*</ept> and <bpt id="p2">*</bpt>b<ept id="p2">*</ept> are formatted using the format string specified by <ph id="ph1">`format`</ph>.</source>
          <target state="translated">Les deux <bpt id="p1">*</bpt>un<ept id="p1">*</ept> et <bpt id="p2">*</bpt>b<ept id="p2">*</ept> sont mis en forme à l’aide de la chaîne de format spécifiée par <ph id="ph1">`format`</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.</source>
          <target state="translated">Le <ph id="ph1">`format`</ph> paramètre peut être n’importe quel spécificateur de format numérique standard valide, ou toute combinaison de spécificateurs de format numériques personnalisées.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is equal to <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> or is <ph id="ph3">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier ("G").</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> est égal à <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> ou <ph id="ph3">`null`</ph>, les parties réelles et imaginaires du nombre complexe sont mis en forme avec le spécificateur de format général (« G »).</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is any other value, the method throws a <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</source>
          <target state="translated">Si <ph id="ph1">`format`</ph> une autre valeur, la méthode lève une exception un <ph id="ph2">&lt;xref:System.FormatException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:</source>
          <target state="translated">Le .NET Framework fournit une prise en charge complète de la mise en forme, est décrite en détail dans les rubriques suivantes :</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les chaînes de format numérique, consultez <bpt id="p1">[</bpt>des chaînes de Format numériques Standard<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> et <bpt id="p2">[</bpt>les chaînes de Format numériques personnalisées<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting in the .NET Framework, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la mise en forme dans le .NET Framework, consultez <bpt id="p1">[</bpt>mise en forme des Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre est un <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> mise en œuvre.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode retourne un <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations spécifiques à la culture sur le format des réelles et imaginaires des nombres dans la chaîne retournée.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Depending on the <ph id="ph1">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</source>
          <target state="translated">Selon le <ph id="ph1">`format`</ph> paramètre, cet objet contrôle les symboles tels que le signe négatif, le séparateur de groupes et le symbole de séparateur décimal dans la chaîne de sortie.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the returned string is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">Si <ph id="ph1">`provider`</ph> est <ph id="ph2">`null`</ph>, la chaîne retournée est mise en forme à l’aide de la <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet de la culture actuelle.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter can be one of the following:</source>
          <target state="translated">Le <ph id="ph1">`provider`</ph> paramètre peut prendre l’une des opérations suivantes :</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objet qui représente la culture qui fournit des informations de mise en forme</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations de mise en forme.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
          <target state="translated">Un objet personnalisé qui implémente le <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.</source>
          <target state="translated">Son <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> méthode retourne la <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objet qui fournit des informations de mise en forme.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source>The following example creates an array of complex numbers, and displays each using several standard format strings as well as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent the English - United States ("en-US") and French - France ("fr-FR") cultures.</source>
          <target state="translated">L’exemple suivant crée un tableau de nombres complexes et affiche chacun à l’aide de plusieurs chaînes de format standard ainsi que <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> les objets qui représentent les cultures Anglais - États-Unis (« en-US ») et Français - France (« fr-FR »).</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is not a valid format string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> n’est pas une chaîne de format valide.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="F:System.Numerics.Complex.Zero">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> instance with a real number equal to zero and an imaginary number equal to zero.</source>
          <target state="translated">Retourne une nouvelle instance <ph id="ph1">&lt;see cref="T:System.Numerics.Complex" /&gt;</ph> avec un nombre réel égal à zéro et un nombre imaginaire égal à zéro.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property is most frequently used to compare a <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> value to zero.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> propriété est généralement utilisée pour comparer un <ph id="ph2">&lt;xref:System.Numerics.Complex&gt;</ph> valeur à zéro.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>The following example instantiates a <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> value by using the <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant instancie un <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> à l’aide de la <ph id="ph2">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>It then compares this value to another value that is instantiated by calling the <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructor with a real part equal to zero and an imaginary part equal to zero.</source>
          <target state="translated">Il compare ensuite cette valeur à une autre valeur est instanciée en appelant le <ph id="ph1">&lt;xref:System.Numerics.Complex&gt;</ph> constructeur avec une partie réelle égale à zéro et une partie imaginaire égale à zéro.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Numerics.Complex.Zero">
          <source>As the output from the example shows, the two values are equal.</source>
          <target state="translated">Comme le montre la sortie de l’exemple, les deux valeurs sont égales.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>