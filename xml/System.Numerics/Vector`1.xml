<Type Name="Vector&lt;T&gt;" FullName="System.Numerics.Vector&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c328820fddfe1e03cbf13ef52ba037b01ce358d3" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34254473" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Vector&lt;T&gt; : IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;, IFormattable where T : struct" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Vector`1&lt;struct .ctor (class System.ValueType) T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Numerics.Vector`1&lt;!T&gt;&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.Vector`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Vector(Of T)&#xA;Implements IEquatable(Of Vector(Of T)), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : value classpublic value class Vector : IEquatable&lt;System::Numerics::Vector&lt;T&gt;&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Numerics.Vectors</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.Vector&lt;T&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="96c20-101">Type de vecteur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96c20-101">The vector type.</span>
      </span>
      <span data-ttu-id="96c20-102">
        <c>T</c> peut être tout type numérique primitif.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96c20-102">
          <c>T</c> can be any primitive numeric type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="96c20-103">Représente un vecteur unique d'un type numérique spécifié qui convient à l'optimisation de bas niveau des algorithmes parallèles.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96c20-103">Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-104"><xref:System.Numerics.Vector%601> est une structure immuable qui représente un vecteur unique d’un type numérique spécifié.</span><span class="sxs-lookup"><span data-stu-id="96c20-104"><xref:System.Numerics.Vector%601> is an immutable structure that represents a single vector of a specified numeric type.</span></span> <span data-ttu-id="96c20-105">Le nombre d’un <xref:System.Numerics.Vector%601> instance est fixe, mais sa limite maximale est de Registre de l’UC dépendants.</span><span class="sxs-lookup"><span data-stu-id="96c20-105">The count of a <xref:System.Numerics.Vector%601> instance is fixed, but its upper limit is CPU-register dependent.</span></span> <span data-ttu-id="96c20-106">Elle est destinée à être utilisé comme un bloc de construction pour la vectorisation d’algorithmes de grande taille.</span><span class="sxs-lookup"><span data-stu-id="96c20-106">It is intended to be used as a building block for vectorizing large algorithms.</span></span>  
  
 <span data-ttu-id="96c20-107">Le <xref:System.Numerics.Vector%601> structure prend en charge l’accélération matérielle.</span><span class="sxs-lookup"><span data-stu-id="96c20-107">The <xref:System.Numerics.Vector%601> structure provides support for hardware acceleration.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (Span&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Span`1&lt;!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(System.Span{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Span(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(Span&lt;T&gt; values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(T value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-108">Type numérique qui définit le type des composants dans le vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-108">The numeric type that defines the type of the components in the vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-109">Crée un vecteur dont les composants sont d'un type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-109">Creates a vector whose components are of a specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-110">`value` peut être tout type numérique primitif (autrement dit, un type numérique dont <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> propriété renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="96c20-110">`value` can be any primitive numeric type (that is, a numeric type whose <xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType> property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="96c20-111">Tableau numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-111">A numeric array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-112">Crée un vecteur à partir d'un tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-112">Creates a vector from a specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-113">`values` doit contenir au moins <xref:System.Numerics.Vector%601.Count%2A> éléments.</span><span class="sxs-lookup"><span data-stu-id="96c20-113">`values` must contain at least <xref:System.Numerics.Vector%601.Count%2A> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96c20-114">
            <paramref name="values" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-114">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Vector (T[] values, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] values, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Vector(cli::array &lt;T&gt; ^ values, int index);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="96c20-115">Tableau numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-115">A numeric array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="96c20-116">Position d'index de départ à partir de laquelle créer le vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-116">The starting index position from which to create the vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-117">Crée un vecteur à partir d'un tableau spécifié en commençant à la position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-117">Creates a vector from a specified array starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-118">Le tableau doit contenir au moins [Vector(T) constructeur (T\<xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType > éléments à partir de l’index spécifié.</span><span class="sxs-lookup"><span data-stu-id="96c20-118">The array must contain at least [Vector(T) Constructor (T\<xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements from the specified index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96c20-119">
            <paramref name="values" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-119">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="96c20-120">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-120">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="96c20-121">-ou- La longueur de <paramref name="values" /> moins <paramref name="index" /> est inférieure à <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-121">-or-  The length of <paramref name="values" /> minus <paramref name="index" /> is less than <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="96c20-122">Tableau devant recevoir une copie des valeurs de vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-122">The array to receive a copy of the vector values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-123">Copie l'instance de vecteur dans un tableau de destination spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-123">Copies the vector instance to a specified destination array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-124">L’opération de copie commence à l’index 0 de `destination`.</span><span class="sxs-lookup"><span data-stu-id="96c20-124">The copy operation begins at index 0 of `destination`.</span></span> <span data-ttu-id="96c20-125">Le tableau de destination doit avoir au moins <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> éléments.</span><span class="sxs-lookup"><span data-stu-id="96c20-125">The destination array must have at least <xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType> elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96c20-126">
            <paramref name="destination" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-126">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="96c20-127">Le nombre d’éléments dans le vecteur actuel est supérieur au nombre d’éléments disponibles dans le tableau <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-127">The number of elements in the current vector is greater than the number of elements available in the <paramref name="destination" /> array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] destination, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(!T[] destination, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As T(), startIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;T&gt; ^ destination, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="96c20-128">Tableau devant recevoir une copie des valeurs de vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-128">The array to receive a copy of the vector values.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="96c20-129">Index de départ dans <c>destination</c> auquel commencer l’opération de copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-129">The starting index in <c>destination</c> at which to begin the copy operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-130">Copie l'instance de vecteur dans un tableau de destination spécifié, en commençant à une position d'index spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-130">Copies the vector instance to a specified destination array starting at a specified index position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-131">L’opération de copie commence à l’index `startIndex` de `destination`.</span><span class="sxs-lookup"><span data-stu-id="96c20-131">The copy operation begins at index `startIndex` of `destination`.</span></span> <span data-ttu-id="96c20-132">Le tableau de destination doit avoir au moins `startIndex` + [CopyTo (méthode) (T\<xref:System.Numerics.Vector%601.Count%2A > – 1 éléments.</span><span class="sxs-lookup"><span data-stu-id="96c20-132">The destination array must have at least `startIndex` + [CopyTo Method (T\<xref:System.Numerics.Vector%601.Count%2A> – 1 elements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="96c20-133">
            <paramref name="destination" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-133">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="96c20-134">Le nombre d’éléments dans l’instance actuelle est supérieur au nombre d’éléments disponibles entre <paramref name="startIndex" /> et la fin du tableau <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-134">The number of elements in the current instance is greater than the number of elements available from <paramref name="startIndex" /> to the end of the <paramref name="destination" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="96c20-135">
            <paramref name="index" /> est inférieur à zéro ou supérieur au dernier index dans <paramref name="destination" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-135">
              <paramref name="index" /> is less than zero or greater than the last index in <paramref name="destination" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c20-136">Retourne le nombre d'éléments stockés dans le vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-136">Returns the number of elements stored in the vector.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c20-137">Nombre d'éléments stockés dans le vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-137">The number of elements stored in the vector.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="96c20-138">L’accès à la méthode getter de propriété via réflexion n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-138">Access to the property getter via reflection is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.Vector&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.Vector`1&lt;!T&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::Vector&lt;T&gt; other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="96c20-139">Vecteur à comparer à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-139">The vector to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-140">Retourne une valeur qui indique si cette instance est égale à un vecteur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-140">Returns a value that indicates whether this instance is equal to a specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-141">
            <see langword="true" /> si l'instance actuelle et <paramref name="other" /> sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-141">
              <see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-142">Deux vecteurs sont égaux s’ils sont du même type, ont le même nombre de valeurs, et chaque valeur de l’instance actuelle est égale à la valeur correspondante dans `other`.</span><span class="sxs-lookup"><span data-stu-id="96c20-142">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="96c20-143">Objet à comparer avec cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-143">The object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-144">Retourne une valeur qui indique si cette instance est égale à un objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-144">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-145">
            <see langword="true" /> si l'instance actuelle et <paramref name="obj" /> sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-145">
              <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="96c20-146">La méthode retourne <see langword="false" /> si <paramref name="obj" /> a la valeur null ou si <paramref name="obj" /> est un vecteur d'un type différent de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-146">The method returns <see langword="false" /> if <paramref name="obj" /> is null, or if <paramref name="obj" /> is a vector of a different type than the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-147">Deux vecteurs sont égaux s’ils sont du même type, ont le même nombre de valeurs, et chaque valeur de l’instance actuelle est égale à la valeur correspondante dans `other`.</span><span class="sxs-lookup"><span data-stu-id="96c20-147">Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in `other`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96c20-148">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-148">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-149">Code de hachage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-149">The hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="96c20-150">Index de l'élément à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-150">The index of the element to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-151">Obtient l'élément au niveau d'un index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-151">Gets the element at a specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c20-152">Élément à l'index <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-152">The element at index <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="96c20-153">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-153">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="96c20-154">-ou- <paramref name="index" /> est supérieur ou égal à <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-154">-or-  <paramref name="index" /> is greater than or equal to <see cref="P:System.Numerics.Vector`1.Count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; One { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c20-155">Retourne un vecteur contenant uniquement des 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-155">Returns a vector containing all ones.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c20-156">Vecteur contenant uniquement des 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-156">A vector containing all ones.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator + (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Addition(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator +(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-157">Premier vecteur à additionner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-157">The first vector to add.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-158">Deuxième vecteur à additionner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-158">The second vector to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-159">Additionne deux vecteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-159">Adds two vectors together.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-160">Vecteur résultant de l'addition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-160">The summed vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-161">Le <xref:System.Numerics.Vector%601.op_Addition%2A> méthode définit l’opération d’addition pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-161">The <xref:System.Numerics.Vector%601.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator &amp; (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseAnd(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator &amp;(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-162">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-162">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-163">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-163">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-164">Retourne un nouveau vecteur en effectuant une opération <see langword="And" /> au niveau du bit sur chacun des éléments dans deux vecteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-164">Returns a new vector by performing a bitwise <see langword="And" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-165">Vecteur qui résulte de l'opération <see langword="And" /> sur <paramref name="left" /> et <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-165">The vector that results from the bitwise <see langword="And" /> of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-166">Le <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> méthode définit l’opérateur de bits `And` opération pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-166">The <xref:System.Numerics.Vector%601.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator | (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_BitwiseOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator |(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-167">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-167">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-168">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-168">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-169">Retourne un nouveau vecteur en effectuant une opération <see langword="Or" /> au niveau du bit sur chacun des éléments dans deux vecteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-169">Returns a new vector by performing a bitwise <see langword="Or" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-170">Vecteur qui résulte de l'opération <see langword="Or" /> au niveau du bit sur les éléments dans <paramref name="left" /> et <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-170">The vector that results from the bitwise <see langword="Or" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-171">Le <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> méthode définit l’opérateur de bits `Or` opération pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-171">The <xref:System.Numerics.Vector%601.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator / (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Division(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator /(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-172">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-172">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-173">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-173">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-174">Divise le premier vecteur par le deuxième.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-174">Divides the first vector by the second.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-175">Vecteur résultant de la division de <paramref name="left" /> par <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-175">The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-176">Le <xref:System.Numerics.Vector%601.op_Division%2A> méthode définit l’opération de division pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-176">The <xref:System.Numerics.Vector%601.op_Division%2A> method defines the division operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-177">Premier vecteur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-177">The first vector to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-178">Deuxième vecteur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-178">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-179">Retourne une valeur qui indique si chacune des paires d'éléments dans deux vecteurs spécifiés sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-179">Returns a value that indicates whether each pair of elements in two specified vectors are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-180">
            <see langword="true" /> si <paramref name="left" /> et <paramref name="right" /> sont égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-180">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-181">Deux vecteurs sont égaux s’ils sont du même type, ont le même nombre de valeurs et chaque valeur dans `left` est égal à la valeur correspondante dans `right`.</span><span class="sxs-lookup"><span data-stu-id="96c20-181">Two vectors are equal if they are of the same type, have the same number of values, and each value in `left` is equal to the corresponding value in `right`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ^ (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_ExclusiveOr(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ^(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-182">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-182">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-183">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-183">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-184">Retourne un nouveau vecteur en effectuant une opération <see langword="XOr" /> au niveau du bit sur chacun des éléments dans deux vecteurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-184">Returns a new vector by performing a bitwise <see langword="XOr" /> operation on each of the elements in two vectors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-185">Vecteur qui résulte de l'opération <see langword="XOr" /> au niveau du bit sur les éléments dans <paramref name="left" /> et <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-185">The vector that results from the bitwise <see langword="XOr" /> of the elements in <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-186">Le <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> méthode définit l’opérateur de bits `XOr` opération pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-186">The <xref:System.Numerics.Vector%601.op_ExclusiveOr%2A> method defines the bitwise `XOr` operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;byte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::Byte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-187">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-187">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-188">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-188">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Byte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-189">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-189">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-190">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-190">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;double&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;double&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-191">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-191">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-192">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-192">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-193">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-193">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-194">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-194">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;short&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;short&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-195">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-195">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-196">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-196">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-197">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-197">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-198">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-198">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;int&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;int&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-199">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-199">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-200">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-200">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-201">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-201">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-202">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-202">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;long&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;long&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-203">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-203">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-204">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-204">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-205">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-205">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-206">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-206">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;sbyte&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;int8&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::SByte&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.SByte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-207">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-207">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-208">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-208">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.SByte" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-209">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-209">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-210">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-210">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;float&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;float32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;float&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.Single&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-211">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-211">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-212">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-212">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.Single" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-213">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-213">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-214">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-214">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ushort&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int16&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt16&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt16&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-215">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-215">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-216">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-216">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-217">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-217">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-218">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-218">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;uint&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int32&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt32&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-219">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-219">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-220">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-220">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-221">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-221">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-222">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-222">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.Vector&lt;ulong&gt; (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;unsigned int64&gt; op_Explicit(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Vector(Of T)) As Vector(Of ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::Vector&lt;System::UInt64&gt;(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;System.UInt64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-223">Vecteur à réinterpréter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-223">The vector to reinterpret.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-224">Réinterprète les bits du vecteur spécifié dans un vecteur de type <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-224">Reinterprets the bits of the specified vector into a vector of type <see cref="T:System.UInt64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-225">Vecteur réinterprété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-225">The reinterpreted vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-226">Le <xref:System.Numerics.Vector%601.op_Explicit%2A> opérateur définit une conversion restrictive ; il nécessite un opérateur de cast (en c#) ou une méthode de conversion (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="96c20-226">The <xref:System.Numerics.Vector%601.op_Explicit%2A> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Vector(Of T), right As Vector(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-227">Premier vecteur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-227">The first vector to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-228">Deuxième vecteur à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-228">The second vector to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-229">Retourne une valeur qui indique si au moins deux paires d'éléments dans les vecteurs spécifiés sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-229">Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-230">
            <see langword="true" /> si des paires d'éléments left et right sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-230">
              <see langword="true" /> if any element pairs in left and right are equal.</span>
          </span>
          <span data-ttu-id="96c20-231">
            <see langword="false" /> si aucune paire d'éléments n'est égale à une autre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-231">
              <see langword="false" /> if no element pairs are equal.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-232">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-232">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-233">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-233">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-234">Multiplie deux vecteurs entre eux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-234">Multiplies two vectors together.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-235">Vecteur résultant du produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-235">The product vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-236">Le <xref:System.Numerics.Vector%601.op_Multiply%2A> méthode définit l’opération de multiplication pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-236">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (System.Numerics.Vector&lt;T&gt; value, T factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(valuetype System.Numerics.Vector`1&lt;!T&gt; value, !T factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (value As Vector(Of T), factor As T) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(System::Numerics::Vector&lt;T&gt; value, T factor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="factor" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-237">Vecteur source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-237">The source vector.</span>
          </span>
        </param>
        <param name="factor">
          <span data-ttu-id="96c20-238">Valeur scalaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-238">A scalar value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-239">Multiplie un vecteur par une valeur scalaire spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-239">Multiplies a vector by a specified scalar value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-240">Vecteur mis à l'échelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-240">The scaled vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-241">Le <xref:System.Numerics.Vector%601.op_Multiply%2A> méthode définit l’opération de multiplication pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-241">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator * (T factor, System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Multiply(!T factor, valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (factor As T, value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator *(T factor, System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="T" />
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="factor">
          <span data-ttu-id="96c20-242">Valeur scalaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-242">The scalar value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="96c20-243">Vecteur source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-243">The source vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-244">Multiplie un vecteur par la valeur scalaire donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-244">Multiplies a vector by the given scalar.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-245">Vecteur mis à l'échelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-245">The scaled vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-246">Le <xref:System.Numerics.Vector%601.op_Multiply%2A> méthode définit l’opération de multiplication pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-246">The <xref:System.Numerics.Vector%601.op_Multiply%2A> method defines the multiplication operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator ~ (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_OnesComplement(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator ~(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-247">Vecteur source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-247">The source vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-248">Retourne un nouveau vecteur dont les éléments sont obtenus en prenant le complément des éléments d'un vecteur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-248">Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-249">Vecteur complément d'un autre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-249">The one's complement vector.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; left, System.Numerics.Vector&lt;T&gt; right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_Subtraction(valuetype System.Numerics.Vector`1&lt;!T&gt; left, valuetype System.Numerics.Vector`1&lt;!T&gt; right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; left, System::Numerics::Vector&lt;T&gt; right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.Vector&lt;T&gt;" />
        <Parameter Name="right" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="96c20-250">Premier vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-250">The first vector.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="96c20-251">Deuxième vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-251">The second vector.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-252">Soustrait le deuxième vecteur du premier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-252">Subtracts the second vector from the first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-253">Vecteur résultant de la soustraction de <paramref name="right" /> de <paramref name="left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-253">The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-254">Le <xref:System.Numerics.Vector%601.op_Subtraction%2A> méthode définit l’opération de soustraction pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-254">The <xref:System.Numerics.Vector%601.op_Subtraction%2A> method defines the subtraction operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; operator - (System.Numerics.Vector&lt;T&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.Vector`1&lt;!T&gt; op_UnaryNegation(valuetype System.Numerics.Vector`1&lt;!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As Vector(Of T)) As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::Vector&lt;T&gt; operator -(System::Numerics::Vector&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.Vector&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="96c20-255">Vecteur dont le signe doit être inversé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-255">The vector to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-256">Inverse un vecteur donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-256">Negates a given vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-257">Vecteur dont le signe a été inversé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-257">The negated vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-258">Le <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> méthode définit l’opération de négation unaire pour <xref:System.Numerics.Vector%601> objets.</span><span class="sxs-lookup"><span data-stu-id="96c20-258">The <xref:System.Numerics.Vector%601.op_UnaryNegation%2A> method defines the unary negation operation for <xref:System.Numerics.Vector%601> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96c20-259">Retourne la représentation sous forme de chaîne de ce vecteur en utilisant la mise en forme par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-259">Returns the string representation of this vector using default formatting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-260">Représentation sous forme de chaîne de ce vecteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-260">The string representation of this vector.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-261">Cette méthode retourne une chaîne dans laquelle chaque élément du vecteur est mis en forme à l’aide de la chaîne de format (général) « G » et les conventions de mise en forme de la culture du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="96c20-261">This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</span></span> <span data-ttu-id="96c20-262">La culture actuelle <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> propriété suivie d’un espace est utilisée pour séparer chaque élément.</span><span class="sxs-lookup"><span data-stu-id="96c20-262">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="96c20-263">Un  ou  qui définit le format d’éléments individuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-263">A  or  that defines the format of individual elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-264">Retourne la représentation sous forme de chaîne de ce vecteur en utilisant la chaîne de format spécifiée pour mettre en forme les éléments individuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-264">Returns the string representation of this vector using the specified format string to format individual elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-265">Représentation sous forme de chaîne de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-265">The string representation of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-266">Cette méthode retourne une chaîne dans laquelle chaque élément du vecteur est mise en forme `format` et la culture en cours de mise en forme des conventions.</span><span class="sxs-lookup"><span data-stu-id="96c20-266">This method returns a string in which each element of the vector is formatted using `format` and the current culture's formatting conventions.</span></span> <span data-ttu-id="96c20-267">La culture actuelle <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> propriété suivie d’un espace est utilisée pour séparer chaque élément.</span><span class="sxs-lookup"><span data-stu-id="96c20-267">The current culture's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="96c20-268">Un  ou  qui définit le format d’éléments individuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-268">A  or  that defines the format of individual elements.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="96c20-269">Fournisseur de format qui fournit les informations de mise en forme spécifiques à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-269">A format provider that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96c20-270">Retourne la représentation sous forme de chaîne de ce vecteur en utilisant la chaîne de format spécifiée pour mettre en forme les éléments individuels et le fournisseur de format spécifié pour définir la mise en forme spécifique à la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-270">Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96c20-271">Représentation sous forme de chaîne de l'instance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-271">The string representation of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96c20-272">Cette méthode retourne une chaîne dans laquelle chaque élément du vecteur est mise en forme `format` et `formatProvider`et le fournisseur de format <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> propriété suivie d’un espace est utilisée pour séparer chaque élément.</span><span class="sxs-lookup"><span data-stu-id="96c20-272">This method returns a string in which each element of the vector is formatted using `format` and `formatProvider`, and the format provider's <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType> property followed by a space is used to separate each element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.Vector&lt;T&gt; Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.Vector`1&lt;!T&gt; Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.Vector`1.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As Vector(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::Vector&lt;T&gt; Zero { System::Numerics::Vector&lt;T&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Numerics.Vectors</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.Vector&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96c20-273">Retourne un vecteur contenant uniquement des 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-273">Returns a vector containing all zeroes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96c20-274">Vecteur contenant uniquement des 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96c20-274">A vector containing all zeroes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>