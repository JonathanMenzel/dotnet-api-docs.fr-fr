<Type Name="ExpressionPrefixAttribute" FullName="System.Web.Compilation.ExpressionPrefixAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d9b47eef6ad9d0ca198f11e141c979372868e664" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36404914" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExpressionPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ExpressionPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie l'attribut prefix à utiliser pour le générateur d'expressions. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Compilation.ExpressionPrefixAttribute> classe est utilisée au moment du design avec des expressions qui ne sont pas définis dans le fichier de configuration. Utilisez le <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> propriété à obtenir le nom du préfixe qui est associé à la <xref:System.Web.Compilation.ExpressionPrefixAttribute> objet. Un générateur d’expressions recherche toutes les instructions sous la forme suivante :  
  
 `<%$ [expressionPrefix]:[expressionValue] %>`  
  
 Ensuite, le Générateur d’expressions, en fonction du préfixe de l’expression, génère du code pour l’assignation de propriété. Le `expressionPrefix` paramètre fait référence à un générateur d’expressions configuré qui est défini dans le fichier de configuration ou via un <xref:System.Web.Compilation.ExpressionPrefixAttribute> objet.  
  
   
  
## Examples  
 Les exemples de code suivants montrent comment utiliser la <xref:System.Web.Compilation.ExpressionPrefixAttribute> classe. L’attribut est appliqué à un générateur d’expressions personnalisé qui implémente le <xref:System.Web.Compilation.ExpressionBuilder> classe abstraite. Cette implémentation de <xref:System.Web.Compilation.ExpressionBuilder> retourne une instruction évaluée qui est passée à l’expression. Pour exécuter cet exemple, vous devez tout d’abord inscrire le Générateur d’expressions personnalisé dans le fichier Web.config. Le premier exemple de code montre comment inscrire le Générateur d’expressions personnalisé dans le fichier Web.config.  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 Le deuxième exemple de code montre comment référencer l’expression dans un fichier .aspx.  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 Le troisième exemple de code montre comment développer un générateur d’expressions personnalisé en dérivant de <xref:System.Web.Compilation.ExpressionBuilder>. Pour exécuter cet exemple de code, vous devez placer la classe dans le dossier App_Code.  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionPrefixAttribute (string expressionPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionPrefixAttribute(System::String ^ expressionPrefix);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ExpressionPrefixAttribute : string -&gt; System.Web.Compilation.ExpressionPrefixAttribute" Usage="new System.Web.Compilation.ExpressionPrefixAttribute expressionPrefix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">Préfixe du <see cref="T:System.Web.Compilation.ExpressionBuilder" /> actuel.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A> constructeur pour initialiser une instance de la <xref:System.Web.Compilation.ExpressionPrefixAttribute> classe à l’aide d’un identificateur de préfixe. Le <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A> est le constructeur par défaut pour la <xref:System.Web.Compilation.ExpressionPrefixAttribute> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expressionPrefix" /> est null ou une chaîne vide ("").</exception>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur du préfixe pour l'objet <see cref="T:System.Web.Compilation.ExpressionBuilder" /> en cours.</summary>
        <value>Préfixe d'expression pour le <see cref="T:System.Web.Compilation.ExpressionBuilder" /> configuré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> propriété à récupérer le nom du préfixe qui est associé à un attribut donné.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
  </Members>
</Type>