<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="668c5e9b7f23c5df7df6c74748352d9749118947" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901823" /></Metadata><TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit un jeu de propriétés et de méthodes pour la génération de code source dans l'environnement de génération ASP.NET. Cette classe est abstraite.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET environnement de génération utilise <xref:System.Web.Compilation.BuildProvider> objets pour générer le code source pour différents types de fichiers au sein d’une application. Les classes dérivées de <xref:System.Web.Compilation.BuildProvider> principalement fournissent le code source pour les fichiers, les pages Web, les ressources et les autres éléments personnalisés.  
  
 En règle générale, vous ne créez pas une instance de la <xref:System.Web.Compilation.BuildProvider> classe directement. Au lieu de cela, vous implémentez une classe qui dérive de <xref:System.Web.Compilation.BuildProvider>et configurer le <xref:System.Web.Compilation.BuildProvider> environnement de génération de l’implémentation pour une utilisation dans ASP.NET.  
  
 Instances de la <xref:System.Web.Compilation.BuildProvider> classe sont utilisés avec <xref:System.Web.Compilation.AssemblyBuilder> objets à créer un ou plusieurs fichiers dans un assembly compilé. Un <xref:System.Web.Compilation.BuildProvider> instance génère du code source dans la langue appropriée pour les fichiers individuels et le <xref:System.Web.Compilation.AssemblyBuilder> objet combine la source de chaque <xref:System.Web.Compilation.BuildProvider> instance dans un assembly unique.  
  
 L’environnement de génération ASP.NET utilise des instances de la <xref:System.Web.Compilation.BuildProvider> classe pour générer des fichiers au sein d’une application. Le <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriété de la <xref:System.Web.Compilation.BuildProvider> classe indique le chemin d’accès du fichier à générer. L’extension de fichier de chaque fichier dans une application est mappée à un fournisseur de générations correspondant. ASP.NET environnement de génération Initialise un <xref:System.Web.Compilation.BuildProvider> d’instance pour chaque fichier en fonction de l’extension de fichier et utilise le <xref:System.Web.Compilation.BuildProvider> méthodes pour générer le code source pour le fichier. ASP.NET environnement de génération passe un <xref:System.Web.Compilation.AssemblyBuilder> objet basé sur le langage de compilateur par défaut et le contexte du fichier à la <xref:System.Web.Compilation.BuildProvider> méthodes lors de la création d’un assembly à partir d’un ou plusieurs fichiers, afin que le <xref:System.Web.Compilation.BuildProvider> instance peut contribuer code source pour son fichier à l’assembly global.  
  
 Pour définir les actions de génération personnalisées pour un type de fichier dans une application ASP.NET, vous devez dériver une classe à partir de <xref:System.Web.Compilation.BuildProvider>, implémenter des membres dans la classe dérivée pour générer le type de fichier et configurer le fournisseur de générations pour l’extension de fichier correspondant dans le fichier de configuration d’application.  
  
 Le spécifie l’extension de fichier pour les fichiers de prise en charge, et si le fournisseur de générations prend en charge les fichiers de code, des fichiers Web, des fichiers de ressources ou tous les fichiers. Utilisez le `type` attribut pour spécifier le nom de type qualifié complet de l’implémentation de fournisseur de générations. Utilisez la <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> classe pour spécifier si le fournisseur de générations s’applique aux fichiers dans le répertoire App_Code, aux fichiers dans un répertoire de contenu Web, les ressources à global ou locales ou à tous les fichiers. Utilisez le `extension` attribut pour spécifier l’extension de fichier utilisée pour identifier les fichiers qui le <xref:System.Web.Compilation.BuildProvider> classe prend en charge. Utilisez la <xref:System.Web.Configuration.BuildProviderCollection> classe pour examiner les fournisseurs de générations dans un fichier de configuration. Pour plus d’informations sur la configuration d’un fournisseur de générations, consultez [élément de buildProviders pour compilation (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 Pour implémenter un fournisseur de générations qui génère du code source pour un type de fichier personnalisé, dérivez une classe de <xref:System.Web.Compilation.BuildProvider>et remplacer le <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> méthode permettant de générer le code source pour le type de fichier pris en charge. La source générée est ajoutée à la <xref:System.Web.Compilation.AssemblyBuilder> objet sous la forme d’un graphique CodeDOM, ou en tant que contenu qui représente un fichier de code source physique. Si le fournisseur de générations requiert un langage de programmation spécifique, substituez le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriété à retourner un <xref:System.Web.Compilation.CompilerType> objet pour le langage de programmation pris en charge. Si le fournisseur de générations ne requiert pas un langage de programmation spécifique, ne substituez pas la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriété ; utilisez l’implémentation de classe de base, ce qui indique que le fournisseur de générations peut utiliser n’importe quel langage .NET Framework, tel que Visual Basic ou c#.  
  
 Pour implémenter un fournisseur de générations qui génère du code source pour le contenu Web, dérivez une classe de <xref:System.Web.Compilation.BuildProvider> et remplacer le <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> méthode pour retourner le <xref:System.Type> pour la classe générée par <xref:System.Web.Compilation.BuildProvider>. Remplacer le <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> méthode permettant de générer le code source pour le type fourni par le fichier pris en charge.  
  
> [!NOTE]
>  Ajout d’un texte personnalisé <xref:System.Web.Compilation.BuildProvider> classe au fichier Web.config fonctionne dans un site Web ASP.NET, mais ne fonctionne pas dans un projet d’application Web ASP.NET. Dans un projet d’application Web, le code généré par le <xref:System.Web.Compilation.BuildProvider> classe ne peut pas être incluse dans l’application. Pour plus d’informations, consultez [présentation précompilation de projets d’Application Web de ASP.NET](https://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).  
  
   
  
## Examples  
 L’exemple de code suivant illustre une implémentation de fournisseur de génération simple, qui héritent de la classe abstraite <xref:System.Web.Compilation.BuildProvider> classe de base. Le fournisseur de générations substitue le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, et <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membres de la classe de base. L’exemple n’inclut pas l’implémentation de la `SampleClassGenerator` classe. Pour plus d’informations, consultez le <xref:System.CodeDom.CodeCompileUnit> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Compilation.BuildProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Web.Compilation.BuildProvider> classe est abstraite, vous ne pouvez pas créer une instance de <xref:System.Web.Compilation.BuildProvider> directement à l’aide du constructeur.  
  
 Lorsque vous dérivez de la <xref:System.Web.Compilation.BuildProvider> classe, substituez le constructeur pour implémenter des actions d’initialisation personnalisées pour votre implémentation de fournisseur de générations.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le type de compilateur utilisé par un fournisseur de générations pour générer le code source pour un type de fichier personnalisé.</summary>
        <value><see cref="T:System.Web.Compilation.CompilerType" /> en lecture seule représentant le générateur de code, le compilateur de code et les paramètres de compilateur destinés à la génération du code source pour le chemin d'accès virtuel. La classe de base retourne <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> à fournir les paramètres de compilation du code source pour une implémentation de propriété <xref:System.Web.Compilation.BuildProvider>. Le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> est propriété `null` si le fournisseur de générations ne requiert pas un langage de code spécifique pour générer et compiler le code source.  
  
 Pour définir la valeur pour un <xref:System.Web.Compilation.CompilerType> objet au sein d’une implémentation de fournisseur de générations, utilisez la <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> ou <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> (méthode).  
  
 Le <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> propriété spécifie le <xref:System.CodeDom.Compiler.CodeDomProvider> implémentation qui est utilisée pour générer et compiler le code source pour un fournisseur de générations. Le <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> propriété définit les paramètres qui sont utilisés pour compiler le code source dans un assembly.  
  
   
  
## Examples  
 L’exemple de code suivant illustre une implémentation de fournisseur de génération simple, qui héritent de la classe abstraite <xref:System.Web.Compilation.BuildProvider> classe de base. Le fournisseur de générations substitue le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, et <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membres de la classe de base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">Générateur d'assemblys qui référence le code source généré par le fournisseur de générations.</param>
        <summary>Génère le code source du chemin d’accès virtuel du fournisseur de générations et l’ajoute à un générateur d’assemblys spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour implémenter un fournisseur de générations qui génère du code source pour un type de fichier personnalisé, dérivez une classe de la <xref:System.Web.Compilation.BuildProvider> classe et substituer la <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> méthode permettant de générer le code source pour le type de fichier pris en charge.  
  
 En règle générale, un fournisseur de générations <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implémentation lectures le <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriété, analyse le contenu et ajoute le code source généré spécifié <xref:System.Web.Compilation.AssemblyBuilder> objet. Vous pouvez contribuer au code source à l’assembly sous la forme d’un <xref:System.IO.TextWriter> objet ou un graphique CodeDOM. Pour ajouter le code source à l’assembly via un <xref:System.IO.TextWriter> de l’objet, utilisez le <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> (méthode). Pour ajouter le code source dans un graphique CodeDOM à l’assembly, utilisez le <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> (méthode).  
  
 Si le fournisseur de générations génère le code source dans un langage de programmation spécifique, vous devez substituer la <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriété à retourner un <xref:System.Web.Compilation.CompilerType> objet pour le langage de programmation pris en charge.  
  
   
  
## Examples  
 L’exemple de code suivant illustre une implémentation de fournisseur de génération simple, qui héritent de la classe abstraite <xref:System.Web.Compilation.BuildProvider> classe de base. Le fournisseur de générations substitue le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, et <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> membres de la classe de base.  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb">Génération et compilation de code source dynamique</related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">Lorsque cette méthode est retournée, elle contient un dictionnaire qui répertorie tous les numéros de ligne et pragmas de ligne associés du code source. Ce paramètre est passé sans être initialisé.</param>
        <summary>Représente le conteneur du graphique CodeDOM généré.</summary>
        <returns>Conteneur du graphique CodeDOM qui est généré par l'instance de <see cref="T:System.Web.Compilation.BuildProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée par le biais du <xref:System.Web.Compilation.ClientBuildManager> classe pour prendre en charge la coloration syntaxique et le concepteur dans Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Résultats de la compilation du chemin d’accès virtuel du fournisseur de générations.</param>
        <summary>Génère une chaîne à rendre persistante dans l'assembly compilé.</summary>
        <returns>Chaîne à rendre persistante dans l'environnement de génération ou valeur <see langword="null" /> si l'instance de <see cref="T:System.Web.Compilation.BuildProvider" /> n'implémente pas <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> méthode d’un <xref:System.Web.Compilation.BuildManager> objet crée une instance d’un fournisseur de générations pour un chemin d’accès virtuel d’entrée et appelle le <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> méthode sur le <xref:System.Web.Compilation.BuildProvider> objet.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> classe retourne `null` pour le <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> méthode, ce qui indique que <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> n’est pas implémentée.  
  
 Certaines implémentations de fournisseur de générations peuvent implémenter <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> à la place de la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> (méthode). Un <xref:System.Web.Compilation.BuildProvider> objet utilise généralement <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> pour retourner un <xref:System.Type> objet pour un chemin d’accès virtuel. Toutefois, le <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> méthode peut être utilisée pour indiquer qu’un <xref:System.Web.Compilation.BuildProvider> objet peut générer plusieurs types à partir d’un chemin d’accès virtuel.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les paramètres de compilateur pour le langage par défaut dans l'application.</summary>
        <returns><see cref="T:System.Web.Compilation.CompilerType" /> qui représente les paramètres de compilateur pour le langage par défaut dans l'application. La classe de base retourne le compilateur par défaut en fonction du fichier de configuration de l'application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> méthode pour examiner le type de compilateur par défaut pour un fournisseur de générations. Utilisez le <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> méthode pour examiner le type de compilateur configuré dans un fournisseur de générations pour un nom de langage spécifique.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> classe détermine le type de compilateur par défaut à l’aide la `defaultLanguage` valeur dans la section du fichier de configuration d’application de l’attribut. S’il n’existe aucun paramètre de langue par défaut dans la section de la compilation, le type de compilateur par défaut est défini à l’aide de le <xref:Microsoft.VisualBasic.VBCodeProvider> fournisseur de langages.  
  
 Lorsque vous dérivez de la <xref:System.Web.Compilation.BuildProvider> (classe), vous pouvez utiliser <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> pour définir le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> propriété au sein de votre implémentation.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">Nom de langage codé.</param>
        <summary>Retourne les paramètres de compilateur pour le fournisseur de générations selon le langage spécifié.</summary>
        <returns><see cref="T:System.Web.Compilation.CompilerType" /> qui représente les paramètres de compilateur pour le fournisseur de générations selon le langage spécifié. La classe de base retourne les paramètres de compilateur par défaut pour le langage selon le fichier de configuration de l'application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> méthode pour examiner le type de compilateur configuré dans le fournisseur de générations pour un nom de langage spécifique. Utilisez le <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> méthode pour examiner le type de compilateur par défaut pour un fournisseur de générations.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> classe détermine le type de compilateur par défaut à l’aide du <xref:System.Web.Configuration.Compiler> éléments dans le <xref:System.Web.Configuration.CompilationSection.Compilers%2A> propriété de la <xref:System.Web.Configuration.CompilationSection> objet pour le fichier de configuration. Cela équivaut à l’examen des éléments dans les éléments et dans les sections du fichier de configuration. Par exemple, pour le `language` valeur VB, la méthode de classe de base retourne un <xref:System.Web.Compilation.CompilerType> objet qui correspond aux paramètres configurés pour une instance de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.  
  
 Lorsque vous dérivez à partir de la <xref:System.Web.Compilation.BuildProvider> (classe), vous pouvez utiliser <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> pour définir le <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> valeur de propriété pour le langage pris en charge par votre implémentation.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="language" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException"><paramref name="language" /> ne correspond pas à un compilateur configuré pour le fournisseur de générations.</exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Résultats de la compilation du chemin d’accès virtuel du fournisseur de générations.</param>
        <summary>Retourne un type généré par le fournisseur de générations à partir du chemin d’accès virtuel.</summary>
        <returns>Type généré par le fournisseur de générations pour le chemin d’accès virtuel. La classe de base retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour implémenter un fournisseur de générations qui génère du code source pour le contenu Web tels que des fichiers .aspx, dérivez une classe de la <xref:System.Web.Compilation.BuildProvider> classe et substituer la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> méthode pour retourner le type généré par le fournisseur de générations.  
  
 Le système de génération ASP.NET compile des fichiers pour chaque fournisseur de générations et génère un <xref:System.CodeDom.Compiler.CompilerResults> objet, qui est passé à la <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> (méthode). En règle générale, un fournisseur de générations <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implémentation utilise la <xref:System.Reflection.Assembly.GetType%2A> méthode sur le <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> propriété de l’entrée `results` objet pour retourner le type fourni.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Résultats de la compilation du chemin d’accès virtuel du fournisseur de générations.</param>
        <summary>Retourne une valeur indiquant les actions requises lors de la création d'un chemin d'accès virtuel.</summary>
        <returns>Valeur <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> indiquant les actions requises après la création du chemin d'accès virtuel dans l'environnement de génération ASP.NET.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> méthode est utilisée par l’environnement de génération ASP.NET lors de l’utilisation d’instances de la <xref:System.Web.Compilation.BuildProvider> classe pour créer des fichiers et charger des assemblys compilés.  
  
 La base de <xref:System.Web.Compilation.BuildProvider> classe méthode retourne le <xref:System.Web.Compilation.BuildProviderResultFlags.Default> valeur du champ, indiquant qu’aucune action spéciale n’est requise lorsque le chemin d’accès virtuel est généré.  
  
 Lorsque vous dérivez de la <xref:System.Web.Compilation.BuildProvider> (classe), vous pouvez implémenter la <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> méthode pour retourner une autre <xref:System.Web.Compilation.BuildProviderResultFlags> valeur pour votre type de fichier personnalisé ou un chemin d’accès virtuel. Par exemple, si une régénération de votre chemin d’accès virtuel requiert le contenant <xref:System.AppDomain> objet à être rechargé, vous pouvez retourner le <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> valeur d’énumération à partir de votre <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre un lecteur de texte pour lire le contenu d'un chemin d'accès virtuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre un lecteur de texte pour lire le contenu du chemin d'accès virtuel de l'objet fournisseur de générations actuel.</summary>
        <returns><see cref="T:System.IO.TextReader" /> ouvert qui peut être utilisé pour lire le contenu de <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.IO.TextReader.Read%2A> méthode sur retourné <xref:System.IO.TextReader> objet pour lire le contenu de la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriété pour un <xref:System.Web.Compilation.BuildProvider> objet.  
  
 Après avoir appelé la <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> (méthode), vous devez utiliser le <xref:System.IO.TextReader.Close%2A> méthode pour fermer le <xref:System.IO.TextReader> de l’objet et libérer les ressources système associées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à lire.</param>
        <summary>Ouvre un lecteur de texte pour lire le contenu d'un chemin d'accès virtuel spécifié.</summary>
        <returns><see cref="T:System.IO.TextReader" /> ouvert qui peut être utilisé pour lire le contenu du chemin d'accès virtuel spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.IO.TextReader.Read%2A> méthode sur retourné <xref:System.IO.TextReader> objet pour lire le contenu du chemin d’accès virtuel.  
  
 Après avoir appelé la <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> (méthode), vous devez utiliser le <xref:System.IO.TextReader.Close%2A> méthode pour fermer le <xref:System.IO.TextReader> de l’objet et libérer les ressources système associées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ouvre un flux pour lire le contenu d'un chemin d'accès virtuel.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ouvre un flux pour lire le chemin d'accès virtuel de l'objet fournisseur de générations actuel.</summary>
        <returns><see cref="T:System.IO.Stream" /> ouvert qui peut être utilisé pour lire le contenu de <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.IO.Stream.Read%2A> méthode sur retourné <xref:System.IO.Stream> objet pour lire le contenu du chemin d’accès virtuel pour le <xref:System.Web.Compilation.BuildProvider> objet.  
  
 Après avoir appelé la <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> (méthode), vous devez utiliser le <xref:System.IO.Stream.Close%2A> méthode pour fermer le <xref:System.IO.Stream> de l’objet et libérer les ressources système associées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès virtuel à lire.</param>
        <summary>Ouvre un flux pour lire le contenu d'un chemin d'accès virtuel spécifié.</summary>
        <returns><see cref="T:System.IO.Stream" /> ouvert qui peut être utilisé pour lire le contenu du chemin d'accès virtuel spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.IO.Stream.Read%2A> méthode sur retourné <xref:System.IO.Stream> objet pour lire le contenu du chemin d’accès virtuel.  
  
 Après avoir appelé la <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> (méthode), vous devez utiliser le <xref:System.IO.Stream.Close%2A> méthode pour fermer le <xref:System.IO.Stream> de l’objet et libérer les ressources système associées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">Résultats du compilateur.</param>
        <summary>En cas de substitution dans une classe dérivée, permet d'examiner des messages d'erreur du compilateur afin que vous puissiez les modifier pour fournir plus d'informations.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous substituez cette méthode afin que vous puissiez modifier les erreurs du compilateur avant qu’elles sont affichées afin de rendre le texte d’erreur plus utiles à l’utilisateur. Cela est utile dans les scénarios où vous connaissez le contexte de certaines erreurs et pouvez fournir des informations à l’utilisateur sur la façon de les corriger. Le message d’erreur du compilateur d’origine est généralement spécifique à une construction de langage particulier et peut ne pas faire la cause réelle ou la solution évidente à l’utilisateur.  
  
 Vous pouvez accéder à des erreurs à l’aide de la <xref:System.CodeDom.Compiler.CompilerResults> objet qui est passé à la méthode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente les assemblys à compiler avec la source générée par le fournisseur de générations.</summary>
        <value>Collection en lecture seule d'assemblys qui peuvent être référencées par le code source généré par le fournisseur de générations.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET environnement de génération initialise la collection d’assemblys qui sont disponibles pour référencer le fournisseur de générations. Le code source généré par un fournisseur de générations peut utiliser des types publics dans les assemblys référencés. La collection d’assemblys référencés se compose d’autres assemblys générés dans l’application ASP.NET et d’assemblys répertoriés dans l’élément dans le fichier de configuration.  
  
 Si le fournisseur de générations génère le code source qui référence des assemblys supplémentaires, le fournisseur de générations ajoute les assemblys supplémentaires à l’aide de la <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> (méthode). L’environnement de génération ASP.NET résout les types externes pendant la compilation de l’assembly à l’aide des assemblys référencés ajoutés par fournisseur de générations et la collection par défaut d’assemblys disponibles pour référence.  
  
 Le <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> regroupement n’inclut pas les assemblys qui sont ajoutés pour référence par d’autres fournisseurs de build via le <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">Extension de nom de fichier à laquelle est destinée le fournisseur de générations.</param>
        <param name="providerType">Classe du fournisseur de générations.</param>
        <summary>Inscrit un fournisseur de générations.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour inscrire des fournisseurs de générations au lieu de les définir dans le fichier Web.config. Pour plus d’informations sur les fournisseurs de générations, consultez le <xref:System.Web.Compilation.BuildProvider> classe et [élément de buildProviders pour compilation (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente le fichier à générer par cette implémentation de fournisseur de générations.</summary>
        <value>Chaîne en lecture seule qui spécifie le chemin d'accès virtuel d'un fichier que ce fournisseur de générations doit compiler.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chemin d’accès virtuel d’un <xref:System.Web.Compilation.BuildProvider> objet est le chemin d’accès au fichier qui est compilé par le fournisseur de générations. Par exemple, si vous avez configuré un personnalisé <xref:System.Web.Compilation.BuildProvider> classe pour générer tous les fichiers dans le site Web avec l’extension personnalisée .abc, si votre site Web s’appelle WebSite1, et le site Web contient un fichier nommé Example.abc, la <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> propriété contient la valeur `/WebSite1/Example.abc`.  
  
 L’extension de fichier de chaque fichier dans l’application détermine le type de fichier et le fournisseur de générations correspondant pour le type de fichier. ASP.NET environnement de génération Initialise un <xref:System.Web.Compilation.BuildProvider> de l’objet pour chaque fichier en fonction du type de fichier et utilise le <xref:System.Web.Compilation.BuildProvider> méthodes pour générer la source pour chaque fichier.  
  
 Pour plus d’informations sur la configuration d’un fournisseur de générations, consultez [élément de buildProviders pour compilation (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente une collection de chemins d’accès virtuel qui doivent être générés avant que le fournisseur de générations ne puisse générer le code.</summary>
        <value>Collection en lecture seule de chaînes, représentant les chemins d'accès virtuel dont cette instance du fournisseur de générations dépend.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> propriété est une collection de chemins d’accès virtuels qui doit être compilé avant le <xref:System.Web.Compilation.BuildProvider> instance génère du code source. Les assemblys dans les chemins d’accès virtuels dans <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> sont ajoutés en tant que références à la compilation pour le <xref:System.Web.Compilation.BuildProvider> instance.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>