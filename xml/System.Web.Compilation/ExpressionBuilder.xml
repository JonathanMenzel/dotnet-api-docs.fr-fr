<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bfc50-101">Évalue des expressions pendant l'analyse de page.</span><span class="sxs-lookup"><span data-stu-id="bfc50-101">Evaluates expressions during page parsing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-102">Le <xref:System.Web.Compilation.ExpressionBuilder> classe est la classe de base pour les générateurs d’expressions, telles que la <xref:System.Web.Compilation.AppSettingsExpressionBuilder> classe, de créer des expressions de code pendant l’analyse de page.</span><span class="sxs-lookup"><span data-stu-id="bfc50-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="bfc50-103">Générateurs d’expressions analysent des expressions déclaratives et créer du code pour récupérer des valeurs liées à une propriété de contrôle.</span><span class="sxs-lookup"><span data-stu-id="bfc50-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="bfc50-104">Dans les scénarios sans compilation, un générateur d’expressions qui prend en charge une fonctionnalité sans compilation évalue l’expression pendant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="bfc50-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="bfc50-105">Lorsque l’Analyseur de page rencontre une expression qui est délimitée par la chaîne `<%$ %>`, il crée un générateur d’expressions pour l’expression en fonction du préfixe dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="bfc50-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="bfc50-106">Le préfixe est la partie de la chaîne située à gauche du signe deux-points ( :).</span><span class="sxs-lookup"><span data-stu-id="bfc50-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="bfc50-107">Par exemple, lorsque l’analyseur rencontre la chaîne `<%$ ConnectionStrings:MessageDB %>`, il crée un <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> objet.</span><span class="sxs-lookup"><span data-stu-id="bfc50-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="bfc50-108">Les préfixes sont associés aux générateurs d’expressions dans le fichier Web.config dans le <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span><span class="sxs-lookup"><span data-stu-id="bfc50-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="bfc50-109">Le côté droit de l’expression déclarative est passé au Générateur d’expressions pour l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="bfc50-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="bfc50-110">Remplacer la <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> méthode pour générer du code qui sera compilé avec la page.</span><span class="sxs-lookup"><span data-stu-id="bfc50-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="bfc50-111">Si vous souhaitez que le Générateur d’expressions personnalisées soit actif sur les pages qui ne sont pas compilées, vous devez également substituer la <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> méthode pour retourner un objet qui représente les résultats de l’expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="bfc50-112">Vous devez également substituer la <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propriété pour indiquer que le Générateur d’expressions personnalisé prend en charge les pages sans compilation.</span><span class="sxs-lookup"><span data-stu-id="bfc50-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="bfc50-113">Vous pouvez définir un ensemble de propriétés et méthodes pour sélectionner et évaluer une expression qui est associée à une propriété de contrôle au moment du design en implémentant un éditeur d’expressions.</span><span class="sxs-lookup"><span data-stu-id="bfc50-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="bfc50-114">L’éditeur est marqué sur le Générateur d’expressions via les métadonnées de niveau classe.</span><span class="sxs-lookup"><span data-stu-id="bfc50-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="bfc50-115">Pour plus d'informations, consultez <xref:System.Web.UI.Design.ExpressionEditor>.</span><span class="sxs-lookup"><span data-stu-id="bfc50-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc50-116">Les exemples de code suivants montrent comment générer un générateur d’expressions personnalisées en implémentant la <xref:System.Web.Compilation.ExpressionBuilder> classe abstraite.</span><span class="sxs-lookup"><span data-stu-id="bfc50-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="bfc50-117">Cette implémentation de <xref:System.Web.Compilation.ExpressionBuilder> retourne une instruction évaluée qui est passée à l’expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="bfc50-118">Pour exécuter cet exemple, vous devez tout d’abord inscrire le Générateur d’expressions personnalisé dans le fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="bfc50-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="bfc50-119">Le premier exemple de code montre comment inscrire le Générateur d’expressions personnalisé dans le fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="bfc50-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="bfc50-120">Le deuxième exemple de code montre comment référencer l’expression dans un fichier .aspx.</span><span class="sxs-lookup"><span data-stu-id="bfc50-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="bfc50-121">Le troisième exemple de code montre comment développer un générateur d’expressions personnalisé en dérivant de <xref:System.Web.Compilation.ExpressionBuilder>.</span><span class="sxs-lookup"><span data-stu-id="bfc50-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="bfc50-122">Pour exécuter cet exemple de code, vous devez placer la classe dans le dossier App_Code.</span><span class="sxs-lookup"><span data-stu-id="bfc50-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="bfc50-123">Lorsque vous héritez de la <see cref="T:System.Web.Compilation.ExpressionBuilder" /> (classe), vous devez substituer la <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bfc50-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfc50-124">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Compilation.ExpressionBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="bfc50-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-125">Étant donné que la <xref:System.Web.Compilation.ExpressionBuilder> classe est abstraite, vous ne pouvez pas créer une instance de <xref:System.Web.Compilation.ExpressionBuilder> directement à l’aide du <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="bfc50-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bfc50-126">Lorsque vous dérivez de la <see cref="T:System.Web.Compilation.ExpressionBuilder" /> de classe, remplacez le <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructeur pour implémenter des actions d’initialisation personnalisées pour votre implémentation de générateur d’expressions.</span><span class="sxs-lookup"><span data-stu-id="bfc50-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span></span></para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="bfc50-127">Objet contenant l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-127">The object containing the expression.</span></span></param>
        <param name="entry"><span data-ttu-id="bfc50-128">Objet représentant des informations à propos de la propriété liée par l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-128">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="bfc50-129">Objet contenant des données analysées telles qu'elles sont retournées par <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="bfc50-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="bfc50-130">Informations contextuelles pour l'évaluation de l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-130">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="bfc50-131">En cas de substitution dans une classe dérivée, retourne un objet qui représente une expression évaluée.</span><span class="sxs-lookup"><span data-stu-id="bfc50-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="bfc50-132">Objet représentant l'expression évaluée ; sinon, <see langword="null" /> si l'héritier n'implémente pas <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="bfc50-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-133">Si vous souhaitez que votre <xref:System.Web.Compilation.ExpressionBuilder> objet doit être actif sur une page qui prend en charge la fonctionnalité sans compilation, vous pouvez remplacer le <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> (méthode) et le <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bfc50-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="bfc50-134">Le <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> méthode doit retourner l’évaluation de l’expression actuelle.</span><span class="sxs-lookup"><span data-stu-id="bfc50-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc50-135">L’exemple de code suivant montre comment utiliser la <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> méthode pour retourner une expression évaluée.</span><span class="sxs-lookup"><span data-stu-id="bfc50-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bfc50-136">Si vous remplacez le <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> (méthode), vous devez également substituer la <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> propriété.</span><span class="sxs-lookup"><span data-stu-id="bfc50-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="bfc50-137">Objet représentant des informations à propos de la propriété liée par l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-137">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="bfc50-138">Objet contenant des données analysées telles qu'elles sont retournées par <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span><span class="sxs-lookup"><span data-stu-id="bfc50-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="bfc50-139">Informations contextuelles pour l'évaluation de l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-139">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="bfc50-140">En cas de substitution dans une classe dérivée, retourne du code qui est utilisé pendant l'exécution de la page pour obtenir l'expression évaluée.</span><span class="sxs-lookup"><span data-stu-id="bfc50-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="bfc50-141"><see cref="T:System.CodeDom.CodeExpression" /> utilisée pour l'assignation de propriété.</span><span class="sxs-lookup"><span data-stu-id="bfc50-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-142">Les classes qui héritent de la <xref:System.Web.Compilation.ExpressionBuilder> classe doit implémenter la <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> méthode abstraite.</span><span class="sxs-lookup"><span data-stu-id="bfc50-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc50-143">L’exemple de code suivant montre comment retourner un <xref:System.CodeDom.CodeExpression> objet en remplaçant le <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bfc50-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="bfc50-144">Si vous implémentez un générateur d’expressions personnalisées, vous devez effectuer le cast de type approprié pour la propriété du contrôle et retourner l’opération de conversion dans le <see cref="T:System.CodeDom.CodeExpression" /> objet.</span><span class="sxs-lookup"><span data-stu-id="bfc50-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="bfc50-145">Valeur de l'expression déclarative.</span><span class="sxs-lookup"><span data-stu-id="bfc50-145">The value of the declarative expression.</span></span></param>
        <param name="propertyType"><span data-ttu-id="bfc50-146">Type de la propriété liée par l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-146">The type of the property bound to by the expression.</span></span></param>
        <param name="context"><span data-ttu-id="bfc50-147">Informations contextuelles pour l'évaluation de l'expression.</span><span class="sxs-lookup"><span data-stu-id="bfc50-147">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="bfc50-148">En cas de substitution dans une classe dérivée, retourne un objet qui représente l'expression analysée.</span><span class="sxs-lookup"><span data-stu-id="bfc50-148">When overridden in a derived class, returns an object that represents the parsed expression.</span></span></summary>
        <returns><span data-ttu-id="bfc50-149"><see cref="T:System.Object" /> contenant la représentation analysée de l'expression ; sinon, <see langword="null" /> si <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> n'est pas implémenté.</span><span class="sxs-lookup"><span data-stu-id="bfc50-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-150">En cas de substitution dans une classe dérivée, cette méthode analyse l’expression et la retourne comme un objet qui peut être utilisé en tant que le `parsedData` paramètre dans un <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> ou <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="bfc50-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfc50-151">En cas de substitution dans une classe dérivée, retourne une valeur indiquant si l'objet <see cref="T:System.Web.Compilation.ExpressionBuilder" /> en cours prend en charge les pages sans compilation.</span><span class="sxs-lookup"><span data-stu-id="bfc50-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span></span></summary>
        <value>
          <span data-ttu-id="bfc50-152"><see langword="true" /> si le <see cref="T:System.Web.Compilation.ExpressionBuilder" /> prend en charge l'évaluation d'expressions ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfc50-152"><see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfc50-153">La valeur par défaut pour le <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="bfc50-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="bfc50-154">Pour prendre en charge des pages sans compilation, vous devez substituer la <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> (méthode) et le <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bfc50-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfc50-155">L’exemple de code suivant montre comment utiliser le <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bfc50-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>