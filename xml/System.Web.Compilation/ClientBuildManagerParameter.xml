<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df67407c6097ad233c005e63868b8e8810f3a9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="605fa-101">Contient des valeurs passées au compilateur ASP.NET pendant la précompilation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="605fa-101">Contains values passed to the ASP.NET compiler during precompilation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605fa-102">Les fichiers de code et les pages Web ASP.NET peuvent être précompilés pour faciliter une réponse plus rapide pour les utilisateurs et de permettre le déploiement du site sans déployer le code source.</span><span class="sxs-lookup"><span data-stu-id="605fa-102">ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</span></span> <span data-ttu-id="605fa-103">Pour plus d’informations sur la précompilation d’un site Web ASP.NET, consultez [vue d’ensemble du précompilation projet de Site Web ASP.NET](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span><span class="sxs-lookup"><span data-stu-id="605fa-103">For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span></span>  
  
 <span data-ttu-id="605fa-104">La <xref:System.Web.Compilation.ClientBuildManagerParameter> classe stocke des valeurs qui sont utilisés pendant la précompilation.</span><span class="sxs-lookup"><span data-stu-id="605fa-104">The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation.</span></span> <span data-ttu-id="605fa-105">Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété détermine comment l’assembly sera généré.</span><span class="sxs-lookup"><span data-stu-id="605fa-105">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="605fa-106">Par exemple, vous pouvez définir <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> à <xref:System.Web.Compilation.PrecompilationFlags.Clean> pour recompiler les éventuels composants compilés précédemment ou lui affectez la valeur <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> pour permettre l’assembly résultant pour remplacer tous les composants dans le répertoire cible.</span><span class="sxs-lookup"><span data-stu-id="605fa-106">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="605fa-107">Le <xref:System.Web.Compilation.PrecompilationFlags> énumérateur a un <xref:System.FlagsAttribute> attribut qui permet une combinaison d’opérations de bits de ses valeurs membres.</span><span class="sxs-lookup"><span data-stu-id="605fa-107">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="605fa-108">Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété peut contenir plusieurs valeurs à partir de la <xref:System.Web.Compilation.PrecompilationFlags> énumération pour spécifier une combinaison de comportements de précompilation.</span><span class="sxs-lookup"><span data-stu-id="605fa-108">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
 <span data-ttu-id="605fa-109">Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> est affectée à une valeur pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-109">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="605fa-110">Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-110">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
 <span data-ttu-id="605fa-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est passé à la <xref:System.Web.Compilation.ClientBuildManager> via la <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="605fa-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="605fa-112">L’exemple de code suivant fait partie d’un exemple de code fourni dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="605fa-112">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="605fa-113">Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies.</span><span class="sxs-lookup"><span data-stu-id="605fa-113">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="605fa-114">L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de fourni <xref:System.Web.Compilation.PrecompilationFlags> valeurs.</span><span class="sxs-lookup"><span data-stu-id="605fa-114">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="605fa-115">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-115">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605fa-116">Ce constructeur n’initialise pas les valeurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="605fa-116">This constructor does not initialize any property values.</span></span> <span data-ttu-id="605fa-117">Ces valeurs doivent être définies via la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, et <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriétés une fois que l’objet a été créé.</span><span class="sxs-lookup"><span data-stu-id="605fa-117">Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="605fa-118">L’exemple de code suivant fait partie d’un exemple de code fourni dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="605fa-118">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="605fa-119">Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies.</span><span class="sxs-lookup"><span data-stu-id="605fa-119">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="605fa-120">L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de fourni <xref:System.Web.Compilation.PrecompilationFlags> valeurs.</span><span class="sxs-lookup"><span data-stu-id="605fa-120">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="605fa-121">Obtient ou définit les chemins d'accès virtuels exclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-121">Gets or sets excluded virtual paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="605fa-122">Exclure les chemins d’accès virtuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-122">Excluded virtual paths.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="605fa-123">Obtient ou définit les indicateurs qui déterminent le comportement de précompilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-123">Gets or sets the flags that determine precompilation behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="605fa-124">
            <see cref="T:System.Web.Compilation.PrecompilationFlags" /> pour une génération cliente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-124">The <see cref="T:System.Web.Compilation.PrecompilationFlags" /> for a client build.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605fa-125">Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété détermine comment l’assembly sera généré.</span><span class="sxs-lookup"><span data-stu-id="605fa-125">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="605fa-126">Par exemple, vous pouvez définir <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> à <xref:System.Web.Compilation.PrecompilationFlags.Clean> pour recompiler les éventuels composants compilés précédemment ou lui affectez la valeur <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> pour permettre l’assembly résultant pour remplacer tous les composants dans le répertoire cible.</span><span class="sxs-lookup"><span data-stu-id="605fa-126">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="605fa-127">Le <xref:System.Web.Compilation.PrecompilationFlags> énumérateur a un <xref:System.FlagsAttribute> attribut qui permet une combinaison d’opérations de bits de ses valeurs membres.</span><span class="sxs-lookup"><span data-stu-id="605fa-127">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="605fa-128">Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété peut contenir plusieurs valeurs à partir de la <xref:System.Web.Compilation.PrecompilationFlags> énumération pour spécifier une combinaison de comportements de précompilation.</span><span class="sxs-lookup"><span data-stu-id="605fa-128">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="605fa-129">L’exemple de code suivant fait partie d’un exemple de code fourni dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="605fa-129">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="605fa-130">Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies.</span><span class="sxs-lookup"><span data-stu-id="605fa-130">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="605fa-131">L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de fourni <xref:System.Web.Compilation.PrecompilationFlags> valeurs.</span><span class="sxs-lookup"><span data-stu-id="605fa-131">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="605fa-132">Obtient ou définit le conteneur de clé utilisé pendant la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-132">Gets or sets the key container used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="605fa-133">
            <see cref="T:System.String" /> de la valeur du conteneur de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-133">A <see cref="T:System.String" /> of the value for the key container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605fa-134">Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> est affectée à une valeur pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-134">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="605fa-135">Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-135">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="605fa-136">L’exemple de code suivant est semblable à l’exemple de code figurant dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de classes, sauf que l’assembly résultant a un nom fort basé sur le conteneur de clé fourni.</span><span class="sxs-lookup"><span data-stu-id="605fa-136">The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container.</span></span> <span data-ttu-id="605fa-137">Il effectuera une précompilation en fonction de fourni <xref:System.Web.Compilation.PrecompilationFlags> valeurs.</span><span class="sxs-lookup"><span data-stu-id="605fa-137">It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="605fa-138">Obtient ou définit le fichier de clé utilisé pendant la compilation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-138">Gets or sets the key file used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="605fa-139">
            <see cref="T:System.String" /> de la valeur du fichier de clé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="605fa-139">A <see cref="T:System.String" /> of the value for the key file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="605fa-140">Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> est affectée à une valeur pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-140">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="605fa-141">Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.</span><span class="sxs-lookup"><span data-stu-id="605fa-141">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="605fa-142">L’exemple de code suivant fait partie d’un exemple de code fourni dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="605fa-142">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="605fa-143">Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies.</span><span class="sxs-lookup"><span data-stu-id="605fa-143">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="605fa-144">L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de fourni <xref:System.Web.Compilation.PrecompilationFlags> valeurs.</span><span class="sxs-lookup"><span data-stu-id="605fa-144">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>