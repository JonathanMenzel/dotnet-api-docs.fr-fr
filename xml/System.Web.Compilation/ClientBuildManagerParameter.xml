<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f446c5dc9b0992ceb74d1fda206bb7cbf46db91d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850292" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contient des valeurs passées au compilateur ASP.NET pendant la précompilation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pages Web ASP.NET et les fichiers de code peuvent être précompilés pour faciliter une réponse plus rapide pour les utilisateurs et de permettre le déploiement du site sans déployer le code source. Pour plus d’informations sur la précompilation d’un site Web ASP.NET, consultez [présentation du précompilation de projet de Site Web d’ASP.NET](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).  
  
 Le <xref:System.Web.Compilation.ClientBuildManagerParameter> classe stocke des valeurs qui sont utilisés pendant la précompilation. Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété détermine comment l’assembly sera généré. Par exemple, vous pouvez définir <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> à <xref:System.Web.Compilation.PrecompilationFlags.Clean> à recompiler tout composant précédemment compilé ou affectez-lui la valeur <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> pour autoriser l’assembly résultant pour remplacer tous les composants dans le répertoire cible. Le <xref:System.Web.Compilation.PrecompilationFlags> énumérateur a un <xref:System.FlagsAttribute> attribut qui permet une combinaison au niveau du bit de ses valeurs membres. Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété peut contenir plusieurs valeurs à partir de la <xref:System.Web.Compilation.PrecompilationFlags> énumération pour spécifier une combinaison de comportements de précompilation.  
  
 Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> une valeur pour créer un assembly avec nom fort est attribuée à la propriété. Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.  
  
 Un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est passé à la <xref:System.Web.Compilation.ClientBuildManager> via la <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructeur.  
  
   
  
## Examples  
 L’exemple de code suivant fait partie d’un exemple de code trouvé dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe. Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies. L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de la liste fournie <xref:System.Web.Compilation.PrecompilationFlags> valeurs.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur n’initialise pas les valeurs de propriété. Ces valeurs doivent être définies via la <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, et <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriétés une fois que l’objet a été créé.  
  
   
  
## Examples  
 L’exemple de code suivant fait partie d’un exemple de code trouvé dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe. Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies. L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de la liste fournie <xref:System.Web.Compilation.PrecompilationFlags> valeurs.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les chemins d'accès virtuels exclus.</summary>
        <value>Chemins d’accès virtuels exclus.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les indicateurs qui déterminent le comportement de précompilation.</summary>
        <value>
          <see cref="T:System.Web.Compilation.PrecompilationFlags" /> pour une génération cliente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété détermine comment l’assembly sera généré. Par exemple, vous pouvez définir <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> à <xref:System.Web.Compilation.PrecompilationFlags.Clean> à recompiler tout composant précédemment compilé ou affectez-lui la valeur <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> pour autoriser l’assembly résultant pour remplacer tous les composants dans le répertoire cible. Le <xref:System.Web.Compilation.PrecompilationFlags> énumérateur a un <xref:System.FlagsAttribute> attribut qui permet une combinaison au niveau du bit de ses valeurs membres. Le <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> propriété peut contenir plusieurs valeurs à partir de la <xref:System.Web.Compilation.PrecompilationFlags> énumération pour spécifier une combinaison de comportements de précompilation.  
  
   
  
## Examples  
 L’exemple de code suivant fait partie d’un exemple de code trouvé dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe. Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies. L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de la liste fournie <xref:System.Web.Compilation.PrecompilationFlags> valeurs.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le conteneur de clé utilisé pendant la compilation.</summary>
        <value>
          <see cref="T:System.String" /> de la valeur du conteneur de clé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> une valeur pour créer un assembly avec nom fort est attribuée à la propriété. Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.  
  
   
  
## Examples  
 L’exemple de code suivant est similaire à l’exemple de code figurant dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de classes, à ceci près que l’assembly résultant a un nom fort basé sur le conteneur de clé fourni. Il effectuera une précompilation en fonction de la liste fournie <xref:System.Web.Compilation.PrecompilationFlags> valeurs.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le fichier de clé utilisé pendant la compilation.</summary>
        <value>
          <see cref="T:System.String" /> de la valeur du fichier de clé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Soit le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> propriété ou le <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> une valeur pour créer un assembly avec nom fort est attribuée à la propriété. Les deux valeurs est inutile à définir pour créer un assembly avec nom fort.  
  
   
  
## Examples  
 L’exemple de code suivant fait partie d’un exemple de code trouvé dans le <xref:System.Web.Compilation.ClientBuildManager> vue d’ensemble de la classe. Dans l’exemple, un <xref:System.Web.Compilation.ClientBuildManagerParameter> objet est créé et ses valeurs définies. L’assembly résultant a un nom fort basé sur le fichier de clé fourni et effectuera une précompilation en fonction de la liste fournie <xref:System.Web.Compilation.PrecompilationFlags> valeurs.  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>