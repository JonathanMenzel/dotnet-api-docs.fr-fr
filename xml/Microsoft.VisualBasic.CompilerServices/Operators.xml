<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f2836cbb320d1b41c283f4d38c7019578668a6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f82ed-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f82ed-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-102">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-103">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-103">Required.</span>
          </span>
          <span data-ttu-id="f82ed-104">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-105">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-105">Required.</span>
          </span>
          <span data-ttu-id="f82ed-106">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-107">Represents the Visual Basic addition (+) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-109">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-110">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-110">Required.</span>
          </span>
          <span data-ttu-id="f82ed-111">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-112">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-112">Required.</span>
          </span>
          <span data-ttu-id="f82ed-113">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="f82ed-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-117">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-118">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-118">Required.</span>
          </span>
          <span data-ttu-id="f82ed-119">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-120">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-120">Required.</span>
          </span>
          <span data-ttu-id="f82ed-121">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-122">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-122">Required.</span>
          </span>
          <span data-ttu-id="f82ed-123">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-124">Represents Visual Basic comparison operators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="f82ed-125">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-125">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-126">Condition</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-126">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="f82ed-127">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-127">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-128">
                  <paramref name="Left" /> est inférieur à <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-128">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="f82ed-129">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-129">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-130">
                  <paramref name="Left" /> et <paramref name="Right" /> sont égaux.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-130">
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="f82ed-131">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-131">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-132">
                  <paramref name="Left" /> est supérieur à <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-132">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-133">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-134">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-134">Required.</span>
          </span>
          <span data-ttu-id="f82ed-135">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-135">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-136">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-136">Required.</span>
          </span>
          <span data-ttu-id="f82ed-137">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-137">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-138">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-138">Required.</span>
          </span>
          <span data-ttu-id="f82ed-139">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-139">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-140">Represents the Visual Basic equal (=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-140">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-141">
            <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-141">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-142">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-142">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-143">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-143">Required.</span>
          </span>
          <span data-ttu-id="f82ed-144">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-144">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-145">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-145">Required.</span>
          </span>
          <span data-ttu-id="f82ed-146">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-146">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-147">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-147">Required.</span>
          </span>
          <span data-ttu-id="f82ed-148">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-148">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-149">Represents the Visual Basic greater-than (&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-149">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-150">
            <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-150">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-151">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-152">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-152">Required.</span>
          </span>
          <span data-ttu-id="f82ed-153">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-153">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-154">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-154">Required.</span>
          </span>
          <span data-ttu-id="f82ed-155">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-155">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-156">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-156">Required.</span>
          </span>
          <span data-ttu-id="f82ed-157">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-157">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-158">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-158">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-159">
            <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-159">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-160">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-160">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-161">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-161">Required.</span>
          </span>
          <span data-ttu-id="f82ed-162">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-162">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-163">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-163">Required.</span>
          </span>
          <span data-ttu-id="f82ed-164">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-164">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-165">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-165">Required.</span>
          </span>
          <span data-ttu-id="f82ed-166">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-166">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-167">Represents the Visual Basic less-than (&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-167">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-168">
            <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-168">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-169">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-170">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-170">Required.</span>
          </span>
          <span data-ttu-id="f82ed-171">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-171">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-172">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-172">Required.</span>
          </span>
          <span data-ttu-id="f82ed-173">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-173">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-174">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-174">Required.</span>
          </span>
          <span data-ttu-id="f82ed-175">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-175">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-176">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-176">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-177">
            <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-177">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-178">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-178">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-179">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-179">Required.</span>
          </span>
          <span data-ttu-id="f82ed-180">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-180">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-181">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-181">Required.</span>
          </span>
          <span data-ttu-id="f82ed-182">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-182">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-183">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-183">Required.</span>
          </span>
          <span data-ttu-id="f82ed-184">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-184">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-185">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-185">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-186">
            <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-186">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-187">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-187">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-188">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-188">Required.</span>
          </span>
          <span data-ttu-id="f82ed-189">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-189">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-190">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-190">Required.</span>
          </span>
          <span data-ttu-id="f82ed-191">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-191">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-192">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-192">Required.</span>
          </span>
          <span data-ttu-id="f82ed-193">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-193">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-194">Performs binary or text string comparison when given two strings.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-194">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="f82ed-195">Value</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-195">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-196">Condition</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-196">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="f82ed-197">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-197">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-198">
                  <paramref name="Left" /> est inférieur à <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-198">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="f82ed-199">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-199">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-200">
                  <paramref name="Left" /> est égal à <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-200">
                    <paramref name="Left" /> is equal to <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="f82ed-201">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-201">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="f82ed-202">
                  <paramref name="Left" /> est supérieur à <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="f82ed-202">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-203">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-203">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="f82ed-204">Lorsque l’opérateur d’égalité Visual Basic est utilisé pour comparer deux chaînes, il passe des chaînes à la <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> méthode ainsi qu’une valeur de `False` pour la `TextCompare` argument.</span><span class="sxs-lookup"><span data-stu-id="f82ed-204">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="f82ed-205">Il effectue une comparaison respectant la casse est ordinale ou en fonction de la culture actuelle, en fonction de la valeur de l’instruction.</span><span class="sxs-lookup"><span data-stu-id="f82ed-205">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-206">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-206">Required.</span>
          </span>
          <span data-ttu-id="f82ed-207">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-207">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-208">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-208">Required.</span>
          </span>
          <span data-ttu-id="f82ed-209">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-209">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-210">Represents the Visual Basic concatenation (&amp;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-210">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-211">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-211">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-212">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-212">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-213">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-213">Required.</span>
          </span>
          <span data-ttu-id="f82ed-214">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-214">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-215">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-215">Required.</span>
          </span>
          <span data-ttu-id="f82ed-216">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-216">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-217">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-217">Required.</span>
          </span>
          <span data-ttu-id="f82ed-218">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-218">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-219">Represents the overloaded Visual Basic equals (=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-219">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-220">The result of the overloaded equals operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-220">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="f82ed-221">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-221">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-222">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-223">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-223">Required.</span>
          </span>
          <span data-ttu-id="f82ed-224">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-224">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-225">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-225">Required.</span>
          </span>
          <span data-ttu-id="f82ed-226">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-226">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-227">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-227">Required.</span>
          </span>
          <span data-ttu-id="f82ed-228">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-228">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-229">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-229">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-230">The result of the overloaded greater-than operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-230">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="f82ed-231">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-231">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-232">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-232">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-233">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-233">Required.</span>
          </span>
          <span data-ttu-id="f82ed-234">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-234">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-235">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-235">Required.</span>
          </span>
          <span data-ttu-id="f82ed-236">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-236">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-237">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-237">Required.</span>
          </span>
          <span data-ttu-id="f82ed-238">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-238">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-239">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-239">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-240">The result of the overloaded greater-than or equal-to operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-240">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="f82ed-241">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-241">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-242">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-242">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-243">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-243">Required.</span>
          </span>
          <span data-ttu-id="f82ed-244">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-244">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-245">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-245">Required.</span>
          </span>
          <span data-ttu-id="f82ed-246">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-246">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-247">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-247">Required.</span>
          </span>
          <span data-ttu-id="f82ed-248">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-248">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-249">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-249">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-250">The result of the overloaded less-than operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-250">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="f82ed-251">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-251">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-252">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-252">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-253">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-253">Required.</span>
          </span>
          <span data-ttu-id="f82ed-254">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-254">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-255">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-255">Required.</span>
          </span>
          <span data-ttu-id="f82ed-256">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-256">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-257">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-257">Required.</span>
          </span>
          <span data-ttu-id="f82ed-258">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-258">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-259">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-259">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-260">The result of the overloaded less-than or equal-to operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-260">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="f82ed-261">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-261">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-262">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-262">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-263">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-263">Required.</span>
          </span>
          <span data-ttu-id="f82ed-264">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-264">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-265">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-265">Required.</span>
          </span>
          <span data-ttu-id="f82ed-266">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-266">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="f82ed-267">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-267">Required.</span>
          </span>
          <span data-ttu-id="f82ed-268">
            <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-268">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-269">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-269">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-270">The result of the overloaded not-equal operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-270">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="f82ed-271">
            <see langword="False" /> if operator overloading is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-271">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-272">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-273">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-273">Required.</span>
          </span>
          <span data-ttu-id="f82ed-274">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-274">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-275">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-275">Required.</span>
          </span>
          <span data-ttu-id="f82ed-276">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-276">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-277">Represents the Visual Basic division (/) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-277">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-278">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-278">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-279">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-279">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-280">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-280">Required.</span>
          </span>
          <span data-ttu-id="f82ed-281">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-281">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-282">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-282">Required.</span>
          </span>
          <span data-ttu-id="f82ed-283">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-283">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-284">Represents the Visual Basic exponent (^) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-284">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-285">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-285">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-286">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-286">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="f82ed-287">The user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-287">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="f82ed-288">Argument values to pass to the user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-288">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-289">Executes a late-bound evaluation of a user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-289">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="f82ed-290">This helper method is not meant to be called directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-290">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-291">The result returned from the user-defined operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-291">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-292">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-292">Required.</span>
          </span>
          <span data-ttu-id="f82ed-293">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-293">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-294">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-294">Required.</span>
          </span>
          <span data-ttu-id="f82ed-295">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-295">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-296">Represents the Visual Basic integer division (\\) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-296">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-297">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-297">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-298">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-298">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="f82ed-299">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-299">Required.</span>
          </span>
          <span data-ttu-id="f82ed-300">Integral numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-300">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="f82ed-301">The bit pattern to be shifted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-301">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="f82ed-302">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-302">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="f82ed-303">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-303">Required.</span>
          </span>
          <span data-ttu-id="f82ed-304">Numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-304">Numeric expression.</span>
          </span>
          <span data-ttu-id="f82ed-305">The number of bits to shift the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-305">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="f82ed-306">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-306">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-307">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-307">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-308">An integral numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-308">An integral numeric value.</span>
          </span>
          <span data-ttu-id="f82ed-309">The result of shifting the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-309">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="f82ed-310">The data type is the same as that of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-310">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-311">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-311">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="f82ed-312">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-312">Required.</span>
          </span>
          <span data-ttu-id="f82ed-313">Any expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-313">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="f82ed-314">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-314">Required.</span>
          </span>
          <span data-ttu-id="f82ed-315">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-315">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="f82ed-316">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-316">Required.</span>
          </span>
          <span data-ttu-id="f82ed-317">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-317">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-318">Represents the Visual Basic <see langword="Like" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-318">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-319">
            <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-319">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="f82ed-320">
            <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-320">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-321">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-321">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="f82ed-322">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-322">Required.</span>
          </span>
          <span data-ttu-id="f82ed-323">Any <see langword="String" /> expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-323">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="f82ed-324">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-324">Required.</span>
          </span>
          <span data-ttu-id="f82ed-325">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-325">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="f82ed-326">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-326">Required.</span>
          </span>
          <span data-ttu-id="f82ed-327">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-327">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-328">Represents the Visual Basic <see langword="Like" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-328">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-329">
            <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-329">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="f82ed-330">
            <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-330">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-331">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-332">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-332">Required.</span>
          </span>
          <span data-ttu-id="f82ed-333">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-333">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-334">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-334">Required.</span>
          </span>
          <span data-ttu-id="f82ed-335">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-335">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-336">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-336">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-337">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-337">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-338">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-338">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-339">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-339">Required.</span>
          </span>
          <span data-ttu-id="f82ed-340">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-340">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-341">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-341">Required.</span>
          </span>
          <span data-ttu-id="f82ed-342">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-342">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-343">Represents the Visual Basic multiply (\*) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-343">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-344">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-344">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-345">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-345">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="f82ed-346">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-346">Required.</span>
          </span>
          <span data-ttu-id="f82ed-347">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-347">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-348">Represents the Visual Basic unary minus (–) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-348">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-349">The negative value of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-349">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-350">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="f82ed-351">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-351">Required.</span>
          </span>
          <span data-ttu-id="f82ed-352">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-352">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-353">Represents the Visual Basic <see langword="Not" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-353">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-354">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-354">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="f82ed-355">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-355">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-356">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-357">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-357">Required.</span>
          </span>
          <span data-ttu-id="f82ed-358">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-358">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-359">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-359">Required.</span>
          </span>
          <span data-ttu-id="f82ed-360">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-360">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-361">Represents the Visual Basic <see langword="Or" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-361">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-362">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-362">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="f82ed-363">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-363">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-364">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-364">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="f82ed-365">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-365">Required.</span>
          </span>
          <span data-ttu-id="f82ed-366">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-366">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-367">Represents the Visual Basic unary plus (+) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-367">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-368">The value of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-368">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="f82ed-369">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-369">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-370">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="f82ed-371">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-371">Required.</span>
          </span>
          <span data-ttu-id="f82ed-372">Integral numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-372">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="f82ed-373">The bit pattern to be shifted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-373">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="f82ed-374">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-374">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="f82ed-375">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-375">Required.</span>
          </span>
          <span data-ttu-id="f82ed-376">Numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-376">Numeric expression.</span>
          </span>
          <span data-ttu-id="f82ed-377">The number of bits to shift the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-377">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="f82ed-378">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-378">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-379">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-379">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-380">An integral numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-380">An integral numeric value.</span>
          </span>
          <span data-ttu-id="f82ed-381">The result of shifting the bit pattern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-381">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="f82ed-382">The data type is the same as that of <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-382">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-383">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-384">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-384">Required.</span>
          </span>
          <span data-ttu-id="f82ed-385">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-385">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-386">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-386">Required.</span>
          </span>
          <span data-ttu-id="f82ed-387">Any numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-387">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-388">Represents the Visual Basic subtraction (–) operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-388">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-389">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-389">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-390">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-390">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="f82ed-391">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-391">Required.</span>
          </span>
          <span data-ttu-id="f82ed-392">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-392">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="f82ed-393">Required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-393">Required.</span>
          </span>
          <span data-ttu-id="f82ed-394">Any <see langword="Boolean" /> or numeric expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-394">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f82ed-395">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-395">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f82ed-396">A <see langword="Boolean" /> or numeric value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-396">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="f82ed-397">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-397">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="f82ed-398">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-398">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="f82ed-399">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f82ed-399">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f82ed-400">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="f82ed-400">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>