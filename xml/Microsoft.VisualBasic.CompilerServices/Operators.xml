<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ae70a65156b283f87027b6fdda2a363e67010fda" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39980944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4c325-101">Fournit des opérateurs mathématiques à liaison tardive, tels que <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> et <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, que le compilateur Visual Basic utilise en interne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4c325-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-102">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-103">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-103">Required.</span>
          </span>
          <span data-ttu-id="4c325-104">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-105">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-105">Required.</span>
          </span>
          <span data-ttu-id="4c325-106">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-107">Représente l'opérateur d'addition (+) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-108">Somme de <paramref name="Left" /> et <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-109">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-110">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-110">Required.</span>
          </span>
          <span data-ttu-id="4c325-111">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-112">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-112">Required.</span>
          </span>
          <span data-ttu-id="4c325-113">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-114">Représente l'opérateur <see langword="And" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-115">Pour les opérations <see langword="Boolean" />, <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="True" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="4c325-116">Pour les opérations au niveau du bit, 1 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 1 ; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-117">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-118">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-118">Required.</span>
          </span>
          <span data-ttu-id="4c325-119">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-120">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-120">Required.</span>
          </span>
          <span data-ttu-id="4c325-121">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-122">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-122">Required.</span>
          </span>
          <span data-ttu-id="4c325-123">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-124">Représente des opérateurs de comparaison en Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-125">
            <list type="table">
              <listheader>
                <term> Valeur </term>
                <description> Condition </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> est inférieur à <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> et <paramref name="Right" /> sont égaux.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> est supérieur à<paramref name="Right" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-125">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-126">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-126">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-127">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-127">Required.</span>
          </span>
          <span data-ttu-id="4c325-128">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-128">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-129">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-129">Required.</span>
          </span>
          <span data-ttu-id="4c325-130">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-130">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-131">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-131">Required.</span>
          </span>
          <span data-ttu-id="4c325-132">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-132">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-133">Représente l'opérateur d'égalité (=) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-133">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-134">
            <see langword="True" /> si <paramref name="Left" /> et <paramref name="Right" /> sont égales ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-134">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-135">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-136">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-136">Required.</span>
          </span>
          <span data-ttu-id="4c325-137">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-137">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-138">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-138">Required.</span>
          </span>
          <span data-ttu-id="4c325-139">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-139">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-140">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-140">Required.</span>
          </span>
          <span data-ttu-id="4c325-141">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-141">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-142">Représente l’opérateur supérieur à (&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-143">
            <see langword="True" /> si <paramref name="Left" /> est supérieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-143">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-144">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-145">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-145">Required.</span>
          </span>
          <span data-ttu-id="4c325-146">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-146">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-147">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-147">Required.</span>
          </span>
          <span data-ttu-id="4c325-148">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-148">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-149">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-149">Required.</span>
          </span>
          <span data-ttu-id="4c325-150">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-150">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-151">Représente l’opérateur supérieur ou égal à (&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-152">
            <see langword="True" /> si <paramref name="Left" /> est supérieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-152">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-153">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-154">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-154">Required.</span>
          </span>
          <span data-ttu-id="4c325-155">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-155">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-156">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-156">Required.</span>
          </span>
          <span data-ttu-id="4c325-157">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-157">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-158">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-158">Required.</span>
          </span>
          <span data-ttu-id="4c325-159">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-159">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-160">Représente l’opérateur inférieur à (&lt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-161">
            <see langword="True" /> si <paramref name="Left" /> est inférieur à <paramref name="Right" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-161">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-162">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-162">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-163">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-163">Required.</span>
          </span>
          <span data-ttu-id="4c325-164">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-164">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-165">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-165">Required.</span>
          </span>
          <span data-ttu-id="4c325-166">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-166">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-167">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-167">Required.</span>
          </span>
          <span data-ttu-id="4c325-168">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-168">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-169">Représente l’opérateur inférieur ou égale à (&lt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-170">
            <see langword="True" /> si <paramref name="Left" /> est inférieur ou égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-170">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-171">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-172">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-172">Required.</span>
          </span>
          <span data-ttu-id="4c325-173">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-173">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-174">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-174">Required.</span>
          </span>
          <span data-ttu-id="4c325-175">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-175">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-176">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-176">Required.</span>
          </span>
          <span data-ttu-id="4c325-177">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-177">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-178">Représente l’opérateur différent de (&lt;&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-179">
            <see langword="True" /> si <paramref name="Left" /> n'est pas égal à <paramref name="Right" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-179">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-180">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-180">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-181">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-181">Required.</span>
          </span>
          <span data-ttu-id="4c325-182">Toute expression <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-182">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-183">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-183">Required.</span>
          </span>
          <span data-ttu-id="4c325-184">Toute expression <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-184">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-185">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-185">Required.</span>
          </span>
          <span data-ttu-id="4c325-186">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-186">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-187">Effectue une comparaison entre deux chaînes de texte ou binaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-187">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-188">
            <list type="table">
              <listheader>
                <term> Valeur </term>
                <description> Condition </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> est inférieur à <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> est égal à <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> est supérieur à<paramref name="Right" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-188">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-189">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-189">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="4c325-190">Lorsque l’opérateur d’égalité de Visual Basic est utilisé pour comparer deux chaînes, il transmet les chaînes à le <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> méthode ainsi qu’une valeur de `False` pour le `TextCompare` argument.</span><span class="sxs-lookup"><span data-stu-id="4c325-190">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="4c325-191">Elle effectue une comparaison respectant la casse est ordinale ou en fonction de la culture actuelle, selon la valeur de l’instruction.</span><span class="sxs-lookup"><span data-stu-id="4c325-191">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-192">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-192">Required.</span>
          </span>
          <span data-ttu-id="4c325-193">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-193">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-194">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-194">Required.</span>
          </span>
          <span data-ttu-id="4c325-195">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-195">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-196">Représente l’opérateur de concaténation (&amp;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-197">Chaîne représentant la concaténation de <paramref name="Left" /> et <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-198">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-199">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-199">Required.</span>
          </span>
          <span data-ttu-id="4c325-200">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-200">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-201">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-201">Required.</span>
          </span>
          <span data-ttu-id="4c325-202">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-202">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-203">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-203">Required.</span>
          </span>
          <span data-ttu-id="4c325-204">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-204">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-205">Représente l'opérateur d'égalité (=) surchargé Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-206">Résultat de l'opérateur d'égalité surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-206">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="4c325-207">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-207">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-208">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-209">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-209">Required.</span>
          </span>
          <span data-ttu-id="4c325-210">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-210">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-211">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-211">Required.</span>
          </span>
          <span data-ttu-id="4c325-212">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-212">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-213">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-213">Required.</span>
          </span>
          <span data-ttu-id="4c325-214">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-214">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-215">Représente l’opérateur supérieur à surchargé (&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-216">Résultat de l'opérateur « supérieur à » surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-216">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="4c325-217">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-217">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-218">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-218">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-219">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-219">Required.</span>
          </span>
          <span data-ttu-id="4c325-220">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-220">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-221">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-221">Required.</span>
          </span>
          <span data-ttu-id="4c325-222">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-222">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-223">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-223">Required.</span>
          </span>
          <span data-ttu-id="4c325-224">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-224">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-225">Représente l’opérateur supérieur ou égal à surchargé (&gt;=) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-226">Résultat de l'opérateur « supérieur ou égal à » surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-226">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="4c325-227">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-227">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-228">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-228">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-229">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-229">Required.</span>
          </span>
          <span data-ttu-id="4c325-230">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-230">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-231">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-231">Required.</span>
          </span>
          <span data-ttu-id="4c325-232">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-232">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-233">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-233">Required.</span>
          </span>
          <span data-ttu-id="4c325-234">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-234">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-235">Représente l’opérateur inférieur à surchargé (&lt;=) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-236">Résultat de l'opérateur « inférieur à » surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-236">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="4c325-237">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-237">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-238">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-238">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-239">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-239">Required.</span>
          </span>
          <span data-ttu-id="4c325-240">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-240">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-241">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-241">Required.</span>
          </span>
          <span data-ttu-id="4c325-242">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-242">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-243">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-243">Required.</span>
          </span>
          <span data-ttu-id="4c325-244">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-244">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-245">Représente l’opérateur inférieur ou égal à surchargé (&lt;=) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-246">Résultat de l'opérateur « inférieur ou égal à » surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-246">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="4c325-247">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-247">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-248">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-248">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-249">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-249">Required.</span>
          </span>
          <span data-ttu-id="4c325-250">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-250">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-251">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-251">Required.</span>
          </span>
          <span data-ttu-id="4c325-252">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-252">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="4c325-253">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-253">Required.</span>
          </span>
          <span data-ttu-id="4c325-254">
            <see langword="True" /> pour effectuer une comparaison de chaînes ne respectant pas la casse ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-254">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-255">Représente l’opérateur différent de surchargé (&lt;&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-256">Résultat de l'opérateur de différence surchargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-256">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="4c325-257">
            <see langword="False" /> si la surcharge d'opérateur n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-257">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-258">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-259">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-259">Required.</span>
          </span>
          <span data-ttu-id="4c325-260">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-260">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-261">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-261">Required.</span>
          </span>
          <span data-ttu-id="4c325-262">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-262">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-263">Représente l'opérateur de division (/) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-263">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-264">Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" />, y compris tout élément restant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-265">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-265">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-266">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-266">Required.</span>
          </span>
          <span data-ttu-id="4c325-267">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-267">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-268">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-268">Required.</span>
          </span>
          <span data-ttu-id="4c325-269">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-269">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-270">Représente l'opérateur d'exposant (^) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-270">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-271">Le résultat de <paramref name="Left" /> est élevé à la puissance de <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-272">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="4c325-273">Opérateur défini par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-273">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="4c325-274">Valeurs d'argument à passer à l'opérateur défini par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-274">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-275">Exécute une évaluation à liaison tardive d'un opérateur défini par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-275">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="4c325-276">Cette méthode d'assistance n'est pas conçue pour être directement appelée depuis votre code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-276">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-277">Résultat retourné par l'opérateur défini par l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-277">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-278">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-278">Required.</span>
          </span>
          <span data-ttu-id="4c325-279">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-279">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-280">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-280">Required.</span>
          </span>
          <span data-ttu-id="4c325-281">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-281">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-282">Représente l’opérateur de division entier (\\) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-282">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-283">Quotient entier de <paramref name="Left" /> divisé par <paramref name="Right" /> qui abandonne tout élément restant et conserve uniquement la partie entière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-284">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-284">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="4c325-285">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-285">Required.</span>
          </span>
          <span data-ttu-id="4c325-286">Expression numérique entière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-286">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="4c325-287">Modèle binaire qui doit être décalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-287">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="4c325-288">Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="4c325-289">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-289">Required.</span>
          </span>
          <span data-ttu-id="4c325-290">Expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-290">Numeric expression.</span>
          </span>
          <span data-ttu-id="4c325-291">Nombre de bits pour décaler le modèle binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-291">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="4c325-292">Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-293">Représente l’opérateur de décalage arithmétique vers la gauche (&lt;&lt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-294">Valeur numérique entière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-294">An integral numeric value.</span>
          </span>
          <span data-ttu-id="4c325-295">Résultat du décalage du modèle binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-295">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="4c325-296">Le type de données est le même que celui de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-296">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-297">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="4c325-298">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-298">Required.</span>
          </span>
          <span data-ttu-id="4c325-299">Toute expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-299">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="4c325-300">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-300">Required.</span>
          </span>
          <span data-ttu-id="4c325-301">Toute expression de chaîne conforme aux critères spéciaux décrits dans Opérateur Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="4c325-302">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-302">Required.</span>
          </span>
          <span data-ttu-id="4c325-303">Valeur <see cref="T:Microsoft.VisualBasic.CompareMethod" /> qui spécifie que l'opération utilise une comparaison binaire ou une comparaison textuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-304">Représente l'opérateur <see langword="Like" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-305">
            <see langword="True" /> si la représentation de chaîne de la valeur de <paramref name="Source" /> est conforme au modèle contenu dans <paramref name="Pattern" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-305">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="4c325-306">
            <see langword="True" /> si <paramref name="Source" /> et <paramref name="Pattern" /> sont <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-306">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-307">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="4c325-308">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-308">Required.</span>
          </span>
          <span data-ttu-id="4c325-309">Toute expression <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-309">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="4c325-310">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-310">Required.</span>
          </span>
          <span data-ttu-id="4c325-311">Toute expression <see langword="String" /> conforme aux critères spéciaux décrits dans Opérateur Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="4c325-312">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-312">Required.</span>
          </span>
          <span data-ttu-id="4c325-313">Valeur <see cref="T:Microsoft.VisualBasic.CompareMethod" /> qui spécifie que l'opération utilise une comparaison binaire ou une comparaison textuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-314">Représente l'opérateur <see langword="Like" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-315">
            <see langword="True" /> si la valeur de <paramref name="Source" /> est conforme au modèle contenu dans <paramref name="Pattern" /> ; sinon, <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-315">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="4c325-316">
            <see langword="True" /> si <paramref name="Source" /> et <paramref name="Pattern" /> sont vides.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-316">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-317">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-317">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-318">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-318">Required.</span>
          </span>
          <span data-ttu-id="4c325-319">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-319">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-320">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-320">Required.</span>
          </span>
          <span data-ttu-id="4c325-321">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-321">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-322">Représente l'opérateur <see langword="Mod" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-323">Le reste après <paramref name="Left" /> est divisé par <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-324">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-324">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-325">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-325">Required.</span>
          </span>
          <span data-ttu-id="4c325-326">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-326">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-327">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-327">Required.</span>
          </span>
          <span data-ttu-id="4c325-328">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-328">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-329">Représente l'opérateur de multiplication (\*) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-329">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-330">Produit de <paramref name="Left" /> et <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-331">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="4c325-332">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-332">Required.</span>
          </span>
          <span data-ttu-id="4c325-333">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-333">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-334">Représente l'opérateur moins unaire (–) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-334">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-335">Valeur négative de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-335">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-336">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-336">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="4c325-337">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-337">Required.</span>
          </span>
          <span data-ttu-id="4c325-338">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-338">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-339">Représente l'opérateur <see langword="Not" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-340">Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Operand" /> est <see langword="True" /> ; sinon, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="4c325-341">Pour les opérations au niveau du bit, 1 si <paramref name="Operand" /> est 0; sinon, 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-342">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-342">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-343">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-343">Required.</span>
          </span>
          <span data-ttu-id="4c325-344">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-344">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-345">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-345">Required.</span>
          </span>
          <span data-ttu-id="4c325-346">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-346">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-347">Représente l'opérateur <see langword="Or" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-348">Pour les opérations <see langword="Boolean" />, <see langword="False" /> si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur <see langword="False" /> ; sinon, <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="4c325-349">Pour les opérations au niveau du bit, 0 si <paramref name="Left" /> et <paramref name="Right" /> ont tous deux la valeur 0 ; sinon, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-350">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="4c325-351">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-351">Required.</span>
          </span>
          <span data-ttu-id="4c325-352">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-352">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-353">Représente l'opérateur plus unaire (–) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-353">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-354">la valeur de la propriété <paramref name="Operand" /> ;</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-354">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="4c325-355">(Le signe de <paramref name="Operand" /> est inchangé.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-356">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="4c325-357">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-357">Required.</span>
          </span>
          <span data-ttu-id="4c325-358">Expression numérique entière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-358">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="4c325-359">Modèle binaire qui doit être décalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-359">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="4c325-360">Le type de données doit être un type entier (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" /> ou <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="4c325-361">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-361">Required.</span>
          </span>
          <span data-ttu-id="4c325-362">Expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-362">Numeric expression.</span>
          </span>
          <span data-ttu-id="4c325-363">Nombre de bits pour décaler le modèle binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-363">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="4c325-364">Le type de données doit être <see langword="Integer" /> ou étendu à <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-365">Représente l’opérateur de décalage arithmétique vers la droite (&gt;&gt;) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-366">Valeur numérique entière.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-366">An integral numeric value.</span>
          </span>
          <span data-ttu-id="4c325-367">Résultat du décalage du modèle binaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-367">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="4c325-368">Le type de données est le même que celui de <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-368">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-369">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-369">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-370">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-370">Required.</span>
          </span>
          <span data-ttu-id="4c325-371">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-371">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-372">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-372">Required.</span>
          </span>
          <span data-ttu-id="4c325-373">Toute expression numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-374">Représente l'opérateur de soustraction (–) Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-374">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-375">Différence entre <paramref name="Left" /> et <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-376">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="4c325-377">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-377">Required.</span>
          </span>
          <span data-ttu-id="4c325-378">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-378">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="4c325-379">Obligatoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-379">Required.</span>
          </span>
          <span data-ttu-id="4c325-380">Toute expression <see langword="Boolean" /> ou numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-380">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4c325-381">Représente l'opérateur <see langword="Xor" /> Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4c325-382">
            <see langword="Boolean" /> ou valeur numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-382">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="4c325-383">Pour une comparaison <see langword="Boolean" />, la valeur de retour est l'exclusion logique (disjonction logique exclusive) de deux valeurs <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="4c325-384">Pour les opérations au niveau du bit (numériques), la valeur de retour est une valeur numérique représentant l'exclusion d'opérations de bits (disjonction d'opérations de bits exclusive) de deux modèles binaires numériques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="4c325-385">Pour plus d’informations, consultez [Xor, opérateur](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4c325-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4c325-386">Cette classe prend en charge le compilateur Visual Basic et n’est pas destinée à être utilisée directement depuis votre code.</span><span class="sxs-lookup"><span data-stu-id="4c325-386">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>