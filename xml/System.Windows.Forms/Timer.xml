<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Timer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b891ec5d-4b60-42d7-ac21-95eab9e3ef8240a2cccedc77420d9f12114c1bbb35ea3866d05b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40a2cccedc77420d9f12114c1bbb35ea3866d05b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">058bfa0b75b777d3171411d35da8f11617fc06b0</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/04/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Implements a timer that raises an event at user-defined intervals.</source>
          <target state="translated">Implémente une minuterie déclenchant un événement selon un intervalle défini par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>This timer is optimized for use in Windows Forms applications and must be used in a window.</source>
          <target state="translated">L’utilisation de cette minuterie a été optimisée pour les applications Windows Forms et doit avoir lieu dans une fenêtre.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is used to raise an event at user-defined intervals.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> est utilisé pour déclencher un événement à intervalles définis par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</source>
          <target state="translated">Cette minuterie Windows est conçue pour un environnement monothread où les threads d’interface utilisateur sont utilisées pour effectuer le traitement.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</source>
          <target state="translated">Il requiert que le code utilisateur possède une pompe de messages de l’interface utilisateur disponible toujours fonctionner à partir du même thread ou marshaler l’appel vers un autre thread.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When you use this timer, use the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event to perform a polling operation or to display a splash screen for a specified period of time.</source>
          <target state="translated">Lorsque vous utilisez cette minuterie, utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> événement pour effectuer une opération d’interrogation ou pour afficher un écran de démarrage pour une période spécifiée.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>Whenever the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property is greater than zero, the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event is raised at intervals based on the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property setting.</source>
          <target state="translated">Chaque fois que le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> est supérieure à zéro, le <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> événement est déclenché à des intervalles en fonction de la <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> paramètre de propriété.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>This class provides methods to set the interval, and to start and stop the timer.</source>
          <target state="translated">Cette classe fournit des méthodes pour définir l’intervalle et pour démarrer et arrêter le minuteur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</source>
          <target state="translated">Le composant Timer Windows Forms est monothread et est limité à une précision de 55 millisecondes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>If you require a multithreaded timer with greater accuracy, use the <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Timers&gt;</ph> namespace.</source>
          <target state="translated">Si vous avez besoin d’une minuterie multithread avec une précision supérieure, utilisez la <ph id="ph1">&lt;xref:System.Timers.Timer&gt;</ph> classe dans le <ph id="ph2">&lt;xref:System.Timers&gt;</ph> espace de noms.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.Timer">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à exécuter.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.Timer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsqu’une nouvelle minuterie est créée, il est désactivé ; Autrement dit, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> a la valeur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Pour activer le minuteur, appelez le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> méthode ou un ensemble <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> à <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</source>
          <target state="translated">Si la minuterie est désactivée et la minuterie est hors de portée, la minuterie sera supprimée lorsque le garbage collection se produit.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor">
          <source>If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</source>
          <target state="translated">Si la minuterie est activée, même si elle est hors de portée, il n’est pas soumis au garbage collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that represents the container for the timer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> représentant le conteneur de la minuterie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> class together with the specified container.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> avec le conteneur spécifié.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> constructor enables you to associate a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with any <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> constructeur vous permet d’associer un <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> avec n’importe quelle <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>By associating the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> like this, you hand over control of the lifetime of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">En associant le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> de cette façon, vous cédez le contrôle de la durée de vie de la <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> à la <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</source>
          <target state="translated">Cela peut être utile si vous utilisez un nombre de composants dans votre application et que vous souhaitez supprimer simultanément tous les.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>For example, if you associate a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>, and a <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> with a <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>, calling <ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> on the <ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph> will force disposal of all of these components as well.</source>
          <target state="translated">Par exemple, si vous associez un <ph id="ph1">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph>, un <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>et un <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> avec un <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>, l’appel <ph id="ph5">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> sur la <ph id="ph6">&lt;xref:System.ComponentModel.Container&gt;</ph> entraînera la suppression de tous ces composants également.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>When a new timer is created, it is disabled; that is, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lorsqu’une nouvelle minuterie est créée, il est désactivé ; Autrement dit, <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> a la valeur <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>To enable the timer, call the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method or set <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Pour activer le minuteur, appelez le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> méthode ou un ensemble <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> à <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)">
          <source>This instance will exist until its container releases it to garbage collection.</source>
          <target state="translated">Cette instance existe jusqu'à ce que son conteneur la libère pour le garbage collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> to release only the unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> pour libérer uniquement les ressources non managées.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Disposes of the resources, other than memory, used by the timer.</source>
          <target state="translated">Libère les ressources (autres que la mémoire) utilisées par la minuterie.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> when you are finished using the timer.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> lorsque vous avez terminé à l’aide de la minuterie.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> method leaves the timer in an unusable state.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> méthode rend la minuterie dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>After you call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la minuterie afin que la mémoire occupée puisse être récupérée par le garbage collection.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> before you release your last reference to the timer.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Dispose%2A&gt;</ph> avant de libérer votre dernière référence à la minuterie.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Dispose(System.Boolean)">
          <source>Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</source>
          <target state="translated">Dans le cas contraire, les ressources utilisées par la minuterie ne seront pas libérées tant que le garbage collection appelle le destructeur de l’objet timer.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Gets or sets whether the timer is running.</source>
          <target state="translated">Obtient ou définit si la minuterie est en cours d'exécution.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the timer is currently enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la minuterie est activée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The timer is not subject to garbage collection when the value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Le minuteur n’est pas soumis au garbage collection lorsque la valeur est <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Appel de la <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> méthode est le même que le paramètre <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> à <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>Likewise, calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> method is the same as setting <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">De même, l’appel du <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> méthode est le même que le paramètre <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> à <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>The following example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Enabled">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à s’exécuter.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Interval">
          <source>Gets or sets the time, in milliseconds, before the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">Obtient ou définit l'heure, en millisecondes, avant le déclenchement de l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> par rapport à la dernière occurrence de l'événement <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> specifying the number of milliseconds before the <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event is raised relative to the last occurrence of the <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui spécifie le nombre de millisecondes avant le déclenchement de l'événement <ph id="ph2">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> par rapport à la dernière occurrence de l'événement <ph id="ph3">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The value cannot be less than one.</source>
          <target state="translated">La valeur ne peut pas être inférieure à 1.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>To get the number of seconds in the interval, divide this number by 1,000.</source>
          <target state="translated">Pour obtenir le nombre de secondes dans l’intervalle, divisez ce nombre par 1 000.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Interval">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à s’exécuter.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This is always <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>.</source>
          <target state="translated">Il s'agit toujours de <ph id="ph1">&lt;see cref="F:System.EventArgs.Empty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Timer.Tick" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>This method is called for each timer tick.</source>
          <target state="translated">Cette méthode est appelée pour chaque cycle d’horloge.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>It calls any methods that are added through <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>.</source>
          <target state="translated">Il appelle les méthodes qui sont ajoutés via <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>If you are inheriting from <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, you can override this method.</source>
          <target state="translated">Si vous héritez de <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, vous pouvez substituer cette méthode.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> in a derived class, make sure that you call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> dans une classe dérivée, assurez-vous que vous appelez la classe de base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Start">
          <source>Starts the timer.</source>
          <target state="translated">Démarre la minuterie.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>You can also start the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Vous pouvez également démarrer la minuterie en définissant le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Start">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à s’exécuter.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Stops the timer.</source>
          <target state="translated">Arrête la minuterie.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>You can also stop the timer by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Vous pouvez également arrêter le minuteur en définissant le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Enabled%2A&gt;</ph> propriété <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> object may be enabled and disabled multiple times within the same application session.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> objet peut être activé et désactivé plusieurs fois dans la même session d’application.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> after you have disabled a <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> by calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to restart the interrupted interval.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> une fois que vous avez désactivé un <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> en appelant <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> entraîne le <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> pour reprendre l’intervalle interrompu.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> is set for a 5000-millisecond interval, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> at around 3000 milliseconds, calling <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> will cause the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> to wait 5000 milliseconds before raising the <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event.</source>
          <target state="translated">Si votre <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> est défini pour un intervalle de 5 000 millisecondes, et que vous appelez <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> à environ 3000 millisecondes, en appelant <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Start%2A&gt;</ph> entraîne la <ph id="ph4">&lt;xref:System.Windows.Forms.Timer&gt;</ph> d’attente de 5 000 millisecondes avant de déclencher la <ph id="ph5">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>Calling Stop on any <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> within a Windows Forms application can cause messages from other <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components in the application to be processed immediately, because all <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components operate on the main application thread.</source>
          <target state="translated">Appel d’arrêt sur n’importe quel <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> dans les Windows Forms application peut entraîner des messages à partir d’autres <ph id="ph2">&lt;xref:System.Windows.Forms.Timer&gt;</ph> composants dans l’application pour être traité immédiatement, car tous les <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph> composants fonctionnent sur le thread d’application principal.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If you have two <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> on the first <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, your application may receive an event callback for the second component first.</source>
          <target state="translated">Si vous avez deux <ph id="ph1">&lt;xref:System.Windows.Forms.Timer&gt;</ph> composants, la valeur 700 millisecondes et une valeur 500 millisecondes, et que vous appelez <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Stop%2A&gt;</ph> sur le premier <ph id="ph3">&lt;xref:System.Windows.Forms.Timer&gt;</ph>, votre application peut recevoir en premier un rappel d’événement pour le second composant.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>If this proves problematic, consider using the <ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph> class in the <ph id="ph2">&lt;xref:System.Threading&gt;</ph> namespace instead.</source>
          <target state="translated">Si cela pose problème, envisagez d’utiliser le <ph id="ph1">&lt;xref:System.Threading.Timer&gt;</ph> classe dans le <ph id="ph2">&lt;xref:System.Threading&gt;</ph> espace de noms à la place.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.Stop">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à s’exécuter.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.Timer.Tag">
          <source>Gets or sets an arbitrary string representing some type of user state.</source>
          <target state="translated">Obtient ou définit une chaîne arbitraire représentant un certain type d'état d'utilisateur.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.Timer.Tag">
          <source>An arbitrary string representing some type of user state.</source>
          <target state="translated">Chaîne arbitraire représentant un certain type d'état d'utilisateur.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Occurs when the specified timer interval has elapsed and the timer is enabled.</source>
          <target state="translated">Se produit lorsque l'intervalle spécifié est écoulé et que la minuterie est activée.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>Calling the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> class from within the <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> event repeatedly.</source>
          <target state="translated">Appelant le <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A&gt;</ph> méthode sur le <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> classe à partir la <ph id="ph3">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> événement peut ne pas fonctionner comme prévu, les en tant que l’affichage de la boîte de dialogue d’assertion, boîte peut-être provoquer Windows déclencher le <ph id="ph4">&lt;xref:System.Windows.Forms.Timer.Tick&gt;</ph> événement à plusieurs reprises.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>We recommend that you refrain from testing assertions within this event, and use the <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph> methods instead.</source>
          <target state="translated">Nous vous recommandons d’éviter de tester les assertions dans cet événement et d’utiliser le <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteIf%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Debug.WriteLine%2A&gt;</ph>, ou <ph id="ph4">&lt;xref:System.Diagnostics.Debug.WriteLineIf%2A&gt;</ph> méthodes à la place.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>The following code example implements a simple interval timer, which sets off an alarm every five seconds.</source>
          <target state="translated">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.Timer.Tick">
          <source>When the alarm occurs, a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</source>
          <target state="translated">Lorsque l’alerte se produit, un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à s’exécuter.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">Retourne une chaîne qui représente <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.Timer.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui représente le <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Timer" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.Timer.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph> method returns a string that includes the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> property.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Timer.ToString%2A&gt;</ph> méthode retourne une chaîne qui inclut la valeur de la <ph id="ph2">&lt;xref:System.Windows.Forms.Timer.Interval%2A&gt;</ph> propriété.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>