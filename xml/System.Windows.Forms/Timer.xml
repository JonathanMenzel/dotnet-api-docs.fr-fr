<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="caceac98899c219ecb24daa0bd9a49b7bbbf2f4b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37507467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fb532-101">Implémente une minuterie déclenchant un événement selon un intervalle défini par l'utilisateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb532-101">Implements a timer that raises an event at user-defined intervals.</span>
      </span>
      <span data-ttu-id="fb532-102">L’utilisation de cette minuterie a été optimisée pour les applications Windows Forms et doit avoir lieu dans une fenêtre.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fb532-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-103">Un <xref:System.Windows.Forms.Timer> est utilisé pour déclencher un événement à intervalles définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="fb532-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="fb532-104">Ce minuteur de Windows est conçu pour un environnement monothread où les threads d’interface utilisateur sont utilisées pour effectuer le traitement.</span><span class="sxs-lookup"><span data-stu-id="fb532-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="fb532-105">Il requiert que le code utilisateur ont une pompe de messages de l’interface utilisateur disponible et toujours fonctionner à partir du même thread ou marshaler l’appel vers un autre thread.</span><span class="sxs-lookup"><span data-stu-id="fb532-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="fb532-106">Lorsque vous utilisez ce minuteur, utilisez le <xref:System.Windows.Forms.Timer.Tick> événement pour effectuer une opération d’interrogation ou à afficher un écran de démarrage pour une période spécifiée.</span><span class="sxs-lookup"><span data-stu-id="fb532-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="fb532-107">Chaque fois que le <xref:System.Windows.Forms.Timer.Enabled%2A> propriété est définie sur `true` et le <xref:System.Windows.Forms.Timer.Interval%2A> propriété est supérieure à zéro, le <xref:System.Windows.Forms.Timer.Tick> événement est déclenché à des intervalles selon le <xref:System.Windows.Forms.Timer.Interval%2A> paramètre de propriété.</span><span class="sxs-lookup"><span data-stu-id="fb532-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="fb532-108">Cette classe fournit des méthodes pour définir l’intervalle et pour démarrer et arrêter le minuteur.</span><span class="sxs-lookup"><span data-stu-id="fb532-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb532-109">Le composant Windows Forms Timer est monothread et est limité à une précision de 55 millisecondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="fb532-110">Si vous avez besoin d’une minuterie multithread avec une précision supérieure, utilisez la <xref:System.Timers.Timer> classe dans le <xref:System.Timers> espace de noms.</span><span class="sxs-lookup"><span data-stu-id="fb532-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-111">L’exemple suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-112">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et qu’il demande à l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fb532-113">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb532-114">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-115">Lorsqu’une nouvelle minuterie est créée, il est désactivé ; Autrement dit, <xref:System.Windows.Forms.Timer.Enabled%2A> est défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="fb532-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="fb532-116">Pour activer le minuteur, appelez le <xref:System.Windows.Forms.Timer.Start%2A> méthode ou un ensemble <xref:System.Windows.Forms.Timer.Enabled%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="fb532-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="fb532-117">Si la minuterie est désactivée et la minuterie est hors de portée, la minuterie sera supprimée lorsque le garbage collection se produit.</span><span class="sxs-lookup"><span data-stu-id="fb532-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="fb532-118">Si la minuterie est activée, même si elle est hors de portée, il n’est pas soumise au garbage collection.</span><span class="sxs-lookup"><span data-stu-id="fb532-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="fb532-119">
            <see cref="T:System.ComponentModel.IContainer" /> représentant le conteneur de la minuterie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb532-120">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Timer" /> avec le conteneur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-121">Le <xref:System.Windows.Forms.Timer> constructeur vous permet d’associer un <xref:System.Windows.Forms.Timer> avec n’importe quel <xref:System.ComponentModel.Container> objet.</span><span class="sxs-lookup"><span data-stu-id="fb532-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="fb532-122">En associant le <xref:System.Windows.Forms.Timer> de cette façon, vous cédez le contrôle de la durée de vie de la <xref:System.Windows.Forms.Timer> à la <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="fb532-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="fb532-123">Cela peut être utile si vous utilisez un certain nombre de composants dans votre application et que vous souhaitez supprimer simultanément tous les.</span><span class="sxs-lookup"><span data-stu-id="fb532-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="fb532-124">Par exemple, si vous associez un <xref:System.Windows.Forms.ToolTip>, un <xref:System.Windows.Forms.ImageList>et un <xref:System.Windows.Forms.Timer> avec un <xref:System.ComponentModel.Container>, l’appel <xref:System.ComponentModel.Container.Dispose%2A> sur la <xref:System.ComponentModel.Container> forcer la suppression de tous ces composants également.</span><span class="sxs-lookup"><span data-stu-id="fb532-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="fb532-125">Lorsqu’une nouvelle minuterie est créée, il est désactivé ; Autrement dit, <xref:System.Windows.Forms.Timer.Enabled%2A> est défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="fb532-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="fb532-126">Pour activer le minuteur, appelez le <xref:System.Windows.Forms.Timer.Start%2A> méthode ou un ensemble <xref:System.Windows.Forms.Timer.Enabled%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="fb532-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="fb532-127">Cette instance existe jusqu'à ce que son conteneur la libère pour le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="fb532-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="fb532-128">
            <see langword="true" /> pour libérer les ressources managées et non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-128">
              <see langword="true" /> to release both managed and unmanaged resources.</span>
          </span>
          <span data-ttu-id="fb532-129">
            <see langword="false" /> pour libérer uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-129">
              <see langword="false" /> to release only the unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb532-130">Libère les ressources (autres que la mémoire) utilisées par la minuterie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-130">Disposes of the resources, other than memory, used by the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-131">Appelez <xref:System.Windows.Forms.Timer.Dispose%2A> lorsque vous avez terminé à l’aide de la minuterie.</span><span class="sxs-lookup"><span data-stu-id="fb532-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="fb532-132">Le <xref:System.Windows.Forms.Timer.Dispose%2A> méthode laisse le minuteur dans un état inutilisable.</span><span class="sxs-lookup"><span data-stu-id="fb532-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="fb532-133">Après avoir appelé <xref:System.Windows.Forms.Timer.Dispose%2A>, vous devez libérer toutes les références à la minuterie afin que la mémoire occupée peut être récupérée par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="fb532-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb532-134">Appelez toujours <xref:System.Windows.Forms.Timer.Dispose%2A> avant de libérer votre dernière référence à la minuterie.</span><span class="sxs-lookup"><span data-stu-id="fb532-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="fb532-135">Sinon, les ressources à l’aide de la minuterie ne seront pas libérées tant que le garbage collection appelle le destructeur de l’objet timer.</span><span class="sxs-lookup"><span data-stu-id="fb532-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb532-136">Obtient ou définit si la minuterie est en cours d'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-136">Gets or sets whether the timer is running.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb532-137">
            <see langword="true" /> si la minuterie est activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-137">
              <see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fb532-138">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-138">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-139">La minuterie n’est pas soumise au garbage collection lorsque la valeur est `true`.</span><span class="sxs-lookup"><span data-stu-id="fb532-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="fb532-140">Appel de la <xref:System.Windows.Forms.Timer.Start%2A> méthode est équivalent au paramètre <xref:System.Windows.Forms.Timer.Enabled%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="fb532-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="fb532-141">De même, l’appel la <xref:System.Windows.Forms.Timer.Stop%2A> méthode est équivalent au paramètre <xref:System.Windows.Forms.Timer.Enabled%2A> à `false`.</span><span class="sxs-lookup"><span data-stu-id="fb532-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-142">L’exemple suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-143">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et invite l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb532-144">Obtient ou définit l'heure, en millisecondes, avant le déclenchement de l'événement <see cref="E:System.Windows.Forms.Timer.Tick" /> par rapport à la dernière occurrence de l'événement <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb532-145">
            <see cref="T:System.Int32" /> qui spécifie le nombre de millisecondes avant le déclenchement de l'événement <see cref="E:System.Windows.Forms.Timer.Tick" /> par rapport à la dernière occurrence de l'événement <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
          <span data-ttu-id="fb532-146">La valeur ne peut pas être inférieure à 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-146">The value cannot be less than one.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-147">Pour obtenir le nombre de secondes dans l’intervalle, divise ce nombre par 1 000.</span><span class="sxs-lookup"><span data-stu-id="fb532-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-148">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-149">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et invite l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="fb532-150">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="fb532-151">Il s'agit toujours de <see cref="F:System.EventArgs.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-151">This is always <see cref="F:System.EventArgs.Empty" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fb532-152">Déclenche l'événement <see cref="E:System.Windows.Forms.Timer.Tick" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-153">Cette méthode est appelée pour chaque cycle d’horloge.</span><span class="sxs-lookup"><span data-stu-id="fb532-153">This method is called for each timer tick.</span></span> <span data-ttu-id="fb532-154">Il appelle des méthodes qui sont ajoutés via <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="fb532-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="fb532-155">Si vous héritez de <xref:System.Windows.Forms.Timer>, vous pouvez substituer cette méthode.</span><span class="sxs-lookup"><span data-stu-id="fb532-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="fb532-156">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="fb532-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fb532-157">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fb532-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fb532-158">
            <para>Lors de la substitution <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> dans une classe dérivée, assurez-vous que vous appelez la classe de base <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-158">
              <para>When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb532-159">Démarre la minuterie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-159">Starts the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-160">Vous pouvez également démarrer la minuterie en définissant le <xref:System.Windows.Forms.Timer.Enabled%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="fb532-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-161">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-162">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et invite l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb532-163">Arrête la minuterie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-163">Stops the timer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-164">Vous pouvez également arrêter le minuteur en définissant le <xref:System.Windows.Forms.Timer.Enabled%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="fb532-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="fb532-165">Un <xref:System.Windows.Forms.Timer> objet peut être activé et désactivé plusieurs fois dans la même session d’application.</span><span class="sxs-lookup"><span data-stu-id="fb532-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="fb532-166">Appel <xref:System.Windows.Forms.Timer.Start%2A> une fois que vous avez désactivé un <xref:System.Windows.Forms.Timer> en appelant <xref:System.Windows.Forms.Timer.Stop%2A> entraîne le <xref:System.Windows.Forms.Timer> à reprendre l’intervalle interrompu.</span><span class="sxs-lookup"><span data-stu-id="fb532-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="fb532-167">Si votre <xref:System.Windows.Forms.Timer> est défini pour un intervalle de 5 000 millisecondes, et que vous appelez <xref:System.Windows.Forms.Timer.Stop%2A> à environ 3 000 millisecondes, appelant <xref:System.Windows.Forms.Timer.Start%2A> entraîne le <xref:System.Windows.Forms.Timer> d’attente de 5 000 millisecondes avant de déclencher le <xref:System.Windows.Forms.Timer.Tick> événement.</span><span class="sxs-lookup"><span data-stu-id="fb532-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb532-168">Appel de Stop sur n’importe quel <xref:System.Windows.Forms.Timer> au sein d’un formulaire Windows application peut entraîner des messages à partir d’autres <xref:System.Windows.Forms.Timer> composants dans l’application pour être traité immédiatement, car tous les <xref:System.Windows.Forms.Timer> composants fonctionnent sur le thread principal de l’application.</span><span class="sxs-lookup"><span data-stu-id="fb532-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="fb532-169">Si vous avez deux <xref:System.Windows.Forms.Timer> composants, la valeur 700 millisecondes et une valeur 500 millisecondes, et vous appelez <xref:System.Windows.Forms.Timer.Stop%2A> sur le premier <xref:System.Windows.Forms.Timer>, votre application peut recevoir un rappel d’événement pour le second composant en premier.</span><span class="sxs-lookup"><span data-stu-id="fb532-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="fb532-170">Si cela pose problème, envisagez d’utiliser le <xref:System.Threading.Timer> classe dans le <xref:System.Threading> espace de noms à la place.</span><span class="sxs-lookup"><span data-stu-id="fb532-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-171">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-172">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et invite l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb532-173">Obtient ou définit une chaîne arbitraire représentant un certain type d'état d'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-173">Gets or sets an arbitrary string representing some type of user state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fb532-174">Chaîne arbitraire représentant un certain type d'état d'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-174">An arbitrary string representing some type of user state.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fb532-175">Se produit lorsque l'intervalle spécifié est écoulé et que la minuterie est activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-176">Appelant le <xref:System.Diagnostics.Debug.Assert%2A> méthode sur le <xref:System.Diagnostics.Debug> classe depuis le <xref:System.Windows.Forms.Timer.Tick> événements peuvent ne pas fonctionnent comme prévu, en affichant la boîte de dialogue d’assertion, boîte de risque de Windows déclencher le <xref:System.Windows.Forms.Timer.Tick> événement à plusieurs reprises.</span><span class="sxs-lookup"><span data-stu-id="fb532-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="fb532-177">Nous vous recommandons d’éviter de tester les assertions dans cet événement et d’utiliser le <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, ou <xref:System.Diagnostics.Debug.WriteLineIf%2A> méthodes à la place.</span><span class="sxs-lookup"><span data-stu-id="fb532-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="fb532-178">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="fb532-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb532-179">L’exemple de code suivant implémente une minuterie simple qui déclenche une alarme toutes les cinq secondes.</span><span class="sxs-lookup"><span data-stu-id="fb532-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="fb532-180">Lorsque l’alarme se déclenche, un <xref:System.Windows.Forms.MessageBox> affiche le nombre de fois où l’alarme a démarré et invite l’utilisateur si la minuterie doit continuer à exécuter.</span><span class="sxs-lookup"><span data-stu-id="fb532-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fb532-181">Retourne une chaîne qui représente <see cref="T:System.Windows.Forms.Timer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fb532-182">Chaîne qui représente le <see cref="T:System.Windows.Forms.Timer" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fb532-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb532-183">Le <xref:System.Windows.Forms.Timer.ToString%2A> méthode retourne une chaîne qui inclut la valeur de la <xref:System.Windows.Forms.Timer.Interval%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="fb532-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>