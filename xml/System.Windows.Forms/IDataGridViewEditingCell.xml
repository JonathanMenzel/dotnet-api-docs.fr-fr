<Type Name="IDataGridViewEditingCell" FullName="System.Windows.Forms.IDataGridViewEditingCell">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66bd955d543f0299c4b1d7fa21ef1d2b8a722ea5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37510970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingCell" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingCell" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingCell" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingCell" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingCell" />
  <TypeSignature Language="F#" Value="type IDataGridViewEditingCell = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit les fonctionnalités communes pour une cellule qui autorise la manipulation de sa valeur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface est implémentée par les classes telles que <xref:System.Windows.Forms.DataGridViewCheckBoxCell> qui en dérivent <xref:System.Windows.Forms.DataGridViewCell> et fournit une interface utilisateur (IU) pour spécifier des valeurs sans héberger un contrôle d’édition. L’interface utilisateur dans ce cas s’affiche que la cellule soit en mode édition.  
  
 Autres types de cellules, telles que <xref:System.Windows.Forms.DataGridViewButtonCell>, fournir une interface utilisateur, mais ne stockent pas de valeurs spécifié par l’utilisateur. Dans ce cas, le type de cellule n’implémente pas <xref:System.Windows.Forms.IDataGridViewEditingCell> ou héberger un contrôle d’édition.  
  
 Les types de cellules qui affichent une modification de contrôlent lorsque la cellule est en mode édition, tel que <xref:System.Windows.Forms.DataGridViewTextBoxCell>, n’implémentent pas <xref:System.Windows.Forms.IDataGridViewEditingCell> mais plutôt pour fournir une classe auxiliaire qui implémente <xref:System.Windows.Forms.IDataGridViewEditingControl>. Par exemple, <xref:System.Windows.Forms.DataGridViewTextBoxCell> fournit un <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl> qui dérive de la <xref:System.Windows.Forms.TextBox> contrôle et implémente <xref:System.Windows.Forms.IDataGridViewEditingControl>. Dans ce cas, la cellule <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> propriété est définie sur une <xref:System.Type> objet représentant le type de contrôle de modification. Pour plus d’informations sur l’implémentation <xref:System.Windows.Forms.IDataGridViewEditingControl>, consultez [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="EditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingCellFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingCellFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingCellFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellFormattedValue : obj with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur mise en forme de la cellule.</summary>
        <value>
          <see cref="T:System.Object" /> qui contient la valeur de la cellule.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur mise en forme représente la valeur tel qu’il est affiché dans l’interface utilisateur de la cellule. La valeur mise en forme peut être différente en valeur absolue et en type de données de la valeur réelle contenue dans la cellule.  
  
 Les implémentations de cette propriété retournent généralement une valeur récupérée en appelant le <xref:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue%2A> (méthode) et en passant le <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Formatting> valeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingCellValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingCellValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingCellValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingCellValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingCellValueChanged { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EditingCellValueChanged : bool with get, set" Usage="System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la valeur de la cellule a été modifiée.</summary>
        <value>
          <see langword="true" /> si la valeur de la cellule a été modifiée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est définie sur `true` pour indiquer que la valeur de cellule a été modifiée et que le son interface utilisateur (IU) devra peut-être être mis à jour pour refléter ce changement de valeur. La cellule ou la table propriétaire doit réinitialiser cette propriété à `false` après une mise à jour.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingCellFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingCellFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingCellFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingCellFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="abstract member GetEditingCellFormattedValue : System.Windows.Forms.DataGridViewDataErrorContexts -&gt; obj" Usage="iDataGridViewEditingCell.GetEditingCellFormattedValue context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context">Une combinaison d'opérations de bits de valeurs <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> qui spécifie le contexte dans lequel les données sont exigées.</param>
        <summary>Récupère la valeur mise en forme de la cellule.</summary>
        <returns>
          <see cref="T:System.Object" /> qui représente la version mise en forme du contenu de la cellule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur mise en forme représente la valeur tel qu’il est affiché dans l’interface utilisateur de la cellule. La valeur mise en forme peut être différente en valeur absolue et en type de données de la valeur réelle contenue dans la cellule.  
  
 Pour définir la valeur mise en forme de la cellule, utilisez la <xref:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingCellForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingCellForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingCellForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingCell.PrepareEditingCellForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingCellForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingCellForEdit(bool selectAll);" />
      <MemberSignature Language="F#" Value="abstract member PrepareEditingCellForEdit : bool -&gt; unit" Usage="iDataGridViewEditingCell.PrepareEditingCellForEdit selectAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <see langword="true" /> pour sélectionner le contenu de la cellule ; sinon, <see langword="false" />.</param>
        <summary>Prépare la cellule actuellement sélectionnée pour la modification</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objectif de cette méthode consiste à préparer la cellule et son contenu pour la modification. Par exemple, vous souhaiterez peut-être placer le point d’insertion à la fin du contenu de la cellule ou de modifier la façon dont le contenu est aligné.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>