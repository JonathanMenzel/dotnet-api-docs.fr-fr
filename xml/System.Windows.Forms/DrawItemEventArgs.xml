<Type Name="DrawItemEventArgs" FullName="System.Windows.Forms.DrawItemEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8df3ef872e7736931bad4d04a8af75fd8048137" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37569418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawItemEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawItemEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawItemEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawItemEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawItemEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see langword="DrawItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `DrawItem` événement est déclenché par des contrôles de dessin propriétaire, tel que le <xref:System.Windows.Forms.ListBox> et <xref:System.Windows.Forms.ComboBox> contrôles. Il contient toutes les informations nécessaires à l’utilisateur peindre l’élément spécifié, y compris l’index de l’élément, le <xref:System.Drawing.Rectangle>et le <xref:System.Drawing.Graphics> sur lequel le dessin doit être effectué.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> en taille réelle de la propriété pour indiquer que les éléments dessinés sont résolus et les <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum » dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DrawItemEventHandler" />
    <altmember cref="T:System.Windows.Forms.ComboBox" />
    <altmember cref="T:System.Windows.Forms.ListBox" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
      </Parameters>
      <Docs>
        <param name="graphics">Surface <see cref="T:System.Drawing.Graphics" /> sur laquelle dessiner.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à utiliser, généralement la propriété <see cref="T:System.Drawing.Font" /> du contrôle parent.</param>
        <param name="rect">Limites <see cref="T:System.Drawing.Rectangle" /> à l'intérieur desquelles dessiner.</param>
        <param name="index">Valeur d'index <see cref="T:System.Windows.Forms.Control.ControlCollection" /> de l'élément qui est en train d'être dessiné.</param>
        <param name="state">Informations <see cref="T:System.Windows.Forms.DrawItemState" /> du contrôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> pour le contrôle spécifié avec la police spécifiée, l'état, la surface sur laquelle dessiner et les limites à l'intérieur desquelles dessiner.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawItemEventArgs (System.Drawing.Graphics graphics, System.Drawing.Font font, System.Drawing.Rectangle rect, int index, System.Windows.Forms.DrawItemState state, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Drawing.Font font, valuetype System.Drawing.Rectangle rect, int32 index, valuetype System.Windows.Forms.DrawItemState state, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DrawItemState,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawItemEventArgs(System::Drawing::Graphics ^ graphics, System::Drawing::Font ^ font, System::Drawing::Rectangle rect, int index, System::Windows::Forms::DrawItemState state, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawItemEventArgs : System.Drawing.Graphics * System.Drawing.Font * System.Drawing.Rectangle * int * System.Windows.Forms.DrawItemState * System.Drawing.Color * System.Drawing.Color -&gt; System.Windows.Forms.DrawItemEventArgs" Usage="new System.Windows.Forms.DrawItemEventArgs (graphics, font, rect, index, state, foreColor, backColor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="state" Type="System.Windows.Forms.DrawItemState" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="graphics">Surface <see cref="T:System.Drawing.Graphics" /> sur laquelle dessiner.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à utiliser, généralement la propriété <see cref="T:System.Drawing.Font" /> du contrôle parent.</param>
        <param name="rect">Limites <see cref="T:System.Drawing.Rectangle" /> à l'intérieur desquelles dessiner.</param>
        <param name="index">Valeur d'index <see cref="T:System.Windows.Forms.Control.ControlCollection" /> de l'élément qui est en train d'être dessiné.</param>
        <param name="state">Informations <see cref="T:System.Windows.Forms.DrawItemState" /> du contrôle.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" /> de premier plan utilisée pour dessiner le contrôle.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" /> d'arrière-plan utilisée pour dessiner le contrôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> pour le contrôle spécifié avec la police spécifiée, l'état, la couleur de premier plan, la couleur d'arrière-plan, la surface sur laquelle dessiner et les limites à l'intérieur desquelles dessiner.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la couleur d'arrière-plan de l'élément qui est en train d'être dessiné.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> d'arrière-plan de l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’état de l’élément est <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, le <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> est défini sur <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Si l’état de l’élément n’est pas <xref:System.Windows.Forms.DrawItemState.Selected>, le <xref:System.Windows.Forms.DrawItemEventArgs.BackColor%2A> propriété est définie sur <xref:System.Drawing.SystemColors.Window%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Dans la mesure où le  hérite de la classe , vous pouvez également utiliser cette propriété si le  est associé à un formulaire. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement. Ce rapport vous permet de vous apprendre lorsque l’événement se produit et peut vous aider à déboguer.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ListBox> qui est nommé `ListBox1`. Assurez-vous que le Gestionnaire d’événements est associé le <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawItemEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le rectangle qui représente les limites de l'élément qui est en train d'être dessiné.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> qui représente les limites de l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> en taille réelle de la propriété pour indiquer que les éléments dessinés sont résolus et les <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum » dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public virtual void DrawBackground ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground();" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : unit -&gt; unit&#xA;override this.DrawBackground : unit -&gt; unit" Usage="drawItemEventArgs.DrawBackground " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dessine l'arrière-plan dans les limites spécifiées dans le constructeur <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" /> avec la couleur appropriée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’élément dessiné est <xref:System.Windows.Forms.DrawItemState.Selected>, l’arrière-plan est dessiné avec le texte mis en surbrillance.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriété pour spécifier que les éléments dessinés sont de taille fixe et le <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements qui est défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum », dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawBackground" /> méthode de la classe de base.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocusRectangle">
      <MemberSignature Language="C#" Value="public virtual void DrawFocusRectangle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawFocusRectangle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawFocusRectangle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawFocusRectangle();" />
      <MemberSignature Language="F#" Value="abstract member DrawFocusRectangle : unit -&gt; unit&#xA;override this.DrawFocusRectangle : unit -&gt; unit" Usage="drawItemEventArgs.DrawFocusRectangle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dessine un rectangle de focus dans les limites spécifiées dans le constructeur <see cref="Overload:System.Windows.Forms.DrawItemEventArgs.#ctor" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’élément dessiné a <xref:System.Windows.Forms.DrawItemState.Focus>, le rectangle de focus est dessiné.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriété pour spécifier que les éléments dessinés sont de taille fixe et le <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements qui est défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum », dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> dans une classe dérivée, veillez à appeler la <see cref="M:System.Windows.Forms.DrawItemEventArgs.DrawFocusRectangle" /> méthode de la classe de base.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font" Usage="System.Windows.Forms.DrawItemEventArgs.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la police assignée à l'élément qui est en train d'être dessiné.</summary>
        <value>
          <see cref="T:System.Drawing.Font" /> assigné à l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un suggérée <xref:System.Drawing.Font>, généralement le <xref:System.Windows.Forms.Control.Font%2A> propriété du contrôle parent.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriété pour spécifier que les éléments dessinés sont de taille fixe et le <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements qui est défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum », dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color" Usage="System.Windows.Forms.DrawItemEventArgs.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la couleur de premier plan de l'élément qui est en train d'être dessiné.</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> de premier plan de l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’état de l’élément est <xref:System.Windows.Forms.DrawItemState.Selected?displayProperty=nameWithType>, le <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> est défini sur <xref:System.Drawing.SystemColors.HighlightText%2A?displayProperty=nameWithType>. Si l’état de l’élément n’est pas <xref:System.Windows.Forms.DrawItemState.Selected>, le <xref:System.Windows.Forms.DrawItemEventArgs.ForeColor%2A> propriété est définie sur <xref:System.Drawing.SystemColors.WindowText%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Dans la mesure où le  hérite de la classe , vous pouvez également utiliser cette propriété si le  est associé à un formulaire. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement. Ce rapport vous permet de vous apprendre lorsque l’événement se produit et peut vous aider à déboguer.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ListBox> qui est nommé `ListBox1`. Assurez-vous que le Gestionnaire d’événements est associé le <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawItemEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la surface graphique sur laquelle dessiner l'élément.</summary>
        <value>Surface <see cref="T:System.Drawing.Graphics" /> sur laquelle dessiner l'élément.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriété pour spécifier que les éléments dessinés sont de taille fixe et le <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements qui est défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum », dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawItemEventArgs.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.DrawItemEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur d'index de l'élément qui est en train d'être dessiné.</summary>
        <value>Valeur numérique représentant la valeur <see cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" /> de l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne le <xref:System.Windows.Forms.Control.ControlCollection.Item%2A> valeur de l’élément qui est dessiné le <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=nameWithType>. Cette propriété peut retourner -1 si itemswere supprimé de la liste.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer owner-drawn <xref:System.Windows.Forms.ListBox> éléments. Le code utilise le <xref:System.Windows.Forms.ListBox.DrawMode%2A> propriété pour spécifier que les éléments dessinés sont de taille fixe et le <xref:System.Windows.Forms.ListBox.DrawItem> événement pour effectuer le dessin de chaque élément dans le <xref:System.Windows.Forms.ListBox>. L’exemple de code utilise les propriétés et méthodes de la <xref:System.Windows.Forms.DrawItemEventArgs> classe passée en tant que paramètre au gestionnaire d’événements pour dessiner les éléments. Cet exemple suppose qu’un <xref:System.Windows.Forms.ListBox> contrôle nommé `listBox1` a été ajouté à un formulaire et que le <xref:System.Windows.Forms.ListBox.DrawItem> événement est géré par le Gestionnaire d’événements qui est défini dans l’exemple de code. L’exemple suppose également que les éléments ont été ajoutés à la <xref:System.Windows.Forms.ListBox> avec le texte « Apple », « Orange » et « Plum », dans cet ordre.  
  
 [!code-csharp[ListBox.DrawMode#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListBox.DrawMode/CS/form1.cs#1)]
 [!code-vb[ListBox.DrawMode#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListBox.DrawMode/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ControlCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DrawItemState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawItemState State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As DrawItemState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DrawItemState State { System::Windows::Forms::DrawItemState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DrawItemState" Usage="System.Windows.Forms.DrawItemEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'état de l'élément qui est en train d'être dessiné.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DrawItemState" /> qui représente l'état de l'élément qui est en train d'être dessiné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette valeur de propriété peut être une combinaison de la <xref:System.Windows.Forms.DrawItemState> membres de l’énumération. Les membres peuvent être combinées à l’aide des opérateurs au niveau du bit.  
  
   
  
## Examples  
 Dans la mesure où le  hérite de la classe , vous pouvez également utiliser cette propriété si le  est associé à un formulaire. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement. Ce rapport vous permet de vous apprendre lorsque l’événement se produit et peut vous aider à déboguer.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ListBox> qui est nommé `ListBox1`. Assurez-vous que le Gestionnaire d’événements est associé le <xref:System.Windows.Forms.ListBox.DrawItem?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#153)]
 [!code-vb[System.Windows.Forms.EventExamples#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#153)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DrawItemState" />
      </Docs>
    </Member>
  </Members>
</Type>