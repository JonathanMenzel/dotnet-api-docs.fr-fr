<Type Name="IMessageFilter" FullName="System.Windows.Forms.IMessageFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6efedc5dd9602f566f706ee3eabe76ea52a3ffaf" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520419" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMessageFilter" />
  <TypeSignature Language="F#" Value="type IMessageFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit une interface de filtre de messages.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface permet à une application de capturer un message avant sa distribution à un contrôle ou un formulaire.  
  
 Une classe qui implémente le <xref:System.Windows.Forms.IMessageFilter> interface peut être ajouté à la pompe de messages de l’application pour filtrer un message ou effectuer d’autres opérations avant que le message est distribué à un formulaire ou un contrôle. Pour ajouter le filtre de messages à la pompe de messages d’une application, utilisez le <xref:System.Windows.Forms.Application.AddMessageFilter%2A> méthode dans la <xref:System.Windows.Forms.Application> classe.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.IMessageFilter" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
  </Docs>
  <Members>
    <Member MemberName="PreFilterMessage">
      <MemberSignature Language="C#" Value="public bool PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreFilterMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PreFilterMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member PreFilterMessage :  -&gt; bool" Usage="iMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Message à distribuer. Il est impossible de modifier ce message.</param>
        <summary>Filtre un message avant sa distribution.</summary>
        <returns>
          <see langword="true" /> pour filtrer le message et empêcher sa distribution ; <see langword="false" /> pour permettre au message de continuer jusqu'au prochain filtre ou contrôle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> pour filtrer un message avant sa distribution à un contrôle ou un formulaire. Par exemple, pour arrêter la <xref:System.Windows.Forms.Control.Click> l’événement d’un <xref:System.Windows.Forms.Button> contrôle de parvenir au contrôle, vous implémentez le <xref:System.Windows.Forms.IMessageFilter.PreFilterMessage%2A> méthode et retournez un `true` valeur lorsque le <xref:System.Windows.Forms.Control.Click> message s’affiche. Vous pouvez également utiliser cette méthode pour effectuer un travail qui peuvent s’avérer nécessaires avant que le message est distribué.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Requiert <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode" /> autorisation au moment de la liaison.</permission>
      </Docs>
    </Member>
  </Members>
</Type>