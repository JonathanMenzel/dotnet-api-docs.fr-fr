<Type Name="DataGridViewRow" FullName="System.Windows.Forms.DataGridViewRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="430b1902a6f52ef7e4269d4c97de022b61f41c7c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37513629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataGridViewRow : System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewRow extends System.Windows.Forms.DataGridViewBand" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewRow&#xA;Inherits DataGridViewBand" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewRow : System::Windows::Forms::DataGridViewBand" />
  <TypeSignature Language="F#" Value="type DataGridViewRow = class&#xA;    inherit DataGridViewBand" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewBand</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataGridViewRowConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a row in a <see cref="T:System.Windows.Forms.DataGridView" /> control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridViewRow> classe représente une ligne dans un <xref:System.Windows.Forms.DataGridView> contrôle. Vous pouvez récupérer des lignes via la <xref:System.Windows.Forms.DataGridView.Rows%2A> et <xref:System.Windows.Forms.DataGridView.SelectedRows%2A> collections du contrôle.  
  
 Contrairement à un <xref:System.Windows.Forms.DataGridViewColumn>, un <xref:System.Windows.Forms.DataGridViewRow> physiquement contient une collection de toutes les cellules de cette ligne. Vous pouvez accéder à cette collection via la <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> propriété.  
  
 Le <xref:System.Windows.Forms.DataGridViewRow> classe est utilisée pour accéder aux éléments de cellule, ainsi que pour ajuster l’apparence et le comportement de l’interface utilisateur de ligne (IU), telles que la hauteur et la cellule de style. En règle générale, vous pouvez toutes les lignes ou la plupart des lignes dans le contrôle de partager les mêmes caractéristiques. Pour définir des styles de cellules pour toutes les lignes dans le contrôle, définissez les propriétés de l’objet retourné par la <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType> propriété. Pour définir des styles pour les lignes en alternance, utilisez le <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> propriété. Pour plus d’informations sur les styles de cellules, consultez [Styles de cellules dans le contrôle DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md). Vous pouvez également utiliser le <xref:System.Windows.Forms.DataGridView.RowTemplate%2A?displayProperty=nameWithType> propriété à définir une ligne qui servira de base pour toutes les lignes ajoutées au contrôle.  
  
 Le <xref:System.Windows.Forms.DataGridView> contrôle partagera <xref:System.Windows.Forms.DataGridViewRow> objets à travers plusieurs lignes de données chaque fois que possible afin d’éviter la dégradation des performances. Sauf si vous travaillez avec grandes quantités de données et qui connaissent des problèmes de performances, vous pouvez généralement ignorer le partage de lignes. Une ligne partagée est indiquée par un <xref:System.Windows.Forms.DataGridViewBand.Index%2A> valeur de propriété de -1. Certains membres de la <xref:System.Windows.Forms.DataGridViewRow> classe ne peut pas être utilisée avec des lignes partagées, mais vous pouvez annuler le partage d’une ligne en y accédant via le <xref:System.Windows.Forms.DataGridViewRowCollection.Item%2A?displayProperty=nameWithType> propriété. Lignes peuvent également devenir non partagées par d’autres moyens. Pour accéder à une ligne sans annuler son partage, utilisez le <xref:System.Windows.Forms.DataGridViewRowCollection.SharedRow%2A?displayProperty=nameWithType> (méthode). Lorsque vous travaillez avec grandes quantités de données, soyez conscient de la façon dont les lignes sont partagées et non partagés pour éviter une dégradation des performances. Pour plus d’informations, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce type. Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : manipuler les lignes dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lorsque vous dérivez de <see cref="T:System.Windows.Forms.DataGridViewRow" /> et ajoutez de nouvelles propriétés à la classe dérivée, veillez à remplacer le <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> méthode pour copier les nouvelles propriétés lors des opérations de clonage. Vous devez également appeler la classe de base <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> méthode afin que les propriétés de la classe de base soient copiées dans la nouvelle cellule.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewColumn" />
    <altmember cref="M:System.Windows.Forms.DataGridViewRow.Clone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewRow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> class without using a template.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise la ligne dans son état vide.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.DataGridViewRow.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> assigned to the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <value>Le <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> affectée à la <see cref="T:System.Windows.Forms.DataGridViewRow" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour contrôler l’instance retournée par cette méthode, substituez le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> (méthode).  
  
 Si aucun <xref:System.Windows.Forms.AccessibleObject> n'est actuellement assigné au contrôle, une nouvelle instance est créée.  
  
> [!NOTE]
>  Pour obtenir ou définir le <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> propriété, vous devez ajouter une référence à la `Accessibility` assembly installé avec le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 Pour plus d’informations sur les objets accessibles, consultez la section « Active Accessibility » de MSDN Library à le [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" />
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AdjustRowHeaderBorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustRowHeaderBorderStyle(class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, class System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle(System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, dataGridViewAdvancedBorderStylePlaceholder As DataGridViewAdvancedBorderStyle, singleVerticalBorderAdded As Boolean, singleHorizontalBorderAdded As Boolean, isFirstDisplayedRow As Boolean, isLastVisibleRow As Boolean) As DataGridViewAdvancedBorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ AdjustRowHeaderBorderStyle(System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStyleInput, System::Windows::Forms::DataGridViewAdvancedBorderStyle ^ dataGridViewAdvancedBorderStylePlaceholder, bool singleVerticalBorderAdded, bool singleHorizontalBorderAdded, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle&#xA;override this.AdjustRowHeaderBorderStyle : System.Windows.Forms.DataGridViewAdvancedBorderStyle * System.Windows.Forms.DataGridViewAdvancedBorderStyle * bool * bool * bool * bool -&gt; System.Windows.Forms.DataGridViewAdvancedBorderStyle" Usage="dataGridViewRow.AdjustRowHeaderBorderStyle (dataGridViewAdvancedBorderStyleInput, dataGridViewAdvancedBorderStylePlaceholder, singleVerticalBorderAdded, singleHorizontalBorderAdded, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewAdvancedBorderStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewAdvancedBorderStyleInput" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="dataGridViewAdvancedBorderStylePlaceholder" Type="System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <Parameter Name="singleVerticalBorderAdded" Type="System.Boolean" />
        <Parameter Name="singleHorizontalBorderAdded" Type="System.Boolean" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataGridViewAdvancedBorderStyleInput">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the row header border style to modify.</param>
        <param name="dataGridViewAdvancedBorderStylePlaceholder">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that is used to store intermediate changes to the row header border style.</param>
        <param name="singleVerticalBorderAdded">
          <see langword="true" /> to add a single vertical border to the result; otherwise, <see langword="false" />.</param>
        <param name="singleHorizontalBorderAdded">
          <see langword="true" /> to add a single horizontal border to the result; otherwise, <see langword="false" />.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> if the row is the first row displayed in the <see cref="T:System.Windows.Forms.DataGridView" />; otherwise, <see langword="false" />.</param>
        <param name="isLastVisibleRow">
          <see langword="true" /> if the row is the last row in the <see cref="T:System.Windows.Forms.DataGridView" /> that has its <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</param>
        <summary>Modifies an input row header border style according to the specified criteria.</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" /> that represents the new border style used.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridView> appels de contrôle en interne le <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> méthode pour déterminer l’apparence des bordures pour les cellules d’en-tête de ligne. Le <xref:System.Windows.Forms.DataGridView> contrôle utilise généralement la valeur de la <xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A> propriété pour le `dataGridViewAdvancedBorderStyleInput` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.DataGridViewRow.AdjustRowHeaderBorderStyle%2A> méthode pour personnaliser les bordures des cellules d’en-tête de ligne. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.DataGridViewAdvancedBorderStyle> classe.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/CS/advancedborderstyle.cs#30)]
 [!code-vb[System.Windows.Forms.DataGridViewAdvancedBorderStyle#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewAdvancedBorderStyle/VB/advancedborderstyle.vb#30)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Substituez cette méthode si vous souhaitez personnaliser l’apparence des bordures de cellules d’en-tête de ligne.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewCellCollection Cells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellCollection Cells" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cells As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewCellCollection ^ Cells { System::Windows::Forms::DataGridViewCellCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cells : System.Windows.Forms.DataGridViewCellCollection" Usage="System.Windows.Forms.DataGridViewRow.Cells" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of cells that populate the row.</summary>
        <value>Un <see cref="T:System.Windows.Forms.DataGridViewCellCollection" /> qui contient toutes les cellules dans la ligne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la ligne ne contient pas de cellules lors de l’accès à cette propriété, un nouveau vide <xref:System.Windows.Forms.DataGridViewCellCollection> sera créé par un appel à la <xref:System.Windows.Forms.DataGridViewRow.CreateCellsInstance%2A> (méthode).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.Cells%2A> propriété pour définir la valeur d’une cellule dans la ligne. Cet exemple de code fait partie d’un exemple de code plus complet fourni dans [Comment : manipuler les lignes dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#211)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#211)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#211](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#211)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; obj" Usage="dataGridViewRow.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an exact copy of this row.</summary>
        <returns>An <see cref="T:System.Object" /> that represents the cloned <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> méthode copie la ligne et sa propriété valeurs, mais ne copie pas les valeurs de cellule qui contient la ligne. Pour plus d’informations sur la copie des valeurs de cellule lors du clonage d’une ligne, consultez la section exemple.  
  
 Remplacer le <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> méthode chaque fois que vous dérivez de <xref:System.Windows.Forms.DataGridViewRow> et ajoutez de nouvelles propriétés à la classe dérivée.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewRow.Clone%2A> méthode pour copier une ligne, puis remplit la copie avec les valeurs de cellule à partir de la ligne d’origine.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/cs/misc2.cs#60)]
 [!code-vb[System.Windows.Forms.DataGridViewMisc2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewMisc2/vb/misc2.vb#60)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> dans une classe dérivée, appelez la classe de base <see cref="M:System.Windows.Forms.DataGridViewRow.Clone" /> méthode afin que les propriétés de la classe de base sont copiées vers la nouvelle ligne et veillez à copier également les valeurs de toutes les propriétés qui ont été ajoutées à la classe dérivée.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.DataGridViewRow.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the shortcut menu for the row.</summary>
        <value>Le <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associé actuel <see cref="T:System.Windows.Forms.DataGridViewRow" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété indique le menu contextuel qui s’affiche lorsque l’utilisateur clique sur la ligne, sauf si le <xref:System.Windows.Forms.DataGridView> contrôle <xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded> événement ou la ligne <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> propriété remplace le menu contextuel de la cellule spécifique qui a été cliqué.  
  
 Lorsque le <xref:System.Windows.Forms.DataGridView> contrôle <xref:System.Windows.Forms.DataGridView.DataSource%2A> propriété est définie ou son <xref:System.Windows.Forms.DataGridView.VirtualMode%2A> propriété est `true`, obtenant la valeur de la <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> propriété déclenche le <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> événement du contrôle et retourne la valeur de la <xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=nameWithType> la propriété spécifiée de l’événement gestionnaire. S’il n’y a aucun gestionnaire pour l’événement, obtention de la valeur de la <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> propriété retourne la valeur précédemment spécifiée ou sa valeur par défaut `null`.  
  
 Gérer le <xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded> événement est particulièrement utile lorsque vous travaillez avec grandes quantités de données pour éviter une dégradation des performances lors de la définition de la ligne <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> valeur pour plusieurs lignes. Pour plus d’informations, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Modification de cette propriété déclenche le <xref:System.Windows.Forms.DataGridView.RowContextMenuStripChanged> événement sur le propriétaire <xref:System.Windows.Forms.DataGridView>, s’il en existe.  
  
 Si la ligne actuelle est partagée, utilisez la <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> méthode plutôt que de l’obtention de la valeur de cette propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewColumn.ContextMenuStrip%2A?displayProperty=nameWithType> propriété, qui est presque identique à la <xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A> propriété de la <xref:System.Windows.Forms.DataGridViewRow> classe. Cet exemple de code fait partie d’un exemple de code plus complet fourni dans la <xref:System.Windows.Forms.DataGridViewColumn> classe.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewColumnDemo.cpp#130)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewColumnDemo.cs#130)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewcolumndemo.vb#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When getting the value of this property, the row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripChanged" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DataSource" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
        <altmember cref="T:System.Windows.Forms.ContextMenuStrip" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="dataGridViewRow.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new accessible object for the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</summary>
        <returns>A new <see cref="T:System.Windows.Forms.DataGridViewRow.DataGridViewRowAccessibleObject" /> for the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous n'avez pas explicitement appelé la méthode <xref:System.Windows.Forms.DataGridViewRow.CreateAccessibilityInstance%2A>, elle sera appelée lorsque la propriété <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A> sera référencée.  
  
> [!NOTE]
>  Pour obtenir ou définir <xref:System.Windows.Forms.DataGridViewRow.AccessibilityObject%2A>, vous devez ajouter une référence à la `Accessibility` assembly installé avec le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCells">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Resets the cells in the row.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView -&gt; unit" Usage="dataGridViewRow.CreateCells dataGridView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
      </Parameters>
      <Docs>
        <param name="dataGridView">A <see cref="T:System.Windows.Forms.DataGridView" /> that acts as a template for cell styles.</param>
        <summary>Clears the existing cells and sets their template according to the supplied <see cref="T:System.Windows.Forms.DataGridView" /> template.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode efface de la ligne <xref:System.Windows.Forms.DataGridViewCellCollection> et le réinitialise avec la <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> propriété de chaque colonne de la `dataGridView` paramètre. Par conséquent, la ligne adopte l’apparence et le comportement d’une ligne à partir de la `dataGridView` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dataGridView" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A row that already belongs to the <see cref="T:System.Windows.Forms.DataGridView" /> was added.  -or-  A column that has no cell template was added.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCellCollection.Clear" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateCells">
      <MemberSignature Language="C#" Value="public void CreateCells (System.Windows.Forms.DataGridView dataGridView, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCells(class System.Windows.Forms.DataGridView dataGridView, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateCells(System::Windows::Forms::DataGridView ^ dataGridView, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.CreateCells : System.Windows.Forms.DataGridView * obj[] -&gt; unit" Usage="dataGridViewRow.CreateCells (dataGridView, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridView" Type="System.Windows.Forms.DataGridView" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dataGridView">A <see cref="T:System.Windows.Forms.DataGridView" /> that acts as a template for cell styles.</param>
        <param name="values">An array of objects that initialize the reset cells.</param>
        <summary>Clears the existing cells and sets their template and values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode efface de la ligne <xref:System.Windows.Forms.DataGridViewCellCollection> et le réinitialise avec la <xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A> propriété de chaque colonne de la `dataGridView` paramètre. Par conséquent, la ligne adopte l’apparence et le comportement d’une ligne à partir de la `dataGridView` paramètre.  
  
 S’il existe plusieurs éléments dans le `values` tableau que de cellules à initialiser, les éléments supplémentaires seront ignorés. S’il existe moins d’éléments que nécessaire, les cellules restantes sans correspondance conserveront leurs valeurs initiales par défaut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Either of the parameters is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A row that already belongs to the <see cref="T:System.Windows.Forms.DataGridView" /> was added.  -or-  A column that has no cell template was added.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
        <altmember cref="P:System.Windows.Forms.DataGridViewColumn.CellTemplate" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateCellsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.DataGridViewCellCollection CreateCellsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCellsInstance () As DataGridViewCellCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::DataGridViewCellCollection ^ CreateCellsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection&#xA;override this.CreateCellsInstance : unit -&gt; System.Windows.Forms.DataGridViewCellCollection" Usage="dataGridViewRow.CreateCellsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a new collection of cells based on this row.</summary>
        <returns>The newly created <see cref="T:System.Windows.Forms.DataGridViewCellCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un vide <xref:System.Windows.Forms.DataGridViewCellCollection> avec le <xref:System.Windows.Forms.BaseCollection.Count%2A> propriété est définie sur 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>En règle générale, les classes dérivées doivent implémenter leur propre version de la <see cref="M:System.Windows.Forms.DataGridViewRow.CreateCellsInstance" /> (méthode) et ne pas appeler la version de la classe de base.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataBoundItem">
      <MemberSignature Language="C#" Value="public object DataBoundItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataBoundItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBoundItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataBoundItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBoundItem : obj" Usage="System.Windows.Forms.DataGridViewRow.DataBoundItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data-bound object that populated the row.</summary>
        <value>La limite de données <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’accès aux objets liés aux données directement par le biais d’objets de ligne est utile lorsque vous n’avez pas d’un accès direct à la source de données contenant les objets. Il est également pratique lorsque vous souhaitez manipuler des objets liés dans les lignes sélectionnées ou aux lignes passées comme arguments aux gestionnaires d’événements.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewRow.DataBoundItem%2A> propriété pour accéder à un objet métier lié à une ligne. Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : accès aux objets liés à des lignes DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-access-objects-bound-to-windows-forms-datagridview-rows.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/CS/datagridviewobjectbinding.cs#10)]
 [!code-vb[System.Windows.Forms.DataGridViewObjectBinding#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewObjectBinding/VB/datagridviewobjectbinding.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCellStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultCellStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ DefaultCellStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); void set(System::Windows::Forms::DataGridViewCellStyle ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCellStyle : System.Windows.Forms.DataGridViewCellStyle with get, set" Usage="System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the default styles for the row, which are used to render cells in the row unless the styles are overridden.</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> à appliquer comme style par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridView> contrôle affiche ses cellules à l’aide de styles indiqués par la cellule <xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A> propriété, qui hérite des styles d’autres propriétés de type <xref:System.Windows.Forms.DataGridViewCellStyle>. Pour les cellules de cette ligne, les styles spécifiés via le <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A> propriété remplacent ceux spécifiés par le biais le <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>, et <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> propriétés, mais sont remplacés par les styles spécifiés via le <xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=nameWithType> propriété.  
  
 Pour plus d’informations, consultez [Styles de cellules dans le contrôle DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 Lors de l’obtention de cette propriété, un <xref:System.Windows.Forms.DataGridViewCellStyle> avec par défaut les valeurs seront créées si la propriété n’a pas déjà été accédée. Cela peut entraîner un impact sur les performances lors de l’obtention de cette propriété pour le nombre de lignes. Si possible, utilisez un seul <xref:System.Windows.Forms.DataGridViewCellStyle> pour définir cette propriété pour plusieurs lignes. Pour plus d’informations, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette propriété dans un <xref:System.Windows.Forms.DataGridView> conçu principalement pour l’affichage de contrôle. Dans cet exemple, l’apparence visuelle du contrôle personnalisé de plusieurs façons, et le contrôle est configuré pour l’interactivité limitée. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.DataGridViewCellStyle> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.DataGridViewStyleDemo#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewStyleDemo/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When setting this property, the row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="Displayed">
      <MemberSignature Language="C#" Value="public override bool Displayed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Displayed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Displayed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Displayed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Displayed : bool" Usage="System.Windows.Forms.DataGridViewRow.Displayed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether this row is displayed on the screen.</summary>
        <value>
          <see langword="true" /> Si la ligne est actuellement affichée à l’écran ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DividerHeight">
      <MemberSignature Language="C#" Value="public int DividerHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DividerHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property DividerHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DividerHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DividerHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.DividerHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the height, in pixels, of the row divider.</summary>
        <value>La hauteur, en pixels, du séparateur (marge du bas de la ligne).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utile pour fournir une limite visuelle entre des lignes figées et des lignes peuvent défiler. Le bord supplémentaire fait partie de la ligne actuelle, bien qu’il accepte la couleur de premier plan associé <xref:System.Windows.Forms.DataGridView>. Il n’étend pas la zone dans laquelle les utilisateurs peuvent double-cliquer pour redimensionner automatiquement une ligne. Pour redimensionner une ligne, l’utilisateur doit double-cliquer sur la limite entre le séparateur et les lignes adjacentes.  
  
   
  
## Examples  
 L’exemple de code suivant modifie la hauteur de ligne de séparation d’une ligne à mettre en évidence certains.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#210)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#210)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#210](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#210)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When setting this property, the row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="DrawFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void DrawFocus (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle bounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void DrawFocus(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle bounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, class System.Windows.Forms.DataGridViewCellStyle cellStyle, bool cellsPaintSelectionBackground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.DrawFocus(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Windows.Forms.DataGridViewCellStyle,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void DrawFocus(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle bounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, System::Windows::Forms::DataGridViewCellStyle ^ cellStyle, bool cellsPaintSelectionBackground);" />
      <MemberSignature Language="F#" Value="abstract member DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit&#xA;override this.DrawFocus : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * System.Windows.Forms.DataGridViewCellStyle * bool -&gt; unit" Usage="dataGridViewRow.DrawFocus (graphics, clipBounds, bounds, rowIndex, rowState, cellStyle, cellsPaintSelectionBackground)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="cellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
        <Parameter Name="cellsPaintSelectionBackground" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be painted.</param>
        <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> that is being painted.</param>
        <param name="rowIndex">The row index of the cell that is being painted.</param>
        <param name="rowState">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the row.</param>
        <param name="cellStyle">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> used to paint the focus rectangle.</param>
        <param name="cellsPaintSelectionBackground">
          <see langword="true" /> to use the <see cref="P:System.Windows.Forms.DataGridViewCellStyle.SelectionBackColor" /> property of <c>cellStyle</c> as the color of the focus rectangle; <see langword="false" /> to use the <see cref="P:System.Windows.Forms.DataGridViewCellStyle.BackColor" /> property of <c>cellStyle</c> as the color of the focus rectangle.</param>
        <summary>Draws a focus rectangle around the specified bounds.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `rowIndex` paramètre n’est pas utilisé dans l’implémentation de classe de base de la <xref:System.Windows.Forms.DataGridViewRow.DrawFocus%2A> (méthode), bien qu’il peut être utilisé lors de la substitution de cette méthode dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row has not been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> is <see langword="null" />.  -or-  <paramref name="cellStyle" /> is <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Windows.Forms.DataGridViewRow.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the error message text for row-level errors.</summary>
        <value>Un <see cref="T:System.String" /> contenant le message d’erreur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet de fournir un message d’erreur pour les erreurs au niveau des lignes. Le message spécifié s’affiche dans une info-bulle lorsque l’utilisateur déplace le pointeur de la souris sur l’icône d’erreur indiqué dans l’en-tête de ligne.  
  
 À compter de .NET Framework 4.5.2, l’icône d’erreur est redimensionné selon le paramètre PPP système lorsque le fichier app.config contient l’entrée suivante :  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 Si cette ligne est associée à un <xref:System.Windows.Forms.DataGridView> contrôle, la définition de cette propriété déclenche le <xref:System.Windows.Forms.DataGridView.RowErrorTextChanged> événement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A> propriété dans un <xref:System.Windows.Forms.DataGridView.DataError> Gestionnaire d’événements. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.DataGridViewComboBoxColumn> vue d’ensemble de la classe.  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When getting the value of this property, the row is a shared row in a <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.ErrorText" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextNeeded" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowErrorTextChanged" />
        <altmember cref="T:System.Windows.Forms.ErrorProvider" />
      </Docs>
    </Member>
    <Member MemberName="Frozen">
      <MemberSignature Language="C#" Value="public override bool Frozen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Frozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Frozen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Frozen : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Frozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the row is frozen.</summary>
        <value>
          <see langword="true" /> Si la ligne est figée ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de conserver une ou plusieurs lignes d’informations importantes en place lorsqu’un utilisateur fait défiler le <xref:System.Windows.Forms.DataGridView>. Toutes les lignes au-dessus de la ligne figée sont également figées.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewBand.Frozen%2A?displayProperty=nameWithType> propriété, qui est presque identique à la <xref:System.Windows.Forms.DataGridViewRow.Frozen%2A> propriété de la <xref:System.Windows.Forms.DataGridViewRow> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.DataGridViewBand> classe.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#7)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#7)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetContextMenuStrip">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ContextMenuStrip GetContextMenuStrip (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ContextMenuStrip GetContextMenuStrip(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextMenuStrip (rowIndex As Integer) As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ContextMenuStrip ^ GetContextMenuStrip(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetContextMenuStrip : int -&gt; System.Windows.Forms.ContextMenuStrip" Usage="dataGridViewRow.GetContextMenuStrip rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the current row.</param>
        <summary>Gets the shortcut menu for the row.</summary>
        <returns>A <see cref="T:System.Windows.Forms.ContextMenuStrip" /> that belongs to the <see cref="T:System.Windows.Forms.DataGridViewRow" /> at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passer le <xref:System.Windows.Forms.DataGridViewRow.GetContextMenuStrip%2A> méthode l’indexeur vous permet de récupérer le <xref:System.Windows.Forms.DataGridViewRow>. N’utilisez pas le <xref:System.Windows.Forms.DataGridViewBand.Index%2A> propriété pour le `rowIndex` paramètre. Si la ligne est partagée, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> est -1, ce qui est une valeur non valide pour `rowIndex`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="rowIndex" /> is -1.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="rowIndex" /> is less than zero or greater than or equal to the number of rows in the control minus one.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorText">
      <MemberSignature Language="C#" Value="public string GetErrorText (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetErrorText(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetErrorText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrorText (rowIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetErrorText(int rowIndex);" />
      <MemberSignature Language="F#" Value="member this.GetErrorText : int -&gt; string" Usage="dataGridViewRow.GetErrorText rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the row that contains the error.</param>
        <summary>Gets the error text for the row at the specified index.</summary>
        <returns>A string that describes the error of the row at the specified index.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passer le <xref:System.Windows.Forms.DataGridViewRow.GetErrorText%2A> méthode l’index vous permet de récupérer le <xref:System.Windows.Forms.DataGridViewRow>. N’utilisez pas le <xref:System.Windows.Forms.DataGridViewBand.Index%2A> propriété pour le `rowIndex` paramètre. Si la ligne est partagée, <xref:System.Windows.Forms.DataGridViewBand.Index%2A> est -1, ce qui est une valeur non valide pour `rowIndex`. Pour plus d’informations sur le partage de la ligne, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The row belongs to a <see cref="T:System.Windows.Forms.DataGridView" /> control and <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the control minus one.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredHeight">
      <MemberSignature Language="C#" Value="public virtual int GetPreferredHeight (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPreferredHeight(int32 rowIndex, valuetype System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetPreferredHeight(System.Int32,System.Windows.Forms.DataGridViewAutoSizeRowMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredHeight (rowIndex As Integer, autoSizeRowMode As DataGridViewAutoSizeRowMode, fixedWidth As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPreferredHeight(int rowIndex, System::Windows::Forms::DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int&#xA;override this.GetPreferredHeight : int * System.Windows.Forms.DataGridViewAutoSizeRowMode * bool -&gt; int" Usage="dataGridViewRow.GetPreferredHeight (rowIndex, autoSizeRowMode, fixedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="autoSizeRowMode" Type="System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <Parameter Name="fixedWidth" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the row whose preferred height is calculated.</param>
        <param name="autoSizeRowMode">A <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> that specifies an automatic sizing mode.</param>
        <param name="fixedWidth">
          <see langword="true" /> to calculate the preferred height for a fixed cell width; otherwise, <see langword="false" />.</param>
        <summary>Calculates the ideal height of the specified row based on the specified criteria.</summary>
        <returns>The ideal height of the row, in pixels.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée par la fonctionnalité de dimensionnement automatique basé sur le contenu de la <xref:System.Windows.Forms.DataGridView> contrôle pour déterminer la hauteur idéale d’une ligne. Le `rowIndex` valeur vous permet de spécifier l’index de ligne réel d’une ligne partagée. (Les lignes partagées ont <xref:System.Windows.Forms.DataGridViewBand.Index%2A> valeurs de propriété de -1.)  
  
 Un `fixedWidth` valeur du paramètre de `false` calcule la hauteur de ligne en fonction des largeurs de colonne calculée qui définissent le rapport de hauteur et la largeur idéale de la cellule.  
  
 Contenu de la cellule à la ligne sur plusieurs lignes, le style de cellule en vigueur pour la cellule doit avoir un <xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A> valeur de propriété <xref:System.Windows.Forms.DataGridViewTriState.True>.  
  
 Pour plus d’informations sur le dimensionnement automatique, consultez [les Options de dimensionnement dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.GetPreferredHeight%2A> méthode pour déterminer le nouveau remplissage d’une ligne qui a été redimensionné. Cet exemple de code fait partie d’un exemple plus complet fourni dans [Comment : personnaliser l’apparence de lignes dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/customize-the-appearance-of-rows-in-the-datagrid.md).  
  
 [!code-csharp[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/CS/datagridviewrowpainting.cs#40)]
 [!code-vb[System.Windows.Forms.DataGridViewRowPainting#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewRowPainting/VB/datagridviewrowpainting.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="autoSizeRowMode" /> is not a valid <see cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" /> value.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="rowIndex" /> is not in the valid range of 0 to the number of rows in the control minus 1.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewAutoSizeRowMode" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCellStyle.WrapMode" />
        <altmember cref="M:System.Windows.Forms.DataGridViewColumn.GetPreferredWidth(System.Windows.Forms.DataGridViewAutoSizeColumnMode,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetState">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DataGridViewElementStates GetState (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Forms.DataGridViewElementStates GetState(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetState (rowIndex As Integer) As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::DataGridViewElementStates GetState(int rowIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates&#xA;override this.GetState : int -&gt; System.Windows.Forms.DataGridViewElementStates" Usage="dataGridViewRow.GetState rowIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">The index of the row.</param>
        <summary>Returns a value indicating the current state of the row.</summary>
        <returns>A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values indicating the row state.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile pour déterminer l’état d’une ligne partagée. Les lignes partagées ont <xref:System.Windows.Forms.DataGridViewBand.Index%2A> valeurs-1, ce qui vous empêche d’utiliser le <xref:System.Windows.Forms.DataGridViewRow.State%2A> propriété avec des lignes partagées. Pour utiliser cette méthode, passez dans l’index de ligne réel. Vous pouvez récupérer l’index d’une ligne partagée en appelant le <xref:System.Windows.Forms.DataGridViewRowCollection.IndexOf%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The row has been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control, but the <paramref name="rowIndex" /> value is not in the valid range of 0 to the number of rows in the control minus 1.</exception>
        <exception cref="T:System.ArgumentException">The row is not a shared row, but the <paramref name="rowIndex" /> value does not match the row's <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> property value.  -or-  The row has not been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control, but the <paramref name="rowIndex" /> value does not match the row's <see cref="P:System.Windows.Forms.DataGridViewBand.Index" /> property value.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.State" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.IndexOf(System.Windows.Forms.DataGridViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="HeaderCell">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewRowHeaderCell HeaderCell" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderCell As DataGridViewRowHeaderCell" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewRowHeaderCell ^ HeaderCell { System::Windows::Forms::DataGridViewRowHeaderCell ^ get(); void set(System::Windows::Forms::DataGridViewRowHeaderCell ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderCell : System.Windows.Forms.DataGridViewRowHeaderCell with get, set" Usage="System.Windows.Forms.DataGridViewRow.HeaderCell" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewRowHeaderCell</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the row's header cell.</summary>
        <value>Un <see cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" /> qui représente la cellule d’en-tête de ligne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cellule d’en-tête d’une ligne est généralement utilisée pour afficher une étiquette de ligne. Les utilisateurs peuvent cliquer également l’en-tête de ligne pour sélectionner la ligne si la <xref:System.Windows.Forms.DataGridView.SelectionMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.HeaderCell%2A> propriété pour étiqueter les en-têtes de ligne.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.SelectionMode" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRowHeaderCell" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(22)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the current height of the row.</summary>
        <value>Hauteur, en pixels, de la ligne. La valeur par défaut est la hauteur de la police par défaut plus 9 pixels.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour définir la hauteur minimale d’une ligne, utilisez le <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> propriété.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.Height%2A> propriété à définir la hauteur de la première ligne. Cet exemple de code fait partie d’un exemple de code plus complet fourni dans [Comment : manipuler les lignes dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#208)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#208)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#208](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#208)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When setting this property, the row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="InheritedStyle">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewCellStyle InheritedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridViewCellStyle InheritedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property InheritedStyle As DataGridViewCellStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewCellStyle ^ InheritedStyle { System::Windows::Forms::DataGridViewCellStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InheritedStyle : System.Windows.Forms.DataGridViewCellStyle" Usage="System.Windows.Forms.DataGridViewRow.InheritedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewCellStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cell style in effect for the row.</summary>
        <value>Un <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> qui spécifie les informations de mise en forme et de style pour les cellules de la ligne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utile pour déterminer les styles de cellule sont appliqués à toutes les cellules dans une ligne indépendamment des styles de colonne sont également appliqués aux cellules. La ligne <xref:System.Windows.Forms.DataGridViewRow.InheritedStyle%2A> propriété hérite ses valeurs des propriétés suivantes :  
  
-   <xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A>  
  
-   <xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A?displayProperty=nameWithType> (pour les lignes avec le numéro d’index impair)  
  
-   <xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A?displayProperty=nameWithType>  
  
 Pour plus d’informations sur l’héritage de style de cellule, consultez [Styles de cellules dans le contrôle DataGridView Windows Forms](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.DefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.RowsDefaultCellStyle" />
        <altmember cref="P:System.Windows.Forms.DataGridView.DefaultCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsNewRow">
      <MemberSignature Language="C#" Value="public bool IsNewRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewRow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewRow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewRow : bool" Usage="System.Windows.Forms.DataGridViewRow.IsNewRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the row is the row for new records.</summary>
        <value>
          <see langword="true" /> Si la ligne est la dernière ligne dans le <see cref="T:System.Windows.Forms.DataGridView" />, qui est utilisée pour l’entrée d’une nouvelle ligne de données ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que la ligne pour les nouveaux enregistrements est en le <xref:System.Windows.Forms.DataGridView.Rows%2A> collection, utilisez la <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> propriété pour déterminer si une ligne est la ligne pour les nouveaux enregistrements ou une ligne remplie.  
  
 Une ligne s’arrête en cours de la nouvelle ligne au commencement de saisie de données dans la ligne.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.IsNewRow%2A> propriété pour empêcher tente de définir l’étiquette de la ligne pour les nouveaux enregistrements.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#209)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#209)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#209](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#209)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="C#" Value="public int MinimumHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int with get, set" Usage="System.Windows.Forms.DataGridViewRow.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the minimum height of the row.</summary>
        <value>Hauteur de ligne minimale en pixels, comprise entre 2 à <see cref="F:System.Int32.MaxValue" />. La valeur par défaut est 3.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> propriété gère l’affichage de la ligne en définissant une limite à jusqu’où l’utilisateur peut redimensionner la hauteur de la ligne via l’interface utilisateur (IU).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.DataGridViewRow.MinimumHeight%2A> propriété à définir la hauteur minimale de la deuxième ligne. Cet exemple de code fait partie d’un exemple de code plus complet fourni dans [Comment : manipuler les lignes dans le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-manipulate-rows-in-the-windows-forms-datagridview-control.md).  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewRowDemo.cpp#207)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewRowDemo.cs#207)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#207](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewrowdemo.vb#207)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">When setting this property, the row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The specified value when setting this property is less than 2.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewRow.Height" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="protected internal virtual void Paint (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Paint(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Paint(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow);" />
      <MemberSignature Language="F#" Value="abstract member Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit&#xA;override this.Paint : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool -&gt; unit" Usage="dataGridViewRow.Paint (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be painted.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> that is being painted.</param>
        <param name="rowIndex">The row index of the cell that is being painted.</param>
        <param name="rowState">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the row.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> to indicate whether the current row is the first row displayed in the <see cref="T:System.Windows.Forms.DataGridView" />; otherwise, <see langword="false" />.</param>
        <param name="isLastVisibleRow">
          <see langword="true" /> to indicate whether the current row is the last row in the <see cref="T:System.Windows.Forms.DataGridView" /> that has the <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</param>
        <summary>Paints the current row.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridView> contrôle appelle cette méthode pour peindre la ligne.  
  
 L’appel à cette méthode déclenche la <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> événement. Si un gestionnaire pour l’événement ne définit pas le <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> propriété `true`, cette méthode appelle également la <xref:System.Windows.Forms.DataGridViewRow.PaintHeader%2A> et <xref:System.Windows.Forms.DataGridViewRow.PaintCells%2A> méthodes et déclenche le <xref:System.Windows.Forms.DataGridView.RowPostPaint?displayProperty=nameWithType> événement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row has not been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control.  -or-  The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and <paramref name="rowIndex" /> is less than zero or greater than the number of rows in the control minus one.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPostPaint" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      </Docs>
    </Member>
    <Member MemberName="PaintCells">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintCells (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintCells(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintCells(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintCells(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintCells : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintCells (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be painted.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> that is being painted.</param>
        <param name="rowIndex">The row index of the cell that is being painted.</param>
        <param name="rowState">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the row.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> to indicate whether the current row is the first row displayed in the <see cref="T:System.Windows.Forms.DataGridView" />; otherwise, <see langword="false" />.</param>
        <param name="isLastVisibleRow">
          <see langword="true" /> to indicate whether the current row is the last row in the <see cref="T:System.Windows.Forms.DataGridView" /> that has the <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</param>
        <param name="paintParts">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values indicating the parts of the cells to paint.</param>
        <summary>Paints the cells in the current row.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridView> contrôle appelle cette méthode pour peindre les cellules de la ligne, sauf si un gestionnaire pour le <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> ensembles d’événements le <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> propriété `true`. Pour plus d'informations, consultez <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row has not been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="paintParts" /> in not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PaintHeader">
      <MemberSignature Language="C#" Value="protected internal virtual void PaintHeader (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle rowBounds, int rowIndex, System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System.Windows.Forms.DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PaintHeader(class System.Drawing.Graphics graphics, valuetype System.Drawing.Rectangle clipBounds, valuetype System.Drawing.Rectangle rowBounds, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, valuetype System.Windows.Forms.DataGridViewPaintParts paintParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean,System.Windows.Forms.DataGridViewPaintParts)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PaintHeader(System::Drawing::Graphics ^ graphics, System::Drawing::Rectangle clipBounds, System::Drawing::Rectangle rowBounds, int rowIndex, System::Windows::Forms::DataGridViewElementStates rowState, bool isFirstDisplayedRow, bool isLastVisibleRow, System::Windows::Forms::DataGridViewPaintParts paintParts);" />
      <MemberSignature Language="F#" Value="abstract member PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit&#xA;override this.PaintHeader : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Rectangle * int * System.Windows.Forms.DataGridViewElementStates * bool * bool * System.Windows.Forms.DataGridViewPaintParts -&gt; unit" Usage="dataGridViewRow.PaintHeader (graphics, clipBounds, rowBounds, rowIndex, rowState, isFirstDisplayedRow, isLastVisibleRow, paintParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="clipBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowState" Type="System.Windows.Forms.DataGridViewElementStates" />
        <Parameter Name="isFirstDisplayedRow" Type="System.Boolean" />
        <Parameter Name="isLastVisibleRow" Type="System.Boolean" />
        <Parameter Name="paintParts" Type="System.Windows.Forms.DataGridViewPaintParts" />
      </Parameters>
      <Docs>
        <param name="graphics">The <see cref="T:System.Drawing.Graphics" /> used to paint the <see cref="T:System.Windows.Forms.DataGridViewRow" />.</param>
        <param name="clipBounds">A <see cref="T:System.Drawing.Rectangle" /> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView" /> that needs to be painted.</param>
        <param name="rowBounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the bounds of the <see cref="T:System.Windows.Forms.DataGridViewRow" /> that is being painted.</param>
        <param name="rowIndex">The row index of the cell that is being painted.</param>
        <param name="rowState">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> values that specifies the state of the row.</param>
        <param name="isFirstDisplayedRow">
          <see langword="true" /> to indicate that the current row is the first row displayed in the <see cref="T:System.Windows.Forms.DataGridView" />; otherwise, <see langword="false" />.</param>
        <param name="isLastVisibleRow">
          <see langword="true" /> to indicate that the current row is the last row in the <see cref="T:System.Windows.Forms.DataGridView" /> that has the <see cref="P:System.Windows.Forms.DataGridViewRow.Visible" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</param>
        <param name="paintParts">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values indicating the parts of the cells to paint.</param>
        <summary>Paints the header cell of the current row.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridView> contrôle appelle cette méthode pour peindre l’en-tête de ligne, sauf si un gestionnaire pour le <xref:System.Windows.Forms.DataGridView.RowPrePaint?displayProperty=nameWithType> ensembles d’événements le <xref:System.ComponentModel.HandledEventArgs.Handled%2A?displayProperty=nameWithType> propriété `true`. Pour plus d'informations, consultez <xref:System.Windows.Forms.DataGridViewRow.Paint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row has not been added to a <see cref="T:System.Windows.Forms.DataGridView" /> control.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="paintParts" /> in not a valid bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewPaintParts" /> values.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.RowPrePaint" />
        <altmember cref="P:System.ComponentModel.HandledEventArgs.Handled" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public override bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the row is read-only.</summary>
        <value>
          <see langword="true" /> Si la ligne est en lecture seule ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> propriété affecte le <xref:System.Windows.Forms.DataGridViewCell.ReadOnly%2A?displayProperty=nameWithType> propriété de chaque cellule dans la ligne.  
  
 Définition de cette propriété n’a aucun effet si la valeur de la <xref:System.Windows.Forms.DataGridView.ReadOnly%2A?displayProperty=nameWithType> propriété est `true`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewBand.ReadOnly%2A?displayProperty=nameWithType> propriété, qui est presque identique à la <xref:System.Windows.Forms.DataGridViewRow.ReadOnly%2A> propriété de la <xref:System.Windows.Forms.DataGridViewRow> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.DataGridViewBand> classe.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#11)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#11)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.ReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewTriState Resizable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewTriState Resizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Resizable As DataGridViewTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewTriState Resizable { System::Windows::Forms::DataGridViewTriState get(); void set(System::Windows::Forms::DataGridViewTriState value); };" />
      <MemberSignature Language="F#" Value="member this.Resizable : System.Windows.Forms.DataGridViewTriState with get, set" Usage="System.Windows.Forms.DataGridViewRow.Resizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether users can resize the row or indicating that the behavior is inherited from the <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> property.</summary>
        <value>Un <see cref="T:System.Windows.Forms.DataGridViewTriState" /> valeur qui indique si la ligne peut être redimensionnée ou si elle peut être redimensionnée uniquement lorsque la <see cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" /> propriété est définie sur <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas utiliser cette propriété avec une ligne partagée. Pour plus d’informations sur les lignes partagées, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
 Si le <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> propriété est <xref:System.Windows.Forms.DataGridViewTriState.False>, l’utilisateur ne sera pas en mesure de modifier manuellement la hauteur de ligne.  
  
 Par défaut, le <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> valeur de propriété est basée sur la <xref:System.Windows.Forms.DataGridView.AllowUserToResizeRows%2A?displayProperty=nameWithType> valeur de propriété. Si vous définissez explicitement <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> à <xref:System.Windows.Forms.DataGridViewTriState.True> ou <xref:System.Windows.Forms.DataGridViewTriState.False>, toutefois, la valeur de contrôle est ignorée. Définissez <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> à <xref:System.Windows.Forms.DataGridViewTriState.NotSet> pour restaurer le comportement d’héritage de valeur.  
  
 Étant donné que <xref:System.Windows.Forms.DataGridViewTriState.NotSet> restaure l’héritage de valeur, le <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> propriété ne retourne jamais un <xref:System.Windows.Forms.DataGridViewTriState.NotSet> valeur, sauf si la ligne n’a pas été ajoutée à un <xref:System.Windows.Forms.DataGridView> contrôle. Si vous avez besoin déterminer si le <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> valeur de propriété d’une ligne est héritée ou a été spécifié explicitement, vérifiez sa <xref:System.Windows.Forms.DataGridViewElement.State%2A> propriété. Si le <xref:System.Windows.Forms.DataGridViewElement.State%2A> valeur comprend le <xref:System.Windows.Forms.DataGridViewElementStates.ResizableSet> indicateur, la <xref:System.Windows.Forms.DataGridViewRow.Resizable%2A> valeur de propriété n’est pas héritée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette propriété.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CPP/mousesizing.cpp#15)]
 [!code-csharp[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/CS/mousesizing.cs#15)]
 [!code-vb[System.Windows.Forms.DataGridView.MouseBasedResizing#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.MouseBasedResizing/VB/mousesizing.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridView.AllowUserToResizeRows" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public override bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the row is selected.</summary>
        <value>
          <see langword="true" /> si la ligne est sélectionnée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas utiliser cette propriété avec une ligne partagée. Pour plus d’informations sur les lignes partagées, consultez [meilleures pratiques pour la mise à l’échelle le contrôle de DataGridView Windows Forms](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette propriété.  
  
 [!code-csharp[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/CS/DataGridViewSelectedCollections.cs#05)]
 [!code-vb[System.Windows.Forms.DataGridViewSelectedCollections#05](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewSelectedCollections/VB/DataGridViewSelectedCollections.vb#05)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="SetValues">
      <MemberSignature Language="C#" Value="public bool SetValues (params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.SetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SetValues (ParamArray values As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetValues(... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.SetValues : obj[] -&gt; bool" Usage="dataGridViewRow.SetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">One or more objects that represent the cell values in the row.  -or-  An <see cref="T:System.Array" /> of <see cref="T:System.Object" /> values.</param>
        <summary>Sets the values of the row's cells.</summary>
        <returns>
          <see langword="true" /> if all values have been set; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `values` paramètre représente un nombre variable d’arguments utilisés pour remplir les valeurs de cellule dans la ligne. Ces valeurs peuvent être passées à cette méthode en tant que plusieurs arguments ou en tant que membres d’un seul <xref:System.Array>. Étant donné que les valeurs sont supposées être des instances de type <xref:System.Object>, toutefois, si vous passez un tableau de valeurs de type valeur (telles que <xref:System.Int32> valeurs), cette méthode traite le tableau comme un objet unique et affectez-le à une cellule unique. Pour éviter ce comportement, vous devez effectuer un cast sur un tableau de type valeur à une <xref:System.Object> de tableaux ou de passer plusieurs valeurs en tant que plusieurs arguments.  
  
 S’il existe plusieurs valeurs dans le `values` liste que de cellules à initialiser, cette méthode ignore les valeurs supplémentaires et retourne `false`. Cette méthode retourne également `false` si une des valeurs spécifiées ne peut pas être définie.  
  
 S’il y a moins de valeurs qu’il existe des cellules, les cellules non appariées restantes conservent leurs valeurs actuelles.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="values" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">This method is called when the associated <see cref="T:System.Windows.Forms.DataGridView" /> is operating in virtual mode.  -or-  This row is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.CreateCells(System.Windows.Forms.DataGridView)" />
        <altmember cref="M:System.Windows.Forms.DataGridViewCell.SetValue(System.Int32,System.Object)" />
        <altmember cref="P:System.Windows.Forms.DataGridView.VirtualMode" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DataGridViewElementStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewElementStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As DataGridViewElementStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DataGridViewElementStates State { System::Windows::Forms::DataGridViewElementStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.DataGridViewElementStates" Usage="System.Windows.Forms.DataGridViewRow.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewElementStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current state of the row.</summary>
        <value>Une combinaison au niveau du bit de <see cref="T:System.Windows.Forms.DataGridViewElementStates" /> valeurs indiquant l’état de ligne.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas utiliser cette propriété avec des lignes partagées, car il est partagé ne stockent pas localement leur état. Pour obtenir l’état d’une ligne partagée, utilisez la <xref:System.Windows.Forms.DataGridViewRow.GetState%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewElementStates" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRow.GetState(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewRow.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dataGridViewRow.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a human-readable string that describes the row.</summary>
        <returns>A <see cref="T:System.String" /> that describes this row.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette version substituée de la <xref:System.Windows.Forms.DataGridViewRow.ToString%2A> méthode fournit le nom de classe et le <xref:System.Windows.Forms.DataGridViewBand.Index%2A> informations pour cette instance de la <xref:System.Windows.Forms.DataGridViewRow> classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.DataGridViewBand.Index" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.DataGridViewRow.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the row is visible.</summary>
        <value>
          <see langword="true" /> Si la ligne est visible ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet de masquer une ligne à partir de la vue tout en conservant la ligne dans le <xref:System.Windows.Forms.DataGridView>. Pour supprimer complètement une ligne, utilisez le <xref:System.Windows.Forms.DataGridViewRowCollection.Remove%2A?displayProperty=nameWithType> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DataGridViewBand.Visible%2A?displayProperty=nameWithType> propriété, qui est presque identique à la <xref:System.Windows.Forms.DataGridViewRow.Visible%2A> propriété de la <xref:System.Windows.Forms.DataGridViewRow> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.DataGridViewBand> classe.  
  
 [!code-cpp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CPP/DataGridViewBandDemo.cpp#9)]
 [!code-csharp[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/CS/DataGridViewBandDemo.cs#9)]
 [!code-vb[System.Windows.Forms.DataGridView.ButtonDemos#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridView.ButtonDemos/VB/datagridviewbanddemo.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The row is in a <see cref="T:System.Windows.Forms.DataGridView" /> control and is a shared row.</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.DataGridViewRowCollection.Remove(System.Windows.Forms.DataGridViewRow)" />
      </Docs>
    </Member>
  </Members>
</Type>