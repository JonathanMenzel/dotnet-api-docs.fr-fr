<Type Name="BaseCollection" FullName="System.Windows.Forms.BaseCollection">
  <TypeSignature Language="C#" Value="public class BaseCollection : MarshalByRefObject, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BaseCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BaseCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class BaseCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCollection : MarshalByRefObject, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b166d-101">Fournit les fonctionnalités de base permettant la création de collections liées aux données dans l'espace de noms <see cref="N:System.Windows.Forms" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-101">Provides the base functionality for creating data-related collections in the <see cref="N:System.Windows.Forms" /> namespace.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b166d-102">La <xref:System.Windows.Forms.BaseCollection> classe n’est pas destinée à utiliser par les développeurs d’applications.</span><span class="sxs-lookup"><span data-stu-id="b166d-102">The <xref:System.Windows.Forms.BaseCollection> class is not intended for use by application developers.</span></span> <span data-ttu-id="b166d-103">Les développeurs d’applications doivent utiliser <xref:System.Collections.CollectionBase> à la place.</span><span class="sxs-lookup"><span data-stu-id="b166d-103">Application developers should use <xref:System.Collections.CollectionBase> instead.</span></span>  
  
 <span data-ttu-id="b166d-104">La classe <xref:System.Windows.Forms.BaseCollection> implémente l'interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="b166d-104">The <xref:System.Windows.Forms.BaseCollection> class implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 <span data-ttu-id="b166d-105">Classes dérivées de la <xref:System.Windows.Forms.BaseCollection> classe incluent :</span><span class="sxs-lookup"><span data-stu-id="b166d-105">Classes that derive from the <xref:System.Windows.Forms.BaseCollection> class include:</span></span>  
  
-   <xref:System.Windows.Forms.BindingsCollection>  
  
-   <xref:System.Windows.Forms.GridColumnStylesCollection>  
  
-   <xref:System.Windows.Forms.GridTableStylesCollection>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BaseCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BaseCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b166d-106">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BaseCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.BaseCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array ar, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array ar, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (ar As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ ar, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ar"><span data-ttu-id="b166d-107"><see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de l'objet <see langword="Array" /> actuel.</span><span class="sxs-lookup"><span data-stu-id="b166d-107">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see langword="Array" />.</span></span></param>
        <param name="index"><span data-ttu-id="b166d-108">Index relatif de base zéro dans <c>ar</c> au niveau duquel commencer la copie.</span><span class="sxs-lookup"><span data-stu-id="b166d-108">The zero-based relative index in <c>ar</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b166d-109">Copie tous les éléments du <see cref="T:System.Array" /> unidimensionnel en cours dans le <see cref="T:System.Array" /> unidimensionnel spécifié en commençant à l'index <see cref="T:System.Array" /> de destination spécifié.</span><span class="sxs-lookup"><span data-stu-id="b166d-109">Copies all the elements of the current one-dimensional <see cref="T:System.Array" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Array.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b166d-110">Obtient le nombre total d'éléments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b166d-110">Gets the total number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="b166d-111">Nombre total d'éléments dans la collection.</span><span class="sxs-lookup"><span data-stu-id="b166d-111">The total number of elements in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BaseCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b166d-112">Obtient l'objet qui permet l'itération au sein des membres de la collection.</span><span class="sxs-lookup"><span data-stu-id="b166d-112">Gets the object that enables iterating through the members of the collection.</span></span></summary>
        <returns><span data-ttu-id="b166d-113">Objet qui implémente l'interface <see cref="T:System.Collections.IEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-113">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b166d-114">Obtient une valeur indiquant si la collection est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="b166d-114">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="b166d-115">Cette propriété a toujours la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-115">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b166d-116">Les collections qui dérivent de la <xref:System.Windows.Forms.BaseCollection> classe sont toujours accessibles en écriture, c’est pourquoi cette propriété retourne toujours `false`.</span><span class="sxs-lookup"><span data-stu-id="b166d-116">The collections that derive from the <xref:System.Windows.Forms.BaseCollection> class are always writable, which is why this property always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b166d-117">Obtient une valeur indiquant si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé.</span><span class="sxs-lookup"><span data-stu-id="b166d-117">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized.</span></span></summary>
        <value><span data-ttu-id="b166d-118">Cette propriété retourne toujours <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-118">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b166d-119">Si une collection est thread-safe, les <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> propriété renvoie `true`, et le programmeur n’a rien à faire pour maintenir la collection thread-safe.</span><span class="sxs-lookup"><span data-stu-id="b166d-119">If a collection is thread safe, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `true`, and the programmer does not have to do anything to keep the collection thread safe.</span></span>  
  
 <span data-ttu-id="b166d-120">Si, comme c’est le cas avec le <xref:System.Windows.Forms.BaseCollection>, le <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> propriété renvoie `false`, puis le <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> propriété retourne un objet qui peut être utilisé avec le langage c# `lock` (mot clé).</span><span class="sxs-lookup"><span data-stu-id="b166d-120">If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.</span></span> <span data-ttu-id="b166d-121">Utilisez la méthode statique <xref:System.Threading.Monitor.Enter%2A> et <xref:System.Threading.Monitor.Exit%2A> méthodes de la <xref:System.Threading.Monitor> classe manuellement de verrouillage et déverrouillage de l’objet de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="b166d-121">Use the static <xref:System.Threading.Monitor.Enter%2A> and <xref:System.Threading.Monitor.Exit%2A> methods of the <xref:System.Threading.Monitor> class to manually lock and unlock the synchronization object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.List" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property List As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ArrayList ^ List { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b166d-122">Obtient la liste des éléments contenus dans l'instance de <see cref="T:System.Windows.Forms.BaseCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-122">Gets the list of elements contained in the <see cref="T:System.Windows.Forms.BaseCollection" /> instance.</span></span></summary>
        <value><span data-ttu-id="b166d-123"><see cref="T:System.Collections.ArrayList" /> contenant les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="b166d-123">An <see cref="T:System.Collections.ArrayList" /> containing the elements of the collection.</span></span> <span data-ttu-id="b166d-124">Cette propriété retourne <see langword="null" /> sauf si elle est substituée dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="b166d-124">This property returns <see langword="null" /> unless overridden in a derived class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BaseCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b166d-125">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.Forms.BaseCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-125">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.BaseCollection" />.</span></span></summary>
        <value><span data-ttu-id="b166d-126">Objet pouvant être utilisé pour synchroniser <see cref="T:System.Windows.Forms.BaseCollection" />.</span><span class="sxs-lookup"><span data-stu-id="b166d-126">An object that can be used to synchronize the <see cref="T:System.Windows.Forms.BaseCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b166d-127">Si, comme c’est le cas avec le <xref:System.Windows.Forms.BaseCollection>, le <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> propriété renvoie `false`, puis le <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> propriété retourne un objet qui peut être utilisé avec le langage c# `lock` (mot clé).</span><span class="sxs-lookup"><span data-stu-id="b166d-127">If, as is the case with the <xref:System.Windows.Forms.BaseCollection>, the <xref:System.Windows.Forms.BaseCollection.IsSynchronized%2A> property returns `false`, then the <xref:System.Windows.Forms.BaseCollection.SyncRoot%2A> property returns an object that can be used with the C# `lock` keyword.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>