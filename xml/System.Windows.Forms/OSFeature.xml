<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f8490b1b743429b4f7179e1a7f1ae345071802c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36517140" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OSFeature extends System.Windows.Forms.FeatureSupport" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OSFeature" />
  <TypeSignature Language="VB.NET" Value="Public Class OSFeature&#xA;Inherits FeatureSupport" />
  <TypeSignature Language="C++ CLI" Value="public ref class OSFeature : System::Windows::Forms::FeatureSupport" />
  <TypeSignature Language="F#" Value="type OSFeature = class&#xA;    inherit FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les fonctionnalités de requêtes spécifiques au système d'exploitation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le `static` instance de cette classe fournie dans le <xref:System.Windows.Forms.OSFeature.Feature%2A> propriété afin de connaître les fonctionnalités du système d’exploitation. Vous ne pouvez pas créer une instance de cette classe.  
  
 Pour déterminer la version d’une fonctionnalité, appelez le <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> (méthode). Pour déterminer si une fonctionnalité ou une version spécifique est présente, appelez le <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> (méthode) et spécifiez la fonctionnalité à rechercher avec les identificateurs de fonctionnalité fournis dans cette classe.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Windows.Forms.OSFeature> pour interroger le système d’exploitation pour déterminer si les <xref:System.Windows.Forms.OSFeature.LayeredWindows> fonctionnalité est installée. L’exemple présente deux façons différentes de la vérification pour voir si la fonctionnalité est présente. Dans la première méthode, `myVersion` est vérifié pour voir si elle est `null`. Si la version est `null`, la fonctionnalité n’est pas installée. Dans la deuxième méthode, l’exemple appelle la méthode de classe de base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> pour voir si la fonctionnalité est installée. Les résultats sont affichés dans une zone de texte.  
  
 Ce code suppose que `textBox1` a été créé et placé dans un formulaire.  
  
 [!code-cpp[Classic OSFeature Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Environment" />
    <altmember cref="T:System.Windows.Forms.SystemInformation" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OSFeature();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.OSFeature" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe ne peut pas être instanciée. Pour interroger les fonctionnalités du système d’exploitation, utilisez le `static` instance de <xref:System.Windows.Forms.OSFeature> fournie dans cette classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.OSFeature" />
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.OSFeature Feature" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OSFeature.Feature" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Feature As OSFeature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::OSFeature ^ Feature { System::Windows::Forms::OSFeature ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Feature : System.Windows.Forms.OSFeature" Usage="System.Windows.Forms.OSFeature.Feature" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une instance de <see langword="static" /> de la classe <see cref="T:System.Windows.Forms.OSFeature" /> à utiliser pour les requêtes relatives aux fonctionnalités. Cette propriété est en lecture seule.</summary>
        <value>Instance de la classe <see cref="T:System.Windows.Forms.OSFeature" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette `static` propriété afin de connaître les fonctionnalités du système d’exploitation. Vous ne pouvez pas créer une instance de cette classe.  
  
 Pour déterminer la version d’une fonctionnalité, appelez le <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> (méthode). Pour déterminer si une fonctionnalité ou une version spécifique est présente, appelez le <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> (méthode) et spécifiez la fonctionnalité à rechercher avec les identificateurs de fonctionnalité fournis dans cette classe.  
  
   
  
## Examples  
 L’exemple suivant interroge <xref:System.Windows.Forms.OSFeature> pour la <xref:System.Windows.Forms.OSFeature.LayeredWindows> fonctionnalité. La version est vérifiée pour voir si elle est `null`, afin de déterminer si la fonctionnalité est présente. Le résultat est affiché dans une zone de texte. Ce code suppose que `textBox1` a été créé et placé dans un formulaire.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.OSFeature.#ctor" />
        <altmember cref="T:System.Version" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Version GetVersionPresent(object feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetVersionPresent (feature As Object) As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Version ^ GetVersionPresent(System::Object ^ feature);" />
      <MemberSignature Language="F#" Value="override this.GetVersionPresent : obj -&gt; Version" Usage="oSFeature.GetVersionPresent feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="feature">Fonctionnalité dont la version est demandée, soit <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />, soit <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</param>
        <summary>Récupère la version de la fonctionnalité spécifiée actuellement disponible dans le système.</summary>
        <returns>
          <see cref="T:System.Version" /> représentant la version de la fonctionnalité du système d'exploitation spécifiée actuellement disponible dans le système ou <see langword="null" /> si la fonctionnalité n'est pas trouvée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.OSFeature.Feature%2A> propriété, le `static` instance de <xref:System.Windows.Forms.OSFeature> fournie dans cette classe, afin de connaître le numéro de version d’une fonctionnalité.  
  
   
  
## Examples  
 L’exemple suivant interroge <xref:System.Windows.Forms.OSFeature> pour la <xref:System.Windows.Forms.OSFeature.LayeredWindows> fonctionnalité. La version est vérifiée pour voir si elle est `null`, afin de déterminer si la fonctionnalité est présente. Le résultat est affiché dans une zone de texte. Ce code suppose que `textBox1` a été créé et placé dans un formulaire.  
  
 [!code-cpp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.GetVersionPresent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.GetVersionPresent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Version" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
        <altmember cref="T:System.Windows.Forms.FeatureSupport" />
        <altmember cref="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      </Docs>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPresent(valuetype System.Windows.Forms.SystemParameter enumVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPresent (enumVal As SystemParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPresent(System::Windows::Forms::SystemParameter enumVal);" />
      <MemberSignature Language="F#" Value="static member IsPresent : System.Windows.Forms.SystemParameter -&gt; bool" Usage="System.Windows.Forms.OSFeature.IsPresent enumVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <param name="enumVal">
          <see cref="T:System.Windows.Forms.SystemParameter" /> représentant la fonctionnalité à rechercher.</param>
        <summary>Récupère une valeur indiquant si le système d'exploitation prend en charge la fonctionnalité ou le métrique spécifié(e).</summary>
        <returns>
          <see langword="true" /> si la fonctionnalité est disponible sur le système ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, vous utilisez la <xref:System.Windows.Forms.OSFeature.IsPresent%2A> méthode pour déterminer si le système d’exploitation prend en charge la fonctionnalité spécifique ou une métrique identifié par `enumValue`. En fonction de la valeur retournée par <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, vous pouvez exécuter des actions conditionnelles dans votre code. Par exemple, si l’appel de cette méthode avec une valeur de paramètre <xref:System.Windows.Forms.SystemParameter.FlatMenu> retourne `true`, vous pouvez créer des menus owner-drawn dans votre application dans un style à deux dimensions.  
  
 L’accès à certaines fonctionnalités du système ou les métriques peuvent lever des exceptions si elles ne sont pas disponibles sur une version spécifique du système d’exploitation. Dans ce cas, utilisez d’abord correspondant <xref:System.Windows.Forms.SystemParameter> valeur d’énumération, ainsi qu’avec <xref:System.Windows.Forms.OSFeature.IsPresent%2A>, afin de déterminer si le métrique est pris en charge. Par exemple, appeler <xref:System.Windows.Forms.OSFeature.IsPresent%2A> avec <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A> avant d’obtenir le <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> valeur de propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.OSFeature.IsPresent%2A> méthode avec le <xref:System.Windows.Forms.SystemParameter> énumération. L’exemple détermine si le système d’exploitation prend en charge la `CaretWidth` métrique avant d’appeler le <xref:System.Windows.Forms.SystemInformation.CaretWidth%2A?displayProperty=nameWithType> propriété.  
  
 [!code-cpp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.OSFeature.IsPresent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.OSFeature.IsPresent#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OSFeature.IsPresent/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.SystemParameter" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object LayeredWindows" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayeredWindows As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ LayeredWindows;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayeredWindows : obj" Usage="System.Windows.Forms.OSFeature.LayeredWindows" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente la fonctionnalité de superposition des fenêtres de niveau supérieur. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fenêtre superposée peut être rendue transparent ou translucide par le système d’exploitation. Prise en charge des fenêtres superposées a été introduite dans Windows 2000. Pour plus d’informations, consultez « En couche Windows : A New moyen pour utiliser la transparence et transparence effets dans Windows Applications » dans la documentation Platform SDK à http://msdn.microsoft.com.  
  
 Pour déterminer si la fonctionnalité de fenêtres superposées est installée, utilisez le <xref:System.Windows.Forms.OSFeature.Feature%2A> propriété à appeler la méthode de classe de base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> avec <xref:System.Windows.Forms.OSFeature.LayeredWindows> en tant que la fonctionnalité à rechercher.  
  
 Ou bien, vous pouvez vérifier si la fonctionnalité est installée en appelant le <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> méthode avec <xref:System.Windows.Forms.OSFeature.LayeredWindows> en tant que fonctionnalité à rechercher.  
  
   
  
## Examples  
 L’exemple suivant détermine si le système actuel prend en charge les fenêtres superposées. La méthode de classe de base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> est appelée avec <xref:System.Windows.Forms.OSFeature.LayeredWindows> en tant que la fonctionnalité à rechercher. Le résultat est affiché dans une zone de texte. Ce code suppose que `textBox1` a été instancié et placé dans un formulaire.  
  
 [!code-cpp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/CS/source.cs#1)]
 [!code-vb[Classic OSFeature.LayeredWindows Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OSFeature.LayeredWindows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object Themes" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.OSFeature.Themes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Themes As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ Themes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Themes : obj" Usage="System.Windows.Forms.OSFeature.Themes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Représente la fonctionnalité des thèmes du système d'exploitation. Ce champ est en lecture seule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un thème est une collection de paramètres d’interface graphique qui incluent le papier peint, les curseurs, les polices, les sons et les icônes introduites dans Microsoft Plus ! pour Windows 95. Le .NET Framework ne gère pas directement manipulation de thèmes, bien qu’il n’a pas la prise en charge complète des styles visuels dans le <xref:System.Windows.Forms.VisualStyles?displayProperty=nameWithType> espace de noms. Pour plus d’informations sur les thèmes Windows, consultez les rubriques thèmes et Styles visuels et Visual Styles Reference dans le Kit de développement Win32.  
  
 Pour déterminer si la fonctionnalité des thèmes est installée, appelez la méthode de classe de base <xref:System.Windows.Forms.FeatureSupport.IsPresent%2A> avec <xref:System.Windows.Forms.OSFeature.Themes> en tant que la fonctionnalité à rechercher.  
  
 Ou bien, vous pouvez vérifier si la fonctionnalité est installée en appelant le <xref:System.Windows.Forms.OSFeature.GetVersionPresent%2A> méthode avec <xref:System.Windows.Forms.OSFeature.Themes> en tant que fonctionnalité à rechercher.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.OSFeature.IsPresent" />
        <altmember cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" />
        <altmember cref="P:System.Windows.Forms.OSFeature.Feature" />
      </Docs>
    </Member>
  </Members>
</Type>