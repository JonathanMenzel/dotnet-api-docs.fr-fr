<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PaintEventArgs.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac543ef0f46216e929549535d644eb172d74d873945.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43ef0f46216e929549535d644eb172d74d873945</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph> event.</source>
          <target state="translated">Fournit des données pour l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.Paint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event occurs when a control is redrawn.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement se produit lorsqu’un contrôle est redessiné.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> specifies the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs.Graphics%2A&gt;</ph> to use to paint the control and the <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A&gt;</ph> in which to paint.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> Spécifie le <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs.Graphics%2A&gt;</ph> à utiliser pour peindre le contrôle et la <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs.ClipRectangle%2A&gt;</ph> dans lequel peindre.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>For information about the event model, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le modèle d’événement, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>The following example demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and using the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> class to draw rectangles on the form.</source>
          <target state="translated">L’exemple suivant illustre la gestion du <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement et à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> classe pour dessiner des rectangles sur le formulaire.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are handled to determine the size of the rectangle.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> les événements sont gérés pour déterminer la taille du rectangle.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>The example also demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to invalidate the area of the rectangle, causing it to be redrawn.</source>
          <target state="translated">L’exemple illustre également la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> méthode pour invalider la zone du rectangle, afin qu’il soit redessiné.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> used to paint the item.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> utilisé pour peindre l'élément.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> that represents the rectangle in which to paint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> qui représente le rectangle dans lequel peindre.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> class with the specified graphics and clipping rectangle.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> avec les graphiques et le rectangle de découpage spécifiés.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> identified by the <ph id="ph2">`graphics`</ph> parameter is disposed when the <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> is disposed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> identifié par le <ph id="ph2">`graphics`</ph> paramètre est supprimé lorsque le <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> est supprimé.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
          <source>The following code examples draws lines and text on a <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> control.</source>
          <target state="translated">Les exemples de code suivant dessine des lignes et du texte dans un <ph id="ph1">&lt;xref:System.Windows.Forms.PictureBox&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>Gets the rectangle in which to paint.</source>
          <target state="translated">Obtient le rectangle dans lequel peindre.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> in which to paint.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Rectangle" /&gt;</ph> dans lequel peindre.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.ClipRectangle">
          <source>Then name the instance <ph id="ph1">`Control1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`Control1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.PaintEventArgs">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> rend le <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose&gt;</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.Windows.Forms.PaintEventArgs" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">`Dispose()`</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> appelle la méthode protégée <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs.Dispose%28System.Boolean%29&gt;</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> references.</source>
          <target state="translated">Lorsque le <ph id="ph1">`disposing`</ph> paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> références.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose()`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.PaintEventArgs.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.PaintEventArgs.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>Gets the graphics used to paint.</source>
          <target state="translated">Obtient le graphique utilisé pour peindre.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object used to paint.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> utilisé pour peindre.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object provides methods for drawing objects on the display device.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> fournit des méthodes permettant de dessiner des objets sur le périphérique d'affichage.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>The following example demonstrates handling the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and using the <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> class to draw rectangles on the form.</source>
          <target state="translated">L’exemple suivant illustre la gestion du <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement et à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> classe pour dessiner des rectangles sur le formulaire.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> events are handled to determine the size of the rectangle.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.MouseDown&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp&gt;</ph> les événements sont gérés pour déterminer la taille du rectangle.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.PaintEventArgs.Graphics">
          <source>The example also demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> method to invalidate the area of the rectangle, causing it to be redrawn.</source>
          <target state="translated">L’exemple illustre également la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph> méthode pour invalider la zone du rectangle, afin qu’il soit redessiné.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>