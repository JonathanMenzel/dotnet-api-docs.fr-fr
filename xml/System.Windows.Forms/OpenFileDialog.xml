<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27c208b91b334dc3aaf3f6e89db05e58b52c7da1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55346770" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="184ae-101">Affiche une boîte de dialogue standard qui invite l'utilisateur à ouvrir un fichier.</span><span class="sxs-lookup"><span data-stu-id="184ae-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="184ae-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="184ae-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-103">Cette classe vous permet de vérifier l’existence d’un fichier et ouvrez-le.</span><span class="sxs-lookup"><span data-stu-id="184ae-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="184ae-104">Le <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propriété détermine si une case à cocher en lecture seule apparaît dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="184ae-105">Le <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> propriété indique si la case à cocher en lecture seule est activé.</span><span class="sxs-lookup"><span data-stu-id="184ae-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="184ae-106">La plupart des fonctionnalités de base pour cette classe se trouve dans le <xref:System.Windows.Forms.FileDialog> classe.</span><span class="sxs-lookup"><span data-stu-id="184ae-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="184ae-107">Sur un système d’exploitation de droite à gauche, la définition du formulaire conteneur <xref:System.Windows.Forms.Control.RightToLeft> propriété <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localise la boîte de dialogue **nom de fichier**, **Open**, et **Annuler** boutons.</span><span class="sxs-lookup"><span data-stu-id="184ae-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="184ae-108">Si la propriété n’est pas définie <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, texte anglais est utilisé à la place.</span><span class="sxs-lookup"><span data-stu-id="184ae-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="184ae-109">Si vous souhaitez donner à l’utilisateur la possibilité de sélectionner un dossier au lieu d’un fichier, utilisez <xref:System.Windows.Forms.FolderBrowserDialog> à la place.</span><span class="sxs-lookup"><span data-stu-id="184ae-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="184ae-110">L’exemple de code suivant crée un <xref:System.Windows.Forms.OpenFileDialog>, définit plusieurs propriétés pour définir le comportement des extensions de fichier filtre et de la boîte de dialogue et affiche la boîte de dialogue à l’aide de la <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="184ae-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="184ae-111">L’exemple nécessite un formulaire avec un <xref:System.Windows.Forms.Button> placées sur elle et une référence à la <xref:System.IO> ajouté un espace de noms.</span><span class="sxs-lookup"><span data-stu-id="184ae-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="184ae-112">Comment : lire du texte dans un fichier</span><span class="sxs-lookup"><span data-stu-id="184ae-112">How to: Read Text from a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="184ae-113">Initialise une instance de la classe <see cref="T:System.Windows.Forms.OpenFileDialog" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-113">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-114">Il s’agit par défaut, fournis par le compilateur le constructeur pour la <xref:System.Windows.Forms.OpenFileDialog> classe.</span><span class="sxs-lookup"><span data-stu-id="184ae-114">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-115">Obtient ou définit une valeur indiquant si la boîte de dialogue affiche un message d'avertissement lorsque l'utilisateur spécifie un nom de fichier qui n'existe pas.</span><span class="sxs-lookup"><span data-stu-id="184ae-115">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="184ae-116"><see langword="true" /> si la boîte de dialogue affiche un message d'avertissement quand l'utilisateur spécifie un nom de fichier qui n'existe pas ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-116"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="184ae-117">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-117">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-118">Obtient ou définit une valeur indiquant si la boîte de dialogue permet de sélectionner plusieurs fichiers.</span><span class="sxs-lookup"><span data-stu-id="184ae-118">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value><span data-ttu-id="184ae-119"><see langword="true" /> si la boîte de dialogue autorise la sélection de plusieurs fichiers (ensemble ou en même temps) ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-119"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="184ae-120">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-121">Utilisez le <xref:System.Windows.Forms.FileDialog.FileNames%2A> propriété pour accéder à la liste complète des sélectionnée des noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="184ae-121">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="184ae-122">L’exemple de code suivant permet à l’utilisateur de sélectionner un nombre d’images et de les afficher dans <xref:System.Windows.Forms.PictureBox> contrôles sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="184ae-122">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="184ae-123">Il illustre l’initialisation d’un <xref:System.Windows.Forms.OpenFileDialog>, ce qui affecte le <xref:System.Windows.Forms.FileDialog.Title%2A> et <xref:System.Windows.Forms.FileDialog.Filter%2A> propriétés et autoriser l’utilisateur à sélectionner plusieurs fichiers en définissant le <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> true à la propriété.</span><span class="sxs-lookup"><span data-stu-id="184ae-123">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="184ae-124">Cet exemple de code suppose que votre formulaire possède déjà un <xref:System.Windows.Forms.OpenFileDialog> contrôle nommé `openFileDialog1`, un <xref:System.Windows.Forms.Button> nommé `SelectFileButton`et un <xref:System.Windows.Forms.FlowLayoutPanel> nommé `flowLayoutPanel1`.</span><span class="sxs-lookup"><span data-stu-id="184ae-124">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="184ae-125">Ouvre le fichier sélectionné par l'utilisateur en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="184ae-125">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="184ae-126">Le fichier est spécifié par la propriété <see cref="P:System.Windows.Forms.FileDialog.FileName" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-126">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="184ae-127"><see cref="T:System.IO.Stream" /> qui spécifie le fichier en lecture seule sélectionné par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="184ae-127">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-128">Le <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> méthode est utilisée pour permettre d’ouvrir rapidement un fichier à partir de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-128">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="184ae-129">Le fichier est ouvert en mode lecture seule pour des raisons de sécurité.</span><span class="sxs-lookup"><span data-stu-id="184ae-129">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="184ae-130">Pour ouvrir un fichier en mode lecture/écriture, vous devez utiliser une autre méthode, tel que <xref:System.IO.FileStream>.</span><span class="sxs-lookup"><span data-stu-id="184ae-130">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="184ae-131">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>.</span><span class="sxs-lookup"><span data-stu-id="184ae-131">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="184ae-132">Le nom de fichier est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-132">The file name is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission"><span data-ttu-id="184ae-133">Pour ouvrir un fichier.</span><span class="sxs-lookup"><span data-stu-id="184ae-133">to open a file.</span></span> <span data-ttu-id="184ae-134">Énumération associée : <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-134">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span></span></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-135">Obtient ou définit une valeur indiquant si la case lecture seule est cochée.</span><span class="sxs-lookup"><span data-stu-id="184ae-135">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value><span data-ttu-id="184ae-136"><see langword="true" /> si la case lecture seule est cochée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-136"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="184ae-137">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-137">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-138">Le <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> état n’affecte pas le mode de lecture/écriture qui <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> utilise pour ouvrir un fichier sélectionné dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-138">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="184ae-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> s’ouvre toujours le fichier en mode lecture seule.</span><span class="sxs-lookup"><span data-stu-id="184ae-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="184ae-140">Le <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propriété doit être définie avant afin que la case à cocher en lecture seule apparaissent dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-140">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="184ae-141">L’exemple de code suivant illustre l’utilisation de la <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="184ae-141">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="184ae-142">Cet exemple affiche le <xref:System.Windows.Forms.OpenFileDialog> zone avec le <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propriété définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="184ae-142">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="184ae-143">Si l’utilisateur clique sur l’option pour ouvrir le fichier en mode lecture seule, le <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> prend la valeur de propriété `true`et le <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> méthode est utilisée pour ouvrir le fichier.</span><span class="sxs-lookup"><span data-stu-id="184ae-143">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="184ae-144">Sinon, la <xref:System.IO.FileStream> classe est utilisée pour ouvrir le fichier en mode lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="184ae-144">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="184ae-145">Rétablit les valeurs par défaut de toutes les propriétés.</span><span class="sxs-lookup"><span data-stu-id="184ae-145">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-146">Obtient le nom et l’extension de fichier pour le fichier sélectionné dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-146">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="184ae-147">Le nom du fichier n’inclut pas le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-147">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="184ae-148">Nom et extension de fichier pour le fichier sélectionné dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-148">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="184ae-149">Le nom du fichier n'inclut pas le chemin d'accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-149">The file name does not include the path.</span></span> <span data-ttu-id="184ae-150">La valeur par défaut est une chaîne vide.</span><span class="sxs-lookup"><span data-stu-id="184ae-150">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-151">Un nom de fichier sécurisé (simplement le nom de fichier et l’extension sans un chemin d’accès) peut être utilisé pour améliorer la sécurité pour les applications, car elle n’expose pas les informations de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-151">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="184ae-152">Cette propriété doit être accessible au code s’exécutant avec une confiance limitée.</span><span class="sxs-lookup"><span data-stu-id="184ae-152">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-153">Obtient un tableau de noms et d’extensions de fichiers pour tous les fichiers sélectionnés dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-153">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="184ae-154">Les noms de fichiers n’incluent pas le chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-154">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="184ae-155">Tableau de noms et d'extensions de fichiers pour tous les fichiers sélectionnés dans la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="184ae-155">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="184ae-156">Les noms de fichiers n'incluent pas le chemin d'accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-156">The file names do not include the path.</span></span> <span data-ttu-id="184ae-157">Si aucun fichier n'est sélectionné, un tableau vide est retourné.</span><span class="sxs-lookup"><span data-stu-id="184ae-157">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="184ae-158">Un nom de fichier sécurisé (simplement le nom de fichier et l’extension sans un chemin d’accès) peut être utilisé pour améliorer la sécurité pour les applications, car elle n’expose pas les informations de chemin d’accès.</span><span class="sxs-lookup"><span data-stu-id="184ae-158">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="184ae-159">Cette propriété doit être accessible au code s’exécutant avec une confiance limitée.</span><span class="sxs-lookup"><span data-stu-id="184ae-159">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="184ae-160">Obtient ou définit une valeur indiquant si la boîte de dialogue comporte une case à cocher lecture seule.</span><span class="sxs-lookup"><span data-stu-id="184ae-160">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value><span data-ttu-id="184ae-161"><see langword="true" /> si la boîte de dialogue contient une case à cocher lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-161"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="184ae-162">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="184ae-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="184ae-163">L’exemple de code suivant illustre l’utilisation de la <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="184ae-163">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="184ae-164">Cet exemple affiche le <xref:System.Windows.Forms.OpenFileDialog> zone avec le <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propriété définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="184ae-164">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="184ae-165">Si l’utilisateur clique sur l’option pour ouvrir le fichier en mode lecture seule, le <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> méthode est utilisée pour ouvrir le fichier.</span><span class="sxs-lookup"><span data-stu-id="184ae-165">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="184ae-166">Sinon, la <xref:System.IO.FileStream> classe est utilisée pour ouvrir le fichier en mode lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="184ae-166">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>