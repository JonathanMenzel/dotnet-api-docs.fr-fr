<Type Name="BindingCompleteEventArgs" FullName="System.Windows.Forms.BindingCompleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2a320e5870ee4be35b1a906b2abea4cd62965a4f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36348400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BindingCompleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingCompleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingCompleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingCompleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingCompleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type BindingCompleteEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.BindingCompleteEventArgs> contient des informations concernant les exceptions ou les erreurs qui se sont produites lors d’un processus de liaison.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la gestion du <xref:System.Windows.Forms.Binding.BindingComplete> événement. Pour exécuter ce code, collez-le dans un fichier de code vide.  
  
 [!code-cpp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.DataConnectorBindingComplete#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataConnectorBindingComplete/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingCompleteEventArgs : System.Windows.Forms.Binding * System.Windows.Forms.BindingCompleteState * System.Windows.Forms.BindingCompleteContext -&gt; System.Windows.Forms.BindingCompleteEventArgs" Usage="new System.Windows.Forms.BindingCompleteEventArgs (binding, state, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
      </Parameters>
      <Docs>
        <param name="binding">Liaison d'un événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> associée à cette occurrence.</param>
        <param name="state">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteState" />.</param>
        <param name="context">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteContext" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> avec la liaison, l'état d'erreur et le contexte de liaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Indique si le processus de liaison a réussi ou si une erreur ou une exception s’est produite. `context` Indique si l’erreur s’est produite lors de la mise à jour le contrôle lié ou la source de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingCompleteEventArgs : System.Windows.Forms.Binding * System.Windows.Forms.BindingCompleteState * System.Windows.Forms.BindingCompleteContext * string -&gt; System.Windows.Forms.BindingCompleteEventArgs" Usage="new System.Windows.Forms.BindingCompleteEventArgs (binding, state, context, errorText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="binding">Liaison d'un événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> associée à cette occurrence.</param>
        <param name="state">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteState" />.</param>
        <param name="context">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteContext" />.</param>
        <param name="errorText">Texte d'erreur ou message d'exception des erreurs produites pendant la liaison.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> avec la liaison, l'état et le texte d'erreur et le contexte de liaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Indique si le processus de liaison a réussi ou si une erreur ou une exception s’est produite. `context` Indique si l’erreur s’est produite lors de la mise à jour le contrôle lié ou la source de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingCompleteEventArgs : System.Windows.Forms.Binding * System.Windows.Forms.BindingCompleteState * System.Windows.Forms.BindingCompleteContext * string * Exception -&gt; System.Windows.Forms.BindingCompleteEventArgs" Usage="new System.Windows.Forms.BindingCompleteEventArgs (binding, state, context, errorText, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="binding">Liaison d'un événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> associée à cette occurrence.</param>
        <param name="state">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteState" />.</param>
        <param name="context">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteContext" />.</param>
        <param name="errorText">Texte d'erreur ou message d'exception des erreurs produites pendant la liaison.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> qui s'est produit pendant la liaison.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> avec la liaison, l'état et le texte d'erreur, le contexte de liaison et l'exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Indique si le processus de liaison a réussi ou si une erreur ou une exception s’est produite. `context` Indique si l’erreur s’est produite lors de la mise à jour le contrôle lié ou la source de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingCompleteEventArgs (System.Windows.Forms.Binding binding, System.Windows.Forms.BindingCompleteState state, System.Windows.Forms.BindingCompleteContext context, string errorText, Exception exception, bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Binding binding, valuetype System.Windows.Forms.BindingCompleteState state, valuetype System.Windows.Forms.BindingCompleteContext context, string errorText, class System.Exception exception, bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingCompleteEventArgs.#ctor(System.Windows.Forms.Binding,System.Windows.Forms.BindingCompleteState,System.Windows.Forms.BindingCompleteContext,System.String,System.Exception,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingCompleteEventArgs(System::Windows::Forms::Binding ^ binding, System::Windows::Forms::BindingCompleteState state, System::Windows::Forms::BindingCompleteContext context, System::String ^ errorText, Exception ^ exception, bool cancel);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.BindingCompleteEventArgs : System.Windows.Forms.Binding * System.Windows.Forms.BindingCompleteState * System.Windows.Forms.BindingCompleteContext * string * Exception * bool -&gt; System.Windows.Forms.BindingCompleteEventArgs" Usage="new System.Windows.Forms.BindingCompleteEventArgs (binding, state, context, errorText, exception, cancel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Forms.Binding" />
        <Parameter Name="state" Type="System.Windows.Forms.BindingCompleteState" />
        <Parameter Name="context" Type="System.Windows.Forms.BindingCompleteContext" />
        <Parameter Name="errorText" Type="System.String" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="binding">Liaison d'un événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> associée à cette occurrence.</param>
        <param name="state">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteState" />.</param>
        <param name="context">Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteContext" />.</param>
        <param name="errorText">Texte d'erreur ou message d'exception des erreurs produites pendant la liaison.</param>
        <param name="exception">
          <see cref="T:System.Exception" /> qui s'est produit pendant la liaison.</param>
        <param name="cancel">
          <see langword="true" /> pour annuler la liaison et conserver le focus sur le contrôle actuel ; <see langword="false" /> pour autoriser le focus à se déplacer vers un autre contrôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> avec la liaison spécifiée, l'état ou le texte d'erreur, le contexte de liaison, l'exception et un message indiquant si la liaison doit être annulée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `state` Indique si le processus de liaison a réussi ou si une erreur ou une exception s’est produite. `context` Indique si l’erreur s’est produite lors de la mise à jour le contrôle lié ou la source de données.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Binding Binding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Binding Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.Binding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Binding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Binding ^ Binding { System::Windows::Forms::Binding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Forms.Binding" Usage="System.Windows.Forms.BindingCompleteEventArgs.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la liaison d'un événement <see cref="E:System.Windows.Forms.Binding.BindingComplete" /> associée à cette occurrence.</summary>
        <value>
          <see cref="T:System.Windows.Forms.Binding" /> associé à ce <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.BindingCompleteEventArgs.Binding%2A> peuvent également être associées avec la <xref:System.Windows.Forms.BindingSource.BindingComplete> l’événement d’un <xref:System.Windows.Forms.BindingSource> ou d’une classe qui hérite de <xref:System.Windows.Forms.BindingManagerBase>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment gérer les <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement et utilisez le <xref:System.Windows.Forms.BindingCompleteEventArgs> pour garantir que plusieurs contrôles liés à la même source de données restent synchronisés lorsque l’une des valeurs de contrôle est modifiée. Pour exécuter cet exemple, collez le code dans un Windows Form et appelez le `InitializeControlsAndData` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion d’événements.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="E:System.Windows.Forms.BindingSource.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="BindingCompleteContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingCompleteContext BindingCompleteContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingCompleteContext BindingCompleteContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingCompleteContext As BindingCompleteContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingCompleteContext BindingCompleteContext { System::Windows::Forms::BindingCompleteContext get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingCompleteContext : System.Windows.Forms.BindingCompleteContext" Usage="System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le sens de l'opération de liaison</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteContext" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment gérer les <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement et utilisez le <xref:System.Windows.Forms.BindingCompleteEventArgs> pour garantir que plusieurs contrôles liés à la même source de données restent synchronisés lorsque l’une des valeurs de contrôle est modifiée. Pour exécuter cet exemple, collez le code dans un Windows Form et appelez le `InitializeControlsAndData` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion d’événements.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingCompleteState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingCompleteState BindingCompleteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BindingCompleteState BindingCompleteState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingCompleteState As BindingCompleteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingCompleteState BindingCompleteState { System::Windows::Forms::BindingCompleteState get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingCompleteState : System.Windows.Forms.BindingCompleteState" Usage="System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'état d'achèvement de l'opération de liaison.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.BindingCompleteState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> pour déterminer si la liaison a réussi, ou une erreur ou une exception s’est produite.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.Binding> nommé `Binding1`. Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#77)]
 [!code-vb[System.Windows.Forms.EventExamples#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public string ErrorText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string" Usage="System.Windows.Forms.BindingCompleteEventArgs.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un texte de description de l'erreur qui s'est produite pendant l'opération de liaison.</summary>
        <value>Texte de description de l'erreur qui s'est produite pendant l'opération de liaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne une chaîne vide si aucune erreur ne s’est produite dans l’opération de liaison. Elle retourne la valeur de la <xref:System.Exception.Message%2A?displayProperty=nameWithType> propriété lorsqu’une exception se produit.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.Binding> nommé `Binding1`. Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Binding.BindingComplete?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#77)]
 [!code-vb[System.Windows.Forms.EventExamples#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#77)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingCompleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Forms.BindingCompleteEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'exception qui s'est produite pendant l'opération de liaison.</summary>
        <value>
          <see cref="T:System.Exception" /> qui s'est produit pendant l'opération de liaison.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété retourne `null` si une exception s’est pas produite pendant l’opération de liaison.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment gérer les <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement et utilisez le <xref:System.Windows.Forms.BindingCompleteEventArgs> pour garantir que plusieurs contrôles liés à la même source de données restent synchronisés lorsque l’une des valeurs de contrôle est modifiée. Pour exécuter cet exemple, collez le code dans un Windows Form et appelez le `InitializeControlsAndData` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion d’événements.  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>