<Type Name="DrawTreeNodeEventArgs" FullName="System.Windows.Forms.DrawTreeNodeEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b5237a64511cc5d9ac0ef7537e00b3c807722106" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39730683" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DrawTreeNodeEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DrawTreeNodeEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DrawTreeNodeEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawTreeNodeEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DrawTreeNodeEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.Windows.Forms.TreeView.DrawNode" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.TreeView.DrawNode> événement pour personnaliser l’apparence des nœuds dans un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn.  
  
 Le <xref:System.Windows.Forms.TreeView.DrawNode> événement est déclenché par un <xref:System.Windows.Forms.TreeView> contrôle lorsque ses <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType> ou <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType> et un nœud est affiché ou mis à jour. Le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> passé à l’événement Gestionnaire contient des informations sur le nœud à dessiner et fournit des méthodes pour vous aider à dessiner le nœud.  
  
 Utilisez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> ou <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propriétés à récupérer des informations sur le nœud à dessiner. Utilisez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> propriété pour le dessin proprement dit dans la zone spécifiée par la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propriété. Pour que le système d’exploitation dessine un nœud qui ne doive pas être owner-drawn, définissez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété `true`.  
  
 Lorsque le <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText?displayProperty=nameWithType>, la zone indiquée par le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propriété inclut la partie de l’étiquette du nœud uniquement. Lorsque le <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll?displayProperty=nameWithType>, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> zone inclut le nœud entier, y compris la zone utilisée en général pour les icônes, les cases à cocher, les signes, plus et moins tandis que les lignes qui connectent les nœuds.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn. Le <xref:System.Windows.Forms.TreeView> contrôle dans l’exemple affiche les balises de nœud facultatif en même temps que les étiquettes de nœud standard. Balises de nœud sont spécifiées à l’aide de la <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propriété. Le <xref:System.Windows.Forms.TreeView> contrôle utilise également des couleurs personnalisées, y compris une couleur de surbrillance.  
  
 Vous pouvez personnaliser la plupart de la <xref:System.Windows.Forms.TreeView> couleurs en définissant les propriétés de couleur, mais la couleur de surbrillance de sélection n’est pas disponible en tant que propriété. En outre, le rectangle de sélection par défaut s’étend uniquement autour d’une étiquette de nœud. Dessin owner-drawn doit être utilisé pour dessiner les balises de nœud et pour dessiner un rectangle de sélection personnalisé assez grand pour inclure une balise de nœud.  
  
 Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dessine événement les balises de nœud et la sélection personnalisée, mettez en surbrillance manuellement. Nœuds non sélectionnés n’avez pas besoin de personnalisation. Dans ce cas, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils seront dessinés par le système d’exploitation.  
  
 En outre, un gestionnaire pour le <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> événements fournit le test de positionnement. Par défaut, un nœud peut être sélectionné uniquement en cliquant sur la zone autour de son étiquette. Le <xref:System.Windows.Forms.Control.MouseDown?displayProperty=nameWithType> Gestionnaire d’événements sélectionne un nœud qui est un clic sur n’importe où dans cette région ou dans la région autour d’une balise de nœud, le cas échéant.  
  
 [!code-cpp[TreeViewOwnerDraw#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#1)]
 [!code-csharp[TreeViewOwnerDraw#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#1)]
 [!code-vb[TreeViewOwnerDraw#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TreeView" />
    <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
    <altmember cref="E:System.Windows.Forms.TreeView.DrawNode" />
    <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Graphics graphics, class System.Windows.Forms.TreeNode node, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.TreeNodeStates state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawTreeNodeEventArgs(System::Drawing::Graphics ^ graphics, System::Windows::Forms::TreeNode ^ node, System::Drawing::Rectangle bounds, System::Windows::Forms::TreeNodeStates state);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DrawTreeNodeEventArgs : System.Drawing.Graphics * System.Windows.Forms.TreeNode * System.Drawing.Rectangle * System.Windows.Forms.TreeNodeStates -&gt; System.Windows.Forms.DrawTreeNodeEventArgs" Usage="new System.Windows.Forms.DrawTreeNodeEventArgs (graphics, node, bounds, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
        <Parameter Name="node" Type="System.Windows.Forms.TreeNode" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.TreeNodeStates" />
      </Parameters>
      <Docs>
        <param name="graphics">Surface <see cref="T:System.Drawing.Graphics" /> sur laquelle dessiner.</param>
        <param name="node">
          <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> au sein duquel dessiner.</param>
        <param name="state">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TreeNodeStates" /> indiquant l'état actuel du <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'emplacement et la taille de <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</summary>
        <value>
          <see cref="T:System.Drawing.Rectangle" /> qui représente les limites du <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’emplacement spécifié par cette propriété est par rapport à l’angle supérieur gauche de la <xref:System.Windows.Forms.TreeView> contrôle.  
  
 Lorsque le <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText>, la zone spécifiée par la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propriété correspond à la région dans laquelle un nœud peut être activé pour le sélectionner. Si vous dessinez en dehors de cette région de test de positionnement, vous devez fournir votre propre code pour sélectionner un nœud lorsque vous cliquez sur sa zone visible. Vous pouvez également fournir votre propre test de positionnement code lorsque le <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=nameWithType> propriété est définie sur <xref:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll>. Dans ce mode, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> propriété englobe le nœud entier sur toute la largeur de la <xref:System.Windows.Forms.TreeView> contrôler, au lieu de la région de test de positionnement uniquement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn. Le <xref:System.Windows.Forms.TreeView> contrôle dans l’exemple affiche les balises de nœud facultatif en même temps que les étiquettes de nœud standard. Balises de nœud sont spécifiées à l’aide de la <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propriété. Le <xref:System.Windows.Forms.TreeView> contrôle utilise également des couleurs personnalisées, y compris une couleur de surbrillance.  
  
 Vous pouvez personnaliser la plupart de la <xref:System.Windows.Forms.TreeView> couleurs en définissant les propriétés de couleur, mais la couleur de surbrillance de sélection n’est pas disponible en tant que propriété. En outre, le rectangle de sélection par défaut s’étend uniquement autour d’une étiquette de nœud. Dessin owner-drawn doit être utilisé pour dessiner les balises de nœud et pour dessiner un rectangle de sélection personnalisé assez grand pour inclure une balise de nœud.  
  
 Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dessine événement les balises de nœud et la sélection personnalisée, mettez en surbrillance manuellement. Nœuds non sélectionnés n’avez pas besoin de personnalisation. Dans ce cas, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils seront dessinés par le système d’exploitation.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
        <altmember cref="P:System.Windows.Forms.TreeView.DrawMode" />
        <altmember cref="T:System.Windows.Forms.TreeViewDrawMode" />
      </Docs>
    </Member>
    <Member MemberName="DrawDefault">
      <MemberSignature Language="C#" Value="public bool DrawDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property DrawDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DrawDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DrawDefault : bool with get, set" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si <see cref="T:System.Windows.Forms.TreeNode" /> doit être dessiné par le système d'exploitation plutôt qu'être owner-drawn.</summary>
        <value>
          <see langword="true" /> si le nœud doit être dessiné par le système d'exploitation ; <see langword="false" /> si le nœud est dessiné dans le gestionnaire d'événements. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définissez cette propriété sur `true` pour les nœuds que vous ne souhaitez pas personnaliser lorsque vous gérez le <xref:System.Windows.Forms.TreeView.DrawNode> événement. Par exemple, cela est utile lorsque vous souhaitez personnaliser uniquement les nœuds qui sont dans un état spécifique.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de cette propriété. Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> événements Dessine la balise de nœud et personnalisé couleur de surbrillance manuellement pour le nœud sélectionné. Les nœuds qui ne sont pas sélectionnés n’avez pas besoin de personnalisation. Pour les nœuds non sélectionnés, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils soient dessinés par le système d’exploitation et n’aura pas d’apparence personnalisée.  
  
> [!NOTE]
>  Si vous dessinez un nœud manuellement et définissez également la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété `true`, tout ou partie de votre production peut être remplacé par le système d’exploitation.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
        <value>
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Graphics> classe fournit des propriétés et méthodes utiles pour le dessin sur le périphérique d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn. Le <xref:System.Windows.Forms.TreeView> contrôle dans l’exemple affiche les balises de nœud facultatif en même temps que les étiquettes de nœud standard. Balises de nœud sont spécifiées à l’aide de la <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propriété. Le <xref:System.Windows.Forms.TreeView> contrôle utilise également des couleurs personnalisées, y compris une couleur de surbrillance.  
  
 Vous pouvez personnaliser la plupart de la <xref:System.Windows.Forms.TreeView> couleurs en définissant les propriétés de couleur, mais la couleur de surbrillance de sélection n’est pas disponible en tant que propriété. En outre, le rectangle de sélection par défaut s’étend uniquement autour d’une étiquette de nœud. Dessin owner-drawn doit être utilisé pour dessiner les balises de nœud et pour dessiner un rectangle de sélection personnalisé assez grand pour inclure une balise de nœud.  
  
 Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dessine événement les balises de nœud et la sélection personnalisée, mettez en surbrillance manuellement. Nœuds non sélectionnés n’avez pas besoin de personnalisation. Dans ce cas, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils seront dessinés par le système d’exploitation.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNode Node { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TreeNode Node" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Node As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNode ^ Node { System::Windows::Forms::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Node : System.Windows.Forms.TreeNode" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</summary>
        <value>
          <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet d’accéder à la <xref:System.Windows.Forms.TreeNode> objet sur lequel dessiner. Cela est utile quand le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> propriété ne fournit pas les informations adéquates pour répondre à vos besoins. Le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> propriété fournit uniquement des informations d’état de base que vous pouvez utiliser, par exemple, pour déterminer si un nœud est sélectionné, activé ou concentré. Le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propriété, en revanche, vous permet à accéder à tous les membres de la <xref:System.Windows.Forms.TreeNode> objet. Vous devez accéder au nœud directement, par exemple, lorsque vous souhaitez déterminer son état d’extension.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn. Le <xref:System.Windows.Forms.TreeView> contrôle dans l’exemple affiche les balises de nœud facultatif en même temps que les étiquettes de nœud standard. Balises de nœud sont spécifiées à l’aide de la <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propriété. Le <xref:System.Windows.Forms.TreeView> contrôle utilise également des couleurs personnalisées, y compris une couleur de surbrillance.  
  
 Vous pouvez personnaliser la plupart de la <xref:System.Windows.Forms.TreeView> couleurs en définissant les propriétés de couleur, mais la couleur de surbrillance de sélection n’est pas disponible en tant que propriété. En outre, le rectangle de sélection par défaut s’étend uniquement autour d’une étiquette de nœud. Dessin owner-drawn doit être utilisé pour dessiner les balises de nœud et pour dessiner un rectangle de sélection personnalisé assez grand pour inclure une balise de nœud.  
  
 Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dessine événement les balises de nœud et la sélection personnalisée, mettez en surbrillance manuellement. Nœuds non sélectionnés n’avez pas besoin de personnalisation. Dans ce cas, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils seront dessinés par le système d’exploitation.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.Text" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TreeNodeStates State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TreeNodeStates State" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As TreeNodeStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TreeNodeStates State { System::Windows::Forms::TreeNodeStates get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Windows.Forms.TreeNodeStates" Usage="System.Windows.Forms.DrawTreeNodeEventArgs.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TreeNodeStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'état actuel de <see cref="T:System.Windows.Forms.TreeNode" /> à dessiner.</summary>
        <value>Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TreeNodeStates" /> indiquant l'état actuel du <see cref="T:System.Windows.Forms.TreeNode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour vérifier si le <xref:System.Windows.Forms.TreeNode> objet sur lequel dessiner est dans un état particulier. Cette propriété fournit uniquement les informations d’état de base sur le nœud. Vous pouvez utiliser cette propriété, par exemple, pour déterminer si un nœud est sélectionné, activé ou concentré. Si vous avez besoin pour en savoir plus, récupérez le nœud via la <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> propriété. Par exemple, pour déterminer si le nœud est développé, vous devez récupérer le nœud et vérifier la <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=nameWithType> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment personnaliser un <xref:System.Windows.Forms.TreeView> contrôle à l’aide de dessin owner-drawn. Le <xref:System.Windows.Forms.TreeView> contrôle dans l’exemple affiche les balises de nœud facultatif en même temps que les étiquettes de nœud standard. Balises de nœud sont spécifiées à l’aide de la <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=nameWithType> propriété. Le <xref:System.Windows.Forms.TreeView> contrôle utilise également des couleurs personnalisées, y compris une couleur de surbrillance.  
  
 Vous pouvez personnaliser la plupart de la <xref:System.Windows.Forms.TreeView> couleurs en définissant les propriétés de couleur, mais la couleur de surbrillance de sélection n’est pas disponible en tant que propriété. En outre, le rectangle de sélection par défaut s’étend uniquement autour d’une étiquette de nœud. Dessin owner-drawn doit être utilisé pour dessiner les balises de nœud et pour dessiner un rectangle de sélection personnalisé assez grand pour inclure une balise de nœud.  
  
 Dans l’exemple, un gestionnaire pour le <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=nameWithType> dessine événement les balises de nœud et la sélection personnalisée, mettez en surbrillance manuellement. Nœuds non sélectionnés n’avez pas besoin de personnalisation. Dans ce cas, le <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> propriété est définie sur `true` afin qu’ils seront dessinés par le système d’exploitation.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.DrawTreeNodeEventArgs> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[TreeViewOwnerDraw#3](~/samples/snippets/cpp/VS_Snippets_Winforms/TreeViewOwnerDraw/CPP/treeviewownerdraw.cpp#3)]
 [!code-csharp[TreeViewOwnerDraw#3](~/samples/snippets/csharp/VS_Snippets_Winforms/TreeViewOwnerDraw/CS/treeviewownerdraw.cs#3)]
 [!code-vb[TreeViewOwnerDraw#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TreeViewOwnerDraw/VB/treeviewownerdraw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DrawTreeNodeEventArgs.Node" />
        <altmember cref="T:System.Windows.Forms.TreeNode" />
        <altmember cref="P:System.Windows.Forms.TreeNode.IsExpanded" />
        <altmember cref="T:System.Windows.Forms.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>