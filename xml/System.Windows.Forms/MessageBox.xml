<Type Name="MessageBox" FullName="System.Windows.Forms.MessageBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed3e050db04583c9bfb4106c1a421571a64f0b38" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30651483" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageBox extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.MessageBox" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Affiche une fenêtre de message, également appelée une boîte de dialogue qui affiche un message à l'utilisateur. Il s'agit d'une fenêtre modale, bloquant les autres actions dans l'application jusqu'à ce que l'utilisateur la ferme. Une <see cref="T:System.Windows.Forms.MessageBox" /> peut contenir du texte, des boutons et des symboles donnant des informations et des instructions à l'utilisateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas créer une nouvelle instance de la <xref:System.Windows.Forms.MessageBox> classe. Pour afficher une boîte de message, appelez le `static` méthode <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType>. Le titre, message, des boutons et les icônes affichées dans la boîte de message sont déterminés par les paramètres que vous passez à cette méthode.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser un <xref:System.Windows.Forms.MessageBox> pour informer l’utilisateur d’une entrée manquante dans un <xref:System.Windows.Forms.TextBox>. Cet exemple nécessite que la méthode est appelée à partir d’un formulaire existant avec un <xref:System.Windows.Forms.TextBox> nommé **nom_serveur** dessus.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 L’exemple de code suivant montre comment demander à l’utilisateur une question Oui ou non et prendre une décision en fonction de la réponse.  
  
 [!code-cpp[Classic MessageBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MessageBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MessageBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MessageBox Example/CS/source.cs#1)]
 [!code-vb[Classic MessageBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MessageBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Affiche une boîte de message.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message avec le texte spécifié.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, la boîte de message affiche une **OK** bouton. La boîte de message ne contient pas d’une légende dans le titre.  
  
   
  
## Examples  
 L’exemple de code suivant affiche une boîte de message simple.  
  
 [!code-csharp[MessageBox.Show Variations#6](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#6)]
 [!code-vb[MessageBox.Show Variations#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres définir cette propriété. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <summary>Affiche une boîte de message avec le texte et la légende spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, la boîte de message affiche une **OK** bouton.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié et avec le texte spécifié.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Par défaut, la boîte de message affiche une **OK** bouton. La boîte de message ne contient pas d’une légende dans le titre.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message avec le texte, la légende et le texte spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox>, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#1)]
 [!code-csharp[MessageBox.Show Variations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#1)]
 [!code-vb[MessageBox.Show Variations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le paramètre <paramref name="buttons" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié, et avec le texte et la légende spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Par défaut, la boîte de message affiche une **OK** bouton.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons et l'icône spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’un de le <xref:System.Windows.Forms.MessageBox.Show%2A> méthodes lors du traitement de la <xref:System.Windows.Forms.ComboBox.DropDown?displayProperty=nameWithType> événement. Pour exécuter l’exemple, collez le code suivant dans un formulaire et appelez le `InitializeComboBox` méthode à partir du constructeur du formulaire ou `Load` (méthode).  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Le paramètre <paramref name="buttons" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 Le paramètre <paramref name="icon" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié, et avec le texte, la légende et les boutons spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox>, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#5](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#5)]
 [!code-csharp[MessageBox.Show Variations#5](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#5)]
 [!code-vb[MessageBox.Show Variations#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône et le bouton par défaut spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox> avec une icône de zone de question, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#3](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#3)]
 [!code-csharp[MessageBox.Show Variations#3](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#3)]
 [!code-vb[MessageBox.Show Variations#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 <paramref name="defaultButton" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié, et avec le texte, la légende, les boutons et l'icône spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox>, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#4](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#4)]
 [!code-csharp[MessageBox.Show Variations#4](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#4)]
 [!code-vb[MessageBox.Show Variations#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox> avec une icône de zone de question, offrant à l’utilisateur la possibilité d’annuler l’opération. L’exemple utilise le <xref:System.Windows.Forms.MessageBoxOptions.RightAlign> membre de la <xref:System.Windows.Forms.MessageBoxOptions> énumération pour aligner le texte sur le bord droit de la boîte de dialogue. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié, et avec le texte, la légende, les boutons, l'icône et le bouton par défaut spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox>, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 <paramref name="defaultButton" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, bool displayHelpButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, displayHelpButton As Boolean) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, bool displayHelpButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="displayHelpButton" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="displayHelpButton">
          <see langword="true" /> pour afficher le bouton Aide ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que le bouton Aide.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit le <xref:System.Windows.Forms.Control.HelpRequested> événement. Gérer les <xref:System.Windows.Forms.Control.HelpRequested> événement pour effectuer des actions d’aide personnalisées.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message avec un bouton aide, gérer les <xref:System.Windows.Forms.Control.HelpRequested?displayProperty=nameWithType> d’événements et afficher une fenêtre d’aide personnalisée en réponse à l’événement.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.MessageBox with Help#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que bouton Aide avec le fichier d'aide spécifié.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Lorsque l’utilisateur clique sur bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message avec un bouton aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#3)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#3)]
[!code-vb[System.Windows.Forms.MessageBox with Help#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <summary>Affiche une boîte de message devant l'objet spécifié, et avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue. Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Vous pouvez avoir un maximum de trois boutons dans la boîte de message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un <xref:System.Windows.Forms.MessageBox> avec les options prises en charge par cette surcharge de <xref:System.Windows.Forms.MessageBox.Show%2A>. Après avoir vérifié qu’une variable de chaîne `ServerName`, est vide, l’exemple affiche un <xref:System.Windows.Forms.MessageBox>, offrant à l’utilisateur la possibilité d’annuler l’opération. Si le <xref:System.Windows.Forms.MessageBox.Show%2A> prend la valeur de valeur de retour de la méthode <xref:System.Windows.Forms.DialogResult.Yes>, le formulaire qui affiche le <xref:System.Windows.Forms.MessageBox> est fermé.  
  
 [!code-cpp[MessageBox.Show Variations#2](~/samples/snippets/cpp/VS_Snippets_Winforms/MessageBox.Show Variations/CPP/form1.cpp#2)]
 [!code-csharp[MessageBox.Show Variations#2](~/samples/snippets/csharp/VS_Snippets_Winforms/MessageBox.Show Variations/CS/form1.cs#2)]
 [!code-vb[MessageBox.Show Variations#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/MessageBox.Show Variations/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 <paramref name="defaultButton" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="options" /> a spécifié <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> ou <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" /> et a indiqué une valeur dans le paramètre <paramref name="owner" />. Ces deux options ne doivent être utilisées que pour appeler la version de cette méthode qui ne prend pas un paramètre <paramref name="owner" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="keyword">Mot clé d'aide à afficher quand l'utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que bouton Aide avec le fichier d'aide spécifié et le mot clé d'aide.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et la rubrique d’aide (mot clé) identifié par le `keyword` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message avec un bouton aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert et la rubrique identifiée par le `mspaint.chm::/paint_brush.htm` mot clé s’affiche. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#9)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#9)]
[!code-vb[System.Windows.Forms.MessageBox with Help#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="navigator">Une des valeurs de <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que le bouton Aide avec le fichier d'aide et le <see langword="HelpNavigator" /> spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et le contenu d’aide identifié par le `navigator` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Aide compilés fournissent des fichiers de table des matières, d’index, de recherche et de liens dans les pages. Vous pouvez utiliser les valeurs suivantes pour `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message avec un bouton aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert et l’onglet index d’aide s’affiche. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#5)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#5)]
[!code-vb[System.Windows.Forms.MessageBox with Help#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que bouton Aide avec le fichier d'aide spécifié.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire. Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message apparenté au formulaire principal. La boîte de message affiche un bouton d’aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#4)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#4)]
[!code-vb[System.Windows.Forms.MessageBox with Help#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="navigator">Une des valeurs de <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <param name="param">ID numérique de la rubrique d'aide à afficher quand l'utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que le bouton Aide avec le fichier d'aide, le <see langword="HelpNavigator" /> et la rubrique d'aide spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et le contenu d’aide identifié par le `navigator` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Aide compilés fournissent des fichiers de table des matières, d’index, de recherche et de liens dans les pages. Vous pouvez utiliser les valeurs suivantes pour `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Vous pouvez utiliser `param` pour affiner la <xref:System.Windows.Forms.HelpNavigator.Topic> commande. Si la valeur spécifiée dans le `navigator` paramètre est <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Find>, cette valeur doit être `null`. Si le `navigator` références de paramètre <xref:System.Windows.Forms.HelpNavigator.Topic>, cette valeur doit faire référence à un objet qui contient la valeur numérique de la rubrique à afficher.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher une boîte de message avec un bouton aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` aide fichier est ouvert et l’onglet index d’aide et la rubrique identifiée par le `ovals` (mot clé) sont affichés. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#7)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#7)]
[!code-vb[System.Windows.Forms.MessageBox with Help#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, keyword As String) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::String ^ keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="keyword">Mot clé d'aide à afficher quand l'utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que bouton Aide avec le fichier d'aide spécifié et le mot clé d'aide.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire. Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de propriétaire de niveau supérieur de la boîte de dialogue.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et la rubrique d’aide (mot clé) identifié par le `keyword` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un message apparenté à la fenêtre principale. La boîte de message affiche un bouton d’aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert et la rubrique identifiée par le `mspaint.chm::/paint_brush.htm` mot clé s’affiche. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#10)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#10)]
[!code-vb[System.Windows.Forms.MessageBox with Help#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="navigator">Une des valeurs de <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que le bouton Aide avec le fichier d'aide et le <see langword="HelpNavigator" /> spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire. Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et le contenu d’aide identifié par le `navigator` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Aide compilés fournissent des fichiers de table des matières, d’index, de recherche et de liens dans les pages. Vous pouvez utiliser les valeurs suivantes pour `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un message apparenté à la fenêtre principale. La boîte de message affiche un bouton d’aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` fichier d’aide est ouvert et l’onglet index d’aide s’affiche. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#6)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#6)]
[!code-vb[System.Windows.Forms.MessageBox with Help#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.DialogResult Show (System.Windows.Forms.IWin32Window owner, string text, string caption, System.Windows.Forms.MessageBoxButtons buttons, System.Windows.Forms.MessageBoxIcon icon, System.Windows.Forms.MessageBoxDefaultButton defaultButton, System.Windows.Forms.MessageBoxOptions options, string helpFilePath, System.Windows.Forms.HelpNavigator navigator, object param);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Forms.DialogResult Show(class System.Windows.Forms.IWin32Window owner, string text, string caption, valuetype System.Windows.Forms.MessageBoxButtons buttons, valuetype System.Windows.Forms.MessageBoxIcon icon, valuetype System.Windows.Forms.MessageBoxDefaultButton defaultButton, valuetype System.Windows.Forms.MessageBoxOptions options, string helpFilePath, valuetype System.Windows.Forms.HelpNavigator navigator, object param) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.MessageBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.Forms.MessageBoxDefaultButton,System.Windows.Forms.MessageBoxOptions,System.String,System.Windows.Forms.HelpNavigator,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As IWin32Window, text As String, caption As String, buttons As MessageBoxButtons, icon As MessageBoxIcon, defaultButton As MessageBoxDefaultButton, options As MessageBoxOptions, helpFilePath As String, navigator As HelpNavigator, param As Object) As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::DialogResult Show(System::Windows::Forms::IWin32Window ^ owner, System::String ^ text, System::String ^ caption, System::Windows::Forms::MessageBoxButtons buttons, System::Windows::Forms::MessageBoxIcon icon, System::Windows::Forms::MessageBoxDefaultButton defaultButton, System::Windows::Forms::MessageBoxOptions options, System::String ^ helpFilePath, System::Windows::Forms::HelpNavigator navigator, System::Object ^ param);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.IWin32Window" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="buttons" Type="System.Windows.Forms.MessageBoxButtons" />
        <Parameter Name="icon" Type="System.Windows.Forms.MessageBoxIcon" />
        <Parameter Name="defaultButton" Type="System.Windows.Forms.MessageBoxDefaultButton" />
        <Parameter Name="options" Type="System.Windows.Forms.MessageBoxOptions" />
        <Parameter Name="helpFilePath" Type="System.String" />
        <Parameter Name="navigator" Type="System.Windows.Forms.HelpNavigator" />
        <Parameter Name="param" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="owner">Implémentation de <see cref="T:System.Windows.Forms.IWin32Window" /> qui sera propriétaire de la boîte de dialogue modale.</param>
        <param name="text">Texte à afficher dans la boîte de message.</param>
        <param name="caption">Texte à afficher dans la barre de titre de la boîte de message.</param>
        <param name="buttons">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxButtons" /> spécifiant les boutons à afficher dans la boîte de message.</param>
        <param name="icon">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxIcon" /> spécifiant l'icône à afficher dans la boîte de message.</param>
        <param name="defaultButton">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" /> spécifiant le bouton par défaut de la boîte de message.</param>
        <param name="options">Une des valeurs de <see cref="T:System.Windows.Forms.MessageBoxOptions" /> spécifiant les options d'affichage et d'association à utiliser dans la boîte de message. Vous pouvez passer la valeur 0 si vous voulez utiliser les valeurs par défaut.</param>
        <param name="helpFilePath">Chemin d’accès et nom du fichier d’aide à afficher quand l’utilisateur clique sur le bouton Aide.</param>
        <param name="navigator">Une des valeurs de <see cref="T:System.Windows.Forms.HelpNavigator" />.</param>
        <param name="param">ID numérique de la rubrique d'aide à afficher quand l'utilisateur clique sur le bouton Aide.</param>
        <summary>Affiche une boîte de message avec le texte, la légende, les boutons, l'icône, le bouton par défaut et les options spécifiés, ainsi que le bouton Aide avec le fichier d'aide, le <see langword="HelpNavigator" /> et la rubrique d'aide spécifiés.</summary>
        <returns>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de message est une boîte de dialogue modale, ce qui signifie qu'aucune entrée (clavier ou la souris) ne peut se produire sauf aux objets sur le formulaire modal. Le programme doit masquer ou fermer le formulaire modal (généralement en réponse à une action de l’utilisateur) avant qu’une entrée à un autre formulaire peut se produire. Vous pouvez utiliser la `owner` paramètre pour spécifier un objet particulier, qui implémente le <xref:System.Windows.Forms.IWin32Window> interface, qui servira de fenêtre de niveau supérieur et le propriétaire de la boîte de dialogue.  
  
 Lorsque l’utilisateur clique sur le bouton aide, le fichier d’aide spécifié dans le `helpFilePath` paramètre est ouvert et le contenu d’aide identifié par le `navigator` paramètre est affiché. Le formulaire propriétaire de la boîte de message (ou le formulaire actif) reçoit aussi le <xref:System.Windows.Forms.Control.HelpRequested> événement.  
  
 Aide compilés fournissent des fichiers de table des matières, d’index, de recherche et de liens dans les pages. Vous pouvez utiliser les valeurs suivantes pour `navigator`: <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Find>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Topic>.  
  
 Vous pouvez utiliser `param` pour affiner la <xref:System.Windows.Forms.HelpNavigator.Topic> commande. Si la valeur spécifiée dans le `navigator` paramètre est <xref:System.Windows.Forms.HelpNavigator.TableOfContents>, <xref:System.Windows.Forms.HelpNavigator.Index>, ou <xref:System.Windows.Forms.HelpNavigator.Find>, cette valeur doit être `null`. Si le `navigator` références de paramètre <xref:System.Windows.Forms.HelpNavigator.Topic>, cette valeur doit faire référence à un objet qui contient la valeur numérique de la rubrique à afficher.  
  
 Le `helpFilePath` paramètre peut être du formulaire C:\path\sample.chm ou "/folder/file.htm".  
  
   
  
## Examples  
 L’exemple de code suivant montre comment afficher un message apparenté à la fenêtre principale. La boîte de message affiche un bouton d’aide. Lorsque l’utilisateur clique sur le bouton aide, le `Mspaint.chm` aide fichier est ouvert et l’onglet index d’aide et la rubrique identifiée par le `ovals` (mot clé) sont affichés. L’exemple requiert que le `Mspaint.chm` fichier d’aide est installé.  
  
 [!code-cpp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.MessageBox with Help#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CPP/form1.cpp#8)]
[!code-csharp[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/CS/form1.cs#8)]
[!code-vb[System.Windows.Forms.MessageBox with Help#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MessageBox with Help/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="buttons" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.  
  
 - ou -  
  
 <paramref name="icon" /> n'est pas membre de <see cref="T:System.Windows.Forms.MessageBoxIcon" />.  
  
 - ou -  
  
 Le <paramref name="defaultButton" /> spécifié n'est pas un membre de <see cref="T:System.Windows.Forms.MessageBoxDefaultButton" />.</exception>
        <exception cref="T:System.InvalidOperationException">Une tentative d'affichage du <see cref="T:System.Windows.Forms.MessageBox" /> a eu lieu dans un processus qui n'est pas exécuté en mode utilisateur interactif. Cela est spécifié par la propriété <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="options" /> a spécifié à la fois <see cref="F:System.Windows.Forms.MessageBoxOptions.DefaultDesktopOnly" /> et <see cref="F:System.Windows.Forms.MessageBoxOptions.ServiceNotification" />.  
  
 - ou -  
  
 <paramref name="buttons" /> a spécifié une combinaison non valide de <see cref="T:System.Windows.Forms.MessageBoxButtons" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">pour les sous-fenêtres sécurisées d’appeler cette méthode. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></permission>
        <permission cref="T:System.Net.WebPermission">Pour accéder à un fichier d’aide HTML via une requête HTTP. Énumération associée : <see cref="F:System.Net.NetworkAccess.Connect" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder à un fichier d’aide HTML non pris en charge à partir d’un serveur HTTP. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Forms.MessageBoxButtons" />
        <altmember cref="T:System.Windows.Forms.MessageBoxIcon" />
        <altmember cref="T:System.Windows.Forms.MessageBoxDefaultButton" />
        <altmember cref="T:System.Windows.Forms.MessageBoxOptions" />
      </Docs>
    </Member>
  </Members>
</Type>