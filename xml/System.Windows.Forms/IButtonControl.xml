<Type Name="IButtonControl" FullName="System.Windows.Forms.IButtonControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17c404975336213b8a6fe8529180753c05d3a2da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30638553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Permet à un contrôle d'agir comme un bouton sur un formulaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un exemple d’où cette interface peut être implémentée est par défaut et le traitement du bouton Annuler. Les boutons par défaut sont avertis lorsqu’une touche entrée non traitée est entrée pour un formulaire, comme la fermeture d’une boîte de dialogue. Annulation de la même façon, les boutons sont avertis lorsqu’une touche ÉCHAP non traitée est entrée beaucoup d’un formulaire, comme une boîte de dialogue fermeture.  
  
   
  
## Examples  
 L’exemple suivant hérite de la <xref:System.Windows.Forms.ButtonBase> classe et implémente la <xref:System.Windows.Forms.IButtonControl> interface. L’implémentation est ajoutée à la <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> propriété et la <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> et <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> méthodes.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Implémentez cette interface dans les classes qui agissent comme des contrôles de bouton. Les membres de cette interface fournit des fonctionnalités de bouton de base, tel que fournir un <see cref="T:System.Windows.Forms.DialogResult" /> au formulaire parent ou la possibilité d’effectuer une <see cref="E:System.Windows.Forms.Control.Click" /> agissant en tant que le bouton par défaut d’un formulaire ou événements.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.Form" />
  </Docs>
  <Members>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IButtonControl.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur retournée au formulaire parent lorsque l'utilisateur clique sur le bouton.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Quand un formulaire est affiché comme une boîte de dialogue à l’aide de la <xref:System.Windows.Forms.Form.ShowDialog%2A> (méthode) et un de ses boutons est activé, le bouton <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> valeur est assignée à du formulaire <xref:System.Windows.Forms.Form.DialogResult%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant hérite de la <xref:System.Windows.Forms.ButtonBase> classe et implémente la <xref:System.Windows.Forms.IButtonControl> interface. L’implémentation est ajoutée à la <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> propriété et la <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> et <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> méthodes.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
        <altmember cref="P:System.Windows.Forms.Form.CancelButton" />
        <altmember cref="P:System.Windows.Forms.Form.DialogResult" />
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDefault(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see langword="true" /> si le contrôle doit se comporter comme un bouton par défaut ; sinon <see langword="false" />.</param>
        <summary>Avertit un contrôle qu'il est le bouton par défaut de sorte que son apparence et son comportement soient ajustés en conséquence.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par un formulaire parent pour rendre un contrôle bouton par défaut. Les boutons par défaut sont définies pour avoir une bordure très épaisse.  
  
   
  
## Examples  
 L’exemple suivant hérite de la <xref:System.Windows.Forms.ButtonBase> classe et implémente la <xref:System.Windows.Forms.IButtonControl> interface. L’implémentation est ajoutée à la <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> propriété et la <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> et <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> méthodes.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IButtonControl.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Génère un événement <see cref="E:System.Windows.Forms.Control.Click" /> pour le contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée pour le bouton qui a le focus ou pour le bouton par défaut (si aucun autre bouton n’a le focus) lorsque l’utilisateur appuie sur la touche ENTRÉE. Cette méthode est également appelée lorsque l’utilisateur appuie sur la touche ÉCHAP si le bouton est défini comme bouton Annuler.  
  
   
  
## Examples  
 L’exemple suivant hérite de la <xref:System.Windows.Forms.ButtonBase> classe et implémente la <xref:System.Windows.Forms.IButtonControl> interface. L’implémentation est ajoutée à la <xref:System.Windows.Forms.IButtonControl.DialogResult%2A> propriété et la <xref:System.Windows.Forms.IButtonControl.NotifyDefault%2A> et <xref:System.Windows.Forms.IButtonControl.PerformClick%2A> méthodes.  
  
 [!code-cpp[IButtonControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IButtonControl Implementation/CPP/mybutton.cpp#1)]
 [!code-csharp[IButtonControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IButtonControl Implementation/CS/mybutton.cs#1)]
 [!code-vb[IButtonControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IButtonControl Implementation/VB/mybutton.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
  </Members>
</Type>