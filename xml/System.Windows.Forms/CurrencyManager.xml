<Type Name="CurrencyManager" FullName="System.Windows.Forms.CurrencyManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f03783a5b916963541b9e896c90a98d618b29bed" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57935274" /></Metadata><TypeSignature Language="C#" Value="public class CurrencyManager : System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CurrencyManager extends System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CurrencyManager" />
  <TypeSignature Language="VB.NET" Value="Public Class CurrencyManager&#xA;Inherits BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CurrencyManager : System::Windows::Forms::BindingManagerBase" />
  <TypeSignature Language="F#" Value="type CurrencyManager = class&#xA;    inherit BindingManagerBase" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.BindingManagerBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="903da-101">Gère une liste d'objets <see cref="T:System.Windows.Forms.Binding" />.</span><span class="sxs-lookup"><span data-stu-id="903da-101">Manages a list of <see cref="T:System.Windows.Forms.Binding" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-102">Le <xref:System.Windows.Forms.CurrencyManager> dérive le <xref:System.Windows.Forms.BindingManagerBase> classe.</span><span class="sxs-lookup"><span data-stu-id="903da-102">The <xref:System.Windows.Forms.CurrencyManager> derives from the <xref:System.Windows.Forms.BindingManagerBase> class.</span></span> <span data-ttu-id="903da-103">Utilisez le <xref:System.Windows.Forms.BindingContext> pour retourner un <xref:System.Windows.Forms.CurrencyManager> ou un <xref:System.Windows.Forms.PropertyManager>.</span><span class="sxs-lookup"><span data-stu-id="903da-103">Use the <xref:System.Windows.Forms.BindingContext> to return either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="903da-104">L’objet réel retourné dépend de la source de données et données membres passées à la <xref:System.Windows.Forms.BindingContext.Item%2A> propriété de la <xref:System.Windows.Forms.BindingContext>.</span><span class="sxs-lookup"><span data-stu-id="903da-104">The actual object returned depends on the data source and data member passed to the <xref:System.Windows.Forms.BindingContext.Item%2A> property of the <xref:System.Windows.Forms.BindingContext>.</span></span> <span data-ttu-id="903da-105">Si la source de données est un objet qui peut retourner qu’une seule propriété (au lieu d’une liste d’objets), le type sera un <xref:System.Windows.Forms.PropertyManager>.</span><span class="sxs-lookup"><span data-stu-id="903da-105">If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <xref:System.Windows.Forms.PropertyManager>.</span></span> <span data-ttu-id="903da-106">Par exemple, si vous spécifiez un <xref:System.Windows.Forms.TextBox> comme source de données, un <xref:System.Windows.Forms.PropertyManager> sera retourné.</span><span class="sxs-lookup"><span data-stu-id="903da-106">For example, if you specify a <xref:System.Windows.Forms.TextBox> as the data source, a <xref:System.Windows.Forms.PropertyManager> will be returned.</span></span> <span data-ttu-id="903da-107">Si, en revanche, la source de données est un objet qui implémente le <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, ou <xref:System.ComponentModel.IBindingList> interface, un <xref:System.Windows.Forms.CurrencyManager> sera retourné.</span><span class="sxs-lookup"><span data-stu-id="903da-107">If, on the other hand, the data source is an object that implements the <xref:System.Collections.IList>, <xref:System.ComponentModel.IListSource>, or <xref:System.ComponentModel.IBindingList> interface, a <xref:System.Windows.Forms.CurrencyManager> will be returned.</span></span>  
  
 <span data-ttu-id="903da-108">Le <xref:System.Windows.Forms.BindingManagerBase.Current%2A> propriété retourne l’élément actuel dans la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="903da-108">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property returns the current item in the underlying list.</span></span> <span data-ttu-id="903da-109">Pour modifier l’élément actuel, définissez le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété à une nouvelle valeur.</span><span class="sxs-lookup"><span data-stu-id="903da-109">To change the current item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to a new value.</span></span> <span data-ttu-id="903da-110">La valeur doit être supérieure à 0 et doit être inférieure à la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="903da-110">The value must be greater than 0 and must be less than the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="903da-111">Si la source de données sous-jacente implémente le <xref:System.ComponentModel.IBindingList> interface et le <xref:System.ComponentModel.IBindingList.AllowNew%2A> propriété est définie sur `true`, vous pouvez utiliser le <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="903da-111">If the underlying data source implements the <xref:System.ComponentModel.IBindingList> interface, and the <xref:System.ComponentModel.IBindingList.AllowNew%2A> property is set to `true`, you can use the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-112">Le code suivant exemple lie un <xref:System.Windows.Forms.TextBox> contrôle à une colonne dans un <xref:System.Data.DataTable>, obtient le <xref:System.Windows.Forms.CurrencyManager> pour la liaison et définit sa position.</span><span class="sxs-lookup"><span data-stu-id="903da-112">The following code example binds a <xref:System.Windows.Forms.TextBox> control to a column in a <xref:System.Data.DataTable>, gets the <xref:System.Windows.Forms.CurrencyManager> for the binding, and sets its position.</span></span>  
  
 [!code-cpp[Classic CurrencyManager Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.Binding" />
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public override void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddNew();" />
      <MemberSignature Language="F#" Value="override this.AddNew : unit -&gt; unit" Usage="currencyManager.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-113">Ajoute un nouvel élément à la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="903da-113">Adds a new item to the underlying list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-114">Cette méthode est prise en charge uniquement si la source de données implémente la <xref:System.ComponentModel.IBindingList> interface et la source de données permet d’ajouter des lignes (<xref:System.ComponentModel.IBindingList.AllowNew%2A> est `true`).</span><span class="sxs-lookup"><span data-stu-id="903da-114">This method is supported only if the data source implements the <xref:System.ComponentModel.IBindingList> interface and the data source allows adding rows (<xref:System.ComponentModel.IBindingList.AllowNew%2A> is `true`).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-115">Cette propriété a été conçue pour permettre aux contrôles liés complexes, tels que le <xref:System.Windows.Forms.DataGrid> contrôle, à ajouter de nouveaux éléments de liste.</span><span class="sxs-lookup"><span data-stu-id="903da-115">This property was designed to allow complex-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to add new items to list.</span></span>  
  
 <span data-ttu-id="903da-116">Vous utilisez généralement cette propriété uniquement si vous créez votre propre contrôle qui incorpore le <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="903da-116">You typically use this property only if you are creating your own control that incorporates the <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="903da-117">Sinon, pour ajouter des éléments si la source de données est un <xref:System.Data.DataView>, utilisez le <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> méthode de la <xref:System.Data.DataView> classe.</span><span class="sxs-lookup"><span data-stu-id="903da-117">Otherwise, to add items if the data source is a <xref:System.Data.DataView>, use the <xref:System.Data.DataView.AddNew%2A?displayProperty=nameWithType> method of the <xref:System.Data.DataView> class.</span></span> <span data-ttu-id="903da-118">Si la source de données est un <xref:System.Data.DataTable>, utilisez le <xref:System.Data.DataTable.NewRow%2A> (méthode) et ajoutez la ligne à la <xref:System.Data.DataRowCollection>.</span><span class="sxs-lookup"><span data-stu-id="903da-118">If the data source is a <xref:System.Data.DataTable>, use the <xref:System.Data.DataTable.NewRow%2A> method and add the row to the <xref:System.Data.DataRowCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-119">L’exemple de code suivant ajoute un nouvel élément à la liste avec la <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="903da-119">The following code example adds a new item to the list with the <xref:System.Windows.Forms.CurrencyManager.AddNew%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.AddNew Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.AddNew Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="903da-120">La source de données sous-jacente n'implémente pas <see cref="T:System.ComponentModel.IBindingList" />, ou la source de données a levé une exception car l'utilisateur a tenté d'ajouter une ligne à un <see cref="T:System.Data.DataView" /> en lecture seule ou de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="903da-120">The underlying data source does not implement <see cref="T:System.ComponentModel.IBindingList" />, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <see cref="T:System.Data.DataView" />.</span></span></exception>
        <altmember cref="P:System.ComponentModel.IBindingList.AllowNew" />
        <altmember cref="M:System.Data.DataView.AddNew" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public override void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CancelCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.CancelCurrentEdit : unit -&gt; unit" Usage="currencyManager.CancelCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-121">Annule l'opération de modification actuelle.</span><span class="sxs-lookup"><span data-stu-id="903da-121">Cancels the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-122">Cette méthode est prise en charge uniquement si les objets contenus par la source de données implémentent la <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="903da-122">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="903da-123">Si les objets contenus dans la source de données n’implémentent pas le <xref:System.ComponentModel.IEditableObject> interface, les modifications apportées aux données n’est pas ignorée.</span><span class="sxs-lookup"><span data-stu-id="903da-123">If the objects contained within the data source do not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-124">Cette propriété a été conçue pour être utilisée par des contrôles liés aux données complexes, tels que le <xref:System.Windows.Forms.DataGrid> contrôle, pour annuler des modifications.</span><span class="sxs-lookup"><span data-stu-id="903da-124">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGrid> control, to cancel edits.</span></span> <span data-ttu-id="903da-125">Par exemple, lorsque l’utilisateur appuie sur la touche ÉCHAP, le <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> méthode est appelée sur le <xref:System.Windows.Forms.CurrencyManager> pour le <xref:System.Windows.Forms.DataGrid>.</span><span class="sxs-lookup"><span data-stu-id="903da-125">For example, when the user presses the ESC key, the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> method is called on the <xref:System.Windows.Forms.CurrencyManager> for the <xref:System.Windows.Forms.DataGrid>.</span></span> <span data-ttu-id="903da-126">Sauf si vous créez un contrôle qui requiert la même fonctionnalité, vous ne devez pas utiliser cette méthode.</span><span class="sxs-lookup"><span data-stu-id="903da-126">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="903da-127">Au lieu de cela, utilisez le <xref:System.Data.DataRowView.CancelEdit%2A> méthode de la <xref:System.Data.DataRowView> classe.</span><span class="sxs-lookup"><span data-stu-id="903da-127">Instead, use the <xref:System.Data.DataRowView.CancelEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-128">Le code suivant exemple utilise le <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> lorsque l’utilisateur appuie sur la touche ÉCHAP.</span><span class="sxs-lookup"><span data-stu-id="903da-128">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> when the user presses the ESC key.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.CancelCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="CheckEmpty">
      <MemberSignature Language="C#" Value="protected void CheckEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.CheckEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckEmpty();" />
      <MemberSignature Language="F#" Value="member this.CheckEmpty : unit -&gt; unit" Usage="currencyManager.CheckEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-129">Lève une exception s'il n'existe aucune liste ou si la liste est vide.</span><span class="sxs-lookup"><span data-stu-id="903da-129">Throws an exception if there is no list, or the list is empty.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="903da-130">Il n'existe aucune liste ou la liste est vide.</span><span class="sxs-lookup"><span data-stu-id="903da-130">There is no list, or the list is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.CurrencyManager.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-131">Obtient le nombre d'éléments contenus dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-131">Gets the number of items in the list.</span></span></summary>
        <value><span data-ttu-id="903da-132">Nombre d'éléments de la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-132">The number of items in the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-133">Utilisez la propriété count pour déterminer quand la fin d’une liste a été atteinte.</span><span class="sxs-lookup"><span data-stu-id="903da-133">Use the count property to determine when the end of a list has been reached.</span></span> <span data-ttu-id="903da-134">Étant donné que le <xref:System.Windows.Forms.CurrencyManager> conserve un tableau de base 0 des éléments, la fin de la liste est toujours <xref:System.Windows.Forms.CurrencyManager.Count%2A> moins 1.</span><span class="sxs-lookup"><span data-stu-id="903da-134">Because the <xref:System.Windows.Forms.CurrencyManager> maintains a 0-based array of items, the end of the list is always <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-135">L’exemple de code suivant effectue une itération dans la liste jusqu'à ce que le dernier élément, déterminé par le <xref:System.Windows.Forms.CurrencyManager.Count%2A> propriété, est atteinte.</span><span class="sxs-lookup"><span data-stu-id="903da-135">The following code example iterates through the list until the final item, determined by the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property, is reached.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public override object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.Windows.Forms.CurrencyManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-136">Obtient l'élément en cours dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-136">Gets the current item in the list.</span></span></summary>
        <value><span data-ttu-id="903da-137">Élément de liste de type <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="903da-137">A list item of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-138">Pour obtenir l’élément actuel, vous devez connaître son type de données afin d’effectuer un cast correctement.</span><span class="sxs-lookup"><span data-stu-id="903da-138">In order to get the current item, you must know its data type in order to cast it correctly.</span></span> <span data-ttu-id="903da-139">Par exemple, si la source de données est un <xref:System.Data.DataView> ou <xref:System.Data.DataTable>, vous devez effectuer un cast de l’élément actuel en tant qu’un <xref:System.Data.DataRowView> objet.</span><span class="sxs-lookup"><span data-stu-id="903da-139">For example, if the data source is a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, you must cast the current item as a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-140">Le code suivant exemple utilise le <xref:System.Windows.Forms.CurrencyManager.Current%2A> propriété pour imprimer le `ContactName` champ pour l’élément actuel dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-140">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.Current%2A> property to print the `ContactName` field for the current item in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public override void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndCurrentEdit();" />
      <MemberSignature Language="F#" Value="override this.EndCurrentEdit : unit -&gt; unit" Usage="currencyManager.EndCurrentEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-141">Met fin à l'opération de modification en cours.</span><span class="sxs-lookup"><span data-stu-id="903da-141">Ends the current edit operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-142">Cette méthode est prise en charge uniquement si les objets contenus par la source de données implémentent la <xref:System.ComponentModel.IEditableObject> ou <xref:System.ComponentModel.ICancelAddNew> interfaces.</span><span class="sxs-lookup"><span data-stu-id="903da-142">This method is supported only if the objects contained by the data source implement the <xref:System.ComponentModel.IEditableObject> or <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-143">Cette propriété a été conçue pour être utilisée par des contrôles liés aux données complexes, tels que le <xref:System.Windows.Forms.DataGridView> contrôle.</span><span class="sxs-lookup"><span data-stu-id="903da-143">This property was designed to be used by complex data-bound controls, such as the <xref:System.Windows.Forms.DataGridView> control.</span></span> <span data-ttu-id="903da-144">Sauf si vous créez un contrôle qui requiert la même fonctionnalité, vous ne devez pas utiliser cette méthode.</span><span class="sxs-lookup"><span data-stu-id="903da-144">Unless you are creating a control that requires this same functionality, you should not use this method.</span></span> <span data-ttu-id="903da-145">Au lieu de cela, si la source de données est soit un <xref:System.Data.DataView> ou <xref:System.Data.DataTable>, utilisez le <xref:System.Data.DataRowView.EndEdit%2A> méthode de la <xref:System.Data.DataRowView> classe.</span><span class="sxs-lookup"><span data-stu-id="903da-145">Instead, if the data source is either a <xref:System.Data.DataView> or <xref:System.Data.DataTable>, use the <xref:System.Data.DataRowView.EndEdit%2A> method of the <xref:System.Data.DataRowView> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-146">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>.</span><span class="sxs-lookup"><span data-stu-id="903da-146">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A> method.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.EndCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.EndCurrentEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="T:System.ComponentModel.ICancelAddNew" />
      </Docs>
    </Member>
    <Member MemberName="finalType">
      <MemberSignature Language="C#" Value="protected Type finalType;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Type finalType" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.finalType" />
      <MemberSignature Language="VB.NET" Value="Protected finalType As Type " />
      <MemberSignature Language="C++ CLI" Value="protected: Type ^ finalType;" />
      <MemberSignature Language="F#" Value="val mutable finalType : Type" Usage="System.Windows.Forms.CurrencyManager.finalType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-147">Spécifie le type de données de la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-147">Specifies the data type of the list.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberSignature Language="F#" Value="override this.GetItemProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="currencyManager.GetItemProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-148">Obtient la collection de descripteurs de propriété pour la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="903da-148">Gets the property descriptor collection for the underlying list.</span></span></summary>
        <returns><span data-ttu-id="903da-149"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> pour la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-149">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for the list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-150">Le <xref:System.ComponentModel.PropertyDescriptorCollection> pour le <xref:System.Windows.Forms.CurrencyManager> est utilisé pour spécifier une colonne dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-150">The <xref:System.ComponentModel.PropertyDescriptorCollection> for the <xref:System.Windows.Forms.CurrencyManager> is used to specify a column in the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-151">Le code suivant exemple utilise le <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> méthode pour retourner un <xref:System.ComponentModel.PropertyDescriptorCollection> pour un <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="903da-151">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="903da-152">L’exemple imprime le <xref:System.ComponentModel.MemberDescriptor.Name%2A> et <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> de chaque <xref:System.ComponentModel.PropertyDescriptor> dans la collection.</span><span class="sxs-lookup"><span data-stu-id="903da-152">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal override string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberSignature Language="F#" Value="override this.GetListName : System.Collections.ArrayList -&gt; string" Usage="currencyManager.GetListName listAccessors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors"><span data-ttu-id="903da-153"><see cref="T:System.Collections.ArrayList" /> de propriétés à rechercher dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="903da-153">An <see cref="T:System.Collections.ArrayList" /> of properties to be found in the data source.</span></span></param>
        <summary><span data-ttu-id="903da-154">Obtient le nom de la liste fournissant les données pour la liaison à l'aide du jeu de propriétés liées spécifié.</span><span class="sxs-lookup"><span data-stu-id="903da-154">Gets the name of the list supplying the data for the binding using the specified set of bound properties.</span></span></summary>
        <returns><span data-ttu-id="903da-155">Si l'opération réussit, un <see cref="T:System.String" /> contenant le nom de la liste qui fournit les données pour la liaison ; sinon, une chaîne <see cref="F:System.String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="903da-155">If successful, a <see cref="T:System.String" /> containing name of the list supplying the data for the binding; otherwise, an <see cref="F:System.String.Empty" /> string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-156">Pour le <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> méthode réussisse, la liste sous-jacente doit être de type <xref:System.ComponentModel.ITypedList>.</span><span class="sxs-lookup"><span data-stu-id="903da-156">For the <xref:System.Windows.Forms.CurrencyManager.GetListName%2A> method to be successful, the underlying list must be of type <xref:System.ComponentModel.ITypedList>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.GetItemProperties" />
      </Docs>
    </Member>
    <Member MemberName="ItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemChangedEventHandler ItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemChanged As ItemChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemChangedEventHandler ^ ItemChanged;" />
      <MemberSignature Language="F#" Value="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " Usage="member this.ItemChanged : System.Windows.Forms.ItemChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-157">Se produit suite à la modification de l'élément en cours.</span><span class="sxs-lookup"><span data-stu-id="903da-157">Occurs when the current item has been altered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-158">Le <xref:System.Windows.Forms.CurrencyManager.ItemChanged> événement se produit lorsque l’utilisateur appelle le <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> ou <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="903da-158">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur when the user calls the <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> or <xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> method.</span></span>  
  
 <span data-ttu-id="903da-159">Le <xref:System.Windows.Forms.CurrencyManager.ItemChanged> événement produit uniquement lorsque l’élément lui-même a été modifié de quelque façon.</span><span class="sxs-lookup"><span data-stu-id="903da-159">The <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event occurs only when the item itself has been changed in some manner.</span></span> <span data-ttu-id="903da-160">Par exemple, si la valeur d’un élément est passée de 10 à 42, l’événement se produit.</span><span class="sxs-lookup"><span data-stu-id="903da-160">For example, if the value of an item is changed from 10 to 42, the event will occur.</span></span> <span data-ttu-id="903da-161">Il ne faut pas confondre avec le <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> événement où l’élément a été modifié à un nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="903da-161">This should not be confused with the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event where the item has been changed to a new item.</span></span>  
  
 <span data-ttu-id="903da-162">L’événement se produit également si les données sous-jacentes changent.</span><span class="sxs-lookup"><span data-stu-id="903da-162">The event will also occur if the underlying data changes.</span></span> <span data-ttu-id="903da-163">Par exemple, si vous modifiez la valeur d’un <xref:System.Data.DataRowView>, le <xref:System.Windows.Forms.CurrencyManager.ItemChanged> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="903da-163">For example, if you change the value of a <xref:System.Data.DataRowView>, the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> event will occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-164">Si vous créez votre propre contrôle qui utilise le <xref:System.Windows.Forms.CurrencyManager>, vous devez utiliser le <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> au lieu du <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-164">If you are creating your own control that uses the <xref:System.Windows.Forms.CurrencyManager>, you should use the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> instead of the <xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="903da-165">Le <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> propriété de la <xref:System.ComponentModel.ListChangedEventArgs> vous permet de déterminer le type d’action qui s’est produite.</span><span class="sxs-lookup"><span data-stu-id="903da-165">The <xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A> property of the <xref:System.ComponentModel.ListChangedEventArgs> enables you to determine the type of action that has occurred.</span></span>  
  
 <span data-ttu-id="903da-166">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-166">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-167">L’exemple de code suivant ajoute des gestionnaires d’événements pour le <xref:System.Windows.Forms.CurrencyManager.ItemChanged> et <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> événements.</span><span class="sxs-lookup"><span data-stu-id="903da-167">The following code example adds event handlers for the <xref:System.Windows.Forms.CurrencyManager.ItemChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.ItemChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.ItemChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public System.Collections.IList List { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList List" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.List" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property List As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ List { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.List : System.Collections.IList" Usage="System.Windows.Forms.CurrencyManager.List" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-168">Obtient la liste de ce <see cref="T:System.Windows.Forms.CurrencyManager" />.</span><span class="sxs-lookup"><span data-stu-id="903da-168">Gets the list for this <see cref="T:System.Windows.Forms.CurrencyManager" />.</span></span></summary>
        <value><span data-ttu-id="903da-169"><see cref="T:System.Collections.IList" /> qui contient la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-169">An <see cref="T:System.Collections.IList" /> that contains the list.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-170">L’objet retourné par la <xref:System.Windows.Forms.CurrencyManager.List%2A> propriété peut être castée en un type qui implémente le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="903da-170">The object returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property can be cast to any type that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="903da-171">Cela sera largement utilisé lorsque vous connaissez le type de la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="903da-171">This will be commonly used when you know the type of the underlying list.</span></span> <span data-ttu-id="903da-172">Par exemple, si vous sont liés aux données à un <xref:System.Data.DataSet>, la liste sous-jacente est un <xref:System.Data.DataView> (qui implémente <xref:System.Collections.IList>).</span><span class="sxs-lookup"><span data-stu-id="903da-172">For example, if you are data-bound to a <xref:System.Data.DataSet>, the underlying list is a <xref:System.Data.DataView> (which implements <xref:System.Collections.IList>).</span></span> <span data-ttu-id="903da-173">Incluent d’autres classes qui implémentent l’interface (cela n’est pas une liste complète) <xref:System.Array>, <xref:System.Collections.ArrayList>, et <xref:System.Collections.CollectionBase>.</span><span class="sxs-lookup"><span data-stu-id="903da-173">Other classes that implement the interface (this is not a complete list) include <xref:System.Array>, <xref:System.Collections.ArrayList>, and <xref:System.Collections.CollectionBase>.</span></span>  
  
 <span data-ttu-id="903da-174">Utilisation de la <xref:System.Windows.Forms.CurrencyManager.List%2A> propriété dépend de la classe qui implémente le <xref:System.Collections.IList> interface.</span><span class="sxs-lookup"><span data-stu-id="903da-174">How you use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property depends on the class that implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="903da-175">Par exemple, vous pouvez utiliser le <xref:System.Windows.Forms.CurrencyManager.List%2A> propriété afin de déterminer le nom de la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-175">For example, you can use the <xref:System.Windows.Forms.CurrencyManager.List%2A> property to determine the name of the list.</span></span> <span data-ttu-id="903da-176">Si la source de données implémente la <xref:System.ComponentModel.ITypedList> interface, vous pouvez utiliser la <xref:System.ComponentModel.ITypedList.GetListName%2A> méthode pour retourner le nom de la table actuelle.</span><span class="sxs-lookup"><span data-stu-id="903da-176">If the data source implements the <xref:System.ComponentModel.ITypedList> interface, you can use the <xref:System.ComponentModel.ITypedList.GetListName%2A> method to return the name of the current table.</span></span> <span data-ttu-id="903da-177">Ceci est illustré dans le code c# ci-dessous :</span><span class="sxs-lookup"><span data-stu-id="903da-177">This is shown in the C# code below:</span></span>  
  
```csharp  
private void PrintCurrentListName(DataGrid myDataGrid){   
   CurrencyManager myCM = (CurrencyManager)   
   BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];   
   IList myList = myCM.List;   
   ITypedList thisList = (ITypedList) myList;   
   Console.WriteLine(thisList.GetListName(null));   
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="903da-178">L’exemple de code suivant permet aux utilisateurs de modifier un jeu d’enregistrements, mais pas ajouter de nouveaux.</span><span class="sxs-lookup"><span data-stu-id="903da-178">The following code example allows users to edit a set of records, but not add any new ones.</span></span> <span data-ttu-id="903da-179">Dans le <xref:System.Windows.Forms.DataGrid.Navigate> événement d’un <xref:System.Windows.Forms.DataGrid> contrôle, le <xref:System.Collections.IList> retourné par le <xref:System.Windows.Forms.CurrencyManager.List%2A> propriété est castée en un <xref:System.Data.DataView> variable.</span><span class="sxs-lookup"><span data-stu-id="903da-179">In the <xref:System.Windows.Forms.DataGrid.Navigate> event of a <xref:System.Windows.Forms.DataGrid> control, the <xref:System.Collections.IList> returned by the <xref:System.Windows.Forms.CurrencyManager.List%2A> property is cast to a <xref:System.Data.DataView> variable.</span></span> <span data-ttu-id="903da-180">La propriété <xref:System.Data.DataView.AllowNew%2A> de l'objet <xref:System.Data.DataView> a la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="903da-180">The <xref:System.Data.DataView.AllowNew%2A> property of the <xref:System.Data.DataView> is set to `false`.</span></span>  
  
 [!code-cpp[CurrencyManager.List Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CurrencyManager.List Example/CPP/list.cpp#1)]
 [!code-csharp[CurrencyManager.List Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CurrencyManager.List Example/CS/list.cs#1)]
 [!code-vb[CurrencyManager.List Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CurrencyManager.List Example/VB/list.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-181">Se produit en cas de modification de la liste ou d'un de ses éléments.</span><span class="sxs-lookup"><span data-stu-id="903da-181">Occurs when the list changes or an item in the list changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-182">Le <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement est levé par le <xref:System.Windows.Forms.CurrencyManager> classe en cas d’un élément sont apportées à l’aide des méthodes telles que <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, et <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>.</span><span class="sxs-lookup"><span data-stu-id="903da-182">The <xref:System.Windows.Forms.CurrencyManager.ListChanged> event is thrown by the <xref:System.Windows.Forms.CurrencyManager> class when changes to an item are made using methods such as <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.Refresh%2A>.</span></span> <span data-ttu-id="903da-183">Cet événement peut également se produire lorsque la source de données est modifiée directement s’il implémente la <xref:System.ComponentModel.IBindingListView> interface.</span><span class="sxs-lookup"><span data-stu-id="903da-183">This event can also occur when the data source is edited directly if it implements the <xref:System.ComponentModel.IBindingListView> interface.</span></span>  
  
 <span data-ttu-id="903da-184">Associé `OnListChanged` méthode est une méthode privée de cette classe.</span><span class="sxs-lookup"><span data-stu-id="903da-184">The associated `OnListChanged` method is a private method in this class.</span></span>  
  
 <span data-ttu-id="903da-185">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-185">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-186">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="903da-186">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="903da-187">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-187">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="903da-188">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="903da-188">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="903da-189">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="903da-189">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="903da-190">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.CurrencyManager> nommé `CurrencyManager1`.</span><span class="sxs-lookup"><span data-stu-id="903da-190">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="903da-191">Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-191">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#192](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#192)]
 [!code-vb[System.Windows.Forms.EventExamples#192](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#192)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="listposition">
      <MemberSignature Language="C#" Value="protected int listposition;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 listposition" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.CurrencyManager.listposition" />
      <MemberSignature Language="VB.NET" Value="Protected listposition As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int listposition;" />
      <MemberSignature Language="F#" Value="val mutable listposition : int" Usage="System.Windows.Forms.CurrencyManager.listposition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-192">Spécifie la position actuelle de <see cref="T:System.Windows.Forms.CurrencyManager" /> dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-192">Specifies the current position of the <see cref="T:System.Windows.Forms.CurrencyManager" /> in the list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-193">Si la valeur de la <xref:System.Windows.Forms.CurrencyManager.Count%2A> propriété est supérieure à 0, le <xref:System.Windows.Forms.CurrencyManager.listposition> champ est un nombre compris entre 0 et <xref:System.Windows.Forms.CurrencyManager.Count%2A> moins 1.</span><span class="sxs-lookup"><span data-stu-id="903da-193">If the value of the <xref:System.Windows.Forms.CurrencyManager.Count%2A> property is greater than 0, the <xref:System.Windows.Forms.CurrencyManager.listposition> field is a number between 0 and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1.</span></span> <span data-ttu-id="903da-194">Si <xref:System.Windows.Forms.CurrencyManager.Count%2A> est 0, <xref:System.Windows.Forms.CurrencyManager.listposition> est -1.</span><span class="sxs-lookup"><span data-stu-id="903da-194">If <xref:System.Windows.Forms.CurrencyManager.Count%2A> is 0, <xref:System.Windows.Forms.CurrencyManager.listposition> is -1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Position" />
      </Docs>
    </Member>
    <Member MemberName="MetaDataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MetaDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MetaDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MetaDataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MetaDataChanged;" />
      <MemberSignature Language="F#" Value="member this.MetaDataChanged : EventHandler " Usage="member this.MetaDataChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-195">Se produit lorsque les métadonnées de la propriété <see cref="P:System.Windows.Forms.CurrencyManager.List" /> ont changé.</span><span class="sxs-lookup"><span data-stu-id="903da-195">Occurs when the metadata of the <see cref="P:System.Windows.Forms.CurrencyManager.List" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-196">Les métadonnées de la <xref:System.Windows.Forms.CurrencyManager.List%2A> se compose du schéma de sous-jacent <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="903da-196">The metadata of the <xref:System.Windows.Forms.CurrencyManager.List%2A> consists of the schema of the underlying <xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="903da-197">Le <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> événement est déclenché lorsque ce schéma a changé.</span><span class="sxs-lookup"><span data-stu-id="903da-197">The <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when that schema has changed.</span></span> <span data-ttu-id="903da-198">Par exemple, le <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> événement est déclenché quand un <xref:System.Data.DataColumn> est ajouté par programme à un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="903da-198">For example, the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event is raised when a <xref:System.Data.DataColumn> is programmatically added to a <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="903da-199">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-199">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-200">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="903da-200">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="903da-201">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-201">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span> <span data-ttu-id="903da-202">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="903da-202">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="903da-203">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="903da-203">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="903da-204">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.CurrencyManager> nommé `CurrencyManager1`.</span><span class="sxs-lookup"><span data-stu-id="903da-204">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CurrencyManager> named `CurrencyManager1`.</span></span> <span data-ttu-id="903da-205">Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-205">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CurrencyManager.MetaDataChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#193](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#193)]
 [!code-vb[System.Windows.Forms.EventExamples#193](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#193)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="903da-206"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="903da-206">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="903da-207">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="903da-207">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnCurrentItemChanged : EventArgs -&gt; unit" Usage="currencyManager.OnCurrentItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="903da-208"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="903da-208">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="903da-209">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />.</span><span class="sxs-lookup"><span data-stu-id="903da-209">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemChanged(class System.Windows.Forms.ItemChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemChanged (e As ItemChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemChanged(System::Windows::Forms::ItemChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit&#xA;override this.OnItemChanged : System.Windows.Forms.ItemChangedEventArgs -&gt; unit" Usage="currencyManager.OnItemChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ItemChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="903da-210"><see cref="T:System.Windows.Forms.ItemChangedEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="903da-210">An <see cref="T:System.Windows.Forms.ItemChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="903da-211">Déclenche l'événement <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />.</span><span class="sxs-lookup"><span data-stu-id="903da-211">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-212">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-212">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="903da-213">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-213">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="903da-214">La méthode <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-214">The <xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="903da-215">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="903da-215">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="903da-216">Lors de la substitution <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="903da-216">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnItemChanged(System.Windows.Forms.ItemChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.CurrencyManager.ItemChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentItemChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMetaDataChanged">
      <MemberSignature Language="C#" Value="protected internal void OnMetaDataChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnMetaDataChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnMetaDataChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnMetaDataChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnMetaDataChanged : EventArgs -&gt; unit" Usage="currencyManager.OnMetaDataChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="903da-217"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="903da-217">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="903da-218">Déclenche l'événement <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" />.</span><span class="sxs-lookup"><span data-stu-id="903da-218">Raises the <see cref="E:System.Windows.Forms.CurrencyManager.MetaDataChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-219">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-219">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="903da-220">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-220">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="903da-221">La méthode <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-221">The <xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="903da-222">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="903da-222">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="903da-223">Lors de la substitution <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="903da-223">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnMetaDataChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPositionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPositionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPositionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPositionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPositionChanged : EventArgs -&gt; unit&#xA;override this.OnPositionChanged : EventArgs -&gt; unit" Usage="currencyManager.OnPositionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="903da-224"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="903da-224">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="903da-225">Déclenche l'événement <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="903da-225">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-226">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-226">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="903da-227">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="903da-227">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="903da-228">La méthode <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="903da-228">The <xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="903da-229">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="903da-229">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="903da-230">Lors de la substitution <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="903da-230">When overriding <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnPositionChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.OnCurrentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CurrencyManager.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Position { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int with get, set" Usage="System.Windows.Forms.CurrencyManager.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="903da-231">Obtient ou définit votre position dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-231">Gets or sets the position you are at within the list.</span></span></summary>
        <value><span data-ttu-id="903da-232">Nombre compris entre 0 et <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> moins 1.</span><span class="sxs-lookup"><span data-stu-id="903da-232">A number between 0 and <see cref="P:System.Windows.Forms.CurrencyManager.Count" /> minus 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-233">Une propriété importante de la <xref:System.Windows.Forms.CurrencyManager> classe est le <xref:System.Windows.Forms.CurrencyManager.Position%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="903da-233">An important property of the <xref:System.Windows.Forms.CurrencyManager> class is the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property.</span></span> <span data-ttu-id="903da-234">Dans une liste d’éléments, vous pouvez afficher qu’un seul élément en dehors de la liste entière.</span><span class="sxs-lookup"><span data-stu-id="903da-234">In a list of items, you can view only one item out of the entire list.</span></span> <span data-ttu-id="903da-235">Pour déterminer quel élément est affiché, définissez le <xref:System.Windows.Forms.CurrencyManager.Position%2A> à un nombre compris entre 0 (le début de la liste) et <xref:System.Windows.Forms.CurrencyManager.Count%2A> moins 1 (la fin de la liste).</span><span class="sxs-lookup"><span data-stu-id="903da-235">To determine which item is viewed, set the <xref:System.Windows.Forms.CurrencyManager.Position%2A> to a number between 0 (the beginning of the list) and <xref:System.Windows.Forms.CurrencyManager.Count%2A> minus 1 (the end of the list).</span></span>  
  
 <span data-ttu-id="903da-236">Par conséquent, le <xref:System.Windows.Forms.CurrencyManager.Position%2A> détermine la devise, ou la place dans la liste de tous les contrôles liés au même <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="903da-236">Therefore, the <xref:System.Windows.Forms.CurrencyManager.Position%2A> determines the currency, or place in the list, of all controls bound to the same <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="903da-237">Par exemple, imaginez une liste composée de deux colonnes appelées « FirstName » et « LastName ».</span><span class="sxs-lookup"><span data-stu-id="903da-237">For example, imagine a list consisting of two columns called "FirstName" and "LastName".</span></span> <span data-ttu-id="903da-238">Deux <xref:System.Windows.Forms.TextBox> contrôles sont liés à la même liste ; le premier contrôle est lié à la première colonne, et le deuxième contrôle est lié à la deuxième colonne.</span><span class="sxs-lookup"><span data-stu-id="903da-238">Two <xref:System.Windows.Forms.TextBox> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</span></span> <span data-ttu-id="903da-239">Lorsque le <xref:System.Windows.Forms.CurrencyManager.Position%2A> courantes <xref:System.Windows.Forms.CurrencyManager> est définie à la troisième position, les deux contrôles affichent les valeurs appropriées pour cette position dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-239">When the <xref:System.Windows.Forms.CurrencyManager.Position%2A> of the common <xref:System.Windows.Forms.CurrencyManager> is set to the third position, both controls display the appropriate values for that position in the list.</span></span> <span data-ttu-id="903da-240">En d’autres termes, si l’élément situé en troisième position consiste le prénom « John » et le nom « Smith », les contrôles dépendants affichera « John » et « Smith ».</span><span class="sxs-lookup"><span data-stu-id="903da-240">In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-241">Exemple de code suit le <xref:System.Windows.Forms.CurrencyManager.Position%2A> propriété pour permettre la navigation dans une liste.</span><span class="sxs-lookup"><span data-stu-id="903da-241">The following code examples use the <xref:System.Windows.Forms.CurrencyManager.Position%2A> property to allow navigation through a list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Position Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Position Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Position Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Position Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Current" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="currencyManager.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-242">Force un nouveau remplissage de la liste liée aux données.</span><span class="sxs-lookup"><span data-stu-id="903da-242">Forces a repopulation of the data-bound list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-243">Utilisez le <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> méthode lors de la source de données ne prend pas en charge la notification en cas de modification (par exemple, si elle est un <xref:System.Array>).</span><span class="sxs-lookup"><span data-stu-id="903da-243">Use the <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method when the data source does not support notification when it is changed (for example, if it is an <xref:System.Array>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-244">L’exemple de code suivant crée un tableau et le lie à un <xref:System.Windows.Forms.TextBox> contrôle, puis modifie une valeur.</span><span class="sxs-lookup"><span data-stu-id="903da-244">The following code example creates an array and binds it to a <xref:System.Windows.Forms.TextBox> control, and then changes one value.</span></span> <span data-ttu-id="903da-245">Le <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> méthode peut être appelée pour mettre à jour la valeur affichée par le <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="903da-245">The <xref:System.Windows.Forms.CurrencyManager.Refresh%2A> method can be called to update the value displayed by the <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.Refresh Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.Refresh Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CurrencyManager.List" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveAt : int -&gt; unit" Usage="currencyManager.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="903da-246">Index de l'élément à supprimer de la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-246">The index of the item to remove from the list.</span></span></param>
        <summary><span data-ttu-id="903da-247">Supprime l'élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="903da-247">Removes the item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-248">Le <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> méthode a été conçue pour permettre des contrôles complexes, tels que le <xref:System.Windows.Forms.DataGrid> contrôle, pour supprimer des éléments dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-248">The <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method was designed to allow complex controls, such as the <xref:System.Windows.Forms.DataGrid> control, to remove items from the list.</span></span> <span data-ttu-id="903da-249">Vous ne devez pas utiliser cette méthode pour supprimer des éléments.</span><span class="sxs-lookup"><span data-stu-id="903da-249">You should not use this method to actually remove items.</span></span> <span data-ttu-id="903da-250">Au lieu de cela, utilisez le <xref:System.Data.DataView.Delete%2A> méthode de la <xref:System.Data.DataView> classe pour supprimer des éléments.</span><span class="sxs-lookup"><span data-stu-id="903da-250">Instead, use the <xref:System.Data.DataView.Delete%2A> method of the <xref:System.Data.DataView> class to delete items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-251">Le code suivant exemple utilise le <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> méthode pour supprimer l’élément à la position 0 dans la liste.</span><span class="sxs-lookup"><span data-stu-id="903da-251">The following code example uses the <xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A> method to remove the item at position 0 in the list.</span></span>  
  
 [!code-cpp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic CurrencyManager.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CurrencyManager.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="903da-252">Il n'y a pas de ligne au <paramref name="index" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="903da-252">There is no row at the specified <paramref name="index" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.CurrencyManager.AddNew" />
        <altmember cref="P:System.Windows.Forms.CurrencyManager.Count" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public override void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResumeBinding();" />
      <MemberSignature Language="F#" Value="override this.ResumeBinding : unit -&gt; unit" Usage="currencyManager.ResumeBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-253">Relance la liaison de données.</span><span class="sxs-lookup"><span data-stu-id="903da-253">Resumes data binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> et <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> sont deux méthodes qui permettent la suspension temporaire et le rétablissement de dans un scénario de liaison de données simple.</span><span class="sxs-lookup"><span data-stu-id="903da-254"><xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</span></span> <span data-ttu-id="903da-255">Vous devez généralement suspendre la liaison de données si l’utilisateur doit être autorisé à effectuer plusieurs modifications de champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="903da-255">You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="903da-256">Par exemple, si un champ doit être modifié conformément à une seconde, mais la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="903da-256">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-257">À l’aide de <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> empêche les modifications soient apportées dans la source de données jusqu'à ce que <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> est appelé, mais n’empêche pas les modifications dans la source de données affectent les contrôles liés.</span><span class="sxs-lookup"><span data-stu-id="903da-257">Using <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> prevents changes from being pushed into the data source until <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> is called but does not prevent changes in the data source from affecting the bound controls.</span></span> <span data-ttu-id="903da-258">Les contrôles qui utilisent la liaison de données complexes, tels que le <xref:System.Windows.Forms.DataGridView> contrôler, mettre à jour leurs valeurs basées sur les événements de changement tels que le <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-258">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="903da-259">Appel de cette méthode n’empêchera pas ces événements ne se produise.</span><span class="sxs-lookup"><span data-stu-id="903da-259">Calling this method will not prevent these events from occurring.</span></span> <span data-ttu-id="903da-260">Pour cette raison, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> et <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> sont conçus pour une utilisation avec des contrôles liés simples, comme un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="903da-260">For this reason, <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> are designed for use with simple-bound controls, such as a <xref:System.Windows.Forms.TextBox>.</span></span> <span data-ttu-id="903da-261">Ou bien, vous pouvez utiliser ces méthodes dans un scénario de liaison complexe si vous supprimez <xref:System.Windows.Forms.BindingSource.ListChanged> événements en définissant le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="903da-261">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-262">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A>.</span><span class="sxs-lookup"><span data-stu-id="903da-262">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public override void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SuspendBinding();" />
      <MemberSignature Language="F#" Value="override this.SuspendBinding : unit -&gt; unit" Usage="currencyManager.SuspendBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-263">Suspend la liaison de données pour empêcher que les modifications mettent à jour la source de données liée.</span><span class="sxs-lookup"><span data-stu-id="903da-263">Suspends data binding to prevents changes from updating the bound data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="903da-264">Le <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> méthodes permettent la suspension temporaire et le rétablissement de la liaison de données dans un scénario de liaison simple.</span><span class="sxs-lookup"><span data-stu-id="903da-264">The <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</span></span> <span data-ttu-id="903da-265">Vous devez généralement suspendre la liaison de données si l’utilisateur doit apporter plusieurs modifications aux champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="903da-265">You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</span></span> <span data-ttu-id="903da-266">Par exemple, si un champ doit être modifié conformément à une seconde, mais la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="903da-266">For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="903da-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> empêche l’application à la source de données jusqu'à ce que des modifications <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> est appelée, mais n’empêche pas réellement les événements ne se produise.</span><span class="sxs-lookup"><span data-stu-id="903da-267"><xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> prevents changes from being applied to the data source until <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> is called, but does not actually prevent any events from occurring.</span></span> <span data-ttu-id="903da-268">Les contrôles qui utilisent la liaison de données complexes, tels que le <xref:System.Windows.Forms.DataGridView> contrôler, mettre à jour leurs valeurs basées sur les événements de modification, tels que le <xref:System.Windows.Forms.CurrencyManager.ListChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="903da-268">Controls that use complex data binding, such as the <xref:System.Windows.Forms.DataGridView> control, update their values based on change events, such as the <xref:System.Windows.Forms.CurrencyManager.ListChanged> event.</span></span> <span data-ttu-id="903da-269">Par conséquent, l’appel <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> n’empêchera pas les contrôles liés complexes de recevoir des événements pour mettre à jour la source de données.</span><span class="sxs-lookup"><span data-stu-id="903da-269">Therefore, calling <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> will not prevent complex-bound controls from receiving events to update the data source.</span></span> <span data-ttu-id="903da-270">Pour cette raison, <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> sont conçus pour une utilisation avec des contrôles liés simples, tels que le <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="903da-270">For this reason, <xref:System.Windows.Forms.BindingSource.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingSource.ResumeBinding%2A> are designed for use with simple-bound controls, such as the <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="903da-271">Ou bien, vous pouvez utiliser ces méthodes dans un scénario de liaison complexe si vous supprimez <xref:System.Windows.Forms.BindingSource.ListChanged> événements en définissant le <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="903da-271">Alternatively, you can use these methods in a complex binding scenario if you suppress <xref:System.Windows.Forms.BindingSource.ListChanged> events by setting the <xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="903da-272">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A>.</span><span class="sxs-lookup"><span data-stu-id="903da-272">The following code example demonstrates how to use the <xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A> method.</span></span>  
  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#1)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#1)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingSource.RaiseListChangedEvents" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected override void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CurrencyManager.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateIsBinding();" />
      <MemberSignature Language="F#" Value="override this.UpdateIsBinding : unit -&gt; unit" Usage="currencyManager.UpdateIsBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="903da-273">Met à jour l'état de la liaison.</span><span class="sxs-lookup"><span data-stu-id="903da-273">Updates the status of the binding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>