<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3a5b2-101">Spécifie le style et le comportement d’un contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-101">Specifies the style and behavior of a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a5b2-102">Contrôles utilisent cette énumération dans les différentes propriétés et méthodes pour spécifier les fonctionnalités.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="3a5b2-103">Un contrôle peut activer un style en appelant le <xref:System.Windows.Forms.Control.SetStyle%2A> méthode et en passant les <xref:System.Windows.Forms.ControlStyles> bits (ou bits) et la valeur booléenne à attribuer aux bits.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="3a5b2-104">Par exemple, la ligne suivante de code Visual Basic permettrait de double tampon.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```  
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="3a5b2-105">Si le bit AllPaintingInWmPaint est défini sur `true`, le message de fenêtre WM_ERASEBKGND est ignoré, alors que les <xref:System.Windows.Forms.Control.OnPaintBackground%2A> et <xref:System.Windows.Forms.Control.OnPaint%2A> méthodes sont appelées directement à partir du message de fenêtre WM_PAINT.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="3a5b2-106">Généralement, cela réduit le scintillement, sauf si les autres contrôles envoient le message de fenêtre WM_ERASEBKGND au contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="3a5b2-107">Vous pouvez envoyer le message de fenêtre WM_ERASEBKGRND pour obtenir un effet de transparence pseudo-aléatoire semblable à SupportsTransparentBackColor ; par exemple, un <xref:System.Windows.Forms.ToolBar> avec une apparence à deux dimensions effectue cette opération.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="3a5b2-108">Pour activer entièrement le mécanisme de double tampon, vous pouvez définir les bits OptimizedDoubleBuffer et AllPaintingInWmPaint sur `true`.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="3a5b2-109">Cependant la méthode recommandée pour la double mise en mémoire tampon, ce qui produit le même résultat, est à définir le <xref:System.Windows.Forms.Control.DoubleBuffered%2A> propriété pour le contrôle à `true`.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="3a5b2-110">Si le bit SupportsTransparentBackColor est défini sur `true`et le <xref:System.Windows.Forms.Control.BackColor%2A> est définie sur une couleur dont le composant alpha est inférieur à 255 et <xref:System.Windows.Forms.Control.OnPaintBackground%2A> simuler la transparence en demandant à son contrôle parent pour peindre l’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="3a5b2-111">Ce n’est pas véritable transparence.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3a5b2-112">S’il existe un autre contrôle entre le contrôle et son parent, le contrôle en cours n’affichera pas le contrôle au milieu.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="3a5b2-113">Lorsque le bit UserMouse est défini sur `true`, les méthodes suivantes sont toujours appelées : <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, et <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3a5b2-114">Lorsque le contrôle est activé, si le bit StandardClick est défini sur `true` le <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> méthode est appelée et déclenche le <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3a5b2-115">Lorsqu’un double-clic est effectué sur le contrôle et le StandardClick et StandardDoubleClick bits sont définis sur `true`, le clic est passé à la <xref:System.Windows.Forms.Control.DoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="3a5b2-116">Le <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> méthode est appelée et déclenche le <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="3a5b2-117">Toutefois, le contrôle peut appeler <xref:System.Windows.Forms.Control.OnClick%2A> ou <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directement, quelle que soit la StandardClick et StandardDoubleClick bit de valeurs.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="3a5b2-118">Pour plus d’informations sur le contrôle cliquez et double-cliquez sur les comportements, consultez la <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> et <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> rubriques.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="3a5b2-119">Lorsque le bit UseTextForAccessibility est défini, et il existe une valeur dans le contrôle `Text` propriété, la valeur de ce contrôle `Text` propriété détermine le valeur par défaut Active Accessibility nom et le raccourci touche de contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="3a5b2-120">Dans le cas contraire, le texte de l’exemple précédent <xref:System.Windows.Forms.Label> contrôle sera utilisé à la place.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="3a5b2-121">Ce style est défini par défaut.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-121">This style is set by default.</span></span> <span data-ttu-id="3a5b2-122">Types de contrôle intégré, tels que <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.ComboBox>, réinitialisent ce style afin que le `Text` propriété de ces contrôles ne sera pas être utilisée par Active Accessibility.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3a5b2-123">L’exemple suivant illustre une utilisation de <xref:System.Windows.Forms.ControlStyles> avec la <xref:System.Windows.Forms.Control.StyleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="3a5b2-124">Héritage d’un contrôle Windows Forms standard et en modifiant le <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> ou <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit des valeurs à <see langword="true" /> peut provoquer un comportement inattendu ou n’avoir aucun effet si le contrôle ne prend pas en charge la <see cref="E:System.Windows.Forms.Control.Click" /> ou <see cref="E:System.Windows.Forms.Control.DoubleClick" /> événements.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span></para>
    </block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-125">Si <see langword="true" />, le contrôle ignore le message de fenêtre WM_ERASEBKGND pour réduire le scintillement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span></span> <span data-ttu-id="3a5b2-126">Ce style doit être appliqué uniquement si le bit <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> est défini sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-127">Si <see langword="true" />, le contrôle conserve une copie du texte plutôt que de l’obtenir à partir de <see cref="P:System.Windows.Forms.Control.Handle" /> chaque fois que le texte est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span></span> <span data-ttu-id="3a5b2-128">Ce style est <see langword="false" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-128">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="3a5b2-129">Ce comportement améliore les performances, mais rend difficile la synchronisation du texte.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-130">Si <see langword="true" />, le contrôle est de type conteneur.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-130">If <see langword="true" />, the control is a container-like control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-131">Si <see langword="true" />, le dessin s’effectue dans une mémoire tampon. Une fois le dessin terminé, le résultat s’affiche à l’écran.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span></span> <span data-ttu-id="3a5b2-132">Un mécanisme de double tampon empêche le scintillement provoqué par le rafraîchissement du dessin du contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-132">Double-buffering prevents flicker caused by the redrawing of the control.</span></span> <span data-ttu-id="3a5b2-133">Si vous définissez <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> sur <see langword="true" />, vous devez également définir <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> et <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-134">Si <see langword="true" />, la méthode <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> est appelée pour chaque message envoyé au <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span> <span data-ttu-id="3a5b2-135">Ce style est <see langword="false" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-135">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="3a5b2-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> ne fonctionne pas avec une confiance partielle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-137">Si <see langword="true" />, le contrôle a une hauteur fixe lors de la mise à l’échelle automatique.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span></span> <span data-ttu-id="3a5b2-138">Par exemple, si une opération de disposition essaie de mettre à l’échelle le contrôle pour accueillir un nouveau <see cref="T:System.Drawing.Font" />, la <see cref="P:System.Windows.Forms.Control.Height" /> du contrôle reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-139">Si <see langword="true" />, le contrôle a une largeur fixe lors de la mise à l’échelle automatique.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span></span> <span data-ttu-id="3a5b2-140">Par exemple, si une opération de disposition essaie de mettre à l’échelle le contrôle pour accueillir un nouveau <see cref="T:System.Drawing.Font" />, la <see cref="P:System.Windows.Forms.Control.Width" /> du contrôle reste inchangé.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-141">Si <see langword="true" />, le contrôle est affiché de manière opaque et l’arrière-plan n’est pas affiché.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-142">Si <see langword="true" />, le contrôle est d’abord dessiné dans une mémoire tampon plutôt que directement à l’écran, ce qui peut réduire le scintillement.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span></span> <span data-ttu-id="3a5b2-143">Si vous définissez cette propriété sur <see langword="true" />, vous devez également définir <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-144">Si <see langword="true" />, le contrôle est redessiné quand il est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-144">If <see langword="true" />, the control is redrawn when it is resized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-145">Si <see langword="true" />, le contrôle peut recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-145">If <see langword="true" />, the control can receive focus.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-146">Si <see langword="true" />, le contrôle implémente le comportement <see cref="E:System.Windows.Forms.Control.Click" /> standard.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-147">Si <see langword="true" />, le contrôle implémente le comportement <see cref="E:System.Windows.Forms.Control.DoubleClick" /> standard.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span></span> <span data-ttu-id="3a5b2-148">Ce style est ignoré si le bit <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> n’est pas défini sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-149">Si <see langword="true" />, le contrôle accepte une <see cref="P:System.Windows.Forms.Control.BackColor" /> avec un composant alpha inférieur à 255 pour simuler la transparence.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span></span> <span data-ttu-id="3a5b2-150">La transparence sera simulée seulement si le bit <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> est défini sur <see langword="true" /> et que le contrôle parent est dérivé de <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-151">Si <see langword="true" />, le contrôle effectue son propre traitement de souris et les événements de souris ne sont pas gérés par le système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-152">Si <see langword="true" />, le contrôle s’affiche lui-même plutôt que par le biais du système d’exploitation.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span></span> <span data-ttu-id="3a5b2-153">Si <see langword="false" />, l'événement <see cref="E:System.Windows.Forms.Control.Paint" /> n'est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span></span> <span data-ttu-id="3a5b2-154">Ce style ne s’applique qu’aux classes dérivées de <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3a5b2-155">Spécifie que la valeur de la propriété <c>Text</c> du contrôle, si elle est définie, détermine le nom et la touche de raccourci par défaut Active Accessibility du contrôle.</span><span class="sxs-lookup"><span data-stu-id="3a5b2-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>