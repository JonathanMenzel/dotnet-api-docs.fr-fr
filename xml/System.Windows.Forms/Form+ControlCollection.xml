<Type Name="Form+ControlCollection" FullName="System.Windows.Forms.Form+ControlCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64f6b4fa639d51cf4122a62c526a2af39bddd4a3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36521745" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Form.ControlCollection : System.Windows.Forms.Control.ControlCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Form/ControlCollection extends System.Windows.Forms.Control/ControlCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Form.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Form.ControlCollection&#xA;Inherits Control.ControlCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Form::ControlCollection : System::Windows::Forms::Control::ControlCollection" />
  <TypeSignature Language="F#" Value="type Form.ControlCollection = class&#xA;    inherit Control.ControlCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control+ControlCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une collection de contrôles sur le formulaire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe représente la collection de contrôles contenus dans un formulaire. Vous pouvez utiliser la <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> méthode pour ajouter un contrôle au formulaire et la <xref:System.Windows.Forms.Form.ControlCollection.Remove%2A> méthode pour supprimer le contrôle du formulaire. La collection de contrôle représentée par cette classe ne peut pas être créée sans le lier à un formulaire spécifique. Par conséquent, vous ne peut pas créer plusieurs instances de cette collection de contrôles et les échanger avec un formulaire actif pour fournir différentes dispositions de contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.Label> contrôle à la collection de contrôles d’un formulaire. L’exemple requiert qu’un formulaire a été créé et nommé `Form1`.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Windows.Forms.Form owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Windows::Forms::Form ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Form.ControlCollection : System.Windows.Forms.Form -&gt; System.Windows.Forms.Form.ControlCollection" Usage="new System.Windows.Forms.Form.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Windows.Forms.Form" /> contenant les contrôles ajoutés à la collection de contrôles.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Form.ControlCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur vous permet de lier correctement la collection de contrôles au formulaire pour permettre aux contrôles d’être ajouté au formulaire.  
  
> [!NOTE]
>  Étant donné que la collection de contrôles doit être créée avec un formulaire spécifique, vous ne peut pas créer plusieurs collections de contrôles et les échanger avec le formulaire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override void Add (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Add(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Add (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Add(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Add : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.Control" /> à ajouter au formulaire.</param>
        <summary>Ajoute un contrôle au formulaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour ajouter des contrôles au formulaire. Si vous souhaitez ajouter un groupe de contrôles déjà créés au formulaire, utilisez le <xref:System.Windows.Forms.Control.ControlCollection.AddRange%2A?displayProperty=nameWithType> méthode de la <xref:System.Windows.Forms.Control.ControlCollection> classe.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.Label> contrôle à la collection de contrôles d’un formulaire. L’exemple requiert qu’un formulaire a été créé et nommé `Form1`.  
  
 [!code-cpp[Classic Form.ControlCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Form.ControlCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlCollection Example/CS/source.cs#1)]
 [!code-vb[Classic Form.ControlCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Il est impossible d'ajouter des contrôles à un formulaire parent interface MDI (interface multidocument).</exception>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (System.Windows.Forms.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(class System.Windows.Forms.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Form.ControlCollection.Remove(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Windows::Forms::Control ^ value);" />
      <MemberSignature Language="F#" Value="override this.Remove : System.Windows.Forms.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Forms.Control" /> à supprimer du formulaire.</param>
        <summary>Supprime un contrôle du formulaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour supprimer les contrôles que vous n’avez plus besoin dans votre formulaire. Si vous souhaitez afficher un contrôle après sa suppression, vous devez ajouter le contrôle au formulaire en utilisant le <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> (méthode). Pour qu’un contrôle reste dans le formulaire, mais ne pas affiché, utilisez la <xref:System.Windows.Forms.Control.Visible%2A> propriété du contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Form.ControlCollection.Add(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>