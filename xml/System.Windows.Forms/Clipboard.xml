<Type Name="Clipboard" FullName="System.Windows.Forms.Clipboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d061466ab8c586cfe56b419041cb2c8aad532ba6" /><Meta Name="ms.sourcegitcommit" Value="c902e847cd05ac37d93eca981b0fb009aae0a790" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/28/2018" /><Meta Name="ms.locfileid" Value="52455015" /></Metadata><TypeSignature Language="C#" Value="public sealed class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Clipboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Clipboard" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Clipboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clipboard sealed" />
  <TypeSignature Language="F#" Value="type Clipboard = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les méthodes permettant de placer des données dans le Presse-papiers système et d'en récupérer. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour obtenir la liste de formats prédéfinis à utiliser avec le <xref:System.Windows.Forms.Clipboard> de classe, consultez la <xref:System.Windows.Forms.DataFormats> classe.  
  
 Appelez <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> pour placer des données dans le Presse-papiers, en remplaçant son contenu actuel. Pour placer une copie persistante des données dans le Presse-papiers, affectez la `copy` paramètre `true`.  
  
> [!NOTE]
>  Pour placer des données dans le Presse-papiers dans plusieurs formats, utilisez le <xref:System.Windows.Forms.DataObject> classe ou un <xref:System.Windows.Forms.IDataObject> implémentation. Placer des données dans le Presse-papiers dans plusieurs formats pour optimiser les chances de récupération des données par une application cible, dont vous le savez ne peut-être pas, les exigences de format.  
  
 Appelez <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pour récupérer des données à partir du Presse-papiers. Les données sont retournées en tant qu’objet qui implémente le <xref:System.Windows.Forms.IDataObject> interface. Utilisez les méthodes spécifiées par <xref:System.Windows.Forms.IDataObject> et les champs dans <xref:System.Windows.Forms.DataFormats> pour extraire les données à partir de l’objet. Si vous ne connaissez pas le format des données que vous avez récupéré, appelez le <xref:System.Windows.Forms.IDataObject.GetFormats%2A> méthode de la <xref:System.Windows.Forms.IDataObject> interface permettant d’obtenir une liste de tous les formats de ces données est stockée dans. Appelez ensuite la <xref:System.Windows.Forms.IDataObject.GetData%2A> méthode de la <xref:System.Windows.Forms.IDataObject> d’interface et spécifiez un format que votre application peut utiliser.  
  
 Dans [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], la <xref:System.Windows.Forms.Clipboard> classe fournit des méthodes supplémentaires qui facilitent l’utilisation du Presse-papiers système. Appelez le <xref:System.Windows.Forms.Clipboard.Clear%2A> méthode pour supprimer toutes les données à partir du Presse-papiers. Pour ajouter des données d’un format particulier dans le Presse-papiers, en remplaçant les données existantes, appelez la `Set` *Format* (méthode), tel que <xref:System.Windows.Forms.Clipboard.SetText%2A>, ou appelez le <xref:System.Windows.Forms.Clipboard.SetData%2A> méthode pour spécifier le format. Pour récupérer des données d’un format particulier à partir du Presse-papiers, appelez d’abord approprié `Contains` *Format* (méthode) (tels que <xref:System.Windows.Forms.Clipboard.ContainsText%2A>) méthode pour déterminer si le Presse-papiers contient des données dans ce format, puis appelez le appropriée `Get` *Format* (méthode) (tels que <xref:System.Windows.Forms.Clipboard.GetText%2A>) pour récupérer les données si le Presse-papiers en contient. Pour spécifier le format de ces opérations, appelez le <xref:System.Windows.Forms.Clipboard.ContainsData%2A> et <xref:System.Windows.Forms.Clipboard.GetData%2A> méthodes à la place.  
  
> [!NOTE]
>  Toutes les applications basées sur Windows partagent le Presse-papiers système, par conséquent, le contenu est susceptibles d’être modifiées lorsque vous basculez vers une autre application.  
>   
>  Un objet doit être sérialisable être placé dans le Presse-papiers. Si vous passez un objet non sérialisable à une méthode de Presse-papiers, la méthode échoue sans lever d’exception. Consultez <xref:System.Runtime.Serialization> pour plus d’informations sur la sérialisation. Si votre application cible requiert un format de données très spécifique, les en-têtes ajoutés aux données dans le processus de sérialisation peuvent empêcher l’application de ne pas reconnaître vos données. Pour conserver votre format de données, ajoutez vos données en tant qu’un <xref:System.Byte> de tableau à un <xref:System.IO.MemoryStream> et passer le <xref:System.IO.MemoryStream> à la <xref:System.Windows.Forms.DataObject.SetData%2A> (méthode).  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
>   
>  Considérations spéciales peuvent être nécessaires lorsque vous utilisez le format de métafichier avec le Presse-papiers. En raison d’une limitation dans l’implémentation actuelle de la <xref:System.Windows.Forms.DataObject> (classe), le format de métafichier utilisé par le .NET Framework ne soient pas reconnu par les applications qui utilisent un ancien format de métafichier. Dans ce cas, vous devez interagir avec les interfaces de programmation d’application (API) Win32 Presse-papiers.
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Windows.Forms.Clipboard> méthodes pour placer des données et récupérer à partir du Presse-papiers système. Ce code suppose `button1`, `button2`, `textBox1`, et `textBox2` ont été créés et placés dans le formulaire.  
  
 Le `button1_Click` les appels de méthode <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> pour extraire le texte sélectionné à partir de la zone de texte et placez-le sur le Presse-papiers système.  
  
 Le `button2_Click` les appels de méthode <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pour récupérer des données à partir du Presse-papiers système. Le code utilise <xref:System.Windows.Forms.IDataObject> et <xref:System.Windows.Forms.DataFormats> pour extraire les données retournées et affiche les données dans `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
    <altmember cref="T:System.Windows.Forms.IDataObject" />
    <related type="Article" href="https://msdn.microsoft.com/library/15abda8b-0527-47c7-aedb-77ab595f2bf1">Considérations supplémentaires sur la sécurité des Windows Forms</related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear();" />
      <MemberSignature Language="F#" Value="static member Clear : unit -&gt; unit" Usage="System.Windows.Forms.Clipboard.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les données du Presse-papiers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le Presse-papiers est partagé par plusieurs processus, appel de cette méthode peut avoir un impact sur ces processus.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Clipboard#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour effacer le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsAudio();" />
      <MemberSignature Language="F#" Value="static member ContainsAudio : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsAudio " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si le Presse-papiers contient des données au format <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient des données audio ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient des données audio avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsData (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ContainsData : string -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format des données à rechercher. Consultez <see cref="T:System.Windows.Forms.DataFormats" /> pour obtenir les formats prédéfinis.</param>
        <summary>Indique si le Presse-papiers contient des données au format spécifié ou qui peuvent être converties dans ce format.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient des données au <paramref name="format" /> spécifié ou qui peuvent être converties dans ce format ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.DataFormats> classe contient les noms de formats prédéfinis que vous pouvez utiliser avec cette méthode.  
  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient des données dans le format spécifié ou dans un format compatible avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetData%2A> (méthode).  
  
> [!NOTE]
>  Données peuvent être converties dans un autre format, s’il a été stocké en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké. Par exemple, les données stockées en Unicode peut être converti en texte.  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsFileDropList();" />
      <MemberSignature Language="F#" Value="static member ContainsFileDropList : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si le Presse-papiers contient des données au format <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> ou qui peuvent être converties dans ce format.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient une liste déroulante de fichiers ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liste déroulante de fichiers est une collection de chaînes contenant les informations de chemin d’accès pour les fichiers.  
  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient une liste déroulante de fichiers avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsImage();" />
      <MemberSignature Language="F#" Value="static member ContainsImage : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si le Presse-papiers contient des données au format <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> ou qui peuvent être converties dans ce format.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient des données image ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient des données d’image avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetImage%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Indique si le Presse-papiers contient des données textuelles.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText();" />
      <MemberSignature Language="F#" Value="static member ContainsText : unit -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si le Presse-papiers contient des données au format <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, selon le système d'exploitation.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient des données textuelles ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie la présence de données dans le <xref:System.Windows.Forms.TextDataFormat.UnicodeText> mise en forme sur [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] et [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Sinon, cette méthode vérifie la présence de données dans le <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient des données texte avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetText%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant montre une surcharge de la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> méthode est similaire à cette surcharge.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.Text" />
        <altmember cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.ContainsText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ContainsText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member ContainsText : System.Windows.Forms.TextDataFormat -&gt; bool" Usage="System.Windows.Forms.Clipboard.ContainsText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Une des valeurs de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Indique si le Presse-papiers contient des données textuelles au format indiqué par la valeur <see cref="T:System.Windows.Forms.TextDataFormat" /> spécifiée.</summary>
        <returns><see langword="true" /> si le Presse-papiers contient des données textuelles dans la valeur spécifiée pour <paramref name="format" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour déterminer si le Presse-papiers contient des données texte avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetText%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> n’est pas une valeur de <see cref="T:System.Windows.Forms.TextDataFormat" /> valide.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ GetAudioStream();" />
      <MemberSignature Language="F#" Value="static member GetAudioStream : unit -&gt; System.IO.Stream" Usage="System.Windows.Forms.Clipboard.GetAudioStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un flux audio dans le Presse-papiers.</summary>
        <returns><see cref="T:System.IO.Stream" /> contenant des données audio ou <see langword="null" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> méthode pour déterminer si le Presse-papiers contient des données audio avant de les récupérer avec cette méthode.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetAudio%2A> méthode pour ajouter des données audio dans le Presse-papiers.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetAudio" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetData : string -&gt; obj" Usage="System.Windows.Forms.Clipboard.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Format des données à récupérer. Consultez <see cref="T:System.Windows.Forms.DataFormats" /> pour obtenir les formats prédéfinis.</param>
        <summary>Récupère des données du Presse-papiers dans le format spécifié.</summary>
        <returns><see cref="T:System.Object" /> représentant les données du Presse-papiers ou <see langword="null" /> si le Presse-papiers ne contient pas de données au <paramref name="format" /> spécifié ou qui peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsData%2A> méthode pour déterminer si le Presse-papiers contient des données dans le format spécifié ou dans un format compatible avant de les récupérer avec cette méthode.  
  
 Si cette méthode ne peut pas rechercher des données dans le format spécifié, il tente de convertir les données au format. Si les données ne peut pas être converties au format spécifié, ou si les données a été stockées avec conversion automatique est définie sur `false`, cette méthode retourne `null`.  
  
> [!NOTE]
>  Données peuvent être converties dans un autre format, s’il a été stocké en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké. Par exemple, les données stockées en Unicode peut être converti en texte.  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetData%2A> méthode pour ajouter des données dans le Presse-papiers dans un format particulier.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject GetDataObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetDataObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataObject () As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ GetDataObject();" />
      <MemberSignature Language="F#" Value="static member GetDataObject : unit -&gt; System.Windows.Forms.IDataObject" Usage="System.Windows.Forms.Clipboard.GetDataObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les données figurant dans le Presse-papiers système.</summary>
        <returns><see cref="T:System.Windows.Forms.IDataObject" /> représentant les données figurant dans le Presse-papiers ou <see langword="null" /> en l'absence de données dans le Presse-papiers.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le type de données de l’objet retourné à partir du Presse-papiers peut varier, cette méthode retourne les données dans un <xref:System.Windows.Forms.IDataObject>. Vous pouvez ensuite utiliser les méthodes de la <xref:System.Windows.Forms.IDataObject> interface pour extraire les données dans son propre type de données.  
  
 Cette méthode tente d’obtenir les données dix fois dans des intervalles de 100 millisecondes et lève un <xref:System.Runtime.InteropServices.ExternalException> si toutes les tentatives échouent.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Windows.Forms.Clipboard> méthodes pour placer des données et récupérer à partir du Presse-papiers système. Ce code suppose `button1`, `button2`, `textBox1`, et `textBox2` ont été placés sur le formulaire.  
  
 Le `button1_Click` les appels de méthode <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> pour extraire le texte sélectionné à partir de la zone de texte et placez-le sur le Presse-papiers système.  
  
 Le `button2_Click` les appels de méthode <xref:System.Windows.Forms.Clipboard.GetDataObject%2A> pour récupérer des données à partir du Presse-papiers système. Le code utilise <xref:System.Windows.Forms.IDataObject> et <xref:System.Windows.Forms.DataFormats> pour extraire les données retournées. Les données sont affichées dans `textBox2`.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Les données n'ont pas pu être récupérées du Presse-papiers. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment) et la propriété <see cref="P:System.Windows.Forms.Application.MessageLoop" /> a la valeur <see langword="true" />. Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberSignature Language="F#" Value="static member GetFileDropList : unit -&gt; System.Collections.Specialized.StringCollection" Usage="System.Windows.Forms.Clipboard.GetFileDropList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère une collection de noms de fichiers du Presse-papiers.</summary>
        <returns><see cref="T:System.Collections.Specialized.StringCollection" /> contenant des noms de fichiers ou <see langword="null" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> ou qui peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liste déroulante de fichiers est une collection de chaînes contenant les informations de chemin d’accès pour les fichiers.  
  
 Une liste déroulante de fichiers est stockée dans le Presse-papiers en tant qu’un <xref:System.String> tableau. Cette méthode convertit ce tableau en un <xref:System.Collections.Specialized.StringCollection> et retourne la collection.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> méthode pour déterminer si le Presse-papiers contient une liste déroulante de fichiers avant de les récupérer avec cette méthode.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetFileDropList%2A> méthode pour ajouter une liste déroulante de fichiers dans le Presse-papiers.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImage () As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImage();" />
      <MemberSignature Language="F#" Value="static member GetImage : unit -&gt; System.Drawing.Image" Usage="System.Windows.Forms.Clipboard.GetImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère une image du Presse-papiers.</summary>
        <returns><see cref="T:System.Drawing.Image" /> représentant les données image du Presse-papiers ou <see langword="null" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> ou qui peuvent être converties dans ce format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> méthode pour déterminer si le Presse-papiers contient des données d’image avant de les récupérer avec cette méthode.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetImage%2A> méthode pour ajouter des données d’image dans le Presse-papiers.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère des données textuelles du Presse-papiers.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText();" />
      <MemberSignature Language="F#" Value="static member GetText : unit -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère des données textuelles du Presse-papiers dans le format <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, selon le système d'exploitation.</summary>
        <returns>Données textuelles du Presse-papiers ou <see cref="F:System.String.Empty" /> si le Presse-papiers ne contient pas de données au format <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, selon le système d'exploitation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne des données textuelles dans le <xref:System.Windows.Forms.TextDataFormat.UnicodeText> mise en forme sur [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] et [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Sinon, cette méthode retourne les données de texte dans le <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsText%2A> méthode pour déterminer si le Presse-papiers contient des données texte avant de les récupérer avec cette méthode.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetText%2A> méthode pour ajouter des données de texte dans le Presse-papiers.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant montre une surcharge de la <xref:System.Windows.Forms.Clipboard.GetText%2A> méthode est similaire à cette surcharge.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.GetText(System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member GetText : System.Windows.Forms.TextDataFormat -&gt; string" Usage="System.Windows.Forms.Clipboard.GetText format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">Une des valeurs de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Récupère des données textuelles du Presse-papiers dans le format indiqué par la valeur <see cref="T:System.Windows.Forms.TextDataFormat" /> spécifiée.</summary>
        <returns>Données textuelles du Presse-papiers ou <see cref="F:System.String.Empty" /> si le Presse-papiers ne contient pas de données au format spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.Clipboard.ContainsText%2A> méthode pour déterminer si le Presse-papiers contient des données texte avant de les récupérer avec cette méthode.  
  
 Utilisez le <xref:System.Windows.Forms.Clipboard.SetText%2A> méthode pour ajouter des données de texte dans le Presse-papiers.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> n’est pas une valeur de <see cref="T:System.Windows.Forms.TextDataFormat" /> valide.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour accéder au Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le Presse-papiers puis ajoute des données au format <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> en remplaçant les données existantes.</summary>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberSignature Language="F#" Value="static member SetAudio : byte[] -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioBytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">Tableau de <see cref="T:System.Byte" /> contenant les données audio.</param>
        <summary>Efface le Presse-papiers puis ajoute un tableau <see cref="T:System.Byte" /> au format <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" /> après l'avoir converti en <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer des données audio à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> méthode pour déterminer si le Presse-papiers contient des données audio avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant montre une surcharge de la <xref:System.Windows.Forms.Clipboard.SetAudio%2A> méthode est similaire à cette surcharge.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioBytes" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données audio dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberSignature Language="F#" Value="static member SetAudio : System.IO.Stream -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetAudio audioStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream"><see cref="T:System.IO.Stream" /> contenant les données audio.</param>
        <summary>Efface le Presse-papiers puis ajoute un <see cref="T:System.IO.Stream" /> au format <see cref="F:System.Windows.Forms.DataFormats.WaveAudio" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer des données audio à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsAudio%2A> méthode pour déterminer si le Presse-papiers contient des données audio avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetAudioStream%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#20)]
 [!code-vb[System.Windows.Forms.Clipboard#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="audioStream" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données audio dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.WaveAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsAudio" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetAudioStream" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetData : string * obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Format des données à définir. Consultez <see cref="T:System.Windows.Forms.DataFormats" /> pour obtenir les formats prédéfinis.</param>
        <param name="data"><see cref="T:System.Object" /> représentant les données à ajouter.</param>
        <summary>Efface le Presse-papiers puis ajoute des données au format spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous ne connaissez pas le format de l’application cible, vous pouvez stocker des données dans plusieurs formats à l’aide de cette méthode.  
  
 Les données stockées à l’aide de cette méthode peuvent être converties dans un format compatible lorsqu’il est extrait.  
  
 Pour récupérer des données à partir du Presse-papiers dans un format particulier, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsData%2A> méthode pour déterminer si le Presse-papiers contient des données dans ce format avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetData%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#10)]
 [!code-vb[System.Windows.Forms.Clipboard#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données de tout type ou le format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsData(System.String)" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetData(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDataObject">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le Presse-papiers puis y ajoute des données.</summary>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Données à placer dans le Presse-papiers.</param>
        <summary>Efface le Presse-papiers puis y place des données non persistantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Données seront supprimées du Presse-papiers système lors de l’application se ferme.  
  
 Cette méthode tente de définir les données dix fois dans des intervalles de 100 millisecondes et lève un <xref:System.Runtime.InteropServices.ExternalException> si toutes les tentatives échouent.  
  
> [!NOTE]
>  Un objet doit être sérialisable être placé dans le Presse-papiers. Si vous passez un objet non sérialisable à cette méthode, il échoue sans lever d’exception. Consultez <xref:System.Runtime.Serialization> pour plus d’informations sur la sérialisation.  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 Le code suivant exemple utilise <xref:System.Windows.Forms.Clipboard.SetDataObject%2A> pour placer des données textuelles non persistantes dans le Presse-papiers système. Dans le `button1_Click` (méthode), le texte sélectionné est copié à partir de `textBox1` et collé dans le Presse-papiers. Dans le `button2_Click` (méthode), les informations est récupérée à partir du Presse-papiers et affiché dans `textBox2`. Ce code suppose `button1`, `button2`, `textBox1`, et `textBox2` ont été créés et placés dans un formulaire.  
  
 [!code-cpp[Classic Clipboard Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Les données n'ont pas pu être placées dans le Presse-papiers. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="data" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données de tout type ou le format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">Données à placer dans le Presse-papiers.</param>
        <param name="copy"><see langword="true" /> si vous souhaitez que les données restent dans le Presse-papiers lorsque l'utilisateur quitte l'application ; sinon, <see langword="false" />.</param>
        <summary>Efface le Presse-papiers puis y place des données et spécifie si les données doivent rester lorsque l'application se ferme.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `copy` paramètre est `false`, les données seront supprimées du Presse-papiers système lors de l’application se ferme.  
  
 Cette méthode tente de définir les données dix fois dans des intervalles de 100 millisecondes et lève un <xref:System.Runtime.InteropServices.ExternalException> si toutes les tentatives échouent.  
  
> [!NOTE]
>  Un objet doit être sérialisable être placé dans le Presse-papiers. Si vous passez un objet non sérialisable à cette méthode, il échoue sans lever d’exception. Consultez <xref:System.Runtime.Serialization> pour plus d’informations sur la sérialisation.  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 La méthode suivante est exécutée dans une application. Il place une copie persistante des données texte sélectionné dans la zone de texte sur le Presse-papiers système. Ce code suppose `button1`, `textBox1`, et `textBox2` ont été créés et placés dans un formulaire.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#1)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#1)]  
  
 Dans une autre application, la méthode suivante récupère le texte du Presse-papiers système et colle le texte dans `textBox2`. Ce code suppose `button2` et `textBox2` ont été créés et placés dans un formulaire.  
  
 [!code-cpp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/CS/source.cs#2)]
 [!code-vb[Classic Clipboard.SetDataObject1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Clipboard.SetDataObject1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Les données n'ont pas pu être placées dans le Presse-papiers. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="data" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données de tout type ou le format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy, int32 retryTimes, int32 retryDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetDataObject(System.Object,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDataObject (data As Object, copy As Boolean, retryTimes As Integer, retryDelay As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDataObject(System::Object ^ data, bool copy, int retryTimes, int retryDelay);" />
      <MemberSignature Language="F#" Value="static member SetDataObject : obj * bool * int * int -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetDataObject (data, copy, retryTimes, retryDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
        <Parameter Name="retryTimes" Type="System.Int32" />
        <Parameter Name="retryDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">Données à placer dans le Presse-papiers.</param>
        <param name="copy"><see langword="true" /> si vous souhaitez que les données restent dans le Presse-papiers lorsque l'utilisateur quitte l'application ; sinon, <see langword="false" />.</param>
        <param name="retryTimes">Nombre de tentatives de placement des données dans le Presse-papiers.</param>
        <param name="retryDelay">Délai d'attente en millisecondes entre les tentatives.</param>
        <summary>Efface le Presse-papiers puis tente d'y placer des données le nombre spécifié de fois et dans le délai spécifié entre les tentatives, en laissant éventuellement les données dans le Presse-papiers lorsque l'utilisateur quitte l'application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ajout de données dans le Presse-papiers peut parfois échouer si le Presse-papiers est occupé par une autre application ou un thread. Cette méthode est utile pour contourner ce problème dans les environnements avec une utilisation intensive du Presse-papiers.  
  
 Si le `copy` paramètre est `false`, les données seront supprimées du Presse-papiers système lors de l’application se ferme.  
  
> [!NOTE]
>  Un objet doit être sérialisable être placé dans le Presse-papiers. Si vous passez un objet non sérialisable à cette méthode, il échoue sans lever d’exception. Consultez <xref:System.Runtime.Serialization> pour plus d’informations sur la sérialisation.  
>   
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="data" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="retryTimes" /> est inférieur à zéro.  
  
- ou - 
 <paramref name="retryDelay" /> est inférieur à zéro.</exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Les données n'ont pas pu être placées dans le Presse-papiers. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données de tout type ou le format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.DataObject" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="T:System.Windows.Forms.IDataObject" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetDataObject" />
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFileDropList (filePaths As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFileDropList(System::Collections::Specialized::StringCollection ^ filePaths);" />
      <MemberSignature Language="F#" Value="static member SetFileDropList : System.Collections.Specialized.StringCollection -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetFileDropList filePaths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="filePaths"><see cref="T:System.Collections.Specialized.StringCollection" /> contenant les noms de fichiers.</param>
        <summary>Efface le Presse-papiers puis ajoute une collection de noms de fichier au format <see cref="F:System.Windows.Forms.DataFormats.FileDrop" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une liste déroulante de fichiers est une collection de chaînes contenant les informations de chemin d’accès pour les fichiers.  
  
 Une liste déroulante de fichiers est stockée dans le Presse-papiers en tant qu’un <xref:System.String> tableau. Cette méthode convertit `filePaths` à un <xref:System.String> tableau avant de l’ajouter dans le Presse-papiers.  
  
 Pour récupérer une liste déroulante de fichiers à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsFileDropList%2A> méthode pour déterminer si le Presse-papiers contient des données dans ce format avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetFileDropList%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#30)]
 [!code-vb[System.Windows.Forms.Clipboard#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> ne contient pas de chaînes.  
  
- ou - 
Au moins, l'une des chaînes dans <paramref name="filePaths" /> a la valeur <see cref="F:System.String.Empty" />, contient uniquement des espaces blancs, contient un ou plusieurs caractères non valides tels que définis par <see cref="F:System.IO.Path.InvalidPathChars" />, a la valeur <see langword="null" />, contient le signe deux-points (:) ou dépasse la longueur maximale définie par le système.  
  
Pour plus d'informations, consultez la propriété <see cref="P:System.Exception.InnerException" /> de <see cref="T:System.ArgumentException" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données dans le <see cref="F:System.Windows.Forms.DataFormats.FileDrop" /> format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Pour accéder au système de fichiers. Énumération associée : <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.FileDrop" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsFileDropList" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetFileDropList" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member SetImage : System.Drawing.Image -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image"><see cref="T:System.Drawing.Image" /> à ajouter au Presse-papiers.</param>
        <summary>Efface le Presse-papiers puis ajoute un <see cref="T:System.Drawing.Image" /> au format <see cref="F:System.Windows.Forms.DataFormats.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer des données d’image à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsImage%2A> méthode pour déterminer si le Presse-papiers contient des données de l’image avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetImage%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#40)]
 [!code-vb[System.Windows.Forms.Clipboard#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="image" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données dans le <see cref="F:System.Windows.Forms.DataFormats.Bitmap" /> format dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" /></permission>
        <altmember cref="F:System.Windows.Forms.DataFormats.Bitmap" />
        <altmember cref="M:System.Windows.Forms.Clipboard.ContainsImage" />
        <altmember cref="M:System.Windows.Forms.Clipboard.GetImage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Efface le Presse-papiers puis y ajoute des données de texte.</summary>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member SetText : string -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à ajouter au Presse-papiers.</param>
        <summary>Efface le Presse-papiers puis y ajoute des données de texte au format <see cref="F:System.Windows.Forms.TextDataFormat.Text" /> ou <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText" />, selon le système d'exploitation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ajoute des données textuelles dans le <xref:System.Windows.Forms.TextDataFormat.UnicodeText> mise en forme sur [!INCLUDE[WinXpFamily](~/includes/winxpfamily-md.md)] et [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)]. Sinon, cette méthode ajoute des données textuelles dans le <xref:System.Windows.Forms.TextDataFormat.Text> format.  
  
 Pour récupérer des données de texte à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> méthode pour déterminer si le Presse-papiers contient des données de texte avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetText%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant montre une surcharge de la <xref:System.Windows.Forms.Clipboard.SetText%2A> méthode est similaire à cette surcharge.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données textuelles dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.Forms.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.Forms.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Clipboard.SetText(System.String,System.Windows.Forms.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetText (text As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetText(System::String ^ text, System::Windows::Forms::TextDataFormat format);" />
      <MemberSignature Language="F#" Value="static member SetText : string * System.Windows.Forms.TextDataFormat -&gt; unit" Usage="System.Windows.Forms.Clipboard.SetText (text, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">Texte à ajouter au Presse-papiers.</param>
        <param name="format">Une des valeurs de <see cref="T:System.Windows.Forms.TextDataFormat" />.</param>
        <summary>Efface le Presse-papiers puis ajoute des données de texte au format indiqué par la valeur <see cref="T:System.Windows.Forms.TextDataFormat" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer des données de texte à partir du Presse-papiers, utilisez d’abord la <xref:System.Windows.Forms.Clipboard.ContainsText%2A> méthode pour déterminer si le Presse-papiers contient des données de texte avant de les récupérer avec la <xref:System.Windows.Forms.Clipboard.GetText%2A> (méthode).  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.Clipboard> classe peut uniquement être utilisée dans les threads en mode de thread unique cloisonné (STA). Pour utiliser cette classe, vérifiez que votre `Main` méthode est marquée avec le <xref:System.STAThreadAttribute> attribut.  
  
   
  
## Examples  
 L’exemple suivant illustre ce membre.  
  
 [!code-csharp[System.Windows.Forms.Clipboard#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/CS/form1.cs#50)]
 [!code-vb[System.Windows.Forms.Clipboard#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Clipboard/vb/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.ExternalException">Le Presse-papiers n'a pas pu être effacé. Cela se produit en général lorsque le Presse-papiers est utilisé par un autre processus.</exception>
        <exception cref="T:System.Threading.ThreadStateException">Le thread actuel n'est pas en mode thread cloisonné (STA, Single-Threaded Apartment). Ajoutez <see cref="T:System.STAThreadAttribute" /> à la méthode <see langword="Main" /> de votre application.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> est <see langword="null" /> ou <see cref="F:System.String.Empty" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="format" /> n’est pas une valeur de <see cref="T:System.Windows.Forms.TextDataFormat" /> valide.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Pour ajouter des données textuelles dans le Presse-papiers système. Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionClipboard.OwnClipboard" /></permission>
        <altmember cref="T:System.Windows.Forms.TextDataFormat" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.ContainsText" />
        <altmember cref="Overload:System.Windows.Forms.Clipboard.GetText" />
      </Docs>
    </Member>
  </Members>
</Type>