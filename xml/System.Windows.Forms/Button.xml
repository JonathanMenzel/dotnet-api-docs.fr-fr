<Type Name="Button" FullName="System.Windows.Forms.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc9b5a16c596cf39b3f9819598b2ef48ae2dbff9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36348309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Forms.ButtonBase, System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Windows.Forms.ButtonBase implements class System.Windows.Forms.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase&#xA;Implements IButtonControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Forms::ButtonBase, System::Windows::Forms::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit ButtonBase&#xA;    interface IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="00a85-101">Représente un contrôle bouton Windows.</span>
      <span class="sxs-lookup">
        <span data-stu-id="00a85-101">Represents a Windows button control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-102">Un <xref:System.Windows.Forms.Button> peut être sélectionné à l’aide de la souris, la touche entrée ou la barre d’espace si le bouton a le focus.</span><span class="sxs-lookup"><span data-stu-id="00a85-102">A <xref:System.Windows.Forms.Button> can be clicked by using the mouse, ENTER key, or SPACEBAR if the button has focus.</span></span>  
  
 <span data-ttu-id="00a85-103">Définir le <xref:System.Windows.Forms.Form.AcceptButton%2A> ou <xref:System.Windows.Forms.Form.CancelButton%2A> propriété d’un <xref:System.Windows.Forms.Form> pour permettre aux utilisateurs de cliquer sur un bouton en appuyant sur les touches entrée ou ÉCHAP même si le bouton n’a pas le focus.</span><span class="sxs-lookup"><span data-stu-id="00a85-103">Set the <xref:System.Windows.Forms.Form.AcceptButton%2A> or <xref:System.Windows.Forms.Form.CancelButton%2A> property of a <xref:System.Windows.Forms.Form> to allow users to click a button by pressing the ENTER or ESC keys even if the button does not have focus.</span></span> <span data-ttu-id="00a85-104">Cela permet au formulaire le comportement d’une boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="00a85-104">This gives the form the behavior of a dialog box.</span></span>  
  
 <span data-ttu-id="00a85-105">Lorsque vous affichez un formulaire à l’aide de la <xref:System.Windows.Forms.Form.ShowDialog%2A> (méthode), vous pouvez utiliser la <xref:System.Windows.Forms.Button.DialogResult%2A> propriété d’un bouton pour spécifier la valeur de retour de <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="00a85-105">When you display a form using the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, you can use the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a button to specify the return value of <xref:System.Windows.Forms.Form.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="00a85-106">Vous pouvez modifier l’apparence du bouton.</span><span class="sxs-lookup"><span data-stu-id="00a85-106">You can change the button's appearance.</span></span> <span data-ttu-id="00a85-107">Par exemple, pour faire apparaître plat pour une présentation Web, définissez la <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> propriété <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="00a85-107">For example, to make it appear flat for a Web look, set the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property to <xref:System.Windows.Forms.FlatStyle.Flat?displayProperty=nameWithType>.</span></span> <span data-ttu-id="00a85-108">Le <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> propriété peut également être définie <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, qui apparaît plat jusqu'à ce que le pointeur de la souris passe sur le bouton ; puis le bouton prend l’apparence de bouton Windows standard.</span><span class="sxs-lookup"><span data-stu-id="00a85-108">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property can also be set to <xref:System.Windows.Forms.FlatStyle.Popup?displayProperty=nameWithType>, which appears flat until the mouse pointer passes over the button; then the button takes on the standard Windows button appearance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00a85-109">Si le contrôle ayant le focus accepte et traite la touche entrée, le <xref:System.Windows.Forms.Button> n’est pas traiter.</span><span class="sxs-lookup"><span data-stu-id="00a85-109">If the control that has focus accepts and processes the ENTER key press, the <xref:System.Windows.Forms.Button> does not process it.</span></span> <span data-ttu-id="00a85-110">Par exemple, si une propriété multiline <xref:System.Windows.Forms.TextBox> ou un autre bouton a le focus, ce contrôle traite alors la pression sur la touche entrée à la place le bouton d’acceptation.</span><span class="sxs-lookup"><span data-stu-id="00a85-110">For example, if a multiline <xref:System.Windows.Forms.TextBox> or another button has focus, that control processes the ENTER key press instead of the accept button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-111">L’exemple de code suivant crée un <xref:System.Windows.Forms.Button>, définit son <xref:System.Windows.Forms.Button.DialogResult%2A> propriété <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>et l’ajoute à un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="00a85-111">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to <xref:System.Windows.Forms.DialogResult.OK?displayProperty=nameWithType>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ButtonBase" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.IButtonControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00a85-112">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.Button" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-113">Par défaut le <xref:System.Windows.Forms.Button> n’affiche aucune légende.</span><span class="sxs-lookup"><span data-stu-id="00a85-113">By default the <xref:System.Windows.Forms.Button> displays no caption.</span></span> <span data-ttu-id="00a85-114">Pour spécifier le texte de légende, définissez la <xref:System.Windows.Forms.Control.Text%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="00a85-114">To specify the caption text, set the <xref:System.Windows.Forms.Control.Text%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-115">L’exemple de code suivant crée un <xref:System.Windows.Forms.Button>, définit son <xref:System.Windows.Forms.Button.DialogResult%2A> propriété le `OK` valeur <xref:System.Windows.Forms.DialogResult>et l’ajoute à un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="00a85-115">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.Button.DialogResult%2A> property to the `OK` value of <xref:System.Windows.Forms.DialogResult>, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Button" />
      </Docs>
    </Member>
    <Member MemberName="AutoSizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoSizeMode AutoSizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.AutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSizeMode As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoSizeMode AutoSizeMode { System::Windows::Forms::AutoSizeMode get(); void set(System::Windows::Forms::AutoSizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSizeMode : System.Windows.Forms.AutoSizeMode with get, set" Usage="System.Windows.Forms.Button.AutoSizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00a85-116">Obtient ou définit le mode qui permet de redimensionner automatiquement <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-116">Gets or sets the mode by which the <see cref="T:System.Windows.Forms.Button" /> automatically resizes itself.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00a85-117">Une des valeurs de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-117">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span>
          </span>
          <span data-ttu-id="00a85-118">La valeur par défaut est <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-118">The default value is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Button.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00a85-119">Obtient un <see cref="T:System.Windows.Forms.CreateParams" /> sur la classe de base lors de la création d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-119">Gets a <see cref="T:System.Windows.Forms.CreateParams" /> on the base class when creating a window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00a85-120">Objet <see cref="T:System.Windows.Forms.CreateParams" /> sur la classe de base lors de la création d'une fenêtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-120">A <see cref="T:System.Windows.Forms.CreateParams" /> object on the base class when creating a window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-121">Les classes qui héritent peuvent substituer cette propriété pour ajouter des fonctionnalités supplémentaires, mais doit d’abord appeler la <xref:System.Windows.Forms.CreateParams> constructeur sur la classe de base pour vérifier que le contrôle continue à fonctionner correctement.</span><span class="sxs-lookup"><span data-stu-id="00a85-121">Inheriting classes can override this property to add extra functionality, but must first call the <xref:System.Windows.Forms.CreateParams> constructor on the base class to verify that the control continues to work correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DialogResult DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DialogResult DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Button.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DialogResult As DialogResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DialogResult DialogResult { System::Windows::Forms::DialogResult get(); void set(System::Windows::Forms::DialogResult value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : System.Windows.Forms.DialogResult with get, set" Usage="System.Windows.Forms.Button.DialogResult" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IButtonControl.DialogResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DialogResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00a85-122">Obtient ou définit une valeur qui est retournée au formulaire parent lorsque l'utilisateur clique sur le bouton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-122">Gets or sets a value that is returned to the parent form when the button is clicked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="00a85-123">Une des valeurs de <see cref="T:System.Windows.Forms.DialogResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-123">One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
          <span data-ttu-id="00a85-124">La valeur par défaut est <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-124">The default value is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-125">Si le <xref:System.Windows.Forms.DialogResult> pour cette propriété est définie sur une autre valeur autre que `None`, et si le formulaire parent est affiché via le <xref:System.Windows.Forms.Form.ShowDialog%2A> (méthode), en cliquant sur le bouton ferme le formulaire parent sans devoir raccorder des événements.</span><span class="sxs-lookup"><span data-stu-id="00a85-125">If the <xref:System.Windows.Forms.DialogResult> for this property is set to anything other than `None`, and if the parent form was displayed through the <xref:System.Windows.Forms.Form.ShowDialog%2A> method, clicking the button closes the parent form without your having to hook up any events.</span></span> <span data-ttu-id="00a85-126">Du formulaire <xref:System.Windows.Forms.Form.DialogResult%2A> est ensuite définie sur la <xref:System.Windows.Forms.DialogResult> du bouton lorsque le bouton est activé.</span><span class="sxs-lookup"><span data-stu-id="00a85-126">The form's <xref:System.Windows.Forms.Form.DialogResult%2A> property is then set to the <xref:System.Windows.Forms.DialogResult> of the button when the button is clicked.</span></span>  
  
 <span data-ttu-id="00a85-127">Par exemple, pour créer une boîte de dialogue « Oui/Non/Annuler », simplement ajouter trois boutons et définir leurs <xref:System.Windows.Forms.DialogResult> propriétés `Yes`, `No`, et `Cancel`.</span><span class="sxs-lookup"><span data-stu-id="00a85-127">For example, to create a "Yes/No/Cancel" dialog box, simply add three buttons and set their <xref:System.Windows.Forms.DialogResult> properties to `Yes`, `No`, and `Cancel`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-128">L’exemple de code suivant crée un <xref:System.Windows.Forms.Button>, définit son <xref:System.Windows.Forms.DialogResult> propriété `OK`et l’ajoute à un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="00a85-128">The following code example creates a <xref:System.Windows.Forms.Button>, sets its <xref:System.Windows.Forms.DialogResult> property to `OK`, and adds it to a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Classic Button.Button Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.Button Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.Button Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.Button Example/CS/source.cs#1)]
 [!code-vb[Classic Button.Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.Button Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="00a85-129">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.DialogResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-129">The value assigned is not one of the <see cref="T:System.Windows.Forms.DialogResult" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00a85-130">Se produit quand l'utilisateur double-clique sur le contrôle <see cref="T:System.Windows.Forms.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-130">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-131">Par défaut, le <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> et <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits sont définis sur `false` pour le <xref:System.Windows.Forms.Button> (contrôle) et le <xref:System.Windows.Forms.Button.DoubleClick> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="00a85-131">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.DoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="00a85-132">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="00a85-132">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-133">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="00a85-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="00a85-134">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Button.DoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="00a85-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span> <span data-ttu-id="00a85-135">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="00a85-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="00a85-136">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="00a85-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="00a85-137">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.Button> nommé `Button1`.</span><span class="sxs-lookup"><span data-stu-id="00a85-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="00a85-138">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Button.DoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="00a85-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.DoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#137)]
 [!code-vb[System.Windows.Forms.EventExamples#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Button.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="00a85-139">Se produit quand l'utilisateur double-clique sur le contrôle <see cref="T:System.Windows.Forms.Button" /> avec la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-139">Occurs when the user double-clicks the <see cref="T:System.Windows.Forms.Button" /> control with the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-140">Par défaut, le <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> et <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits sont définis sur `false` pour le <xref:System.Windows.Forms.Button> (contrôle) et le <xref:System.Windows.Forms.Button.MouseDoubleClick> événement n’est pas déclenché.</span><span class="sxs-lookup"><span data-stu-id="00a85-140">By default, the <xref:System.Windows.Forms.ControlStyles.StandardClick?displayProperty=nameWithType> and <xref:System.Windows.Forms.ControlStyles.StandardDoubleClick?displayProperty=nameWithType> style bits are set to `false` for the <xref:System.Windows.Forms.Button> control, and the <xref:System.Windows.Forms.Button.MouseDoubleClick> event is not raised.</span></span>  
  
 <span data-ttu-id="00a85-141">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="00a85-141">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-142">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="00a85-142">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="00a85-143">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Button.MouseDoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="00a85-143">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span> <span data-ttu-id="00a85-144">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="00a85-144">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="00a85-145">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="00a85-145">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="00a85-146">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.Button> nommé `Button1`.</span><span class="sxs-lookup"><span data-stu-id="00a85-146">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Button> named `Button1`.</span></span> <span data-ttu-id="00a85-147">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Button.MouseDoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="00a85-147">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Button.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#138)]
 [!code-vb[System.Windows.Forms.EventExamples#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDefault">
      <MemberSignature Language="C#" Value="public virtual void NotifyDefault (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyDefault(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyDefault (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyDefault(bool value);" />
      <MemberSignature Language="F#" Value="abstract member NotifyDefault : bool -&gt; unit&#xA;override this.NotifyDefault : bool -&gt; unit" Usage="button.NotifyDefault value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="00a85-148">
            <see langword="true" /> si le bouton doit avoir l'apparence du bouton par défaut ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-148">
              <see langword="true" /> if the button is to have the appearance of the default button; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-149">Indique à <see cref="T:System.Windows.Forms.Button" /> s'il constitue le bouton par défaut afin qu'il puisse adapter son apparence en conséquence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-149">Notifies the <see cref="T:System.Windows.Forms.Button" /> whether it is the default button so that it can adjust its appearance accordingly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-150">Cette méthode est appelée par le formulaire parent pour avertir le <xref:System.Windows.Forms.Button> qu’il doit être défini comme bouton par défaut et lui permettre d’adapter son apparence en conséquence.</span><span class="sxs-lookup"><span data-stu-id="00a85-150">This method is called by the parent form to notify the <xref:System.Windows.Forms.Button> that it should be set as the default button and to allow it to adjust its appearance accordingly.</span></span> <span data-ttu-id="00a85-151">En règle générale, un bouton qui est le bouton par défaut d’un formulaire a une bordure épaisse qu’autres boutons sur le formulaire.</span><span class="sxs-lookup"><span data-stu-id="00a85-151">Typically, a button that is the default button for a form has a thicker border than other buttons on the form.</span></span>  
  
 <span data-ttu-id="00a85-152">Appel de la <xref:System.Windows.Forms.Button.NotifyDefault%2A> méthode dessine uniquement le bouton comme bouton par défaut ; il ne modifie pas son comportement.</span><span class="sxs-lookup"><span data-stu-id="00a85-152">Calling the <xref:System.Windows.Forms.Button.NotifyDefault%2A> method only draws the button as a default button; it does not change its behavior.</span></span> <span data-ttu-id="00a85-153">Pour que le bouton se comporte comme un bouton par défaut, il doit être attribué à la <xref:System.Windows.Forms.Form.AcceptButton%2A> propriété de la <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="00a85-153">To make the button behave like a default button, it must be assigned to the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the <xref:System.Windows.Forms.Form>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="00a85-154">
            <para>Lors de la substitution <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> (méthode).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-154">
              <para>When overriding <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.NotifyDefault(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.IButtonControl.NotifyDefault(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00a85-155">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-155">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-156">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Click" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-156">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnFontChanged : EventArgs -&gt; unit" Usage="button.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00a85-157">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-157">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-158">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-158">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-159">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-159">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="00a85-160">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="00a85-160">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="00a85-161">La méthode <xref:System.Windows.Forms.Button.OnFontChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-161">The <xref:System.Windows.Forms.Button.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="00a85-162">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="00a85-162">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="00a85-163">
            <para>Lors de la substitution <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-163">
              <para>When overriding <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="button.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00a85-164">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-164">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-165">Déclenche l'événement <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-165">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="button.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00a85-166">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-166">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-167">Déclenche l'événement <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-167">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="button.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="00a85-168">
            <see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-168">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-169">Déclenche l'événement <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-169">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-170">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-170">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="00a85-171">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="00a85-171">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="00a85-172">La méthode <xref:System.Windows.Forms.Button.OnMouseUp%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-172">The <xref:System.Windows.Forms.Button.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="00a85-173">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="00a85-173">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="00a85-174">
            <para>Lors de la substitution <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-174">
              <para>When overriding <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="button.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="00a85-175">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-175">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-176">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-176">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-177">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-177">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="00a85-178">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="00a85-178">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="00a85-179">La méthode <xref:System.Windows.Forms.Button.OnTextChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="00a85-179">The <xref:System.Windows.Forms.Button.OnTextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="00a85-180">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="00a85-180">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="00a85-181">
            <para>Lors de la substitution <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-181">
              <para>When overriding <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Button.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="C#" Value="public void PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.PerformClick" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformClick ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformClick();" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; unit&#xA;override this.PerformClick : unit -&gt; unit" Usage="button.PerformClick " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IButtonControl.PerformClick</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00a85-182">Génère un événement <see cref="E:System.Windows.Forms.Control.Click" /> pour un bouton.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-182">Generates a <see cref="E:System.Windows.Forms.Control.Click" /> event for a button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-183">Cette méthode peut être appelée pour déclencher le <xref:System.Windows.Forms.Control.Click> événement.</span><span class="sxs-lookup"><span data-stu-id="00a85-183">This method can be called to raise the <xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00a85-184">L’exemple de code suivant génère une <xref:System.Windows.Forms.Control.Click> événements d’un <xref:System.Windows.Forms.Button> sur alternance <xref:System.Windows.Forms.Control.Click> événements d’un autre bouton.</span><span class="sxs-lookup"><span data-stu-id="00a85-184">The following code example generates a <xref:System.Windows.Forms.Control.Click> event of a <xref:System.Windows.Forms.Button> on alternating <xref:System.Windows.Forms.Control.Click> events of another button.</span></span> <span data-ttu-id="00a85-185">Ce code suppose que deux <xref:System.Windows.Forms.Button> contrôles ont été instanciés sur un formulaire et une variable membre nommée `myVar` a été déclaré comme un entier signé 32 bits au sein de la classe.</span><span class="sxs-lookup"><span data-stu-id="00a85-185">This code assumes that two <xref:System.Windows.Forms.Button> controls have been instantiated on a form and that a member variable named `myVar` has been declared as a 32-bit signed integer within the class.</span></span>  
  
 [!code-cpp[Classic Button.PerformClick Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Button.PerformClick Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Button.PerformClick Example/CS/source.cs#1)]
 [!code-vb[Classic Button.PerformClick Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Button.PerformClick Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal override bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="override this.ProcessMnemonic : char -&gt; bool" Usage="button.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode">
          <span data-ttu-id="00a85-186">Caractère mnémonique saisi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-186">The mnemonic character entered.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-187">Traite un caractère mnémonique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-187">Processes a mnemonic character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00a85-188">
            <see langword="true" /> si le mnémonique est traité ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-188">
              <see langword="true" /> if the mnemonic was processed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00a85-189">Lors de la substitution <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> dans une classe dérivée, veillez à appeler la classe de base <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> pour vous assurer que les fonctionnalités restent inchangées.</span><span class="sxs-lookup"><span data-stu-id="00a85-189">When overriding <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> in a derived class, be sure to call the base class's <xref:System.Windows.Forms.Button.ProcessMnemonic%2A> to ensure that basic functionality remains unchanged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="button.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="00a85-190">Retourne un <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-190">Returns a <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any.</span>
          </span>
          <span data-ttu-id="00a85-191">Cette méthode ne doit pas être remplacée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-191">This method should not be overridden.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="00a85-192">
            <see cref="T:System.String" /> contenant le nom du <see cref="T:System.ComponentModel.Component" />, s’il en existe un, ou <see langword="null" /> si <see cref="T:System.ComponentModel.Component" /> est sans nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-192">A <see cref="T:System.String" /> containing the name of the <see cref="T:System.ComponentModel.Component" />, if any, or <see langword="null" /> if the <see cref="T:System.ComponentModel.Component" /> is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="button.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="00a85-193">
            <see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-193">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="00a85-194">Traite les messages Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="00a85-194">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>