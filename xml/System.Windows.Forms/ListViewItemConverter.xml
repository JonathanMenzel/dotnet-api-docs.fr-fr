<Type Name="ListViewItemConverter" FullName="System.Windows.Forms.ListViewItemConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4073c0293f0ad7e6da1fda83bdf0bc3ed8ebe9c7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36518371" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItemConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewItemConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItemConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItemConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewItemConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type ListViewItemConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ef076-101">Provides a type converter to convert <see cref="T:System.Windows.Forms.ListViewItem" /> objects to and from various other representations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ef076-101">Provides a type converter to convert <see cref="T:System.Windows.Forms.ListViewItem" /> objects to and from various other representations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef076-102">Pour plus d’informations sur les convertisseurs de type, consultez la <xref:System.ComponentModel.TypeConverter> classe de base et [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span><span class="sxs-lookup"><span data-stu-id="ef076-102">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ef076-103">Vous ne devez jamais créer une instance d’un <xref:System.Windows.Forms.ListViewItemConverter>.</span><span class="sxs-lookup"><span data-stu-id="ef076-103">You should never create an instance of a <xref:System.Windows.Forms.ListViewItemConverter>.</span></span> <span data-ttu-id="ef076-104">Au lieu de cela, appelez le <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> méthode <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="ef076-104">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="ef076-105">Pour plus d’informations, consultez les exemples dans la <xref:System.ComponentModel.TypeConverter> classe de base.</span><span class="sxs-lookup"><span data-stu-id="ef076-105">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ef076-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListViewItemConverter" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListViewItemConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="listViewItemConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef076-107">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-107">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ef076-108">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-108">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef076-109">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-109">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef076-110">
            <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-110">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef076-111">Le paramètre `context` peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="ef076-111">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="ef076-112">Cela peut être `null`, vérifiez donc toujours.</span><span class="sxs-lookup"><span data-stu-id="ef076-112">This can be `null`, so always check.</span></span> <span data-ttu-id="ef076-113">En outre, les propriétés de l’objet de contexte peuvent retourner `null`.</span><span class="sxs-lookup"><span data-stu-id="ef076-113">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ef076-114">
            <para>Substituez cette méthode pour fournir vos propres exigences de conversion.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-114">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="listViewItemConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ef076-115">A formatter context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-115">A formatter context.</span>
          </span>
          <span data-ttu-id="ef076-116">This object can be used to extract additional information about the environment this converter is being invoked from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-116">This object can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="ef076-117">This may be <see langword="null" />, so you should always check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-117">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="ef076-118">Also, properties on the context object may also return <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-118">Also, properties on the context object may also return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="ef076-119">An optional culture info.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-119">An optional culture info.</span>
          </span>
          <span data-ttu-id="ef076-120">If not supplied the current culture is assumed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-120">If not supplied the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ef076-121">The object to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-121">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="ef076-122">The type to convert the object to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-122">The type to convert the object to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ef076-123">Converts the given object to another type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-123">Converts the given object to another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ef076-124">The converted object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ef076-124">The converted object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ef076-125">Convertir le type les plus courantes est vers et à partir d’un objet string.</span><span class="sxs-lookup"><span data-stu-id="ef076-125">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="ef076-126">L’implémentation par défaut effectue un appel à <xref:System.Object.ToString%2A> sur l’objet si l’objet est valide et si la destination est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="ef076-126">The default implementation will make a call to <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="ef076-127">Si cela ne peut pas convertir le type de destination, elle lève une <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="ef076-127">If this cannot convert to the destination type, this will throw a <xref:System.NotSupportedException>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>