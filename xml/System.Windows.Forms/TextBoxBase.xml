<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextBoxBase.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56002af143f80f4fe4f8ba0d9d9a16115c4a0f305.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6002af143f80f4fe4f8ba0d9d9a16115c4a0f305</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.TextBoxBase">
          <source>Implements the basic functionality required by text controls.</source>
          <target state="translated">Implémente la fonctionnalité de base requise par les contrôles de texte.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>This class implements the core features of text manipulation controls, such as <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>.</source>
          <target state="translated">Cette classe implémente les fonctionnalités principales des contrôles de manipulation de texte, tel que <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>These include text selection, <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept> functionality, multiline text control support, and many events.</source>
          <target state="translated">Ceux-ci incluent la sélection de texte, <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept> fonctionnalité prise en charge du contrôle de texte multiligne et de nombreux événements.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un élément <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle avec des barres de défilement verticale.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> propriétés pour rendre le contrôle de zone de texte multiligne lors de la création de documents de texte.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>You do not typically inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</source>
          <target state="translated">Vous n’héritez généralement pas de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.TextBoxBase">
          <source>To create your own text control class, inherit from <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>.</source>
          <target state="translated">Pour créer votre propre classe de contrôle de texte, héritez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBox" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.Forms.RichTextBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le fait d'appuyer sur la touche Tab dans un contrôle zone de texte multiligne entraîne l'ajout d'un caractère de tabulation dans le contrôle ou bien le déplacement du focus dans le contrôle suivant selon l'ordre de tabulation.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if users can enter tabs in a multiline text box using the TAB key; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if pressing the TAB key moves the focus.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> s'il est possible d'ajouter des caractères de tabulation dans une zone de texte multiligne à l'aide de la touche TAB ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si l'utilisation de la touche TAB déplace le focus.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property must also be <ph id="ph2">`true`</ph> to get a TAB character in the control.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> propriété doit également être <ph id="ph2">`true`</ph> pour obtenir un caractère de tabulation dans le contrôle.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the user must press CTRL+TAB to move the focus to the next control in the tab order.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, l’utilisateur doit appuyer sur CTRL + TAB pour déplacer le focus vers le contrôle suivant dans l’ordre de tabulation.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un élément <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle avec des barres de défilement verticale.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AcceptsTab">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> propriétés pour rendre le contrôle de zone de texte multiligne lors de la création de documents de texte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTabChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>The text to append to the current contents of the text box.</source>
          <target state="translated">Texte à ajouter au contenu en cours de la zone de texte.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>Appends text to the current text of a text box.</source>
          <target state="translated">Ajoute du texte au texte en cours dans une zone de texte.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour ajouter le texte existant dans le contrôle au lieu d’utiliser l’opérateur de concaténation (+) pour concaténer du texte pour le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> property to copy text from one <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to another.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> propriété pour copier du texte à partir d’un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> à un autre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.AppendText(System.String)">
          <source>This example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls named, <ph id="ph2">`textBox1`</ph> and <ph id="ph3">`textBox2`</ph>, have been added to a form and that <ph id="ph4">`textBox1`</ph> has text assigned to its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">Cet exemple suppose que deux <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôles nommés, <ph id="ph2">`textBox1`</ph> et <ph id="ph3">`textBox2`</ph>, ont été ajoutés à un formulaire et que <ph id="ph4">`textBox1`</ph> a le texte assigné à son <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si la hauteur du contrôle est automatiquement ajustée en cas de changement de la police assignée à ce dernier.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the height of the control automatically adjusts when the font is changed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la hauteur du contrôle est automatiquement ajustée lorsque la police change ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property to <ph id="ph2">`true`</ph> for a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, when the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> changes, the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> expands or contracts the <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> to accommodate the larger or smaller text.</source>
          <target state="translated">Lorsque vous définissez la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> propriété <ph id="ph2">`true`</ph> pour un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, lorsque le <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> modifications, la <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> développe ou réduit le <ph id="ph6">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> pour accommoder le texte plu ou moins volumineux.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> does not change.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ne change pas.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>If you want to change the size of the control as the user enters text, you can use a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and use its <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.ContentsResized&gt;</ph> event to change its size.</source>
          <target state="translated">Si vous souhaitez modifier la taille du contrôle que l’utilisateur entre du texte, vous pouvez utiliser un <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôler et utiliser ses <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.ContentsResized&gt;</ph> événement pour modifier sa taille.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons.</source>
          <target state="translated">Cet exemple suppose que vous disposez d’un formulaire avec deux zones de texte, deux boutons et événements cliquez pour chacun des boutons.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The example demonstrates the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property by setting it to <ph id="ph2">`true`</ph> for one text box and <ph id="ph3">`false`</ph> for the other.</source>
          <target state="translated">L’exemple illustre la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> propriété en lui affectant <ph id="ph2">`true`</ph> pour une zone de texte et <ph id="ph3">`false`</ph> pour l’autre.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text.</source>
          <target state="translated">Lorsque vous cliquez sur un bouton les zones de texte sont remplis avec un texte plus petit, et lorsque vous cliquez sur le bouton autre les zones de texte sont remplis avec le texte plus grand.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The text box that has <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> set to <ph id="ph2">`true`</ph> expands in height to accommodate the larger text.</source>
          <target state="translated">La zone de texte qui a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> la valeur <ph id="ph2">`true`</ph> se développe en hauteur pour s’adapter au texte plus grand.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.AutoSize">
          <source>The width does not change.</source>
          <target state="translated">La largeur ne change pas.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.AutoSizeChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>Gets or sets the background color of the control.</source>
          <target state="translated">Obtient ou définit la couleur d'arrière-plan du contrôle.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the background of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> qui représente l'arrière-plan du contrôle.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property to change the background color of the text control to blend into the color scheme of your forms.</source>
          <target state="translated">Vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> propriété à modifier la couleur d’arrière-plan du contrôle de texte dans le jeu de couleurs de vos formulaires.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>To change the color of the text within the control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property.</source>
          <target state="translated">Pour modifier la couleur du texte dans le contrôle, utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</source>
          <target state="translated">Lors de la définition du <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> la propriété de votre contrôle de texte, assurez-vous que la couleur que vous choisissez n’entraîne pas le texte du contrôle disparaisse.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> properties are both set to <ph id="ph3">`Color.Black`</ph>, the text within your textbox control will not be visible.</source>
          <target state="translated">Par exemple, si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> propriétés sont définies sur <ph id="ph3">`Color.Black`</ph>, le texte dans le contrôle de zone de texte ne sera pas visible.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackColor">
          <source>This property might be over ridden if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Cette propriété peut être remplacée si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> a la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>The background image for the object.</source>
          <target state="translated">L'image d'arrière-plan de l'objet.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImage">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /&gt;</ph> property changes.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImage" /&gt;</ph> change.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ImageLayout" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /&gt;</ph> property changes.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BackgroundImageLayout" /&gt;</ph> change.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>Gets or sets the border type of the text box control.</source>
          <target state="translated">Obtient ou définit le type des bordures du contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> that represents the border type of the text box control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.BorderStyle" /&gt;</ph> qui représente le type de bordure du contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The default is <ph id="ph1">&lt;see langword="Fixed3D" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="Fixed3D" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> property to create borderless and flat style controls, in addition to the default three-dimensional control.</source>
          <target state="translated">Vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> propriété à créer des contrôles sans bordure plat, outre le contrôle en trois dimensions par défaut.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>, does not support the <ph id="ph2">`BorderStyle.FixedSingle`</ph> style.</source>
          <target state="translated">La classe dérivée, <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph>, ne prend pas en charge les <ph id="ph2">`BorderStyle.FixedSingle`</ph> style.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>This style will cause the <ph id="ph1">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph> to use the <ph id="ph2">`BorderStyle.Fixed3D`</ph> style instead.</source>
          <target state="translated">Ce style provoque le <ph id="ph1">&lt;xref:System.Windows.Forms.BorderStyle&gt;</ph> à utiliser le <ph id="ph2">`BorderStyle.Fixed3D`</ph> de style à la place.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer une zone de texte qui peut afficher correctement le texte à l’aide de la police Arial 20 points avec une seule bordure.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property to determine the appropriate height of the control after the font and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> have been assigned to the control.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> propriété pour déterminer la hauteur du contrôle après la police et <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyle%2A&gt;</ph> ont été assigné au contrôle.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.BorderStyle">
          <source>A value that is not within the range of valid values for the enumeration was assigned to the property.</source>
          <target state="translated">La valeur assignée à la propriété n'appartient pas à la plage de valeurs valides de l'énumération.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BorderStyleChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CanEnableIme">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> property can be set to an active value, to enable IME support.</source>
          <target state="translated">Obtient une valeur qui indique si une valeur active peut être affectée à la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.ImeMode" /&gt;</ph> pour activer la prise en charge de l'éditeur de méthode d'entrée (IME).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanEnableIme">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> property is <ph id="ph3">&lt;see langword="true" /&gt;</ph> or if this <ph id="ph4">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> class is set to use a password mask character; otherwise, <ph id="ph5">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> si la propriété <ph id="ph2">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="true" /&gt;</ph> ou si cette classe <ph id="ph4">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> est définie pour utiliser un caractère de masque de mot de passe ; <ph id="ph5">&lt;see langword="true" /&gt;</ph> dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>Gets a value indicating whether the user can undo the previous operation in a text box control.</source>
          <target state="translated">Obtient une valeur indiquant si l'utilisateur peut annuler l'opération précédente dans un contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can undo the previous operation performed in a text box control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> s'il est possible d'annuler l'opération précédente effectuée sur le contrôle zone de texte ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>If this method returns <ph id="ph1">`true`</ph>, you can call the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method to undo the last operation in a text box.</source>
          <target state="translated">Si cette méthode retourne <ph id="ph1">`true`</ph>, vous pouvez appeler la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> méthode pour annuler la dernière opération dans une zone de texte.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>You can use this method in the <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> event of a <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, or in code that manages the state of buttons on a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> to enable or disable the ability to undo the previous operation in a text box control.</source>
          <target state="translated">Vous pouvez utiliser cette méthode dans le <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Popup&gt;</ph> événements d’un <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph>, ou dans le code qui gère l’état des boutons sur une <ph id="ph3">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph> pour activer ou désactiver la possibilité d’annuler l’opération précédente dans un contrôle de zone de texte.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CanUndo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>Clears all text from the text box control.</source>
          <target state="translated">Efface tout le texte du contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>You can use this method to clear the contents of the control instead of assigning the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property an empty string.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour effacer le contenu du contrôle au lieu d’affecter le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété une chaîne vide.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un gestionnaire d’événements pour le <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The code within the event handler restricts data to numbers.</source>
          <target state="translated">Le code dans le Gestionnaire d’événements restreint les données en nombres.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>After text has been entered in the control, the code determines if the text entered is a number.</source>
          <target state="translated">Une fois que le texte a été entré dans le contrôle, le code détermine si le texte entré est un nombre.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>If the text is not a number, the code clears the text from the control and a <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> is displayed to alert the user that only numbers are accepted.</source>
          <target state="translated">Si le texte n’est pas un nombre, le code efface le texte du contrôle et un <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox&gt;</ph> s’affiche pour informer l’utilisateur que seuls les chiffres sont acceptés.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>The example requires that a <ph id="ph1">`Boolean`</ph> variable named <ph id="ph2">`flag`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called <ph id="ph4">`textBox1`</ph> are defined outside of this method.</source>
          <target state="translated">L’exemple requiert qu’un <ph id="ph1">`Boolean`</ph> variable nommée <ph id="ph2">`flag`</ph> et un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle appelé <ph id="ph4">`textBox1`</ph> sont définis en dehors de cette méthode.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Clear">
          <source>This example demonstrates how to use a flag variable to avoid a cascading event in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event.</source>
          <target state="translated">Cet exemple montre comment utiliser une variable indicateur afin d’éviter un événement en cascade dans le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>Clears information about the most recent operation from the undo buffer of the text box.</source>
          <target state="translated">Efface les informations sur la dernière opération effectuée à partir de la mémoire tampon d'annulation de la zone de texte.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>You can use this method to prevent an undo operation from repeating, based on the state of your application.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour empêcher une opération d’annulation de la répétition, selon l’état de votre application.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ClearUndo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>Occurs when the text box is clicked.</source>
          <target state="translated">Se produit lorsqu'on clique sur la zone de texte.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>The following code example demonstrates how to handle the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event.</source>
          <target state="translated">L’exemple de code suivant montre comment gérer les <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called TextBox1.</source>
          <target state="translated">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle appelé TextBox1.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Click">
          <source>This example requires that the event-handling method has been associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event.</source>
          <target state="translated">Cet exemple nécessite que la méthode de gestion d’événements a été associée à la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>Copies the current selection in the text box to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Copie la sélection actuelle dans la zone de texte vers le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>You can use this method, instead of using the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and place it in the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez utiliser cette méthode, au lieu d’utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> (classe), pour copier du texte dans la zone de texte et le placer dans le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Copy">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>Creates a handle for the control.</source>
          <target state="translated">Crée un handle pour le contrôle.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>for operating with unmanaged code.</source>
          <target state="translated">Pour opérer avec du code non managé.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.CreateHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.CreateParams">
          <source>Gets the required creation parameters when the control handle is created.</source>
          <target state="translated">Obtient le paramètre de création requis lors de la création du handle du contrôle.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.CreateParams">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> that contains the required creation parameters when the handle to the control is created.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.CreateParams" /&gt;</ph> qui contient les paramètres de création requis quand le handle du contrôle est créé.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>Moves the current selection in the text box to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Déplace la sélection actuelle entre la zone de texte et le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>This method will only cut text from the text box if text is selected in the control.</source>
          <target state="translated">Cette méthode coupe un texte à partir de la zone de texte si le texte est sélectionné dans le contrôle.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>You can use this method, instead of using the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class, to copy text in the text box and move it to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez utiliser cette méthode, au lieu d’utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> (classe), pour copier du texte dans la zone de texte et le déplacer vers le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Cut">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>Gets or sets the default cursor for the control.</source>
          <target state="translated">Obtient ou définit le curseur par défaut du contrôle.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> representing the current default cursor.</source>
          <target state="translated">Un objet de type <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> qui représente le curseur par défaut actuel.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A&gt;</ph> to configure a default cursor for your control.</source>
          <target state="translated">Substituer <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.DefaultCursor%2A&gt;</ph> pour configurer un curseur par défaut pour votre contrôle.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultCursor">
          <source>This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</source>
          <target state="translated">Cela est plus efficace que de définir le curseur dans le constructeur du contrôle et fournit la prise en charge automatique pour certaines fonctions de concepteur connexes au curseur.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DefaultSize">
          <source>Gets the default size of the control.</source>
          <target state="translated">Obtient la taille par défaut du contrôle.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DefaultSize">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Size" /&gt;</ph> par défaut du contrôle.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.DeselectAll">
          <source>Specifies that the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /&gt;</ph> property is zero so that no characters are selected in the control.</source>
          <target state="translated">Spécifie que la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.SelectionLength" /&gt;</ph> est zéro afin qu'aucun caractère ne soit sélectionné dans le contrôle.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si le dessin du contrôle est effectué dans une mémoire tampon avant l'affichage du contrôle.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to implement double buffering on the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour implémenter la double mise en mémoire tampon sur le contrôle ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.DoubleBuffered">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>Gets or sets the foreground color of the control.</source>
          <target state="translated">Obtient ou définit la couleur de premier plan du contrôle.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> that represents the control's foreground color.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> qui représente la couleur de premier plan du contrôle.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property to change the color of the text within the control to match the text of other controls on your form.</source>
          <target state="translated">Vous pouvez utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> propriété à modifier la couleur du texte dans le contrôle pour faire correspondre le texte d’autres contrôles sur votre formulaire.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>You can also use this property to highlight a specific text box that contains an invalid value.</source>
          <target state="translated">Vous pouvez également utiliser cette propriété pour mettre en surbrillance une zone de texte spécifique qui contient une valeur non valide.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>To change the background color of the control, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> property.</source>
          <target state="translated">Pour modifier la couleur d’arrière-plan du contrôle, utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> property of your text control, ensure that the color you choose does not cause the text of the control to disappear.</source>
          <target state="translated">Lors de la définition du <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> la propriété de votre contrôle de texte, assurez-vous que la couleur que vous choisissez n’entraîne pas le texte du contrôle disparaisse.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> properties are both set to <ph id="ph3">`Color.Black`</ph>, the text within your textbox control will not be visible.</source>
          <target state="translated">Par exemple, si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ForeColor%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.BackColor%2A&gt;</ph> propriétés sont définies sur <ph id="ph3">`Color.Black`</ph>, le texte dans le contrôle de zone de texte ne sera pas visible.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ForeColor">
          <source>This property might be over ridden if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Cette propriété peut être remplacée si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> a la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>The location from which to seek the nearest character.</source>
          <target state="translated">Emplacement à partir duquel rechercher le caractère le plus proche.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>Retrieves the character that is closest to the specified location within the control.</source>
          <target state="translated">Récupère le caractère le plus proche de l'emplacement spécifié dans le contrôle.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>The character at the specified location.</source>
          <target state="translated">Caractère situé à l'emplacement spécifié.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>If the location specified in the <ph id="ph1">`pt`</ph> parameter is outside the client area of the control, the first character of the string closest to the point specified in <ph id="ph2">`pt`</ph> is returned.</source>
          <target state="translated">Si l’emplacement spécifié dans le <ph id="ph1">`pt`</ph> paramètre est en dehors de la zone cliente du contrôle, le premier caractère de la chaîne la plus proche du point spécifié dans <ph id="ph2">`pt`</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>You can use this method to determine which characters are located near a specific point within the control.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour déterminer quels caractères sont situés près d’un point spécifique dans le contrôle.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>You can then use this value to perform operations on the text at that location.</source>
          <target state="translated">Vous pouvez ensuite utiliser cette valeur pour effectuer des opérations sur le texte à cet emplacement.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharFromPosition(System.Drawing.Point)">
          <source>If the specified location in the <ph id="ph1">`pt`</ph> parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in <ph id="ph2">`pt`</ph> is returned.</source>
          <target state="translated">Si l’emplacement spécifié dans le <ph id="ph1">`pt`</ph> paramètre se trouve sur le côté droit de la zone cliente du contrôle, le dernier caractère de la chaîne la plus proche du point spécifié dans <ph id="ph2">`pt`</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The location to search.</source>
          <target state="translated">Emplacement où rechercher.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>Retrieves the index of the character nearest to the specified location.</source>
          <target state="translated">Récupère l'index du caractère le plus proche de l'emplacement spécifié.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The zero-based character index at the specified location.</source>
          <target state="translated">Index de base zéro du caractère situé à l'emplacement spécifié.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>This method returns the character index that is closest to the position specified in the <ph id="ph1">`pt`</ph> parameter.</source>
          <target state="translated">Cette méthode retourne l’index de caractère le plus proche de la position spécifiée dans le <ph id="ph1">`pt`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>The character index is a zero-based index of text in the control, including spaces.</source>
          <target state="translated">L’index de caractère est un index de base zéro du texte dans le contrôle, y compris les espaces.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour déterminer où dans le texte de l’utilisateur dispose de la souris en passant des coordonnées de la souris à cette méthode.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.</source>
          <target state="translated">Cela peut être utile si vous souhaitez effectuer des tâches lorsque l’utilisateur place le pointeur de la souris sur un mot dans le texte du contrôle.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition(System.Drawing.Point)">
          <source>If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</source>
          <target state="translated">Si l’emplacement spécifié n’est pas dans le rectangle client du contrôle, ou est au-delà du dernier caractère dans le contrôle, la valeur de retour est l’index du dernier caractère.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The line for which to get the index of its first character.</source>
          <target state="translated">La ligne pour laquelle obtenir l'index de son premier caractère.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>Retrieves the index of the first character of a given line.</source>
          <target state="translated">Récupère l'index du premier caractère d'une ligne donnée.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The zero-based index of the first character in the specified line.</source>
          <target state="translated">Index de base zéro du premier caractère dans la ligne spécifiée.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>Line numbering in the text box starts at zero.</source>
          <target state="translated">Numérotation des lignes dans la zone de texte commence à zéro.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>If the <ph id="ph1">`lineNumber`</ph> parameter is greater than the last line in the text box, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns -1.</source>
          <target state="translated">Si le <ph id="ph1">`lineNumber`</ph> paramètre est supérieur à la dernière ligne dans la zone de texte <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> retourne -1.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> returns the first character index of a physical line.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine%2A&gt;</ph> Retourne le premier index de caractère d’une ligne physique.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The physical line is the displayed line, not the assigned line.</source>
          <target state="translated">La ligne physique est la ligne affichée et non la ligne assignée.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The number of displayed lines can be greater than the number of assigned lines due to word wrap.</source>
          <target state="translated">Le nombre de lignes affichées peut être supérieur au nombre de lignes assignées en raison du retour.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>For example, if you assign two long lines to a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control and set <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the two long assigned lines result in four physical (or displayed lines).</source>
          <target state="translated">Par exemple, si vous assignez deux longues lignes à un <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôler et de définir <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> à <ph id="ph4">`true`</ph>, les deux longues lignes assignées génèrent quatre physiques (ou lignes).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine(System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="lineNumber" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">La valeur du paramètre <ph id="ph1">&lt;paramref name="lineNumber" /&gt;</ph> est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine">
          <source>Retrieves the index of the first character of the current line.</source>
          <target state="translated">Récupère l'index du premier caractère de la ligne active.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine">
          <source>The zero-based character index in the current line.</source>
          <target state="translated">Index de base zéro du caractère dans la ligne active.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The character index position to search.</source>
          <target state="translated">Position de l'index de caractère à rechercher.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>Retrieves the line number from the specified character position within the text of the control.</source>
          <target state="translated">Récupère le numéro de ligne à partir de la position de caractère spécifiée dans le texte du contrôle.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The zero-based line number in which the character index is located.</source>
          <target state="translated">Numéro (base zéro) de la ligne où se trouve l'index de caractère.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>This method enables you to determine the line number based on the character index specified in the <ph id="ph1">`index`</ph> parameter of the method.</source>
          <target state="translated">Cette méthode vous permet de déterminer le numéro de ligne en fonction de l’index de caractère spécifié dans le <ph id="ph1">`index`</ph> paramètre de la méthode.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The first line of text in the control returns the value zero.</source>
          <target state="translated">La première ligne de texte dans le contrôle retourne la valeur zéro.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns the physical line number where the indexed character is located within the control.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> méthode retourne le numéro de ligne physique où le caractère indexé se trouve dans le contrôle.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>For example, if a portion of the first logical line of text in the control wraps to the next line, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> method returns 1 if the character at the specified character index has wrapped to the second physical line.</source>
          <target state="translated">Par exemple, si une partie de la première ligne logique du texte dans le contrôle est renvoyé à la ligne suivante, la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex%2A&gt;</ph> méthode retourne 1 si le caractère situé à l’index de caractère spécifié a renvoyé à la deuxième ligne physique.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> a la valeur <ph id="ph2">`false`</ph>, aucune partie de la ligne est renvoyé à l’autre, et la méthode renvoie la valeur 0 pour l’index de caractère spécifié.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>You can use this method to determine which line a specific character index is located within.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour déterminer la ligne à laquelle un index de caractère spécifique dans.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>For example, after calling the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to search for text, you can obtain the character index to where the search results are found.</source>
          <target state="translated">Par exemple, après avoir appelé la <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> méthode pour rechercher du texte, vous pouvez obtenir l’index de caractère où sont trouvent les résultats de recherche.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>You can call this method with the character index returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> method to determine which line the word was found.</source>
          <target state="translated">Vous pouvez appeler cette méthode avec l’index de caractère retourné par la <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.Find%2A&gt;</ph> méthode pour déterminer quelle ligne le mot a été trouvé.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetLineFromCharIndex(System.Int32)">
          <source>If the character index specified in the <ph id="ph1">`index`</ph> parameter is beyond the available number of lines contained within the control, the last line number is returned.</source>
          <target state="translated">Si l’index de caractère spécifié dans le <ph id="ph1">`index`</ph> paramètre est au-delà du nombre de lignes contenues dans le contrôle, le dernier numéro de ligne est retourné.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>The index of the character for which to retrieve the location.</source>
          <target state="translated">Index du caractère dont l'emplacement doit être récupéré.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>Retrieves the location within the control at the specified character index.</source>
          <target state="translated">Récupère l'emplacement de l'index de caractère spécifié dans le contrôle.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>The location of the specified character within the client rectangle of the control.</source>
          <target state="translated">Emplacement du caractère spécifié dans le rectangle client du contrôle.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>This method enables you to determine where in the control a specific character index is located.</source>
          <target state="translated">Cette méthode vous permet de déterminer où se trouve un index de caractère spécifique dans le contrôle.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour des tâches telles que l’affichage de menu contextuel des éléments ou l’aide des informations d’un mot dans le contrôle.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex(System.Int32)">
          <source>For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> control.</source>
          <target state="translated">Par exemple, si vous souhaitez afficher un menu d’options à l’utilisateur de clic avec le bouton droit sur un mot dans le contrôle, vous pouvez utiliser cette méthode pour déterminer la position du mot pour afficher correctement un <ph id="ph1">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le texte sélectionné dans le contrôle zone de texte reste en surbrillance quand le focus passe à un autre contrôle.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the selected text does not appear highlighted when the text box control loses focus; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if the selected text remains highlighted when the text box control loses focus.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le texte sélectionné n'apparaît pas en surbrillance lorsque le contrôle zone de texte perd le focus ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si le texte sélectionné reste en surbrillance lorsque le contrôle zone de texte perd le focus.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour conserver le texte mis en surbrillance dans un contrôle de zone de texte, alors qu’un autre formulaire ou une boîte de dialogue a le focus, par exemple une boîte de dialogue Vérificateur d’orthographe.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelection%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelection%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>To run the example, paste the following code in a form.</source>
          <target state="translated">Pour exécuter l’exemple, collez le code suivant dans un formulaire.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.HideSelection">
          <source>Call the <ph id="ph1">`InitializeTextBox`</ph> method in the form's constructor or <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">Appelez le <ph id="ph1">`InitializeTextBox`</ph> méthode dans le constructeur du formulaire ou <ph id="ph2">`Load`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.HideSelectionChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ImeModeBase">
          <source>Gets or sets the Input Method Editor (IME) mode of a control.</source>
          <target state="translated">Obtient ou définit le mode de l'éditeur de méthode d'entrée (IME, Input Method Editor) d'un contrôle.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ImeModeBase">
          <source>The IME mode of the control.</source>
          <target state="translated">Mode IME du contrôle.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>One of the Keys value.</source>
          <target state="translated">Valeur d'une des touches.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>Determines whether the specified key is an input key or a special key that requires preprocessing.</source>
          <target state="translated">Détermine si la touche spécifiée est une touche de saisie ou une touche spéciale qui nécessite un prétraitement.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified key is an input key; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la touche spécifiée est une touche de saisie ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> when the <ph id="ph3">`keyData`</ph> parameter includes the <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> value and the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> property is <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> méthode retourne <ph id="ph2">`true`</ph> lors de la <ph id="ph3">`keyData`</ph> paramètre inclut le <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> valeur et le <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph> propriété est <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if <ph id="ph3">`keyData`</ph> contains both <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.Keys.Control&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.IsInputKey%2A&gt;</ph> Retourne <ph id="ph2">`false`</ph> si <ph id="ph3">`keyData`</ph> contient à la fois <ph id="ph4">&lt;xref:System.Windows.Forms.Keys.Tab&gt;</ph> et <ph id="ph5">&lt;xref:System.Windows.Forms.Keys.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>Gets or sets the lines of text in a text box control.</source>
          <target state="translated">Obtient ou définit les lignes de texte contenues dans un contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>An array of strings that contains the text in a text box control.</source>
          <target state="translated">Tableau de chaînes qui contient le texte d'un contrôle zone de texte.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>Each element in the array becomes a line of text in the text box control.</source>
          <target state="translated">Chaque élément du tableau devient une ligne de texte dans le contrôle de zone de texte.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property of the text box control is set to <ph id="ph2">`true`</ph> and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> du contrôle de zone de texte est définie sur <ph id="ph2">`true`</ph> et un caractère de saut de ligne apparaît dans le texte, le texte qui suit le caractère de saut de ligne est ajouté à un nouvel élément dans le tableau et affiché sur une ligne distincte.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>By default, the collection of lines is a read-only copy of the lines in the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Par défaut, la collection de lignes est une copie en lecture seule des lignes dans le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>To get a writable collection of lines, use code similar to the following: <ph id="ph1">`textBox1.Lines = new string[] { "abcd" };`</ph></source>
          <target state="translated">Pour obtenir une collection accessible en écriture de lignes, utilisez du code semblable à ce qui suit : <ph id="ph1">`textBox1.Lines = new string[] { "abcd" };`</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour extraire toutes les chaînes de texte d’un contrôle de zone de texte multiligne et les affiche à l’aide de la <ph id="ph2">&lt;xref:System.Diagnostics.Debug.WriteLine%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Lines">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control has been created, named <ph id="ph2">`textBox1`</ph>, and that it has been filled with lines of text.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle a été créé, nommé <ph id="ph2">`textBox1`</ph>, et qu’il a été rempli de lignes de texte.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>Gets or sets the maximum number of characters the user can type or paste into the text box control.</source>
          <target state="translated">Obtient ou définit le nombre maximal de caractères que l'utilisateur peut taper ou coller dans le contrôle TextBox.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The number of characters that can be entered into the control.</source>
          <target state="translated">Nombre maximal de caractères pouvant être entré dans le contrôle.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The default is 32767.</source>
          <target state="translated">La valeur par défaut est 32767.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour limiter la longueur du texte saisi dans le contrôle pour des valeurs telles que des codes postaux et les numéros de téléphone, ou pour limiter la longueur du texte entré lorsque les données à entrer dans une base de données.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>You can limit the text entered into the control to the maximum length of the corresponding field in the database.</source>
          <target state="translated">Vous pouvez limiter le texte entré dans le contrôle à la longueur maximale du champ correspondant dans la base de données.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>In code, you can set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property to a value that has a length greater than the value specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property.</source>
          <target state="translated">Dans le code, vous pouvez définir la valeur de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété une valeur qui a une longueur supérieure à la valeur spécifiée par la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This property only affects text entered into the control at run time.</source>
          <target state="translated">Cette propriété affecte uniquement le texte entré dans le contrôle au moment de l’exécution.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The following code example uses the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, to create a text box that is used to accept a password.</source>
          <target state="translated">L’exemple de code suivant utilise la classe dérivée, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, pour créer une zone de texte qui est utilisée pour accepter un mot de passe.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph> property to change all characters typed to uppercase and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> property to restrict the password length to eight characters.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.CharacterCasing%2A&gt;</ph> typée de propriété à modifier tous les caractères en majuscules et les <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MaxLength%2A&gt;</ph> propriété pour limiter la longueur de mot de passe à huit caractères.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> property to center the password in the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> propriété pour centrer le mot de passe dans le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.MaxLength">
          <source>The value assigned to the property is less than 0.</source>
          <target state="translated">La valeur assignée à la propriété est inférieure à 0.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</source>
          <target state="translated">Obtient ou définit une valeur qui indique que le contrôle zone de texte a été modifié par l'utilisateur depuis la création du contrôle ou la précédente définition du contenu du contrôle.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control's contents have been modified; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le contenu du contrôle a été modifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>You can use this property to determine if the user has modified the contents of the text box control.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour déterminer si l’utilisateur a modifié le contenu du contrôle de zone de texte.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>You can also set this property in code to indicate that changes were made to the text box control by the application.</source>
          <target state="translated">Vous pouvez également définir cette propriété dans le code pour indiquer que les modifications ont été apportées au contrôle de zone de texte par l’application.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.</source>
          <target state="translated">Cette propriété peut être utilisée par les méthodes de validation et enregistrement de données pour déterminer si des modifications ont été apportées dans un contrôle de zone de texte pour le contenu modifié peut être validé ou enregistré.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>If you change the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si vous modifiez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété par programme, le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> propriété revient à <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This does not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">Cela ne déclenche pas le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event for a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to determine if the contents of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control have changed since the control was filled with data.</source>
          <target state="translated">Le de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> événement pour un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, permet de déterminer si le contenu de la <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle ont été modifiés depuis le contrôle a été rempli avec des données.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>The example uses a string to store the original contents of the control and compares it against the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to determine if the contents have changed.</source>
          <target state="translated">L’exemple utilise une chaîne pour stocker le contenu d’origine du contrôle et il compare le contenu de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> pour déterminer si le contenu a changé.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>If the contents have changed, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Si le contenu a changé, le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>Otherwise, it is reset to <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Sinon, elle est réinitialisée à <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Modified">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created and that a <ph id="ph3">`String`</ph> variable named <ph id="ph4">`originalText`</ph> has been created to store the original text for the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé et qu’un <ph id="ph3">`String`</ph> variable nommée <ph id="ph4">`originalText`</ph> a été créé pour stocker le texte d’origine pour la <ph id="ph5">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Modified" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Modified" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>If you change the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property programmatically, the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> property reverts to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si vous modifiez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété par programme, le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Modified%2A&gt;</ph> propriété revient à <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>This does not raise the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">Cela ne déclenche pas le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ModifiedChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ModifiedChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>Occurs when the control is clicked by the mouse.</source>
          <target state="translated">Se produit après un clic de souris sur le contrôle.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control does not raise a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> event for right clicks.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôle ne déclenche pas une <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Click&gt;</ph> événement avec le bouton droit clique.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event provides the functional equivalent.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> événement fournit l’équivalent fonctionnel.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MouseClick">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MouseClick&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Gets or sets a value indicating whether this is a multiline text box control.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si ce contrôle est un contrôle zone de texte multiligne.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the control is a multiline text box control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> s'il s'agit d'un contrôle zone de texte multiligne ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>A multiline text box allows you to display more than one line of text in the control.</source>
          <target state="translated">Une zone de texte multiligne vous permet d’afficher plusieurs lignes de texte dans le contrôle.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, text entered into the multiline text box is wrapped to the next line in the control.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, texte entré dans la zone de texte multiligne passe à la ligne suivante dans le contrôle.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> est définie sur <ph id="ph2">`false`</ph>, le texte entré dans le contrôle de zone de texte multiligne s’affichera sur la même ligne jusqu'à ce qu’un caractère de saut de ligne est entré.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The following can be used as newline characters:</source>
          <target state="translated">Peut être utilisé comme des caractères de saut de ligne :</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>ControlChars.CrLf</source>
          <target state="translated">ControlChars.CrLf</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>vbCrLf (Visual Basic only)</source>
          <target state="translated">vbCrLf (Visual Basic uniquement)</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>You can add scroll bars to a text box using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property to display horizontal and/or vertical scroll bars.</source>
          <target state="translated">Vous pouvez ajouter des barres de défilement à une zone de texte à l’aide de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> propriété pour afficher les barres de défilement horizontale et/ou verticale.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This allows the user to scroll through the text that extends beyond the dimensions of the control.</source>
          <target state="translated">Cela permet à l’utilisateur de faire défiler le texte qui dépasse les dimensions du contrôle.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Because the default value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the default size of a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> will be in accordance with the font size even if you resize the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Étant donné que la valeur par défaut de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> propriété est <ph id="ph2">`false`</ph>, la taille par défaut d’un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> sera conformément à la taille de police même si vous redimensionnez la <ph id="ph4">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>To get a consistent size for your <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, set its <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Pour obtenir une taille cohérente pour votre <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, définissez son <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.Multiline%2A&gt;</ph> propriété <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>On Japanese operating systems, if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, setting the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property will display the text of the password, thus compromising system security.</source>
          <target state="translated">Japonais sur les systèmes d’exploitation, si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, ce qui affecte le <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> propriété affichera le texte du mot de passe, compromettant ainsi la sécurité du système.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>Therefore, on Japanese operating systems, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id="ph2">`false`</ph> if you set the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> property.</source>
          <target state="translated">Par conséquent, sur les systèmes d’exploitation japonais, définissez la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> propriété <ph id="ph2">`false`</ph> si vous définissez le <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox.PasswordChar%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This property is set to <ph id="ph1">`false`</ph> by default for all derived classes, with the exception of the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control.</source>
          <target state="translated">Cette propriété est définie sur <ph id="ph1">`false`</ph> par défaut pour toutes les classes dérivées, à l’exception de la <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>For a <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> property affects whether or not the control will automatically resize, as follows:</source>
          <target state="translated">Pour un <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> (contrôle), le <ph id="ph2">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> propriété affecte ou non le contrôle sera automatiquement redimensionné, comme suit :</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`true`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will not automatically resize.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> a la valeur <ph id="ph2">`true`</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> a la valeur <ph id="ph4">`true`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> ne sera pas redimensionné automatiquement.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">`true`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> will automatically resize.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox.AutoSize%2A?displayProperty=nameWithType&gt;</ph> a la valeur <ph id="ph2">`true`</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox.Multiline%2A?displayProperty=nameWithType&gt;</ph> a la valeur <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> se redimensionnera automatiquement.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un élément <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle avec des barres de défilement verticale.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Multiline">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> propriétés pour rendre le contrôle de zone de texte multiligne lors de la création de documents de texte.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.MultilineChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.MultilineChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.AcceptsTabChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.BorderStyleChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnBorderStyleChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnFontChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.FontChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleCreated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleCreated" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHandleDestroyed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.HandleDestroyed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>Raise the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenchez l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.HideSelectionChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnHideSelectionChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ModifiedChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnModifiedChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnModifiedChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>The event data.</source>
          <target state="translated">Données d'événement.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.MouseUp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.MultilineChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnMultilineChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnMultilineChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Cette méthode ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnPaddingChanged(System.EventArgs)">
          <source>This method is not relevant for this class.</source>
          <target state="translated">Cette méthode ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>gestion et déclenchement d’événements<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged%2A&gt;</ph> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>This is the preferred technique for handling the event in a derived class.</source>
          <target state="translated">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">Lors de la substitution de <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> dans une classe dérivée, veillez à appeler la méthode <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.OnReadOnlyChanged(System.EventArgs)" /&gt;</ph> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.OnTextChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.Windows.Forms.Control.TextChanged" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph> value.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Padding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Padding">
          <source>This property is not relevant for this class.</source>
          <target state="translated">Cette propriété ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.PaddingChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.PaddingChanged">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>Occurs when the control is redrawn.</source>
          <target state="translated">Se produit quand le contrôle est redessiné.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.Paint">
          <source>This event is not relevant for this class.</source>
          <target state="translated">Cet événement ne s'applique pas à cette classe.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>Replaces the current selection in the text box with the contents of the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Remplace la sélection active de la zone de texte par le contenu du <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Paste%2A&gt;</ph> method will only paste text into the control if text is currently stored in the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Paste%2A&gt;</ph> méthode sera colle dans le contrôle si le texte est stocké dans le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>for reading from the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">pour la lecture à partir de la <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Paste">
          <source>Associated enumeration: the <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> value of <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph>.</source>
          <target state="translated">Énumération associée : le <ph id="ph1">&lt;see langword="AllClipboard" /&gt;</ph> valeur <ph id="ph2">&lt;see cref="T:System.Security.Permissions.UIPermissionClipboard" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>Gets the preferred height for a text box.</source>
          <target state="translated">Obtient la hauteur par défaut pour une zone de texte.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The preferred height of a text box.</source>
          <target state="translated">Hauteur par défaut d'une zone de texte.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The size returned by this property is based on the font height and border style of the text box.</source>
          <target state="translated">La taille retournée par cette propriété est basée sur le style de police hauteur et la bordure de la zone de texte.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour déterminer la taille appropriée de la zone de texte pour vous assurer que le texte est correctement affiché dans le contrôle.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The value returned by this property is in pixels.</source>
          <target state="translated">La valeur retournée par cette propriété est exprimée en pixels.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom.</source>
          <target state="translated">La valeur de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> représente la hauteur minimale de la zone de texte doit avoir pour afficher une seule ligne de texte sans tronquer le texte en haut ou bas.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.PreferredHeight">
          <source>This value is the same whether the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Cette valeur est la même si le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph> ou <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passed by reference that represents the window message to process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph>, passé par référence, qui représente le message de fenêtre à traiter.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the shortcut key to process.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> qui représente la touche de raccourci à traiter.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Processes a command key.</source>
          <target state="translated">Traite une touche de commande.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the command key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la touche de commande a été traitée par le contrôle ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">Pour opérer avec du code non managé.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> values that represents the key to process.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Keys" /&gt;</ph> qui représente la touche à traiter.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source>Processes a dialog key.</source>
          <target state="translated">Traite une touche de boîte de dialogue.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key was processed by the control; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la touche a été traitée par le contrôle ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>Gets or sets a value indicating whether text in the text box is read-only.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si le texte de la zone de texte est en lecture seule.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the text box is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la zone de texte est en lecture seule ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the contents of the control cannot be changed by the user at runtime.</source>
          <target state="translated">Lorsque cette propriété a la valeur <ph id="ph1">`true`</ph>, le contenu du contrôle ne peut pas être modifié par l’utilisateur lors de l’exécution.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>With this property set to <ph id="ph1">`true`</ph>, you can still set the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property in code.</source>
          <target state="translated">Avec cette propriété la valeur <ph id="ph1">`true`</ph>, vous pouvez toujours la valeur du <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété dans le code.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ReadOnly">
          <source>You can use this feature instead of disabling the control with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to allow the contents to be copied and ToolTips to be shown.</source>
          <target state="translated">Vous pouvez utiliser cette fonctionnalité au lieu de désactiver le contrôle avec la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> propriété pour autoriser le contenu à copier et à afficher les info-bulles.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> property has changed.</source>
          <target state="translated">Se produit quand la valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /&gt;</ph> a changé.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Pour plus d’informations sur la gestion des événements, consultez <bpt id="p1">[</bpt>NIB : consommation d’événements<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>The following code example demonstrates the use of this member.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de ce membre.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>In the example, an event handler reports on the occurrence of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>This report helps you to learn when the event occurs and can assist you in debugging.</source>
          <target state="translated">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>To report on multiple events or on events that occur frequently, consider replacing <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> with <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> or appending the message to a multiline <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
          <target state="translated">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <ph id="ph1">&lt;xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType&gt;</ph> avec <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph> ou ajouter le message à un élément <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>To run the example code, paste it into a project that contains an instance of a type that inherits from <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, such as a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</source>
          <target state="translated">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>, comme un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Forms.TextBoxBase.ReadOnlyChanged">
          <source>Then name the instance <ph id="ph1">`TextBoxBase1`</ph> and ensure that the event handler is associated with the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> event.</source>
          <target state="translated">Puis nommez l’instance <ph id="ph1">`TextBoxBase1`</ph> et vérifier que le Gestionnaire d’événements est associé à la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnlyChanged&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>Scrolls the contents of the control to the current caret position.</source>
          <target state="translated">Fait défiler le contenu du contrôle vers la position indiquée par le signe insertion.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</source>
          <target state="translated">Cette méthode vous permet de faire défiler le contenu du contrôle jusqu'à ce que le point d’insertion se trouve dans la région visible du contrôle.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>If the caret is positioned below the visible region of the control, the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method will scroll the contents of the control until the caret is visible at the bottom of the control.</source>
          <target state="translated">Si le point d’insertion se trouve sous la région visible du contrôle, la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> méthode fait défiler le contenu du contrôle jusqu'à ce que le point d’insertion est visible en bas du contrôle.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</source>
          <target state="translated">Si le point d’insertion est placé au-dessus de la zone visible du contrôle, cette méthode fait défiler le contenu du contrôle jusqu'à ce que le point d’insertion est visible en haut du contrôle.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</source>
          <target state="translated">Vous pouvez utiliser cette méthode dans une zone de texte multiligne pour vous assurer que le point d’entrée de texte actuel est dans la zone visible du contrôle.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</source>
          <target state="translated">Cette méthode n’a aucun effet si le contrôle n’a pas le focus ou si le point d’insertion se trouve déjà dans la région visible du contrôle.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> enumeration and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.Keys&gt;</ph> énumération et <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ScrollToCaret%2A&gt;</ph> pour s’assurer que le point d’insertion de texte, représenté par le point d’insertion, est toujours visible sur l’écran après l’activation de la touche ENTRÉE.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>To run the example, paste the following code in a form containing a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control called <ph id="ph2">`TextBox1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control called <ph id="ph4">`RichTextBox1`</ph>.</source>
          <target state="translated">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle appelé <ph id="ph2">`TextBox1`</ph> et un <ph id="ph3">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôle appelé <ph id="ph4">`RichTextBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.ScrollToCaret">
          <source>This example requires that the event-handling method has been associated with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> event.</source>
          <target state="translated">Cet exemple nécessite que la méthode de gestion d’événements a été associée à la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph> événement.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The position of the first character in the current text selection within the text box.</source>
          <target state="translated">Position du premier caractère dans la sélection de texte en cours dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The number of characters to select.</source>
          <target state="translated">Nombre de caractères à sélectionner.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>Selects a range of text in the text box.</source>
          <target state="translated">Sélectionne une plage de texte dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If you want to set the start position to the first character in the control's text, set the <ph id="ph1">`start`</ph> parameter to 0.</source>
          <target state="translated">Si vous souhaitez définir la position de départ du premier caractère dans le texte du contrôle, définissez la <ph id="ph1">`start`</ph> valeur 0 au paramètre.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour sélectionner une sous-chaîne du texte, par exemple lors de la recherche dans le texte du contrôle et remplacer des informations.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">`start`</ph> parameter to the position within the text box where you want the caret to move to and set the <ph id="ph2">`length`</ph> parameter to a value of zero (0).</source>
          <target state="translated">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le <ph id="ph1">`start`</ph> paramètre à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le <ph id="ph2">`length`</ph> paramètre à une valeur de zéro (0).</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The text box must have focus in order for the caret to be moved.</source>
          <target state="translated">La zone de texte doit avoir le focus dans l’ordre pour le point d’insertion doit être déplacé.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If this method is called without any parameters, an alternative method is used.</source>
          <target state="translated">Si cette méthode est appelée sans paramètres, une autre méthode est utilisée.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>This alternative method inherits from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class.</source>
          <target state="translated">Cette autre méthode hérite de la <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>When called, it sets the input focus to the control and selects the contents of the control.</source>
          <target state="translated">Lorsqu’elle est appelée, elle définit le focus d’entrée sur le contrôle et sélectionne le contenu du contrôle.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Pour plus d'informations, voir la méthode <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Select%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to search the contents of the control for the instance of the word "fox".</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour rechercher le contenu du contrôle pour l’instance du mot « renard ».</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>If found, the code selects the word in the control using the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Select%2A&gt;</ph> method.</source>
          <target state="translated">Si la trouvée, le code sélectionne le mot dans le contrôle à l’aide de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Select%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph2">`textBox1`</ph> has been created and its <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property contains the sentence "The quick brown fox jumps over the lazy dog."</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> nommé <ph id="ph2">`textBox1`</ph> a été créé et son <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> propriété contient la phrase « le jeune renard accède par-dessus le vieux chien. »</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Select(System.Int32,System.Int32)">
          <source>The value of the <ph id="ph1">&lt;paramref name="start" /&gt;</ph> parameter is less than zero.</source>
          <target state="translated">La valeur du paramètre <ph id="ph1">&lt;paramref name="start" /&gt;</ph> est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>Selects all text in the text box.</source>
          <target state="translated">Sélectionne tout le texte de la zone de texte.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>This method enables you to select all text within the control.</source>
          <target state="translated">Cette méthode vous permet de sélectionner tout le texte dans le contrôle.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>You can use this method in conjunction with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Vous pouvez utiliser cette méthode conjointement avec la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Cut%2A&gt;</ph> (méthode), ce qui nécessite du texte à sélectionner dans le contrôle, pour couper la totalité du contenu du contrôle et la coller dans le <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to determine if any text is selected in the control.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour déterminer si du texte est sélectionné dans le contrôle.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>If no text is selected, a call is made to the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectAll%2A&gt;</ph> method before copying the contents of the control to the <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept>.</source>
          <target state="translated">Si aucun texte n’est sélectionné, un appel est fait à la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectAll%2A&gt;</ph> méthode avant de copier le contenu du contrôle à la <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SelectAll">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> has been created named <ph id="ph2">`textBox1`</ph>.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> a été créé nommée <ph id="ph2">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>Gets or sets a value indicating the currently selected text in the control.</source>
          <target state="translated">Obtient ou définit une valeur indiquant la couleur du texte sélectionné dans le contrôle.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>A string that represents the currently selected text in the text box.</source>
          <target state="translated">Chaîne représentant le texte actuellement sélectionné dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>You can assign text to this property to change the text currently selected in the text box.</source>
          <target state="translated">Vous pouvez assigner le texte à cette propriété pour modifier le texte actuellement sélectionné dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>If no text is currently selected in the text box, this property returns a zero-length string.</source>
          <target state="translated">Si aucun texte n’est actuellement sélectionné dans la zone de texte, cette propriété retourne une chaîne de longueur nulle.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectedText">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>Gets or sets the number of characters selected in the text box.</source>
          <target state="translated">Obtient ou définit le nombre de caractères sélectionnés dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The number of characters selected in the text box.</source>
          <target state="translated">Nombre de caractères sélectionnés dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour déterminer si des caractères sont actuellement sélectionnés dans le contrôle de zone de texte avant d’effectuer des opérations sur le texte sélectionné.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>When the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to a value that is larger than the number of characters within the text of the control, the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is set to the entire length of text within the control minus the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property (if any value is specified for the <ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property).</source>
          <target state="translated">Lorsque la valeur de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> est définie sur une valeur qui est supérieure au nombre de caractères dans le texte du contrôle, la valeur de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> est définie sur toute la longueur du texte dans le contrôle moins la valeur de la <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph>propriété (si une valeur est spécifiée pour le <ph id="ph4">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> propriété).</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).</source>
          <target state="translated">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété à une valeur de zéro (0).</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The text box must have focus in order for the caret to be moved.</source>
          <target state="translated">La zone de texte doit avoir le focus dans l’ordre pour le point d’insertion doit être déplacé.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionLength">
          <source>The assigned value is less than zero.</source>
          <target state="translated">La valeur assignée est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>Gets or sets the starting point of text selected in the text box.</source>
          <target state="translated">Obtient ou définit le point de départ du texte sélectionné dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The starting position of text selected in the text box.</source>
          <target state="translated">Position de départ du texte sélectionné dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If no text is selected in the control, this property indicates the insertion point, or caret, for new text.</source>
          <target state="translated">Si aucun texte n’est sélectionné dans le contrôle, cette propriété indique le point d’insertion ou le point d’insertion d’un nouveau texte.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</source>
          <target state="translated">Si vous définissez cette propriété sur un emplacement au-delà de la longueur du texte dans le contrôle, la position de début de la sélection est placée après le dernier caractère.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>When text is selected in the text box control, changing this property might decrease the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.</source>
          <target state="translated">Si du texte est sélectionné dans le contrôle de zone de texte, la modification de cette propriété peut diminuer la valeur de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>If the remaining text in the control after the position indicated by the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property is less than the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property, the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property is automatically decreased.</source>
          <target state="translated">Si le reste du texte dans le contrôle après la position indiquée par le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> propriété est inférieure à la valeur de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété, la valeur de la <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété est automatiquement diminuée.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property never causes an increase in the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property.</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> propriété ne provoque jamais une augmentation de la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can programmatically move the selection within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> properties.</source>
          <target state="translated">Vous pouvez déplacer par programmation la sélection dans la zone de texte en définissant le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can programmatically move the caret within the text box by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> to the position within the text box where you want the caret to move to and set the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> property to a value of zero (0).</source>
          <target state="translated">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionLength%2A&gt;</ph> propriété à une valeur de zéro (0).</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> must have focus in order for the selection or the caret to be moved.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> doit avoir le focus dans l’ordre pour la sélection ou le point d’insertion doit être déplacé.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that is <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> by giving it the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> first.</source>
          <target state="translated">Vous pouvez définir le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> qui est <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> en lui donnant le <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> première.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Exemple 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Exemple 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> that is <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> by giving it the <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> first.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.SelectionStart%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> qui est <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.ReadOnly%2A&gt;</ph> en lui donnant le <ph id="ph4">&lt;xref:System.Windows.Forms.Control.Focus%2A&gt;</ph> première.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.SelectionStart">
          <source>The assigned value is less than zero.</source>
          <target state="translated">La valeur assignée est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nouvelle valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Left" /&gt;</ph> du contrôle.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nouvelle valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Top" /&gt;</ph> du contrôle.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The new <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> property value of the control.</source>
          <target state="translated">Nouvelle valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Control.Width" /&gt;</ph> du contrôle.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Not used.</source>
          <target state="translated">Non utilisé.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph> values.</source>
          <target state="translated">Combinaison d'opérations de bits des valeurs <ph id="ph1">&lt;see cref="T:System.Windows.Forms.BoundsSpecified" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Sets the specified bounds of the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> control.</source>
          <target state="translated">Définit les limites spécifiées du contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> control uses the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> property to set the bounds if the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> property is <ph id="ph4">`true`</ph> and the <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property is <ph id="ph6">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> de contrôles utilise la <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.PreferredHeight%2A&gt;</ph> propriété à définir les limites si le <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.AutoSize%2A&gt;</ph> propriété est <ph id="ph4">`true`</ph> et <ph id="ph5">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> propriété est <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Typically, the parameters that correspond to the bounds not included in the <ph id="ph1">`specified`</ph> parameter are passed in with their current values.</source>
          <target state="translated">En règle générale, les paramètres qui correspondent aux limites non incluses dans le <ph id="ph1">`specified`</ph> paramètre sont passés avec leurs valeurs actuelles.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, or the <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property can be passed in with a reference to the current instance of the control.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>, ou <ph id="ph3">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> propriétés de la <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> propriété peut être passée avec une référence à l’instance actuelle du contrôle.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However all values passed in are honored and applied to the control.</source>
          <target state="translated">Toutefois, toutes les valeurs passées dans sont honorées et appliquées au contrôle.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>The <ph id="ph1">`specified`</ph> parameter represents the elements of the controls <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> changed by your application.</source>
          <target state="translated">Le <ph id="ph1">`specified`</ph> paramètre représente les éléments des contrôles <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> modifiés par votre application.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>For example, if you change the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> of the control, the <ph id="ph2">`specified`</ph> parameter value is the <ph id="ph3">`Size`</ph> value of <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">Par exemple, si vous modifiez le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> du contrôle, la <ph id="ph2">`specified`</ph> valeur du paramètre est la <ph id="ph3">`Size`</ph> valeur <ph id="ph4">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>However, if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> is adjusted in response to the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> property being set, the <ph id="ph3">`specified`</ph> parameter value is the <ph id="ph4">`None`</ph> value of <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</source>
          <target state="translated">Toutefois, si le <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> est ajusté en réponse à la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Dock%2A&gt;</ph> propriété définie, le <ph id="ph3">`specified`</ph> valeur du paramètre est la <ph id="ph4">`None`</ph> valeur <ph id="ph5">&lt;xref:System.Windows.Forms.BoundsSpecified&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method to force the bounds of the control to change.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> dans une classe dérivée, veillez à appeler la classe de base <ph id="ph2">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> méthode pour forcer les limites du contrôle à modifier.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
          <source>Derived classes can add size restrictions to the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> method.</source>
          <target state="translated">Les classes dérivées peuvent ajouter des restrictions de taille pour le <ph id="ph1">&lt;see cref="M:System.Windows.Forms.TextBoxBase.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>Gets or sets a value indicating whether the defined shortcuts are enabled.</source>
          <target state="translated">Obtient ou définit une valeur indiquant si les raccourcis définis sont activés.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable the shortcuts; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour activer les raccourcis ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> property to enable or disable the following shortcut key combinations and the control’s shortcut menu:</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.ShortcutsEnabled%2A&gt;</ph> propriété pour activer ou désactiver les combinaisons de touches de raccourci suivantes et le menu du contrôle contextuel :</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+Z</source>
          <target state="translated">CTRL+Z</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+E</source>
          <target state="translated">CTRL+E</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+C</source>
          <target state="translated">CTRL+C</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+Y</source>
          <target state="translated">CTRL+Y</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+X</source>
          <target state="translated">Ctrl+X</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+BACKSPACE</source>
          <target state="translated">CTRL+RETOUR ARRIÈRE</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+V</source>
          <target state="translated">CTRL+V</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+DELETE</source>
          <target state="translated">CTRL+SUPPR</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+A</source>
          <target state="translated">CTRL+A</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>SHIFT+DELETE</source>
          <target state="translated">MAJ + SUPPR</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+L</source>
          <target state="translated">CTRL+L</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>SHIFT+INSERT</source>
          <target state="translated">MAJ + INSER</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>CTRL+R</source>
          <target state="translated">CTRL+R</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.ShortcutsEnabled">
          <source>You can override this property to specify other shortcut keys.</source>
          <target state="translated">Vous pouvez substituer cette propriété pour spécifier d’autres touches de raccourci.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>Gets or sets the current text in the text box.</source>
          <target state="translated">Obtient ou définit le texte actuel de la zone de texte.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The text displayed in the control.</source>
          <target state="translated">Texte affiché dans le contrôle.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>To display multiple lines of text in a text box, set the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Pour afficher plusieurs lignes de texte dans une zone de texte, définissez la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Multiline%2A&gt;</ph> propriété <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>To read or set the text of a multiline text box, use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt;</ph> property.</source>
          <target state="translated">Pour lire ou définir le texte d’une zone de texte multiligne, utilisez le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Lines%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The amount of text that can be entered in the <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> control is limited only by available system memory.</source>
          <target state="translated">La quantité de texte qui peut être entré dans le <ph id="ph1">&lt;xref:System.Windows.Forms.RichTextBox&gt;</ph> contrôle est limité uniquement par la mémoire système disponible.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un élément <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle avec des barres de défilement verticale.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.Text">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> propriétés pour rendre le contrôle de zone de texte multiligne lors de la création de documents de texte.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>Gets the length of text in the control.</source>
          <target state="translated">Obtient la longueur du texte dans le contrôle.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>The number of characters contained in the text of the control.</source>
          <target state="translated">Nombre de caractères contenus dans le texte du contrôle.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</source>
          <target state="translated">Vous pouvez utiliser cette propriété pour déterminer le nombre de caractères dans une chaîne pour des tâches telles que la recherche de chaînes spécifiques dans le texte du contrôle, où la base de connaissances du nombre total de caractères est nécessaire.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> property to copy text from one <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> to another.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AppendText%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.TextLength%2A&gt;</ph> propriété pour copier du texte à partir d’un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> à un autre.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.TextLength">
          <source>This example requires that two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls named, <ph id="ph2">`textBox1`</ph> and <ph id="ph3">`textBox2`</ph>, have been added to a form and that <ph id="ph4">`textBox1`</ph> has text assigned to its <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property.</source>
          <target state="translated">Cet exemple suppose que deux <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôles nommés, <ph id="ph2">`textBox1`</ph> et <ph id="ph3">`textBox2`</ph>, ont été ajoutés à un formulaire et que <ph id="ph4">`textBox1`</ph> a le texte assigné à son <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>Returns a string that represents the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> control.</source>
          <target state="translated">Retourne une chaîne qui représente le contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui représente le <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.ToString">
          <source>The string includes the type and the <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> property of the control.</source>
          <target state="translated">La chaîne inclut le type et la propriété <ph id="ph1">&lt;see cref="T:System.Windows.Forms.TextBoxBase" /&gt;</ph> du contrôle.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>Undoes the last edit operation in the text box.</source>
          <target state="translated">Annule la dernière modification apportée dans la zone de texte.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>This method will undo the last <bpt id="p1">**</bpt>Clipboard<ept id="p1">**</ept> or text change operation performed in the text box control if the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Cette méthode annule la dernière <bpt id="p1">**</bpt>Presse-papiers<ept id="p1">**</ept> ou texte changer l’opération effectuée dans le contrôle de zone de texte si la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.CanUndo%2A&gt;</ph> propriété renvoie <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> method does not work with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> events.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.Undo%2A&gt;</ph> méthode ne fonctionne pas avec le <ph id="ph2">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> événements.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>It provides <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> event handlers for <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objects that perform Cut, Copy, Paste, and Undo operations.</source>
          <target state="translated">Il fournit <ph id="ph1">&lt;xref:System.Windows.Forms.MenuItem.Click&gt;</ph> gestionnaires d’événements pour <ph id="ph2">&lt;xref:System.Windows.Forms.MenuItem&gt;</ph> objets qui effectuent couper, copier, coller et les opérations d’annulation.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.TextBoxBase.Undo">
          <source>This example requires that a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control named <ph id="ph2">`textBox1`</ph> has been created.</source>
          <target state="translated">Cet exemple suppose qu’un <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle nommé <ph id="ph2">`textBox1`</ph> a été créé.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)">
          <source>The Windows <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> to process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Message" /&gt;</ph> Windows à traiter.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.TextBoxBase.WndProc(System.Windows.Forms.Message@)">
          <source>Processes Windows messages.</source>
          <target state="translated">Traite les messages Windows.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</source>
          <target state="translated">Indique si un contrôle zone de texte multiligne renvoie les mots au début de la ligne suivante lorsque cela est nécessaire.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the multiline text box control wraps words; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the text box control automatically scrolls horizontally when the user types past the right edge of the control.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le contrôle zone de texte multiligne renvoie le texte à la ligne suivante ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si le contrôle zone de texte défile horizontalement lorsque l'utilisateur tape un mot au-delà du bord droit du contrôle.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>If this property is set to <ph id="ph1">`true`</ph>, horizontal scroll bars are not displayed regardless of the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> property setting.</source>
          <target state="translated">Si cette propriété est définie sur <ph id="ph1">`true`</ph>, barres de défilement horizontale ne sont pas affichés, quel que soit le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.ScrollBars%2A&gt;</ph> paramètre de propriété.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>In the derived class, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, text within the control will always wrap regardless of the property setting of this property unless the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> property is set to <ph id="ph3">`HorizontalAlignment.Left`</ph>.</source>
          <target state="translated">Dans la classe dérivée, <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, dans le contrôle sera toujours habillage quel que soit le paramètre de propriété de cette propriété, sauf si le <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.TextAlign%2A&gt;</ph> est définie sur <ph id="ph3">`HorizontalAlignment.Left`</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, a derived class, to create a multiline <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control with vertical scroll bars.</source>
          <target state="translated">Le code suivant utilise des exemple <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, une classe dérivée, pour créer un élément <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> contrôle avec des barres de défilement verticale.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Forms.TextBoxBase.WordWrap">
          <source>This example also uses the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> properties to make the multiline text box control useful for creating text documents.</source>
          <target state="translated">Cet exemple utilise également la <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase.AcceptsTab%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox.AcceptsReturn%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Windows.Forms.TextBoxBase.WordWrap%2A&gt;</ph> propriétés pour rendre le contrôle de zone de texte multiligne lors de la création de documents de texte.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>