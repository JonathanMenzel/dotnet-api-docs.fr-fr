<Type Name="ListBox+IntegerCollection" FullName="System.Windows.Forms.ListBox+IntegerCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcf6a22080252a95056688db7420e6c55b5f3747" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListBox.IntegerCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListBox/IntegerCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListBox.IntegerCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListBox.IntegerCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListBox::IntegerCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListBox.IntegerCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="504e4-101">Représente une collection d'entiers dans <see cref="T:System.Windows.Forms.ListBox" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="504e4-101">Represents a collection of integers in a <see cref="T:System.Windows.Forms.ListBox" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> est une collection triée à laquelle les éléments sont ajoutés à l’aide de la <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> et <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="504e4-102"><xref:System.Windows.Forms.ListBox.IntegerCollection> is a sorted collection to which items are appended by using the <xref:System.Windows.Forms.ListBox.IntegerCollection.Add%2A> and <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> methods.</span></span> <span data-ttu-id="504e4-103">Valeurs en double sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="504e4-103">Duplicate values are removed.</span></span>  
  
 <span data-ttu-id="504e4-104">Le <xref:System.Windows.Forms.ListBox.IntegerCollection> est principalement utilisée par le <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="504e4-104">The <xref:System.Windows.Forms.ListBox.IntegerCollection> is used mainly by the <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IntegerCollection (System.Windows.Forms.ListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.#ctor(System.Windows.Forms.ListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntegerCollection(System::Windows::Forms::ListBox ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListBox.IntegerCollection : System.Windows.Forms.ListBox -&gt; System.Windows.Forms.ListBox.IntegerCollection" Usage="new System.Windows.Forms.ListBox.IntegerCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListBox" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="504e4-105">
            <see cref="T:System.Windows.Forms.ListBox" /> auquel appartient la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-105">The <see cref="T:System.Windows.Forms.ListBox" /> that owns the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-106">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-107">Vous ne pouvez pas créer une instance de la <xref:System.Windows.Forms.ListBox.IntegerCollection> classe sans l’associer avec un <xref:System.Windows.Forms.ListBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="504e4-107">You cannot create an instance of the <xref:System.Windows.Forms.ListBox.IntegerCollection> class without associating it with a <xref:System.Windows.Forms.ListBox> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Add(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(int item);" />
      <MemberSignature Language="F#" Value="member this.Add : int -&gt; int" Usage="integerCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-108">Entier à ajouter à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-108">The integer to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-109">Ajoute un entier unique à la collection en l'ordre de tri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-109">Adds a unique integer to the collection in sorted order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-110">Index de l'élément ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-110">The index of the added item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="504e4-111">L'espace disponible est insuffisant pour stocker le nouvel élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-111">There is insufficient space available to store the new item.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-112">Ajoute un groupe d'entiers à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-112">Adds a group of integers to the collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;int&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : int[] -&gt; unit" Usage="integerCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="504e4-113">Tableau d'entiers à ajouter à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-113">The array of integers to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-114">Ajoute un tableau d'entiers à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-114">Adds an array of integers to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-115">Le tableau d’entiers est ajouté à la collection et les doublons sont supprimés de la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-115">The array of integers is appended to the collection, and duplicates are removed from the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListBox.IntegerCollection value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListBox/IntegerCollection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.AddRange(System.Windows.Forms.ListBox.IntegerCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (value As ListBox.IntegerCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListBox::IntegerCollection ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListBox.IntegerCollection -&gt; unit" Usage="integerCollection.AddRange value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListBox+IntegerCollection" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="504e4-116">
            <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> à ajouter à une autre collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-116">The <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to add to another collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-117">Ajoute le contenu d'un <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> existant à une autre collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-117">Adds the contents of an existing <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> to another collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-118">Le contenu existants <xref:System.Windows.Forms.ListBox.IntegerCollection> sont ajoutés à la collection actuelle, et les doublons sont supprimés de la collection combinée.</span><span class="sxs-lookup"><span data-stu-id="504e4-118">The contents of the existing <xref:System.Windows.Forms.ListBox.IntegerCollection> are appended to the current collection, and duplicates are removed from the combined collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="integerCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="504e4-119">Supprime tous les entiers du <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-119">Removes all integers from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int item);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="integerCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-120">Entier à rechercher dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-120">The integer to search for in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-121">Détermine si l'entier spécifié se trouve dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-121">Determines whether the specified integer is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-122">
            <see langword="true" /> si l'entier spécifié se trouve dans la collection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-122">
              <see langword="true" /> if the specified integer is in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-123">Utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> méthode pour déterminer si un entier est un membre de la <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="504e4-123">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method to determine whether an integer is a member of the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="504e4-124">Une fois que vous savez que l’élément est situé dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> méthode pour déterminer où se trouve l’élément dans la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-124">Once you know that the item is located within the collection, you can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where the item is located within the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ destination, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="integerCollection.CopyTo (destination, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">
          <span data-ttu-id="504e4-125">Tableau dans lequel copier <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-125">The array into which the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> is copied.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="504e4-126">Emplacement dans le tableau de destination auquel <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> doit être copié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-126">The location within the destination array to which to copy the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-127">Copie le <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> entier dans un tableau d'entiers existant à un emplacement spécifié dans le tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-127">Copies the entire <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> into an existing array of integers at a specified location within the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-128">Utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> méthode pour rassembler les entiers de plusieurs collections dans un seul tableau.</span><span class="sxs-lookup"><span data-stu-id="504e4-128">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.CopyTo%2A> method to combine the integers from multiple collections into a single array.</span></span> <span data-ttu-id="504e4-129">Vous pouvez ensuite utiliser ce tableau pour remplir le contenu d’un autre <xref:System.Windows.Forms.ListBox> contrôler à l’aide du <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="504e4-129">You can then use this array to populate the contents of another <xref:System.Windows.Forms.ListBox> control using the <xref:System.Windows.Forms.ListBox.IntegerCollection.AddRange%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListBox.IntegerCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-130">Obtient le nombre d'éléments sélectionnés dans <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-130">Gets the number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-131">Nombre d'éléments sélectionnés dans <see cref="T:System.Windows.Forms.ListBox" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-131">The number of selected items in the <see cref="T:System.Windows.Forms.ListBox" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-132">Utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> propriété afin de déterminer le nombre d’éléments sélectionnés dans le <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span><span class="sxs-lookup"><span data-stu-id="504e4-132">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Count%2A> property to determine the number of selected items in the <xref:System.Windows.Forms.ListBox.IntegerCollection>.</span></span> <span data-ttu-id="504e4-133">Vous pouvez ensuite utiliser cette valeur lorsque vous effectuez une boucle sur les éléments et vous devez fournir un nombre d’itérations pour exécuter la boucle.</span><span class="sxs-lookup"><span data-stu-id="504e4-133">You can then use this value when you are looping through the items and you need to provide a number of iterations to perform the loop.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="integerCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-134">Entier pour lequel l'index doit être récupéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-134">The integer for which to retrieve the index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-135">Récupère l'index dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> de l'entier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-135">Retrieves the index within the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> of the specified integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-136">Index de base zéro de l'entier de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-136">The zero-based index of the integer in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-137">Utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> méthode pour déterminer où se trouve un élément dans la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-137">Use the <xref:System.Windows.Forms.ListBox.IntegerCollection.IndexOf%2A> method to determine where an item is located within the collection.</span></span> <span data-ttu-id="504e4-138">Pour déterminer si un élément est situé dans la collection avant d’appeler cette méthode, utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="504e4-138">To determine whether an item is located within the collection before calling this method, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Contains%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); void set(int index, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int with get, set" Usage="System.Windows.Forms.ListBox.IntegerCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="504e4-139">Position du <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-139">The position of the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-140">Obtient ou définit le <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> possédant l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-140">Gets or sets the <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> having the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-141">
            <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> sélectionné à la position spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-141">The selected <see cref="P:System.Windows.Forms.ListBox.IntegerCollection.Item(System.Int32)" /> at the specified position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int item);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="integerCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-142">Entier à supprimer de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-142">The integer to remove from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-143">Supprime l'entier spécifié de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-143">Removes the specified integer from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-144">Lorsque vous supprimez un entier compris entre le <xref:System.Windows.Forms.ListBox.IntegerCollection>, les index changent des entiers suivants dans la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-144">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="504e4-145">Toutes les informations sur l’entier supprimé sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="504e4-145">All information about the removed integer is deleted.</span></span> <span data-ttu-id="504e4-146">Vous pouvez utiliser la <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> méthode pour supprimer un élément spécifique dans la liste en spécifiant l’élément à supprimer de la liste.</span><span class="sxs-lookup"><span data-stu-id="504e4-146">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method to remove a specific item from the list by specifying the actual item to remove from the list.</span></span> <span data-ttu-id="504e4-147">Pour spécifier l’index de l’entier à supprimer au lieu de l’entier lui-même, utilisez la <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="504e4-147">To specify the index of the integer to remove instead of the integer itself, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method.</span></span>  
  
 <span data-ttu-id="504e4-148">Si l’entier n’est pas dans le <xref:System.Windows.Forms.ListBox.IntegerCollection>, cette méthode ne fait rien.</span><span class="sxs-lookup"><span data-stu-id="504e4-148">If the integer is not in the <xref:System.Windows.Forms.ListBox.IntegerCollection>, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="integerCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="504e4-149">Index de base zéro de l'entier à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-149">The zero-based index of the integer to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-150">Supprime l'entier à l'index spécifié de <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-150">Removes the integer at the specified index from the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-151">Lorsque vous supprimez un entier compris entre le <xref:System.Windows.Forms.ListBox.IntegerCollection>, les index changent des entiers suivants dans la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-151">When you remove an integer from the <xref:System.Windows.Forms.ListBox.IntegerCollection>, the indexes change for subsequent integers in the collection.</span></span> <span data-ttu-id="504e4-152">Toutes les informations sur l’entier supprimé sont supprimées.</span><span class="sxs-lookup"><span data-stu-id="504e4-152">All information about the removed integer is deleted.</span></span> <span data-ttu-id="504e4-153">Vous pouvez utiliser la <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> méthode pour supprimer un entier spécifique dans la liste en spécifiant l’index de l’entier à supprimer de la liste.</span><span class="sxs-lookup"><span data-stu-id="504e4-153">You can use the <xref:System.Windows.Forms.ListBox.IntegerCollection.RemoveAt%2A> method to remove a specific integer from the list by specifying the index of the integer to remove from the list.</span></span> <span data-ttu-id="504e4-154">Pour spécifier l’élément à supprimer au lieu de l’index à l’élément, utilisez le <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="504e4-154">To specify the item to remove instead of the index to the item, use the <xref:System.Windows.Forms.ListBox.IntegerCollection.Remove%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-155">Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-155">Gets a value indicating whether access to the collection is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-156">
            <see langword="true" /> dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-156">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-157">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-158">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="504e4-158">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-159">Obtient un objet qui peut être utilisé pour synchroniser l'accès à la collection de contrôles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-159">Gets an object that can be used to synchronize access to the collection of controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-160">Objet utilisé pour la synchronisation avec la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-160">The object used to synchronize to the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-161">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-162">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="504e4-162">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="504e4-163">Récupère une énumération de tous les entiers dans le <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-163">Retrieves an enumeration of all the integers in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-164">
            <see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-164">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-165">Cette méthode crée un énumérateur qui contient un instantané de la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-165">This method creates an enumerator that contains a snapshot of the collection.</span></span> <span data-ttu-id="504e4-166">Vous pouvez modifier la collection en modifiant l’énumérateur ; Toutefois, plusieurs énumérateurs peuvent accéder simultanément la même collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-166">You can change the collection by changing the enumerator; however, multiple enumerators can simultaneously access the same collection.</span></span> <span data-ttu-id="504e4-167">Modification de la collection (directement ou via un autre énumérateur) peut donc provoquer <xref:System.Collections.IEnumerator.Current%2A> ou <xref:System.Collections.IEnumerator.MoveNext%2A> pour lever une exception.</span><span class="sxs-lookup"><span data-stu-id="504e4-167">Changing the collection (either directly or through another enumerator) can thus cause <xref:System.Collections.IEnumerator.Current%2A> or <xref:System.Collections.IEnumerator.MoveNext%2A> to throw an exception.</span></span>  
  
 <span data-ttu-id="504e4-168">Deux énumérateurs sont créés à partir de la même collection en même temps peuvent contenir différents instantanés.</span><span class="sxs-lookup"><span data-stu-id="504e4-168">Two enumerators created from the same collection at the same time can contain different snapshots.</span></span>  
  
 <span data-ttu-id="504e4-169">Suppression d’objets l’énumérateur également les supprime de la collection.</span><span class="sxs-lookup"><span data-stu-id="504e4-169">Removing objects from the enumerator also removes them from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-170">Taquet de tabulation à ajouter à <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-170">The tab stop to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-171">Ajoute un taquet de tabulation à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-171">Adds a tab stop to the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-172">Index auquel l'entier a été ajouté à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-172">The index at which the integer was added to the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-173">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-173">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-174">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-174">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="504e4-175">
            <paramref name="item" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-175">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="504e4-176">
            <paramref name="item" /> n'est pas un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-176">
              <paramref name="item" /> is not an 32-bit signed integer.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="504e4-177">L'espace est insuffisant pour stocker le nouvel élément dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-177">There is insufficient space to store the new item in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="504e4-178">Efface tous les taquets de tabulation de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-178">Clears all the tab stops from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-179">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-180">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-180">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-181">Taquet de tabulation à rechercher dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-181">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-182">Détermine si le taquet de tabulation spécifié se trouve dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-182">Determines whether the specified tab stop is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-183">
            <see langword="true" /> si l'élément est un entier situé dans IntegerCollection ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-183">
              <see langword="true" /> if item is an integer located in the IntegerCollection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-184">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-185">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-185">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="504e4-186">Taquet de tabulation à rechercher dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-186">The tab stop to locate in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-187">Retourne l'index du taquet de tabulation spécifié dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-187">Returns the index of the specified tab stop in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="504e4-188">Index de base zéro de l'élément s'il a été détecté dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" /> ; sinon, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-188">The zero-based index of item if it was found in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-189">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-189">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-190">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-190">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="504e4-191">Index de base zéro auquel la valeur doit être insérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-191">The zero-based index at which value should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="504e4-192">Objet à insérer dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-192">The object to insert into the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-193">Insère un élément dans la collection à un index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-193">Inserts an item into the collection at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-194">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-194">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-195">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-195">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="504e4-196">Toujours levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-196">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-197">Obtient une valeur indiquant si la collection est de taille fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-197">Gets a value indicating whether the collection has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-198">
            <see langword="true" /> dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-198">
              <see langword="true" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-199">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-199">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-200">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-200">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="504e4-201">Obtient une valeur indiquant si la collection est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-201">Gets a value indicating whether the collection is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-202">
            <see langword="false" /> dans tous les cas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-202">
              <see langword="false" /> in all cases.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-203">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-203">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-204">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-204">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="504e4-205">Index de base zéro qui spécifie le taquet de tabulation à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-205">The zero-based index that specifies which tab stop to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-206">Obtient ou définit le taquet de tabulation à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-206">Gets or sets the tab stop at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="504e4-207">Taquet de tabulation stocké à l'emplacement spécifié dans <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-207">The tab stop that is stored at the specified location in the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-208">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-208">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-209">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-209">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="504e4-210">L'objet n'est pas un entier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-210">The object is not an integer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="504e4-211">Objet à ajouter à <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-211">The object to add to the <see cref="T:System.Windows.Forms.ListBox.IntegerCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-212">Supprime la première occurrence d'un élément dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-212">Removes the first occurrence of an item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-213">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-214">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-214">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="504e4-215">Toujours levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-215">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListBox.IntegerCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="504e4-216">Index de l'élément à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-216">The index of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="504e4-217">Supprime l'élément au niveau de l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-217">Removes the item at a specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="504e4-218">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="504e4-218">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="504e4-219">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.ListBox.IntegerCollection> est castée en interface <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="504e4-219">It can be used only when the <xref:System.Windows.Forms.ListBox.IntegerCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="504e4-220">Toujours levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="504e4-220">Always thrown.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>