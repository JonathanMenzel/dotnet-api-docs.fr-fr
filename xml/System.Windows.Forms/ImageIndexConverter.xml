<Type Name="ImageIndexConverter" FullName="System.Windows.Forms.ImageIndexConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af196fe668d5b452cb62afbdb4f15a9bdc72f85b" /><Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="09/04/2018" /><Meta Name="ms.locfileid" Value="43649949" /></Metadata><TypeSignature Language="C#" Value="public class ImageIndexConverter : System.ComponentModel.Int32Converter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageIndexConverter extends System.ComponentModel.Int32Converter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ImageIndexConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageIndexConverter&#xA;Inherits Int32Converter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageIndexConverter : System::ComponentModel::Int32Converter" />
  <TypeSignature Language="F#" Value="type ImageIndexConverter = class&#xA;    inherit Int32Converter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Int32Converter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un convertisseur de type pour convertir les données d'un index d'image vers et à partir d'une chaîne.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ImageIndexConverter> classe est utilisée pour convertir des valeurs d’index d’un <xref:System.Windows.Forms.ImageList> vers et depuis d’autres types de données, généralement <xref:System.String>. Pour plus d’informations sur les convertisseurs de type, consultez la <xref:System.ComponentModel.TypeConverter> classe de base et [Comment : implémenter un convertisseur de Type](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).  
  
> [!NOTE]
>  En règle générale, vous ne créez pas directement une instance d’un <xref:System.Windows.Forms.ImageIndexConverter>. Au lieu de cela, appelez le <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> méthode de <xref:System.ComponentModel.TypeDescriptor>. Pour plus d’informations, consultez les exemples dans la <xref:System.ComponentModel.TypeConverter> classe de base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageIndexConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageIndexConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une instance de la classe <see cref="T:System.Windows.Forms.ImageIndexConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En règle générale, vous ne créez pas directement une instance d’un <xref:System.Windows.Forms.ImageIndexConverter>. Au lieu de cela, appelez le <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> méthode de <xref:System.ComponentModel.TypeDescriptor>. Pour plus d’informations, consultez les exemples dans la <xref:System.ComponentModel.TypeConverter> classe de base.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="imageIndexConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</param>
        <param name="culture"><see cref="T:System.Globalization.CultureInfo" /> pour fournir des informations relatives aux paramètres régionaux.</param>
        <param name="value"><see cref="T:System.Object" /> à convertir.</param>
        <summary>Convertit l’objet de valeur spécifié en objet entier signé 32 bits.</summary>
        <returns><see cref="T:System.Object" /> qui représente <paramref name="value" /> converti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce convertisseur de type peut uniquement convertir un objet entier signé 32 bits vers et à partir d’une chaîne.  
  
 Le `context` peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir de ce convertisseur de type est appelé. La valeur peut être `null`, vérifiez donc toujours. En outre, les propriétés sur l'objet de contexte peuvent retourner `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">La conversion n'a pas pu être effectuée.</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="imageIndexConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur de type est appelé. Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</param>
        <param name="culture"><see cref="T:System.Globalization.CultureInfo" /> qui fournit des informations sur les paramètres régionaux.</param>
        <param name="value">Objet à convertir, généralement un index représenté comme <see cref="T:System.Int32" />.</param>
        <param name="destinationType">Type dans lequel convertir l’objet, souvent <see cref="T:System.String" />.</param>
        <summary>Convertit l’objet spécifié dans le type de destination spécifié.</summary>
        <returns><see cref="T:System.Object" /> qui représente <paramref name="value" /> converti.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de cette méthode peut uniquement convertir une valeur d’index représentée comme un <xref:System.Int32> à un <xref:System.String>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="destinationType" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">La <paramref name="value" /> spécifiée n'a pas pu être convertie en <paramref name="destinationType" /> spécifié.</exception>
        <block subset="none" type="overrides"><para>Substituez cette méthode pour fournir vos propres fonctions de conversion.  Le <paramref name="context" /> paramètre peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir de ce convertisseur de type est appelé. Cela peut être <see langword="null" />, vous devez donc toujours vérifier pour cette valeur de retour. En outre, les propriétés sur l’objet de contexte peuvent retourner <see langword="null" />.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="imageIndexConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur de type est appelé. Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</param>
        <summary>Retourne une collection de valeurs d’index standard pour la liste d’images associée au contexte de format spécifié.</summary>
        <returns><see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> qui contient un jeu standard de valeurs d'index valides. Si aucune liste d’images n’est trouvée, cette collection contiendra un objet unique avec la valeur -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourne une collection de valeurs d’index pour les listes d’images associés à la <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A?displayProperty=nameWithType> propriété de le `context` paramètre. Si un <xref:System.Windows.Forms.ImageList> n’est trouvé, puis le parent du composant à rechercher ce type de liste.  
  
 En règle générale le <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> méthode est appelée avant une tentative est faite pour utiliser le <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> et <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> méthodes.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
        <altmember cref="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Contexte de formateur.</param>
        <summary>Détermine si la liste de valeurs standard retournée par la méthode <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> est une liste exclusive.</summary>
        <returns><see langword="true" /> si la méthode <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> retourne une liste exclusive de valeurs valides ; sinon <see langword="false" />. Cette implémentation retourne toujours <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la liste retournée par la <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> méthode est exclusive, alors aucune autre valeur n’est valide. Il s’agit par défaut d’un type de données énuméré. Si la liste n’est pas exclusive, il existe d’autres valeurs valides en plus de la liste de valeurs standard qui <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> fournit.  
  
 Tel qu’implémenté dans ce convertisseur de type, cette méthode retourne toujours `false`.  
  
 En règle générale le <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> méthode est appelée avant une tentative est faite pour utiliser le <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValues%2A> et <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive%2A> méthodes.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="imageIndexConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format qui peut être utilisé pour extraire des informations supplémentaires sur l’environnement à partir duquel ce convertisseur de type est appelé. Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</param>
        <summary>Détermine si ce convertisseur de type prend en charge un jeu standard de valeurs qui peuvent être sélectionnées à partir d'une liste.</summary>
        <returns><see langword="true" /> si la méthode <see cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" /> retourne un jeu standard de valeurs ; sinon <see langword="false" />. Retourne toujours <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe, <xref:System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported%2A> retourne toujours `true` dans la mesure où cet objet prend en charge un ensemble standard de valeurs d’index pour les images qui peuvent être sélectionnées dans une liste.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValues" />
        <altmember cref="Overload:System.Windows.Forms.ImageIndexConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="IncludeNoneAsStandardValue">
      <MemberSignature Language="C#" Value="protected virtual bool IncludeNoneAsStandardValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeNoneAsStandardValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IncludeNoneAsStandardValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IncludeNoneAsStandardValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeNoneAsStandardValue : bool" Usage="System.Windows.Forms.ImageIndexConverter.IncludeNoneAsStandardValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si une valeur <see langword="none" /> ou <see langword="null" /> est valide dans la collection <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />.</summary>
        <value><see langword="true" /> si une valeur <see langword="none" /> ou <see langword="null" /> est valide dans la collection de valeurs standard ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tel qu’implémenté dans cette classe est toujours retourne `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>