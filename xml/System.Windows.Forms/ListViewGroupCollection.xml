<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8abd493a6fe9fe49fde83c679f6f6edbcbe902aa" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229556" /></Metadata><TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la collection de groupes dans un contrôle <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propriété à obtenir le <xref:System.Windows.Forms.ListViewGroupCollection> associé à un <xref:System.Windows.Forms.ListView> contrôle. Cette collection contient le <xref:System.Windows.Forms.ListViewGroup> objets qui représentent les groupes apparaissant dans le contrôle lorsque la <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Tous les éléments qui ne sont pas affectés à un groupe seront affiche dans le groupe par défaut, ce qui a l’étiquette d’en-tête « DefaultGroup{0}». Le groupe par défaut n’est pas contenu dans le <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collection et ne peut pas être modifiée. Il est particulièrement utile dans le débogage pour vous assurer que tous les éléments ont été correctement ajoutés aux groupes. Si aucun groupe dans le <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collecte, la fonctionnalité de regroupement est désactivée.  
  
 Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> méthode pour ajouter un groupe unique à la collection. Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> méthode pour ajouter un groupe à un index particulier dans la collection. Pour supprimer un groupe, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> (méthode). Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> méthode pour supprimer le groupe à un index particulier.  
  
 Vous ne pouvez pas ajouter un <xref:System.Windows.Forms.ListViewGroup> à la collection plusieurs fois. Pour repositionner un groupe dans la collection, il doit d’abord être supprimé de la collection et puis inséré à l’emplacement souhaité. Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> méthode pour déterminer si un groupe particulier est déjà dans la collection. Pour récupérer l’index d’un groupe dans la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> (méthode). Vous pouvez obtenir ou définir le groupe à un index particulier avec le <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> indexeur.  
  
 Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> pour ajouter plusieurs groupes à la collection. Vous pouvez ajouter plusieurs groupes sous la forme d’un tableau de groupes ou comme un <xref:System.Windows.Forms.ListViewGroupCollection> que vous récupérez via la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propriété d’un autre <xref:System.Windows.Forms.ListView> contrôle. Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection.  
  
> [!NOTE]
>  Le <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, et <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> supprimer des groupes de la collection de méthodes, mais ne supprimez pas tous les éléments à partir de la <xref:System.Windows.Forms.ListView> contrôle. Si aucun groupe dans le <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collection, la fonctionnalité de regroupement est désactivée et tous les éléments dans le contrôle sont affichés normalement.  
  
 Le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> et <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthodes sont utiles lorsque vous souhaitez offrir plusieurs moyens de regrouper les éléments dans un <xref:System.Windows.Forms.ListView> contrôle. Pour ce faire, créez plusieurs tableaux de groupe. Pour modifier le regroupement, utilisez d’abord la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection, puis utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter le tableau suivant de groupes à afficher.  
  
 Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> méthode pour copier les groupes dans une collection dans un tableau compatible, en commençant à un index spécifié. Cela est utile, par exemple, lorsque vous souhaitez trier les groupes dans la collection en utilisant la <xref:System.Array.Sort%2A?displayProperty=nameWithType> (méthode). Pour ce faire, copiez les groupes dans un tableau compatible, puis trier le tableau. Ensuite, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection, puis utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter le tableau trié à la collection.  
  
 Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> propriété afin de déterminer le nombre de groupes présents dans la collection. Pour itérer la collection, utilisez la <xref:System.Collections.IEnumerator> retourné à partir de la <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> (méthode).  
  
> [!NOTE]
>  La fonctionnalité de regroupement est disponible uniquement sur Windows XP et la famille Windows Server 2003 lorsque votre application appelle la <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> (méthode). Sur les systèmes d’exploitation antérieurs, tout code concernant les groupes sera ignoré et les groupes n’apparaîtra pas. Par conséquent, tout code qui dépend de la fonctionnalité de regroupement peuvent ne pas fonctionne correctement. Vous pouvez inclure un test qui détermine si la fonctionnalité de regroupement est disponible et fournir d’autres fonctionnalités lorsqu’il n’est pas disponible. Par exemple, vous pouvez souhaiter fournir un tri secondaire lors de l’exécution sur les systèmes d’exploitation qui ne prennent pas en charge le tri par groupe.  
>   
>  La fonctionnalité de marque d’insertion est fournie par la même bibliothèque qui fournit la fonctionnalité des thèmes du système d’exploitation. Pour vérifier la disponibilité de cette bibliothèque, appelez le <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> surcharge de méthode et transmettez le <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> valeur.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.Windows.Forms.ListView> fonctionnalité de regroupement pour organiser les éléments par valeur de sous-élément dans la vue Détails. Cette forme de regroupement est semblable au regroupement utilisé dans l’Explorateur Windows. Dans l’exemple, les groupes sont créés dynamiquement. Pour chaque colonne de sous-élément, un groupe est créé pour chaque valeur de sous-élément unique. Pour la colonne d’élément parent, un groupe est créé pour chaque initiale unique. Cliquez sur l’en-tête d’une colonne trie les éléments dans les groupes créés pour cette colonne. Cliquez à nouveau sur le même en-tête de colonne inverse l’ordre des groupes.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un <see cref="T:System.Windows.Forms.ListViewGroup" /> à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Objet <see cref="T:System.Windows.Forms.ListViewGroup" /> à ajouter à la collection.</param>
        <summary>Ajoute l'objet <see cref="T:System.Windows.Forms.ListViewGroup" /> spécifié à la collection.</summary>
        <returns>Index du groupe dans la collection, ou -1 si le groupe est déjà dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour ajouter un existant <xref:System.Windows.Forms.ListViewGroup> à la collection. Vous ne pouvez pas ajouter un <xref:System.Windows.Forms.ListViewGroup> à la collection plusieurs fois. Lorsque vous appelez le <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> à l’aide de la méthode un <xref:System.Windows.Forms.ListViewGroup> qui se trouve déjà dans la collection, l’addition échoue et -1 est retourné.  
  
 Pour ajouter plusieurs groupes à la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="group" /> contient au moins un <see cref="T:System.Windows.Forms.ListViewItem" /> qui appartient à un contrôle <see cref="T:System.Windows.Forms.ListView" /> autre que celui qui possède ce <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">La valeur initiale de la propriété <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> pour le nouveau groupe.</param>
        <param name="headerText">La valeur initiale de la propriété <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> pour le nouveau groupe.</param>
        <summary>Ajoute un nouveau <see cref="T:System.Windows.Forms.ListViewGroup" /> à la collection à l'aide des valeurs spécifiées pour initialiser les propriétés <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> et <see cref="P:System.Windows.Forms.ListViewGroup.Header" /></summary>
        <returns>Nouvelle <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute plusieurs groupes à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Tableau de type <see cref="T:System.Windows.Forms.ListViewGroup" /> qui spécifie les groupes à ajouter à la collection.</param>
        <summary>Ajoute un tableau de groupes à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette version de la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> pour ajouter un tableau de groupes à la collection de groupes. Cette méthode est utile lorsque vous créez plusieurs <xref:System.Windows.Forms.ListViewGroup> les objets et les ajouter à la collection avec un seul appel de méthode. Pour ajouter des groupes individuels à la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> (méthode).  
  
 Cette méthode est également utile lorsque vous souhaitez offrir plusieurs moyens de regrouper les éléments dans un <xref:System.Windows.Forms.ListView> contrôle. Pour ce faire, créez plusieurs tableaux de groupe. Pour modifier le regroupement, utilisez d’abord la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection, puis utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter un tableau différent de groupes.  
  
 Contrairement à la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> (méthode), le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode n’a pas de valeur de retour qui peut être utilisée pour déterminer si un groupe est déjà dans la collection. Si vous avez besoin de ces informations, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> méthode avant d’utiliser le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> (méthode).  
  
   
  
## Examples  
 L’exemple suivant montre comment la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode peut être utilisée dans une application qui organise les <xref:System.Windows.Forms.ListView> éléments par valeur de sous-élément dans la vue Détails. Cette forme de regroupement est semblable au regroupement utilisé dans l’Explorateur Windows. Dans l’exemple, les groupes sont créés dynamiquement. Pour chaque colonne de sous-élément, un groupe est créé pour chaque valeur de sous-élément unique. Pour la colonne d’élément parent, un groupe est créé pour chaque initiale unique. Les groupes créés pour chaque colonne sont stockés dans une table de hachage, ainsi que le texte des sous-éléments ou d’une lettrine. Un clic sur un en-tête de colonne, le <xref:System.Windows.Forms.ListViewGroupCollection> est désactivée. La table de hachage correspondant à la colonne sélectionnée est ensuite récupérée et chaque élément est assigné au groupe approprié. Enfin, un tableau trié des groupes dans la table de hachage est ajouté à la <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.ListViewGroupCollection> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> contient au moins un groupe avec au moins un <see cref="T:System.Windows.Forms.ListViewItem" /> qui appartient à un contrôle <see cref="T:System.Windows.Forms.ListView" /> autre que celui qui possède ce <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups"><see cref="T:System.Windows.Forms.ListViewGroupCollection" /> contenant les groupes à ajouter à la collection.</param>
        <summary>Ajoute les groupes situés dans un <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> existant à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utiliser cette version de la <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter les éléments d’un <xref:System.Windows.Forms.ListViewGroupCollection> que vous récupérez via la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> propriété d’un autre <xref:System.Windows.Forms.ListView> contrôle.  
  
 Contrairement à la <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> (méthode), le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode n’a pas de valeur de retour qui peut être utilisée pour déterminer si un groupe est déjà dans la collection. Si vous avez besoin de ces informations, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> méthode avant d’utiliser le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> contient au moins un groupe avec au moins un <see cref="T:System.Windows.Forms.ListViewItem" /> qui appartient à un contrôle <see cref="T:System.Windows.Forms.ListView" /> autre que celui qui possède ce <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les groupes de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer tous les groupes de la collection. Notez que la suppression de groupes à partir de la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collection ne supprime pas les éléments à partir de la <xref:System.Windows.Forms.ListView> contrôle.  
  
 Cette méthode est utile pour désactiver la fonctionnalité de regroupement. Lorsqu’il n’y a aucuns groupes dans un <xref:System.Windows.Forms.ListView> contrôler, les éléments apparaissent normalement. Pour supprimer des groupes individuels à partir de la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> ou <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> (méthode).  
  
 Cette méthode est également utile lorsque vous souhaitez offrir plusieurs moyens de regrouper les éléments. Pour modifier le regroupement, utilisez d’abord la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection, puis utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter un tableau différent de groupes.  
  
   
  
## Examples  
 L’exemple suivant montre comment la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode peut être utilisée dans une application qui organise les <xref:System.Windows.Forms.ListView> éléments par valeur de sous-élément dans la vue Détails. Cette forme de regroupement est semblable au regroupement utilisé dans l’Explorateur Windows. Dans l’exemple, les groupes sont créés dynamiquement. Pour chaque colonne de sous-élément, un groupe est créé pour chaque valeur de sous-élément unique. Pour la colonne d’élément parent, un groupe est créé pour chaque initiale unique. Les groupes créés pour chaque colonne sont stockés dans une table de hachage, ainsi que le texte des sous-éléments ou d’une lettrine. Un clic sur un en-tête de colonne, le <xref:System.Windows.Forms.ListViewGroupCollection> est désactivée. La table de hachage correspondant à la colonne sélectionnée est ensuite récupérée et chaque élément est assigné au groupe approprié. Enfin, un tableau trié des groupes dans la table de hachage est ajouté à la <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Pour obtenir un exemple complet, consultez le <xref:System.Windows.Forms.ListViewGroupCollection> rubrique de référence de vue d’ensemble.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> à rechercher dans la collection.</param>
        <summary>Détermine si le groupe spécifié se trouve dans la collection.</summary>
        <returns><see langword="true" /> si le groupe se trouve dans la collection ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas ajouter un <xref:System.Windows.Forms.ListViewGroup> à la collection plusieurs fois. Toutefois, essayez d’ajouter une autre copie pas lève une exception. Au lieu de cela, l’ajout échouera. Le <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> méthode retournera la valeur -1 dans ce cas. Le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> et <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> Toutefois, les méthodes, n’ont pas de valeurs de retour. Lorsque vous ajoutez des groupes à l’aide d’une de ces méthodes, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> méthode pour déterminer si un particulier <xref:System.Windows.Forms.ListViewGroup> figure déjà dans la collection.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Le <see cref="T:System.Array" /> dans lequel les groupes sont copiés.</param>
        <param name="index">Premier index du tableau vers lequel sont copiés les groupes.</param>
        <summary>Copie les groupes dans la collection dans un <see cref="T:System.Array" /> à une dimension commençant dans l'index spécifié du tableau cible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> méthode pour copier les groupes dans une collection (y compris les références d’élément qu’ils contiennent) vers un tableau compatible, en commençant à l’index spécifié. Cela est utile, par exemple, lorsque vous souhaitez trier les groupes dans la collection en utilisant la <xref:System.Array.Sort%2A?displayProperty=nameWithType> (méthode). Pour ce faire, copiez les groupes dans un tableau compatible, puis trier le tableau. Ensuite, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> méthode pour supprimer tous les groupes de la collection, puis utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> méthode pour ajouter le tableau trié à la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de groupes de la collection.</summary>
        <value>Nombre de groupes présents dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet de déterminer le nombre de groupes dans la collection. Cela est utile lorsque vous avez besoin parcourir la collection et effectuer la même opération sur chaque groupe. Vous pouvez également utiliser le <xref:System.Collections.IEnumerator> retourné par la <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> méthode pour itérer la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur utilisé pour itérer au sein de la collection.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> qui représente la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utile lorsque vous avez besoin effectuer une itération dans la collection pour effectuer la même opération sur chaque groupe. Vous pouvez également itérer sur la collection une fois pour chaque groupe, à l’aide de la <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> propriété afin de déterminer le nombre de boucles.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> à rechercher dans la collection.</param>
        <summary>Retourne l'index du <see cref="T:System.Windows.Forms.ListViewGroup" /> spécifié dans la collection.</summary>
        <returns>L'index de base zéro du groupe dans la collection, ou -1 si le groupe n'est pas dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour déterminer l’index d’un groupe dans la collection. Cela est utile, par exemple, pour déterminer l’index de chaque groupe lorsque vous itérez la collection en utilisant la <xref:System.Collections.IEnumerator> retourné par le <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Index de la collection auquel insérer le groupe.</param>
        <param name="group"><see cref="T:System.Windows.Forms.ListViewGroup" /> à insérer dans la collection.</param>
        <summary>Insère le <see cref="T:System.Windows.Forms.ListViewGroup" /> spécifié dans la collection, à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour insérer un existant <xref:System.Windows.Forms.ListViewGroup> à un index particulier dans la collection.  
  
 Vous ne pouvez pas ajouter un <xref:System.Windows.Forms.ListViewGroup> à la collection plusieurs fois. Lorsque vous appelez le <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> méthode à l’aide d’un groupe qui se trouve déjà dans la collection, l’insertion échoue. Utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> méthode avant l’insertion pour déterminer si un groupe particulier est déjà dans la collection. Pour repositionner un groupe dans la collection, vous devez d’abord le supprimer et insérer à l’index souhaité.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit un objet <see cref="T:System.Windows.Forms.ListViewGroup" /> de la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de la collection du <see cref="T:System.Windows.Forms.ListViewGroup" /> à obtenir ou à définir.</param>
        <summary>Obtient ou définit <see cref="T:System.Windows.Forms.ListViewGroup" /> à l'index spécifié dans la collection.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" /> se trouvant à l'index spécifié de la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette propriété pour récupérer le groupe à l’index spécifié dans la collection. Lorsque vous avez une référence à l’objet de groupe et que vous avez besoin de l’index, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom du groupe à obtenir ou à définir.</param>
        <summary>Obtient ou définit le <see cref="T:System.Windows.Forms.ListViewGroup" /> avec la valeur de propriété <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> spécifiée.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" /> portant le nom spécifié ou <see langword="null" /> si aucun <see cref="T:System.Windows.Forms.ListViewGroup" /> de ce type n'existe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group"><see cref="T:System.Windows.Forms.ListViewGroup" /> à supprimer de la collection.</param>
        <summary>Supprime l’objet <see cref="T:System.Windows.Forms.ListViewGroup" /> spécifié de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer un groupe à partir de la collection lorsque vous avez une référence au groupe. Notez que la suppression d’un groupe à partir de la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collection ne supprime pas les éléments à partir de la <xref:System.Windows.Forms.ListView> contrôle.  
  
 Pour supprimer un groupe à un index particulier, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> méthode à la place. Pour supprimer tous les groupes de la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index dans la collection du <see cref="T:System.Windows.Forms.ListViewGroup" /> à supprimer.</param>
        <summary>Supprime le <see cref="T:System.Windows.Forms.ListViewGroup" /> à l'index spécifié dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour supprimer un groupe à partir de la collection lorsque vous avez l’index du groupe dans la collection. Notez que la suppression de groupes à partir de la <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> collection ne supprime pas les éléments à partir de la <xref:System.Windows.Forms.ListView> contrôle.  
  
 Pour supprimer un groupe à l’aide d’une référence à l’objet, utilisez le <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> méthode à la place. Pour supprimer tous les groupes de la collection, utilisez la <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> (méthode). Lorsque vous supprimez un élément de la collection, les index de modifier des éléments suivants dans la collection. Toutes les informations sur l’élément supprimé sont supprimées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
        <value><see langword="true" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l’accès à la collection.</summary>
        <value>Objet utilisé pour synchroniser la collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> à ajouter à <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Ajoute un nouvel objet <see cref="T:System.Windows.Forms.ListViewGroup" /> au <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Index auquel <see cref="T:System.Windows.Forms.ListViewGroup" /> a été ajouté.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> n'est pas un <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
ou 
 <paramref name="value" /> contient au moins un <see cref="T:System.Windows.Forms.ListViewItem" /> qui appartient à un contrôle <see cref="T:System.Windows.Forms.ListView" /> autre que celui qui possède ce <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet qui représente <see cref="T:System.Windows.Forms.ListViewGroup" /> à localiser dans la collection.</param>
        <summary>Détermine si la valeur spécifiée se trouve dans la collection.</summary>
        <returns><see langword="true" /> si <paramref name="value" /> est un <see cref="T:System.Windows.Forms.ListViewGroup" /> présent dans la collection ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> à rechercher dans la <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Retourne l'index dans la collection de la valeur spécifiée.</summary>
        <returns>Index de base zéro de <paramref name="value" /> s'il existe dans la collection ; sinon, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Position à laquelle <see cref="T:System.Windows.Forms.ListViewGroup" /> a été ajouté à la collection.</param>
        <param name="value">Objet <see cref="T:System.Windows.Forms.ListViewGroup" /> à ajouter à la collection.</param>
        <summary>Insère <see cref="T:System.Windows.Forms.ListViewGroup" /> dans <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` n’est pas un <xref:System.Windows.Forms.ListViewGroup>, il n’est pas ajouté à la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est de taille fixe.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
        <summary>Obtient ou définit <see cref="T:System.Windows.Forms.ListViewGroup" /> à l'index spécifié dans la collection.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewGroup" /> qui représente l’élément situé à l’index spécifié dans la collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewGroup" /> à supprimer de <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Supprime <see cref="T:System.Windows.Forms.ListViewGroup" /> de <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>