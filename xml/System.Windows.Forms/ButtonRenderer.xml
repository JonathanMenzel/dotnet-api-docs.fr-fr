<Type Name="ButtonRenderer" FullName="System.Windows.Forms.ButtonRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f11f209e95a14f7a503cde17c5ae64e62f6be80" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52590697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ButtonRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ButtonRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ButtonRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonRenderer sealed" />
  <TypeSignature Language="F#" Value="type ButtonRenderer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des méthodes utilisées pour restituer un contrôle bouton avec ou sans styles visuels. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ButtonRenderer> classe fournit un ensemble de `static` méthodes qui peuvent être utilisées pour restituer un contrôle bouton. Le rendu d’un contrôle fait référence au dessin de l’interface utilisateur d’un contrôle. Pour dessiner un bouton, utilisez une de la <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> méthodes. Ces méthodes fournissent diverses options, telles que dessiner du texte ou une image sur le bouton.  
  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> dessinera le bouton avec le style visuel actuel. Sinon, <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> dessinera le bouton avec le style Windows classique. Cela est utile si vous dessinez un contrôle personnalisé qui doit correspondre automatiquement le paramètre de style visuel actuel du système d’exploitation.  
  
 Cette classe encapsule les fonctionnalités d’un <xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer?displayProperty=nameWithType> dont la valeur est un des éléments exposés par la <xref:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton?displayProperty=nameWithType> classe. Pour plus d’informations, consultez [rendu des contrôles avec les Styles visuels](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un contrôle personnalisé qui utilise le <xref:System.Windows.Forms.ButtonRenderer.DrawButton%2A> méthode pour dessiner un bouton. Lorsque le bouton est activé, le contrôle dessine un bouton plus petit dans les limites du bouton d’origine, et le contrôle utilise la <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> méthode pour peindre le reste du bouton d’origine.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
    <altmember cref="P:System.Windows.Forms.Application.RenderWithVisualStyles" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" />
    <altmember cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawButton">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dessine un contrôle bouton.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawButton (g As Graphics, bounds As Rectangle, state As PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawButton (g As Graphics, bounds As Rectangle, focused As Boolean, state As PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> à dessiner sur le bouton.</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> qui représente les dimensions de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec l'image spécifiée et un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> à dessiner sur le bouton.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à appliquer aux <paramref name="buttonText" />.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec le texte spécifié et un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.ButtonRenderer.DrawButton%28System.Drawing.Graphics%2CSystem.Drawing.Rectangle%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Boolean%2CSystem.Windows.Forms.VisualStyles.PushButtonState%29> méthode dans un contrôle personnalisé <xref:System.Windows.Forms.Control.OnPaint%2A> méthode pour dessiner un bouton dans l’état déterminé par l’emplacement du pointeur de la souris. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ButtonRenderer> classe.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, flags, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> à dessiner sur le bouton.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à appliquer aux <paramref name="buttonText" />.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TextFormatFlags" /> à appliquer à <paramref name="buttonText" />.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec le texte et la mise en forme du texte spécifiés et un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> à dessiner sur le bouton.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à appliquer aux <paramref name="buttonText" />.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> à dessiner sur le bouton.</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> qui représente les dimensions de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec le texte et l'image spécifiés et un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawButton">
      <MemberSignature Language="C#" Value="public static void DrawButton (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, string buttonText, System.Drawing.Font font, System.Windows.Forms.TextFormatFlags flags, System.Drawing.Image image, System.Drawing.Rectangle imageBounds, bool focused, System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawButton(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, string buttonText, class System.Drawing.Font font, valuetype System.Windows.Forms.TextFormatFlags flags, class System.Drawing.Image image, valuetype System.Drawing.Rectangle imageBounds, bool focused, valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Font,System.Windows.Forms.TextFormatFlags,System.Drawing.Image,System.Drawing.Rectangle,System.Boolean,System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawButton(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::String ^ buttonText, System::Drawing::Font ^ font, System::Windows::Forms::TextFormatFlags flags, System::Drawing::Image ^ image, System::Drawing::Rectangle imageBounds, bool focused, System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member DrawButton : System.Drawing.Graphics * System.Drawing.Rectangle * string * System.Drawing.Font * System.Windows.Forms.TextFormatFlags * System.Drawing.Image * System.Drawing.Rectangle * bool * System.Windows.Forms.VisualStyles.PushButtonState -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawButton (g, bounds, buttonText, font, flags, image, imageBounds, focused, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="buttonText" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="imageBounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="focused" Type="System.Boolean" />
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner le bouton.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> qui spécifie les limites du bouton.</param>
        <param name="buttonText">
          <see cref="T:System.String" /> à dessiner sur le bouton.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" /> à appliquer aux <paramref name="buttonText" />.</param>
        <param name="flags">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.TextFormatFlags" /> à appliquer à <paramref name="buttonText" />.</param>
        <param name="image">
          <see cref="T:System.Drawing.Image" /> à dessiner sur le bouton.</param>
        <param name="imageBounds">
          <see cref="T:System.Drawing.Rectangle" /> qui représente les dimensions de <paramref name="image" />.</param>
        <param name="focused">
          <see langword="true" /> pour dessiner un rectangle de focus sur le bouton ; sinon <see langword="false" />.</param>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Dessine un contrôle bouton dans l'état et les limites spécifiés, avec le texte, la mise en forme du texte et l'image spécifiés et un rectangle de focus facultatif.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si les styles visuels sont activés dans le système d’exploitation et les styles visuels sont appliqués à l’application actuelle, cette méthode dessine le bouton avec le style visuel actuel. Sinon, il dessine le bouton avec le style Windows classique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawParentBackground">
      <MemberSignature Language="C#" Value="public static void DrawParentBackground (System.Drawing.Graphics g, System.Drawing.Rectangle bounds, System.Windows.Forms.Control childControl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawParentBackground(class System.Drawing.Graphics g, valuetype System.Drawing.Rectangle bounds, class System.Windows.Forms.Control childControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.DrawParentBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DrawParentBackground (g As Graphics, bounds As Rectangle, childControl As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawParentBackground(System::Drawing::Graphics ^ g, System::Drawing::Rectangle bounds, System::Windows::Forms::Control ^ childControl);" />
      <MemberSignature Language="F#" Value="static member DrawParentBackground : System.Drawing.Graphics * System.Drawing.Rectangle * System.Windows.Forms.Control -&gt; unit" Usage="System.Windows.Forms.ButtonRenderer.DrawParentBackground (g, bounds, childControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="childControl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="g">
          <see cref="T:System.Drawing.Graphics" /> utilisé pour dessiner l'arrière-plan du parent de <paramref name="childControl" />.</param>
        <param name="bounds">
          <see cref="T:System.Drawing.Rectangle" /> dans lequel dessiner l'arrière-plan du contrôle parent. Ce rectangle doit se trouver à l’intérieur des limites du contrôle enfant.</param>
        <param name="childControl">Le contrôle dont l'arrière-plan du parent sera dessiné.</param>
        <summary>Dessine l’arrière-plan du parent d’un contrôle dans la zone spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.ButtonRenderer.DrawParentBackground%2A> méthode à peindre une zone d’un contrôle personnalisé. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Windows.Forms.ButtonRenderer> classe.  
  
 [!code-cpp[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/cpp/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ButtonRenderer#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ButtonRenderer/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackgroundPartiallyTransparent">
      <MemberSignature Language="C#" Value="public static bool IsBackgroundPartiallyTransparent (System.Windows.Forms.VisualStyles.PushButtonState state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBackgroundPartiallyTransparent(valuetype System.Windows.Forms.VisualStyles.PushButtonState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent(System.Windows.Forms.VisualStyles.PushButtonState)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBackgroundPartiallyTransparent (state As PushButtonState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBackgroundPartiallyTransparent(System::Windows::Forms::VisualStyles::PushButtonState state);" />
      <MemberSignature Language="F#" Value="static member IsBackgroundPartiallyTransparent : System.Windows.Forms.VisualStyles.PushButtonState -&gt; bool" Usage="System.Windows.Forms.ButtonRenderer.IsBackgroundPartiallyTransparent state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Forms.VisualStyles.PushButtonState" />
      </Parameters>
      <Docs>
        <param name="state">Une des valeurs <see cref="T:System.Windows.Forms.VisualStyles.PushButtonState" /> qui spécifie l'état visuel du bouton.</param>
        <summary>Indique si l'arrière-plan du bouton possède des parties translucides ou à contrôle alpha.</summary>
        <returns>
          <see langword="true" /> si l'arrière-plan du bouton possède des parties translucides ou à contrôle alpha ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMatchingApplicationState">
      <MemberSignature Language="C#" Value="public static bool RenderMatchingApplicationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RenderMatchingApplicationState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenderMatchingApplicationState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RenderMatchingApplicationState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMatchingApplicationState : bool with get, set" Usage="System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le convertisseur utilise l'état de l'application pour déterminer le style de rendu.</summary>
        <value>
          <see langword="true" /> si l'état de l'application est utilisé pour déterminer le style de rendu ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> propriété est `true`, le <xref:System.Windows.Forms.ButtonRenderer> utilise le paramètre de la <xref:System.Windows.Forms.Application.RenderWithVisualStyles%2A?displayProperty=nameWithType> propriété afin de déterminer le style de rendu. Si <xref:System.Windows.Forms.ButtonRenderer.RenderMatchingApplicationState%2A> est `false`, le convertisseur générera toujours le rendu à l’aide de styles visuels.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>