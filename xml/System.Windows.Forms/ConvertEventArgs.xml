<Type Name="ConvertEventArgs" FullName="System.Windows.Forms.ConvertEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76dc1d62b4fc510b970922804353c9904fc807e8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39876692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConvertEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ConvertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ConvertEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConvertEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ConvertEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour les événements <see cref="E:System.Windows.Forms.Binding.Format" /> et <see cref="E:System.Windows.Forms.Binding.Parse" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ConvertEventArgs> est utilisé pour mettre en forme et annuler la mise en forme les valeurs affichées par un contrôle Windows Forms qui est lié aux données via un <xref:System.Windows.Forms.Binding> objet. Le <xref:System.Windows.Forms.Binding.Format> événement se produit chaque fois qu’une propriété de contrôle est liée à une valeur et le <xref:System.Windows.Forms.Binding.Parse> événement se produit chaque fois que la valeur liée change.  
  
 Le <xref:System.Windows.Forms.Binding.Format> et <xref:System.Windows.Forms.Binding.Parse> événements vous autorisent à créer des formats personnalisés pour afficher les données. Par exemple, si les données dans une table sont de type <xref:System.Decimal>, vous pouvez spécifier que les données doivent être affichées dans le format de devise locale en définissant le <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propriété de la <xref:System.Windows.Forms.ConvertEventArgs> à la valeur mise en forme dans le <xref:System.Windows.Forms.Binding.Format> événement. Vous devez par conséquent annuler mise en forme la valeur affichée dans le <xref:System.Windows.Forms.Binding.Parse> événement.  
  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.Binding>, ajoute un <xref:System.Windows.Forms.ConvertEventHandler> délégué à la fois à la <xref:System.Windows.Forms.Binding.Parse> et <xref:System.Windows.Forms.Binding.Format> événements et utilise le <xref:System.Windows.Forms.Control.DataBindings%2A> propriété à ajouter le <xref:System.Windows.Forms.Binding> à la <xref:System.Windows.Forms.BindingsCollection> d’un <xref:System.Windows.Forms.TextBox> contrôle. Le `DecimalToCurrencyString` délégué d’événement est ajouté à la <xref:System.Windows.Forms.Binding.Format> événement, utilise le <xref:System.Decimal.ToString%2A> méthode pour mettre en forme la valeur liée (un <xref:System.Decimal> type) en tant que devises. Le `CurrencyStringToDecimal` délégué d’événement est ajouté à la <xref:System.Windows.Forms.Binding.Parse> événement, convertit la valeur affichée par le contrôle vers le <xref:System.Decimal> type.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Binding" />
    <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
    <altmember cref="T:System.Windows.Forms.BindingsCollection" />
    <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConvertEventArgs (object value, Type desiredType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value, class System.Type desiredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ConvertEventArgs.#ctor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object, desiredType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConvertEventArgs(System::Object ^ value, Type ^ desiredType);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ConvertEventArgs : obj * Type -&gt; System.Windows.Forms.ConvertEventArgs" Usage="new System.Windows.Forms.ConvertEventArgs (value, desiredType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="desiredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Object" /> qui contient la valeur de la propriété en cours.</param>
        <param name="desiredType">
          <see cref="T:System.Type" /> de la valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredType">
      <MemberSignature Language="C#" Value="public Type DesiredType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DesiredType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DesiredType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredType : Type" Usage="System.Windows.Forms.ConvertEventArgs.DesiredType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de données de la valeur souhaitée.</summary>
        <value>
          <see cref="T:System.Type" /> de la valeur souhaitée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> propriété vous permet de vérifier le type de la propriété la valeur est convertie en.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> propriété afin de déterminer si la conversion d’un type vers un autre peut être effectuée. Le `DecimalToCurrencyString` méthode tests si le <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> est une chaîne. Si ce n’est pas le cas, le code quitte la méthode. De même, le `CurrencyStringToDecimal` méthode tests si le <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> est un <xref:System.Decimal>et s’arrête si elle n’est pas `true`.  
  
 [!code-cpp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs.DesiredType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs.DesiredType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Forms.ConvertEventArgs.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</summary>
        <value>Valeur de <see cref="T:System.Windows.Forms.ConvertEventArgs" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur contenue dans le <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propriété dépend de l’événement dans lequel le <xref:System.Windows.Forms.ConvertEventArgs> est retourné. Le <xref:System.Windows.Forms.ConvertEventArgs> peut être retourné dans le <xref:System.Windows.Forms.Binding.Format> événement ou la <xref:System.Windows.Forms.Binding.Parse> événement.  
  
 Lorsque le <xref:System.Windows.Forms.ConvertEventArgs> est retourné dans le <xref:System.Windows.Forms.Binding.Format> événement, le <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propriété contient la valeur de propriété non mise en forme de la source de données. Dans le <xref:System.Windows.Forms.Binding.Format> événement, vous pouvez lire la valeur de propriété, la valeur de format et réinitialiser le <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> propriété sur la nouvelle valeur (mise en forme), définissant ainsi la valeur affichée dans le contrôle lié aux données.  
  
 Lorsque le <xref:System.Windows.Forms.ConvertEventArgs> est retourné dans le <xref:System.Windows.Forms.Binding.Parse> événement, la propriété contient la valeur mise en forme personnalisée du contrôle lié aux données. Dans le <xref:System.Windows.Forms.Binding.Parse> événement, vous devez lire la valeur mise en forme, analyser et convertir vers le même type de données comme source de données. Vous pouvez ensuite réinitialiser la <xref:System.Windows.Forms.ConvertEventArgs.Value%2A> la non mise en forme à la propriété valeur, de façon à définir la valeur de la source de données. Pour déterminer le type de la source de données, examinez le <xref:System.Windows.Forms.ConvertEventArgs.DesiredType%2A> valeur de propriété.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.Binding>, ajoute un <xref:System.Windows.Forms.ConvertEventHandler> délégué à la fois à la <xref:System.Windows.Forms.Binding.Parse> et <xref:System.Windows.Forms.Binding.Format> événements et utilise le <xref:System.Windows.Forms.Control.DataBindings%2A> propriété à ajouter le <xref:System.Windows.Forms.Binding> à la <xref:System.Windows.Forms.BindingsCollection> d’un <xref:System.Windows.Forms.TextBox> contrôle. Le `DecimalToCurrencyString` délégué d’événement est ajouté à la <xref:System.Windows.Forms.Binding.Format> événement, utilise le <xref:System.Decimal.ToString%2A> méthode pour mettre en forme la valeur liée (un <xref:System.Decimal> type) en tant que devises. Le `CurrencyStringToDecimal` délégué d’événement est ajouté à la <xref:System.Windows.Forms.Binding.Parse> événement, convertit la valeur affichée par le contrôle vers le <xref:System.Decimal> type.  
  
 [!code-cpp[Classic ConvertEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ConvertEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ConvertEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic ConvertEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ConvertEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
      </Docs>
    </Member>
  </Members>
</Type>