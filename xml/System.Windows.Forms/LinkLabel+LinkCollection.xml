<Type Name="LinkLabel+LinkCollection" FullName="System.Windows.Forms.LinkLabel+LinkCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10be778f6ed9e13c07f8df19273a4d5d79412d11" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331686" /></Metadata><TypeSignature Language="C#" Value="public class LinkLabel.LinkCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LinkLabel/LinkCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkLabel.LinkCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LinkLabel::LinkCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type LinkLabel.LinkCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente la collection de liens dans un contrôle <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.LinkLabel.LinkCollection> classe stocke le lien affiché dans le <xref:System.Windows.Forms.LinkLabel> contrôle. Chaque élément dans la collection est une instance de la <xref:System.Windows.Forms.LinkLabel.Link> (classe), qui définit les informations du lien.  
  
 Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> méthode offre la possibilité d’ajouter un seul <xref:System.Windows.Forms.LinkLabel.Link> à la collection. Pour supprimer des liens, vous pouvez utiliser la <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> méthode ou le <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> méthode si vous savez où se trouve le lien dans la collection. Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> méthode vous permet de supprimer tous les liens de la collection au lieu d’utiliser le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> méthode pour supprimer un seul lien à la fois.  
  
 En plus des méthodes et propriétés pour ajouter et supprimer des éléments, le <xref:System.Windows.Forms.LinkLabel.LinkCollection> fournit également des méthodes pour rechercher des liens dans la collection. Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> méthode vous permet de déterminer si un <xref:System.Windows.Forms.LinkLabel.Link> est un membre de la collection. Une fois que vous savez que le lien est situé dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> méthode pour déterminer où se trouve le lien dans la collection.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkCollection (System.Windows.Forms.LinkLabel owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.LinkLabel owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.#ctor(System.Windows.Forms.LinkLabel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As LinkLabel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkCollection(System::Windows::Forms::LinkLabel ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.LinkLabel.LinkCollection : System.Windows.Forms.LinkLabel -&gt; System.Windows.Forms.LinkLabel.LinkCollection" Usage="new System.Windows.Forms.LinkLabel.LinkCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.LinkLabel" />
      </Parameters>
      <Docs>
        <param name="owner">Contrôle <see cref="T:System.Windows.Forms.LinkLabel" /> auquel appartient la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une instance de cette classe ne peut pas être créée sans être associée avec un <xref:System.Windows.Forms.LinkLabel> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un lien à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.LinkLabel.Link value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.LinkLabel/Link value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As LinkLabel.Link) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::LinkLabel::Link ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.LinkLabel.Link -&gt; int" Usage="linkCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien à ajouter.</param>
        <summary>Ajoute un lien avec la valeur spécifiée à la collection.</summary>
        <returns>Index de base zéro où le lien spécifié par le paramètre <paramref name="value" /> est situé dans la collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.Link Add (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.LinkLabel/Link Add(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (start As Integer, length As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::LinkLabel::Link ^ Add(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Add : int * int -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkCollection.Add (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Caractère de début dans le texte de l'étiquette dans lequel le lien est créé.</param>
        <param name="length">Nombre de caractères, après le caractère de début, à inclure dans le texte de lien.</param>
        <summary>Ajoute un lien à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien créé et ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.LinkLabel> contrôle peut afficher plusieurs liens dans le texte du contrôle. Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> méthode vous permet de convertir le texte dans le <xref:System.Windows.Forms.LinkLabel> contrôle à un lien qui peut être sélectionné par l’utilisateur d’effectuer des tâches similaires à un <xref:System.Windows.Forms.Button> contrôle. Cette méthode ajoute le lien est créé pour le <xref:System.Windows.Forms.LinkLabel.LinkCollection> pour le <xref:System.Windows.Forms.LinkLabel>. Par exemple, si vous souhaitez définir le mot « rapide » dans le texte d’étiquette, « Le renard brun rapide », vous appelez cette méthode avec le `start` paramètre défini sur la valeur de quatre (4) et le `length` paramètre à cinq (5). Le mot « rapide » passe ensuite à un lien et le lien est ajouté à la collection. Si vous souhaitez associer des informations au lien, telles que l’URL à afficher ou un fichier à ouvrir lorsque l’utilisateur clique sur le lien, utilisez l’autre version de la <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> (méthode).  
  
> [!NOTE]
>  Deux liens ne peuvent pas partager le même texte. Si vous créez un lien qui utilise du texte qui est déjà utilisé par un autre lien, une exception est levée.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir le <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> à l’aide de la propriété du <xref:System.Windows.Forms.LinkBehavior> énumération. Il montre également comment définir le <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.Text%2A> et <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> propriétés et l’ajout d’éléments à un <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Pour exécuter cet exemple, collez-le dans un formulaire vide et appelez `InitializeLinkLabel` à partir du constructeur du formulaire ou `Load` (méthode).  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.LinkLabel.Link Add (int start, int length, object linkData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.LinkLabel/Link Add(int32 start, int32 length, object linkData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Add(System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (start As Integer, length As Integer, linkData As Object) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::LinkLabel::Link ^ Add(int start, int length, System::Object ^ linkData);" />
      <MemberSignature Language="F#" Value="member this.Add : int * int * obj -&gt; System.Windows.Forms.LinkLabel.Link" Usage="linkCollection.Add (start, length, linkData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="linkData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="start">Caractère de début dans le texte de l'étiquette dans lequel le lien est créé.</param>
        <param name="length">Nombre de caractères, après le caractère de début, à inclure dans le texte de lien.</param>
        <param name="linkData">Objet contenant les informations à associer au lien.</param>
        <summary>Ajoute un lien à la collection avec les informations associées au lien.</summary>
        <returns><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien créé et ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.LinkLabel> contrôle peut afficher plusieurs liens dans le texte du contrôle. Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> méthode vous permet de convertir le texte dans le <xref:System.Windows.Forms.LinkLabel> contrôle à un lien qui peut être sélectionné par l’utilisateur d’effectuer des tâches similaires à un <xref:System.Windows.Forms.Button> contrôle. Cette méthode ajoute le lien est créé pour le <xref:System.Windows.Forms.LinkLabel.LinkCollection> pour le <xref:System.Windows.Forms.LinkLabel>. Par exemple, si vous souhaitez définir le mot « rapide » dans le texte d’étiquette, « Le renard brun rapide », vous appelez cette méthode avec le `start` paramètre défini sur la valeur de quatre (4) et le `length` paramètre à cinq (5). Le mot « rapide » passe ensuite à un lien et le lien est ajouté à la collection. Cette version de la méthode Add vous permet de fournir des informations supplémentaires qui peuvent être associées à la liaison via le `linkData` paramètre. Par exemple, vous pouvez passer un <xref:System.String> à la `linkData` paramètre qui contient une URL à afficher lorsque l’utilisateur clique sur le lien. Vous pouvez ensuite utiliser ces informations dans votre gestionnaire pour le <xref:System.Windows.Forms.LinkLabel.LinkClicked> événements de la <xref:System.Windows.Forms.LinkLabel> contrôle pour afficher l’URL dans Microsoft Internet Explorer.  
  
> [!NOTE]
>  Deux liens ne peuvent pas partager le même texte. Si vous créez un lien qui utilise du texte qui est déjà utilisé par un autre lien, une exception est levée.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.LinkLabel> contrôle qui affiche un lien et affiche le site Web Microsoft dans le navigateur par défaut lorsque l’utilisateur clique sur le lien défini dans le texte du contrôle. L’exemple définit une méthode qui initialise le <xref:System.Windows.Forms.LinkLabel> contrôler, ainsi que d’une méthode qui gérera le <xref:System.Windows.Forms.LinkLabel.LinkClicked> événement du contrôle. Le Gestionnaire d’événements de la <xref:System.Windows.Forms.LinkLabel.LinkClicked> événement utilise la <xref:System.Windows.Forms.LinkLabel.Link.LinkData%2A> propriété de la <xref:System.Windows.Forms.LinkLabel.Link> classe pour déterminer l’URL à afficher dans le navigateur par défaut. Cet exemple suppose qu’il se trouve dans un <xref:System.Windows.Forms.Form> classe.  
  
 [!code-cpp[LinkLabel Overview#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LinkLabel Overview/CPP/linklabelex.cpp#1)]
 [!code-csharp[LinkLabel Overview#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LinkLabel Overview/CS/linklabelex.cs#1)]
 [!code-vb[LinkLabel Overview#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LinkLabel Overview/VB/linklabelex.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="linkCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface tous les liens de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez des liens à partir de la collection, toutes les informations sur les liens supprimés sont supprimées. Pour supprimer un lien unique à partir de la <xref:System.Windows.Forms.LinkLabel>, utilisez le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> ou <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.LinkLabel.Link link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.LinkLabel/Link link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Contains(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::LinkLabel::Link ^ link);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.LinkLabel.Link -&gt; bool" Usage="linkCollection.Contains link" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien à rechercher dans la collection.</param>
        <summary>Détermine si le lien spécifié réside dans la collection.</summary>
        <returns><see langword="true" /> si le lien spécifié est situé dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> méthode vous permet de déterminer si un <xref:System.Windows.Forms.LinkLabel.Link> est un membre de la collection. Une fois que vous savez que le lien est situé dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> méthode pour déterminer où se trouve le lien dans la collection.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="linkCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Lien à rechercher dans la collection.</param>
        <summary>Retourne une valeur indiquant si la collection contient un lien avec la clé spécifiée.</summary>
        <returns><see langword="true" /> si la collection contient un élément avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.LinkLabel.Link> dans le <xref:System.Windows.Forms.LinkLabel.LinkCollection>. La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.LinkLabel.LinkCollection.ContainsKey%2A> retourne `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de liens dans la collection.</summary>
        <value>Nombre de liens dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de déterminer le nombre de liens dans le <xref:System.Windows.Forms.LinkLabel> contrôle. Vous pouvez ensuite utiliser cette valeur lorsque vous en boucle les valeurs de la collection et que vous devez fournir un nombre d’itérations pour exécuter la boucle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="linkCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection de liens.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> qui représente la collection de liens.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.LinkLabel.Link link);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.LinkLabel/Link link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::LinkLabel::Link ^ link);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.LinkLabel.Link -&gt; int" Usage="linkCollection.IndexOf link" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien à rechercher dans la collection.</param>
        <summary>Retourne l'index du lien spécifié dans la collection.</summary>
        <returns>Index de base zéro au niveau duquel le lien est situé dans la collection ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> méthode vous permet de déterminer où se trouve un lien dans la collection. Pour déterminer si un lien est situé dans la collection avant d’appeler cette méthode, utilisez le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Contains%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A> à l’aide de la propriété du <xref:System.Windows.Forms.LinkBehavior> énumération. Il montre également comment définir le <xref:System.Windows.Forms.LinkLabel.ActiveLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.Text%2A> et <xref:System.Windows.Forms.LinkLabel.LinkVisited%2A> propriétés Ajout et l’accès aux liens dans un <xref:System.Windows.Forms.LinkLabel.LinkCollection>. Pour exécuter cet exemple, collez-le dans un formulaire vide et appelez `InitializeLinkLabel` à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabelExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabelExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="linkCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Clé à rechercher dans la collection.</param>
        <summary>Récupère l'index de base zéro de la première occurrence de la clé spécifiée dans toute la collection.</summary>
        <returns>Index de base zéro de la première occurrence de la valeur dans la collection entière, si elle existe ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey%2A> est appelé plusieurs fois, la dernière retournée index est une correspondance de clés d’abord vérifiée, et si aucune correspondance n’est, la recherche commence au début de la collection.  
  
 Le <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.LinkLabel.Link> dans le <xref:System.Windows.Forms.LinkLabel.LinkCollection>. La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOfKey%2A> retourne -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.LinkLabel.LinkCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
        <value><see langword="true" /> si la collection est en lecture seule ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est toujours `false` pour cette collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient un élément de la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.LinkLabel.Link this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/Link Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::LinkLabel::Link ^ default[int] { System::Windows::Forms::LinkLabel::Link ^ get(int index); void set(int index, System::Windows::Forms::LinkLabel::Link ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.LinkLabel.Link with get, set" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index du lien dans la collection à obtenir.</param>
        <summary>Obtient ou définit le lien à l’index spécifié dans la collection.</summary>
        <value>Objet représentant le lien situé à l'index spécifié dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour obtenir le lien stocké à un emplacement spécifique dans la collection. Pour déterminer l’index d’un élément spécifique dans la collection, utilisez la <xref:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur du paramètre <paramref name="index" /> est une valeur négative ou supérieure au nombre d'éléments dans la collection.</exception>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.IndexOf(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Contains(System.Windows.Forms.LinkLabel.Link)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.LinkLabel.Link this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.LinkLabel/Link Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As LinkLabel.Link" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::LinkLabel::Link ^ default[System::String ^] { System::Windows::Forms::LinkLabel::Link ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.LinkLabel.Link" Usage="System.Windows.Forms.LinkLabel.LinkCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LinkLabel+Link</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom du lien à récupérer de la collection.</param>
        <summary>Obtient un lien avec la clé spécifiée de la collection.</summary>
        <value><see cref="T:System.Windows.Forms.LinkLabel.Link" /> avec la clé spécifiée dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.LinkLabel.LinkCollection.Item%2A> retourne `null.`  
  
 Le <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.LinkLabel.Link> dans le <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinksAdded">
      <MemberSignature Language="C#" Value="public bool LinksAdded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinksAdded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.LinksAdded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinksAdded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LinksAdded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.LinksAdded : bool" Usage="System.Windows.Forms.LinkLabel.LinkCollection.LinksAdded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si les liens ont été ajoutés à <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />.</summary>
        <value><see langword="true" /> si les liens ont été ajoutés à <see cref="T:System.Windows.Forms.LinkLabel.LinkCollection" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.LinkLabel.Link value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.LinkLabel/Link value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As LinkLabel.Link)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::LinkLabel::Link ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.LinkLabel.Link -&gt; unit" Usage="linkCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.LinkLabel+Link" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.LinkLabel.Link" /> représentant le lien à supprimer de la collection.</param>
        <summary>Supprime le lien spécifié de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez un lien à partir de la collection, les index de modifier des éléments suivants dans la collection. Toutes les informations sur l’élément supprimé sont supprimées. Vous pouvez utiliser cette méthode pour supprimer un lien spécifique de la collection en spécifiant l’élément à supprimer de la collection. Pour spécifier l’index du lien à supprimer au lieu du lien lui-même, utilisez la <xref:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt%2A> (méthode). Pour supprimer tous les liens de la collection, utilisez la <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="linkCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à supprimer de la collection.</param>
        <summary>Supprime un lien à un emplacement spécifié dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez un lien à partir de la collection, les index de modifier des éléments suivants dans la collection. Toutes les informations sur le lien supprimé sont perdues. Vous pouvez utiliser cette méthode pour supprimer un lien spécifique de la collection en spécifiant l’index du lien à supprimer de la collection. Pour spécifier le lien à supprimer au lieu de l’index du lien, utilisez le <xref:System.Windows.Forms.LinkLabel.LinkCollection.Remove%2A> (méthode). Pour supprimer tous les liens de la collection, utilisez la <xref:System.Windows.Forms.LinkLabel.LinkCollection.Clear%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur du paramètre <paramref name="index" /> est une valeur négative ou supérieure au nombre d'éléments dans la collection.</exception>
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Remove(System.Windows.Forms.LinkLabel.Link)" />
        <altmember cref="M:System.Windows.Forms.LinkLabel.LinkCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="linkCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Clé du lien à supprimer.</param>
        <summary>Supprime le lien avec la clé spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.LinkLabel.Link.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.LinkLabel.Link> dans le <xref:System.Windows.Forms.LinkLabel.LinkCollection>. La comparaison de clé ne respecte pas la casse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir d'<see cref="T:System.Collections.ICollection" />. Le <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</param>
        <param name="index">Index de base zéro dans le <paramref name="dest" /> à partir duquel la copie commence.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value><see langword="true" /> si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé (thread-safe) ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" /> à ajouter dans <see cref="T:System.Collections.IList" />.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Position à laquelle le nouvel élément est inséré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object link);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (link As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ link) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns><see langword="true" /> si <see cref="T:System.Object" /> se trouve dans <see cref="T:System.Collections.IList" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object link);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object link) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (link As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ link) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="link" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="link"><see cref="T:System.Object" /> à rechercher dans <see cref="T:System.Collections.IList" />.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Index du paramètre <paramref name="link" />, si celui-ci est présent dans la liste ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro auquel <paramref name="value" /> doit être inséré.</param>
        <param name="value"><see cref="T:System.Object" /> à insérer dans <see cref="T:System.Collections.IList" />.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value><see langword="true" /> si <see cref="T:System.Collections.IList" /> est de taille fixe ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir ou définir.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Élément situé à l'index spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkLabel.LinkCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" /> à supprimer de <see cref="T:System.Collections.IList" />.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.LinkLabel.LinkCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>