<Type Name="BindingManagerBase" FullName="System.Windows.Forms.BindingManagerBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40d487e63b8c4a75f7fc5c25827c2a3808b40ec0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingManagerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingManagerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.BindingManagerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingManagerBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingManagerBase abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="56a78-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56a78-101">Manages all <see cref="T:System.Windows.Forms.Binding" /> objects that are bound to the same data source and data member.</span>
      </span>
      <span data-ttu-id="56a78-102">This class is abstract.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56a78-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-103">Le <xref:System.Windows.Forms.BindingManagerBase> permet la synchronisation des contrôles liés aux données sur un Windows Form qui sont liés à la même source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-103">The <xref:System.Windows.Forms.BindingManagerBase> enables the synchronization of data-bound controls on a Windows Form that are bound to the same data source.</span></span> <span data-ttu-id="56a78-104">(Pour plus d’informations sur la liaison d’un contrôle à une source de données simple, consultez la <xref:System.Windows.Forms.Binding> classe.) Par exemple, supposons qu’un formulaire contienne deux <xref:System.Windows.Forms.TextBox> contrôles qui sont liés à la même source de données mais à des colonnes différentes.</span><span class="sxs-lookup"><span data-stu-id="56a78-104">(For more information about simple binding a control to a data source, see the <xref:System.Windows.Forms.Binding> class.) For example, suppose that a form contains two <xref:System.Windows.Forms.TextBox> controls that are bound to the same data source but to different columns.</span></span> <span data-ttu-id="56a78-105">La source de données peut être un <xref:System.Data.DataTable> qui contient les noms des clients, tandis que les colonnes peuvent contenir le nom et prénom.</span><span class="sxs-lookup"><span data-stu-id="56a78-105">The data source might be a <xref:System.Data.DataTable> that contains customer names, while the columns might contain the first and last names.</span></span> <span data-ttu-id="56a78-106">Les deux contrôles doivent être synchronisées afin d’afficher le prénom et le nom correct pour le même client.</span><span class="sxs-lookup"><span data-stu-id="56a78-106">The two controls must be synchronized in order to display the correct first and last names together for the same customer.</span></span> <span data-ttu-id="56a78-107">Le <xref:System.Windows.Forms.CurrencyManager>, qui hérite de la <xref:System.Windows.Forms.BindingManagerBase> de classe, réalise cette synchronisation en maintenant un pointeur vers l’élément actuel dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-107">The <xref:System.Windows.Forms.CurrencyManager>, which inherits from the <xref:System.Windows.Forms.BindingManagerBase> class, accomplishes this synchronization by maintaining a pointer to the current item in the data source.</span></span> <span data-ttu-id="56a78-108">Le <xref:System.Windows.Forms.TextBox> contrôles sont liés à l’élément actuel afin qu’ils affichent les informations pour la même ligne.</span><span class="sxs-lookup"><span data-stu-id="56a78-108">The <xref:System.Windows.Forms.TextBox> controls are bound to the current item so they display the information for the same row.</span></span> <span data-ttu-id="56a78-109">Lorsque l’élément actuel change, la <xref:System.Windows.Forms.CurrencyManager> avertit tous les contrôles liés de sorte qu’ils puissent actualiser leurs données.</span><span class="sxs-lookup"><span data-stu-id="56a78-109">When the current item changes, the <xref:System.Windows.Forms.CurrencyManager> notifies all the bound controls so that they can refresh their data.</span></span> <span data-ttu-id="56a78-110">En outre, vous pouvez définir le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété pour spécifier la ligne dans le <xref:System.Data.DataTable> qui les contrôles pointent vers.</span><span class="sxs-lookup"><span data-stu-id="56a78-110">Furthermore, you can set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to specify the row in the <xref:System.Data.DataTable> that the controls point to.</span></span> <span data-ttu-id="56a78-111">Pour déterminer le nombre de lignes dans la source de données, utilisez le <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="56a78-111">To determine how many rows exist in the data source, use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 <span data-ttu-id="56a78-112">Le <xref:System.Windows.Forms.CurrencyManager> est nécessaire, car les sources de données ne gèrent pas nécessairement un pointeur d’élément en cours.</span><span class="sxs-lookup"><span data-stu-id="56a78-112">The <xref:System.Windows.Forms.CurrencyManager> is necessary because data sources do not necessarily maintain a current-item pointer.</span></span> <span data-ttu-id="56a78-113">Par exemple, les tableaux et <xref:System.Collections.ArrayList> objets peuvent être des sources de données, mais ils n’ont pas d’une propriété qui retourne l’élément actuel.</span><span class="sxs-lookup"><span data-stu-id="56a78-113">For instance, arrays and <xref:System.Collections.ArrayList> objects can be data sources, but they do not have a property that returns the current item.</span></span> <span data-ttu-id="56a78-114">Pour obtenir l’élément actuel, utilisez le <xref:System.Windows.Forms.BindingManagerBase.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="56a78-114">To get the current item, use the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property.</span></span>  
  
 <span data-ttu-id="56a78-115">Le <xref:System.Windows.Forms.PropertyManager> hérite également de la <xref:System.Windows.Forms.BindingManagerBase>, et il est utilisé pour mettre à jour la propriété actuelle d’un objet, plutôt que la propriété d’un objet en cours dans une source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-115">The <xref:System.Windows.Forms.PropertyManager> also inherits from the <xref:System.Windows.Forms.BindingManagerBase>, and it is used to maintain the current property of an object, rather than the property of a current object in a data source.</span></span> <span data-ttu-id="56a78-116">Pour cette raison, la tentative de définition du <xref:System.Windows.Forms.BindingManagerBase.Position%2A> ou <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété pour un <xref:System.Windows.Forms.PropertyManager> n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="56a78-116">For this reason, trying to set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> or <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property for a <xref:System.Windows.Forms.PropertyManager> has no effect.</span></span>  
  
 <span data-ttu-id="56a78-117">Pour créer un <xref:System.Windows.Forms.BindingManagerBase>, utilisez le <xref:System.Windows.Forms.BindingContext> (classe), qui retourne un <xref:System.Windows.Forms.CurrencyManager> ou un <xref:System.Windows.Forms.PropertyManager>, en fonction de la source de données qui est gérée.</span><span class="sxs-lookup"><span data-stu-id="56a78-117">To create a <xref:System.Windows.Forms.BindingManagerBase>, use the <xref:System.Windows.Forms.BindingContext> class, which returns either a <xref:System.Windows.Forms.CurrencyManager> or a <xref:System.Windows.Forms.PropertyManager>, depending on the data source being managed.</span></span>  
  
 <span data-ttu-id="56a78-118">Les programmeurs de solutions sont encouragés à lier les contrôles directement à un <xref:System.Windows.Forms.BindingSource> composant, qui agit comme une source de données et le connecteur de données à la source de données cible réelle.</span><span class="sxs-lookup"><span data-stu-id="56a78-118">Solutions programmers are encouraged to bind controls directly to a <xref:System.Windows.Forms.BindingSource> component, which acts as both a data source and data connector to the actual target data source.</span></span> <span data-ttu-id="56a78-119"><xref:System.Windows.Forms.BindingSource> simplifie considérablement la liaison de données simple et complexe, y compris la gestion de devise entre le contrôle et sa cible.</span><span class="sxs-lookup"><span data-stu-id="56a78-119"><xref:System.Windows.Forms.BindingSource> greatly simplifies both simple and complex data binding, including managing currency between the control and its target.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-120">Le code suivant exemple utilise le <xref:System.Windows.Forms.BindingContext> pour retourner un <xref:System.Windows.Forms.BindingManagerBase> pour une source de données spécifique.</span><span class="sxs-lookup"><span data-stu-id="56a78-120">The following code example uses the <xref:System.Windows.Forms.BindingContext> to return a <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="56a78-121">(L’exemple suppose que vous avez déclaré `myBindingManagerBase` dans la section Déclarations du module.) L’exemple ajoute ensuite des délégués d’événement à la <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> et <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> les événements.</span><span class="sxs-lookup"><span data-stu-id="56a78-121">(The example assumes you have declared `myBindingManagerBase` in the Declarations section of the module.) The example then adds event delegates to the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> and <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> events.</span></span> <span data-ttu-id="56a78-122">Enfin, l’exemple contient quatre méthodes (`MoveNext`, `MovePrevious`, `MoveFirst`, et `MoveLast`) qui incrémentent ou décrémentent la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété et définissez la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> à la première ou dernière ligne dans la liste.</span><span class="sxs-lookup"><span data-stu-id="56a78-122">Lastly, the example contains four methods (`MoveNext`, `MovePrevious`, `MoveFirst`, and `MoveLast`) that increment or decrement the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property, and set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the first or last row in the list.</span></span> <span data-ttu-id="56a78-123">La dernière ligne dans la liste est déterminée à l’aide de la <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="56a78-123">The last row in the list is determined by using the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="56a78-124">Lorsque vous héritez de <see cref="T:System.Windows.Forms.BindingManagerBase" />, vous devez substituer les membres abstraits suivants : <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" /> , <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, et <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="56a78-124">When you inherit from <see cref="T:System.Windows.Forms.BindingManagerBase" />, you must override the following abstract members: <see cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Count" />, <see cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Current" />, <see cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />, <see cref="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />, <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />, <see cref="P:System.Windows.Forms.BindingManagerBase.Position" />, <see cref="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />, <see cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />, <see cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />, and <see cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.Forms.BindingSource" />
    <altmember cref="T:System.Windows.Forms.BindingContext" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.Windows.Forms.PropertyManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingManagerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingManagerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-125">Initializes a new instance of the <see cref="T:System.Windows.Forms.BindingManagerBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-126">Le constructeur par défaut affecte la <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> propriété `null`.</span><span class="sxs-lookup"><span data-stu-id="56a78-126">The default constructor sets the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public abstract void AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNew();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-127">When overridden in a derived class, adds a new item to the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-127">When overridden in a derived class, adds a new item to the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-128">Le <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> méthode ajoute un nouvel élément à la liste sous-jacente à l’aide du constructeur par défaut pour le type de cet élément.</span><span class="sxs-lookup"><span data-stu-id="56a78-128">The <xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> method adds a new item to the underlying list by using the default constructor for that item's type.</span></span> <span data-ttu-id="56a78-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> vise principalement à être utilisé par les programmeurs ajoutant la prise en charge de liaison de données complexe à leur composant personnalisé.</span><span class="sxs-lookup"><span data-stu-id="56a78-129"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is intended primarily to be used by programmers adding complex data-binding support to their custom component.</span></span>  
  
 <span data-ttu-id="56a78-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> est généralement implémenté à l’aide du modèle suivant qui permet aux programmeurs d’application d’injecter leur propre code pour créer des éléments personnalisés :</span><span class="sxs-lookup"><span data-stu-id="56a78-130"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> is commonly implemented using the following pattern that allows application programmers to inject their own code for creating customized items:</span></span>  
  
1.  <span data-ttu-id="56a78-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> déclenche l'événement <xref:System.Windows.Forms.BindingSource.AddingNew>.</span><span class="sxs-lookup"><span data-stu-id="56a78-131"><xref:System.Windows.Forms.BindingManagerBase.AddNew%2A> raises the <xref:System.Windows.Forms.BindingSource.AddingNew> event.</span></span>  
  
2.  <span data-ttu-id="56a78-132">Le programmeur peut fournir un élément personnalisé en gérant la <xref:System.Windows.Forms.BindingSource.AddingNew> événement et en définissant le <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> propriété de le <xref:System.ComponentModel.AddingNewEventArgs> paramètre vers le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="56a78-132">The programmer can supply a custom item by handling the <xref:System.Windows.Forms.BindingSource.AddingNew> event and setting the <xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A> property of the <xref:System.ComponentModel.AddingNewEventArgs> parameter to the new item.</span></span> <span data-ttu-id="56a78-133">Sinon, le composant doit créer un élément à l’aide du constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="56a78-133">Otherwise, the component should create an item using the default constructor.</span></span>  
  
3.  <span data-ttu-id="56a78-134">Si la source de données n’implémente pas le <xref:System.ComponentModel.IEditableObject> interface, l’élément est ajouté immédiatement à la source de données et de la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="56a78-134">If the data source does not implement the <xref:System.ComponentModel.IEditableObject> interface, the item is immediately added to the data source and underlying list.</span></span> <span data-ttu-id="56a78-135">Si cette interface est prise en charge, l’addition est traitée par le <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> et <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="56a78-135">If this interface is supported, then the addition is transacted by the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.AddingNewEventArgs.NewObject" />
        <altmember cref="T:System.ComponentModel.AddingNewEventArgs" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      </Docs>
    </Member>
    <Member MemberName="BindingComplete">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingCompleteEventHandler BindingComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingCompleteEventHandler BindingComplete" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingComplete As BindingCompleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingCompleteEventHandler ^ BindingComplete;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingCompleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-136">Occurs at the completion of a data-binding operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-136">Occurs at the completion of a data-binding operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-137">Le <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement se produit après l’exécution d’une opération de liaison de données, ce qui peut inclure les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="56a78-137">The <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event occurs after the completion of a data-binding operation, which may include the following:</span></span>  
  
-   <span data-ttu-id="56a78-138">Transmettre des informations à partir de la source de données à la propriété de son contrôle lié.</span><span class="sxs-lookup"><span data-stu-id="56a78-138">Pushing information from the data source into the property of its bound control.</span></span>  
  
-   <span data-ttu-id="56a78-139">Extraction des informations d’un contrôle lié à sa source de données associée.</span><span class="sxs-lookup"><span data-stu-id="56a78-139">Pulling information from a bound control into its associated data source.</span></span>  
  
 <span data-ttu-id="56a78-140">Notez que cet événement est déclenché, quelle que soit l’état d’achèvement de l’opération de liaison, bien que cet état peut être déterminé en examinant la <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> propriété de le <xref:System.Windows.Forms.BindingCompleteEventArgs> paramètre associé à l’événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-140">Note that this event is raised regardless of the completion status of the binding operation, although this status can be determined by examining the <xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A> property of the <xref:System.Windows.Forms.BindingCompleteEventArgs> parameter associated with the event.</span></span> <span data-ttu-id="56a78-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> peut également contenir des informations d’erreur et d’exception.</span><span class="sxs-lookup"><span data-stu-id="56a78-141"><xref:System.Windows.Forms.BindingCompleteEventArgs> may also contain error and exception information.</span></span> <span data-ttu-id="56a78-142">Par exemple, une opération de liaison qui tente de pousser une valeur null à partir d’une source de données dans un <xref:System.Windows.Forms.DateTimePicker> contrôle générera une exception, car un <xref:System.DateTime> ne peut pas être `null`.</span><span class="sxs-lookup"><span data-stu-id="56a78-142">For example, a binding operation that attempts to push a null value from a data source into a <xref:System.Windows.Forms.DateTimePicker> control will generate an exception, since a <xref:System.DateTime> cannot be `null`.</span></span> <span data-ttu-id="56a78-143">Dans ce cas, bien que l’opération de liaison ne se termine pas correctement, le <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement est déclenché, et l’événement contient des informations sur la tentative de liaison a échoué.</span><span class="sxs-lookup"><span data-stu-id="56a78-143">In this case, although the binding operation does not successfully complete, the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event will be raised, and the event will contain information on the failed binding attempt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-144">L’exemple de code suivant montre comment gérer les <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> événement et garantir que plusieurs contrôles liés à la même source de données restent synchronisés lorsque l’une des valeurs de contrôle est modifiée.</span><span class="sxs-lookup"><span data-stu-id="56a78-144">The following code example demonstrates how to handle the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and ensure multiple controls bound to the same data source remain synchronized when one of the control values is changed.</span></span> <span data-ttu-id="56a78-145">Pour exécuter cet exemple, collez le code dans un Windows Form et appelez le `InitializeControlsAndData` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion d’événements.</span><span class="sxs-lookup"><span data-stu-id="56a78-145">To run this example, paste the code into a Windows Form and call the `InitializeControlsAndData` method from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.BindingSourceMultipleControls#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.BindingSourceMultipleControls/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
        <altmember cref="T:System.Windows.Forms.BindingCompleteEventArgs" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BindingsCollection Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingsCollection Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As BindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BindingsCollection ^ Bindings { System::Windows::Forms::BindingsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-146">Gets the collection of bindings being managed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-146">Gets the collection of bindings being managed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56a78-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> qui contient le <see cref="T:System.Windows.Forms.Binding" /> objets gérés par ce <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-147">A <see cref="T:System.Windows.Forms.BindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56a78-148">Le code suivant obtient de l’exemple le <xref:System.Windows.Forms.BindingManagerBase> pour une source de données spécifique.</span><span class="sxs-lookup"><span data-stu-id="56a78-148">The following code example gets the <xref:System.Windows.Forms.BindingManagerBase> for a specific data source.</span></span> <span data-ttu-id="56a78-149">L’exemple utilise ensuite la <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> propriété pour imprimer des informations sur chaque contrôle lié à la même source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-149">The example then uses the <xref:System.Windows.Forms.BindingManagerBase.Bindings%2A> property to print information about each control bound to the same data source.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Bindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Bindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void CancelCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelCurrentEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-150">When overridden in a derived class, cancels the current edit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-150">When overridden in a derived class, cancels the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-151">Cette méthode est prise en charge uniquement si la source de données implémente la <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="56a78-151">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="56a78-152">Si l’objet n’implémente pas le <xref:System.ComponentModel.IEditableObject> interface, les modifications apportées aux données n’est pas ignorée.</span><span class="sxs-lookup"><span data-stu-id="56a78-152">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be discarded.</span></span>  
  
 <span data-ttu-id="56a78-153">Appel de la <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> méthode provoque le <xref:System.Windows.Forms.Binding.Format> événement se produise.</span><span class="sxs-lookup"><span data-stu-id="56a78-153">Calling the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> method causes the <xref:System.Windows.Forms.Binding.Format> event to occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-154">L’exemple de code suivant montre les deux le <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> et <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="56a78-154">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="56a78-155">Lorsque vous appelez le <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> méthodes, les modifications apportées aux données sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="56a78-155">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="56a78-156">Lorsque vous appelez le <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> (méthode), les modifications sont conservées.</span><span class="sxs-lookup"><span data-stu-id="56a78-156">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-157">When overridden in a derived class, gets the number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56a78-158">Nombre de lignes managées par <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-158">The number of rows managed by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-159">Utilisez le <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété pour déterminer le dernier élément dans la liste des lignes gérées par le <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="56a78-159">Use the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property to determine the last item in the list of rows maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="56a78-160">Pour accéder au dernier élément, affectez le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété le <xref:System.Windows.Forms.BindingManagerBase.Count%2A> valeur de la propriété moins 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-160">To go to the last item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property value minus 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-161">Le code suivant exemple présente quatre méthodes qui définissent la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="56a78-161">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="56a78-162">Le `MoveNext` méthode incrémente la propriété par 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-162">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="56a78-163">Le `MovePrevious` méthode décrémente la propriété par 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-163">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="56a78-164">Le `MoveFirst` méthode définit la propriété sur 0.</span><span class="sxs-lookup"><span data-stu-id="56a78-164">The `MoveFirst` method sets the property to 0.</span></span> <span data-ttu-id="56a78-165">Le `MoveLast` méthode définit la propriété à la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété moins 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-165">The `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public abstract object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Current" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-166">When overridden in a derived class, gets the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-166">When overridden in a derived class, gets the current object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56a78-167">Un <see cref="T:System.Object" /> qui représente l’objet actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-167">An <see cref="T:System.Object" /> that represents the current object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-168">Le <xref:System.Windows.Forms.BindingManagerBase.Current%2A> objet contient la valeur de l’élément actuel dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-168">The <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object contains the value of the current item in the data source.</span></span> <span data-ttu-id="56a78-169">Pour utiliser la valeur de l’élément actuel, vous devez effectuer un cast de l’élément à la <xref:System.Type> de l’objet contenu dans le <xref:System.Windows.Forms.Binding.DataSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="56a78-169">To use the value of the current item, you must cast the item to the <xref:System.Type> of the object contained by the <xref:System.Windows.Forms.Binding.DataSource%2A>.</span></span> <span data-ttu-id="56a78-170">Par exemple, un <xref:System.Data.DataTable> contient <xref:System.Data.DataRowView> objets.</span><span class="sxs-lookup"><span data-stu-id="56a78-170">For example, a <xref:System.Data.DataTable> contains <xref:System.Data.DataRowView> objects.</span></span> <span data-ttu-id="56a78-171">Pour déterminer le type de l’objet actuel, utilisez le <xref:System.Object.GetType%2A> et <xref:System.Type.ToString%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="56a78-171">To determine the type of the current object, use the <xref:System.Object.GetType%2A> and <xref:System.Type.ToString%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56a78-172">Lorsque le <xref:System.Windows.Forms.Binding.DataSource%2A> est un <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, ou <xref:System.Data.DataTable>, vous liez en fait à un <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="56a78-172">When the <xref:System.Windows.Forms.Binding.DataSource%2A> is a <xref:System.Data.DataSet>, <xref:System.Data.DataViewManager>, or <xref:System.Data.DataTable>, you are actually binding to a <xref:System.Data.DataView>.</span></span> <span data-ttu-id="56a78-173">Par conséquent, chaque <xref:System.Windows.Forms.BindingManagerBase.Current%2A> objet est un <xref:System.Data.DataRowView> objet.</span><span class="sxs-lookup"><span data-stu-id="56a78-173">Consequently, each <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object is a <xref:System.Data.DataRowView> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-174">L’exemple de code suivant imprime la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Current%2A> de l’objet dans un <xref:System.Windows.Forms.BindingManagerBase> dans le <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-174">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="56a78-175">L’exemple suppose que la source de données est un <xref:System.Data.DataTable> contenant un <xref:System.Data.DataColumn> nommé `CustName`.</span><span class="sxs-lookup"><span data-stu-id="56a78-175">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="CurrentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-176">Occurs when the currently bound item changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-176">Occurs when the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-177">Le <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> événement est déclenché chaque fois que le <xref:System.Windows.Forms.BindingManagerBase.Current%2A> les modifications de propriété ou le <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="56a78-177">The <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event is raised whenever the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> property changes or the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs.</span></span>  
  
 <span data-ttu-id="56a78-178">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-179">L’exemple de code suivant imprime la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Current%2A> de l’objet dans un <xref:System.Windows.Forms.BindingManagerBase> dans le <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-179">The following code example prints the value of the <xref:System.Windows.Forms.BindingManagerBase.Current%2A> object in a <xref:System.Windows.Forms.BindingManagerBase> in the <xref:System.Windows.Forms.BindingManagerBase.CurrentChanged> event.</span></span> <span data-ttu-id="56a78-180">L’exemple suppose que la source de données est un <xref:System.Data.DataTable> contenant un <xref:System.Data.DataColumn> nommé `CustName`.</span><span class="sxs-lookup"><span data-stu-id="56a78-180">The example assumes the data source is a <xref:System.Data.DataTable> containing a <xref:System.Data.DataColumn> named `CustName`.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Current Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Current Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Current Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="CurrentItemChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentItemChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentItemChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-181">Occurs when the state of the currently bound item changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-181">Occurs when the state of the currently bound item changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-182">Le <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> événement se produit chaque fois qu’il y a une modification dans l’état dans l’élément actuellement lié.</span><span class="sxs-lookup"><span data-stu-id="56a78-182">The <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event occurs whenever there is a change in the state in the currently bound item.</span></span> <span data-ttu-id="56a78-183">Cela peut se produire si l’une des propriétés de cet élément est modifiée ou si l’élément lui-même est remplacé ou déplacé.</span><span class="sxs-lookup"><span data-stu-id="56a78-183">This can occur if one of the properties of this item is changed or if the item itself is replaced or moved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-184">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="56a78-184">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="56a78-185">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-185">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span> <span data-ttu-id="56a78-186">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="56a78-186">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="56a78-187">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="56a78-187">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="56a78-188">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.BindingManagerBase>, comme un <xref:System.Windows.Forms.PropertyManager> ou <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="56a78-188">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="56a78-189">Puis nommez l’instance `BindingManagerBase1` et vérifier que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-189">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.CurrentItemChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#82)]
 [!code-vb[System.Windows.Forms.EventExamples#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#82)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataError">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.BindingManagerDataErrorEventHandler DataError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.BindingManagerDataErrorEventHandler DataError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.DataError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataError As BindingManagerDataErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::BindingManagerDataErrorEventHandler ^ DataError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingManagerDataErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-190">Occurs when an <see cref="T:System.Exception" /> is silently handled by the <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-191">Cet événement est informatif et signale la spécification de langage commun (CLS)-uniquement les exceptions.</span><span class="sxs-lookup"><span data-stu-id="56a78-191">This event is informational and reports Common Language Specification (CLS)-compliant exceptions only.</span></span> <span data-ttu-id="56a78-192">Pour déterminer quel type d’exception s’est produite, gérer cet événement et vérifiez la <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> propriété de la <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="56a78-192">To determine what type of exception occurred, handle this event and check the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A> property of the <xref:System.Windows.Forms.BindingManagerDataErrorEventArgs>.</span></span>  
  
 <span data-ttu-id="56a78-193">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-193">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-194">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="56a78-194">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="56a78-195">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.BindingManagerBase.DataError> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-195">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span> <span data-ttu-id="56a78-196">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="56a78-196">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="56a78-197">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="56a78-197">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="56a78-198">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.BindingManagerBase>, comme un <xref:System.Windows.Forms.PropertyManager> ou <xref:System.Windows.Forms.CurrencyManager>.</span><span class="sxs-lookup"><span data-stu-id="56a78-198">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.BindingManagerBase>, such as a <xref:System.Windows.Forms.PropertyManager> or <xref:System.Windows.Forms.CurrencyManager>.</span></span> <span data-ttu-id="56a78-199">Puis nommez l’instance `BindingManagerBase1` et vérifier que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.BindingManagerBase.DataError> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-199">Then name the instance `BindingManagerBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.BindingManagerBase.DataError> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#83)]
 [!code-vb[System.Windows.Forms.EventExamples#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#83)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCurrentEdit">
      <MemberSignature Language="C#" Value="public abstract void EndCurrentEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCurrentEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.EndCurrentEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndCurrentEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndCurrentEdit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-200">When overridden in a derived class, ends the current edit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-200">When overridden in a derived class, ends the current edit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-201">Cette méthode est prise en charge uniquement si la source de données implémente la <xref:System.ComponentModel.IEditableObject> interface.</span><span class="sxs-lookup"><span data-stu-id="56a78-201">This method is supported only if the data source implements the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="56a78-202">Dans ce cas, les modifications seront être enregistrées.</span><span class="sxs-lookup"><span data-stu-id="56a78-202">In that case, changes will be saved.</span></span> <span data-ttu-id="56a78-203">Si l’objet n’implémente pas le <xref:System.ComponentModel.IEditableObject> interface, les modifications apportées aux données ne seront pas enregistrées.</span><span class="sxs-lookup"><span data-stu-id="56a78-203">If the object does not implement the <xref:System.ComponentModel.IEditableObject> interface, changes made to the data will not be saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-204">L’exemple de code suivant montre les deux le <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> et <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="56a78-204">The following code example demonstrates both the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> and the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> methods.</span></span> <span data-ttu-id="56a78-205">Lorsque vous appelez le <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> méthodes, les modifications apportées aux données sont ignorées.</span><span class="sxs-lookup"><span data-stu-id="56a78-205">When you call the <xref:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit%2A> methods, changes made to the data are discarded.</span></span> <span data-ttu-id="56a78-206">Lorsque vous appelez le <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> (méthode), les modifications sont conservées.</span><span class="sxs-lookup"><span data-stu-id="56a78-206">When you call the <xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A> method, the changes are kept.</span></span>  
  
 [!code-cpp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CPP/canceledit.cpp#1)]
 [!code-csharp[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/CS/canceledit.cs#1)]
 [!code-vb[BindingManagerBase.CancelCurrentEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase.CancelCurrentEdit Example/VB/canceledit.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.CancelCurrentEdit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItemProperties">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-207">Gets the list of property descriptors for the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-207">Gets the list of property descriptors for the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItemProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-208">When overridden in a derived class, gets the collection of property descriptors for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56a78-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-209">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="56a78-210">Le code suivant exemple utilise le <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> méthode pour retourner un <xref:System.ComponentModel.PropertyDescriptorCollection>.</span><span class="sxs-lookup"><span data-stu-id="56a78-210">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection>.</span></span> <span data-ttu-id="56a78-211">L’exemple imprime le <xref:System.ComponentModel.MemberDescriptor.Name%2A> et la valeur de la <xref:System.Data.DataColumn> à l’aide de la <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> méthode de la <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="56a78-211">The example prints the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and value of the current <xref:System.Data.DataColumn> using the <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> method of the <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetItemProperties (dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSources">
          <span data-ttu-id="56a78-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-212">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="56a78-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-213">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-214">Gets the collection of property descriptors for the binding using the specified <see cref="T:System.Collections.ArrayList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56a78-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-215">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-216">Cette méthode est utilisée par les développeurs qui créent des contrôles liés aux données.</span><span class="sxs-lookup"><span data-stu-id="56a78-216">This method is used by developers creating data-bound controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.PropertyDescriptorCollection GetItemProperties (Type listType, int offset, System.Collections.ArrayList dataSources, System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.Type listType, int32 offset, class System.Collections.ArrayList dataSources, class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetItemProperties(System.Type,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetItemProperties (listType As Type, offset As Integer, dataSources As ArrayList, listAccessors As ArrayList) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetItemProperties(Type ^ listType, int offset, System::Collections::ArrayList ^ dataSources, System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listType" Type="System.Type" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="dataSources" Type="System.Collections.ArrayList" />
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listType">
          <span data-ttu-id="56a78-217">The <see cref="T:System.Type" /> of the bound list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-217">The <see cref="T:System.Type" /> of the bound list.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="56a78-218">A counter used to recursively call the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-218">A counter used to recursively call the method.</span>
          </span>
        </param>
        <param name="dataSources">
          <span data-ttu-id="56a78-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-219">An <see cref="T:System.Collections.ArrayList" /> containing the data sources.</span>
          </span>
        </param>
        <param name="listAccessors">
          <span data-ttu-id="56a78-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-220">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-221">Gets the list of properties of the items managed by this <see cref="T:System.Windows.Forms.BindingManagerBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56a78-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-222">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that represents the property descriptors for the binding.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-223">Cette surcharge est utilisée par les développeurs pour créer des contrôles liés aux données.</span><span class="sxs-lookup"><span data-stu-id="56a78-223">This overload is used by developers to create data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-224">Le code suivant exemple utilise le <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> méthode pour retourner un <xref:System.ComponentModel.PropertyDescriptorCollection> pour un <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="56a78-224">The following code example uses the <xref:System.Windows.Forms.BindingManagerBase.GetItemProperties%2A> method to return a <xref:System.ComponentModel.PropertyDescriptorCollection> for a <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="56a78-225">L’exemple imprime le <xref:System.ComponentModel.MemberDescriptor.Name%2A> et <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> de chaque <xref:System.ComponentModel.PropertyDescriptor> dans la collection.</span><span class="sxs-lookup"><span data-stu-id="56a78-225">The example then prints out the <xref:System.ComponentModel.MemberDescriptor.Name%2A> and <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> of each <xref:System.ComponentModel.PropertyDescriptor> in the collection.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.GetItemProperties2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.GetItemProperties2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="protected internal abstract string GetListName (System.Collections.ArrayList listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetListName(class System.Collections.ArrayList listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.GetListName(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function GetListName (listAccessors As ArrayList) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::String ^ GetListName(System::Collections::ArrayList ^ listAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="listAccessors">
          <span data-ttu-id="56a78-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-226">An <see cref="T:System.Collections.ArrayList" /> containing the table's bound properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-227">When overridden in a derived class, gets the name of the list supplying the data for the binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56a78-228">The name of the list supplying the data for the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-228">The name of the list supplying the data for the binding.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSuspended">
      <MemberSignature Language="C#" Value="public bool IsBindingSuspended { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBindingSuspended" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.IsBindingSuspended" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBindingSuspended As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBindingSuspended { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-229">Gets a value indicating whether binding is suspended.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-229">Gets a value indicating whether binding is suspended.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56a78-230">
            <see langword="true" /> Si la liaison est suspendue ; dans le cas contraire, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-230">
              <see langword="true" /> if binding is suspended; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBindingComplete">
      <MemberSignature Language="C#" Value="protected internal void OnBindingComplete (System.Windows.Forms.BindingCompleteEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnBindingComplete(class System.Windows.Forms.BindingCompleteEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnBindingComplete (args As BindingCompleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnBindingComplete(System::Windows::Forms::BindingCompleteEventArgs ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.Forms.BindingCompleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="56a78-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-231">A <see cref="T:System.Windows.Forms.BindingCompleteEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-232">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-233">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-233">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="56a78-234">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-234">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="56a78-235">La méthode <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-235">The <xref:System.Windows.Forms.BindingManagerBase.OnBindingComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="56a78-236">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="56a78-236">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="56a78-237">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56a78-237">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnBindingComplete(System.Windows.Forms.BindingCompleteEventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCurrentChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="56a78-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-238">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-239">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-240">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-240">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="56a78-241">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-241">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="56a78-242">La méthode <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-242">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="56a78-243">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="56a78-243">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="56a78-244">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56a78-244">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
      </Docs>
    </Member>
    <Member MemberName="onCurrentChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onCurrentChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onCurrentChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onCurrentChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onCurrentChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onCurrentChangedHandler;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-245">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnCurrentItemChanged">
      <MemberSignature Language="C#" Value="protected internal abstract void OnCurrentItemChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCurrentItemChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnCurrentItemChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnCurrentItemChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="56a78-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-246">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-247">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-248">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-248">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="56a78-249">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-249">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="56a78-250">La méthode <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-250">The <xref:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="56a78-251">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="56a78-251">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="56a78-252">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56a78-252">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentItemChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.CurrentItemChanged" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.OnCurrentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
      </Docs>
    </Member>
    <Member MemberName="OnDataError">
      <MemberSignature Language="C#" Value="protected internal void OnDataError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void OnDataError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub OnDataError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void OnDataError(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="56a78-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-253">An <see cref="T:System.Exception" /> that caused the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event to occur.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-254">Raises the <see cref="E:System.Windows.Forms.BindingManagerBase.DataError" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-255">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-255">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="56a78-256">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-256">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="56a78-257">La méthode <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="56a78-257">The <xref:System.Windows.Forms.BindingManagerBase.OnDataError%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="56a78-258">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="56a78-258">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="56a78-259">Lors de la substitution de <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</span>
            <span class="sxs-lookup">
              <span data-stu-id="56a78-259">When overriding <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.BindingManagerBase.OnDataError(System.Exception)" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="onPositionChangedHandler">
      <MemberSignature Language="C#" Value="protected EventHandler onPositionChangedHandler;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.EventHandler onPositionChangedHandler" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.BindingManagerBase.onPositionChangedHandler" />
      <MemberSignature Language="VB.NET" Value="Protected onPositionChangedHandler As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected: EventHandler ^ onPositionChangedHandler;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-260">Specifies the event handler for the <see cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public abstract int Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.BindingManagerBase.Position" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Position As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Position { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-261">When overridden in a derived class, gets or sets the position in the underlying list that controls bound to this data source point to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="56a78-262">Index de base zéro qui spécifie une position dans la liste sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-262">A zero-based index that specifies a position in the underlying list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-263">Utilisez le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété à une itération au sein de la liste sous-jacente conservée par le <xref:System.Windows.Forms.BindingManagerBase>.</span><span class="sxs-lookup"><span data-stu-id="56a78-263">Use the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property to iterate through the underlying list maintained by the <xref:System.Windows.Forms.BindingManagerBase>.</span></span> <span data-ttu-id="56a78-264">Pour accéder au premier élément, affectez le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> à 0.</span><span class="sxs-lookup"><span data-stu-id="56a78-264">To go to the first item, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to 0.</span></span> <span data-ttu-id="56a78-265">Pour accéder à la fin de la liste, affectez la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> à la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété moins 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-265">To go to the end of the list, set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 <span data-ttu-id="56a78-266">Le <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> événement se produit lorsque le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="56a78-266">The <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event occurs when the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property value changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-267">Le code suivant exemple présente quatre méthodes qui définissent la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="56a78-267">The following code example shows four methods that set the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property.</span></span> <span data-ttu-id="56a78-268">Le `MoveNext` méthode incrémente la propriété par 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-268">The `MoveNext` method increments the property by 1.</span></span> <span data-ttu-id="56a78-269">Le `MovePrevious` méthode décrémente la propriété par 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-269">The `MovePrevious` method decrements the property by 1.</span></span> <span data-ttu-id="56a78-270">Le `MoveFirst` méthode définit la propriété sur 0 et le `MoveLast` méthode définit la propriété à la valeur de la <xref:System.Windows.Forms.BindingManagerBase.Count%2A> propriété moins 1.</span><span class="sxs-lookup"><span data-stu-id="56a78-270">The `MoveFirst` method sets the property to 0, and the `MoveLast` method sets the property to the value of the <xref:System.Windows.Forms.BindingManagerBase.Count%2A> property minus 1.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Current" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Count" />
      </Docs>
    </Member>
    <Member MemberName="PositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.BindingManagerBase.PositionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PositionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PositionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="56a78-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-271">Occurs after the value of the <see cref="P:System.Windows.Forms.BindingManagerBase.Position" /> property has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-272">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="56a78-272">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56a78-273">L’exemple de code suivant crée un <xref:System.Windows.Forms.Binding>, puis l’ajoute à une collection de <xref:System.Windows.Forms.Binding> des objets pour un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="56a78-273">The following code example creates a <xref:System.Windows.Forms.Binding>, and then adds it to a collection of <xref:System.Windows.Forms.Binding> objects for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="56a78-274">L’exemple obtient ensuite le <xref:System.Windows.Forms.BindingManagerBase> pour la source de données et ajoute un délégué à le <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="56a78-274">The example then gets the <xref:System.Windows.Forms.BindingManagerBase> for the data source and adds a delegate to the <xref:System.Windows.Forms.BindingManagerBase.PositionChanged> event.</span></span>  
  
 [!code-cpp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/CS/source.cs#1)]
 [!code-vb[Classic BindingManagerBase.PositionChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingManagerBase.PositionChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PullData">
      <MemberSignature Language="C#" Value="protected void PullData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PullData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PullData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PullData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PullData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-275">Pulls data from the data-bound control into the data source, returning no information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-275">Pulls data from the data-bound control into the data source, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-276">Le <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> méthode est un moyen par programmation pour extraire des informations à partir du contrôle lié aux données dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-276">The <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> method is a programmatic way to pull information from the data-bound control back into the data source.</span></span> <span data-ttu-id="56a78-277">Il n’est pas requis pour le fonctionnement standard d’un contrôle, dans la mesure où normalement un contrôle met automatiquement à jour sa source de données liée lorsque le focus quitte.</span><span class="sxs-lookup"><span data-stu-id="56a78-277">It is not required for standard operation of a control, since normally a control automatically updates its bound data source when focus leaves it.</span></span>  
  
 <span data-ttu-id="56a78-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> déclenche le <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> d’événements et les événements de modification sur les données source selon le cas.</span><span class="sxs-lookup"><span data-stu-id="56a78-278"><xref:System.Windows.Forms.BindingManagerBase.PullData%2A> raises the <xref:System.Windows.Forms.BindingManagerBase.BindingComplete> event and change events on the data source as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PushData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="PushData">
      <MemberSignature Language="C#" Value="protected void PushData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.PushData" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushData ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-279">Pushes data from the data source into the data-bound control, returning no information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-279">Pushes data from the data source into the data-bound control, returning no information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-280">Le <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> méthode est un moyen de transmettre des informations à partir de la source de données dans le contrôle lié aux données par programmation.</span><span class="sxs-lookup"><span data-stu-id="56a78-280">The <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method is a programmatic way to push information from the data source into the data-bound control.</span></span> <span data-ttu-id="56a78-281">Cette méthode n’est pas nécessaire si la source de données implémente la <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> de l’interface, car le <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> événement doit entraîner automatiquement le contrôle à mettre à jour par le biais de son gestionnaire de devise.</span><span class="sxs-lookup"><span data-stu-id="56a78-281">This method is not required if the data source implements the <xref:System.ComponentModel.IBindingList?displayProperty=nameWithType> interface, because the <xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=nameWithType> event should automatically cause the control to be updated through its currency manager.</span></span>  
  
 <span data-ttu-id="56a78-282">Si cette méthode est émise quand un <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> opération est effectuée, le <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> méthode est retournée immédiatement avec une valeur de `true`.</span><span class="sxs-lookup"><span data-stu-id="56a78-282">If this method is issued when a <xref:System.Windows.Forms.BindingManagerBase.PullData%2A> operation is being performed, the <xref:System.Windows.Forms.BindingManagerBase.PushData%2A> method returns immediately with a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.PullData" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
        <altmember cref="T:System.ComponentModel.IBindingList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public abstract void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="56a78-283">The index of the row to delete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-283">The index of the row to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56a78-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-284">When overridden in a derived class, deletes the row at the specified index from the underlying list.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-285">Le <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> méthode s’appuie sur la source de données sous-jacente pour déterminer le comportement de la méthode.</span><span class="sxs-lookup"><span data-stu-id="56a78-285">The <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method relies on the underlying data source to determine how the method behaves.</span></span> <span data-ttu-id="56a78-286">(Consultez la <xref:System.Windows.Forms.Binding> classe pour obtenir la liste des sources de données pris en charge.) Pour les classes qui implémentent <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, ou <xref:System.ComponentModel.ITypedList>, ainsi que fortement typée classes qui implémentent <xref:System.Collections.IList>, le <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> méthode supprime la ligne dans la liste sous-jacente au lieu de supprimer son contenu.</span><span class="sxs-lookup"><span data-stu-id="56a78-286">(See the <xref:System.Windows.Forms.Binding> class for a list of supported data sources.) For classes that implement <xref:System.Collections.IList>, <xref:System.ComponentModel.IBindingList>, or <xref:System.ComponentModel.ITypedList>, as well as strongly typed classes that implement <xref:System.Collections.IList>, the <xref:System.Windows.Forms.BindingManagerBase.RemoveAt%2A> method actually deletes the row in the underlying list instead of removing its contents.</span></span>  
  
 <span data-ttu-id="56a78-287">Si la liste sous-jacente implémente la <xref:System.ComponentModel.IBindingList> interface, le <xref:System.ComponentModel.IBindingList.AllowRemove%2A> propriété doit retourner `true`.</span><span class="sxs-lookup"><span data-stu-id="56a78-287">If the underlying list implements the <xref:System.ComponentModel.IBindingList> interface, the <xref:System.ComponentModel.IBindingList.AllowRemove%2A> property must return `true`.</span></span> <span data-ttu-id="56a78-288">Si la liste sous-jacente implémente la <xref:System.Collections.IList> interface, le <xref:System.Collections.IList.IsFixedSize%2A> propriété doit retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="56a78-288">If the underlying list implements the <xref:System.Collections.IList> interface, the <xref:System.Collections.IList.IsFixedSize%2A> property must return `false`.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CPP/bindingmanagerbase_removeat.cpp#1)]
 [!code-csharp[BindingManagerBase_RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/CS/bindingmanagerbase_removeat.cs#1)]
 [!code-vb[BindingManagerBase_RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_RemoveAt/VB/bindingmanagerbase_removeat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="56a78-289">There is no row at the specified <paramref name="index" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-289">There is no row at the specified <paramref name="index" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Position" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.AddNew" />
      </Docs>
    </Member>
    <Member MemberName="ResumeBinding">
      <MemberSignature Language="C#" Value="public abstract void ResumeBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResumeBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResumeBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-290">When overridden in a derived class, resumes data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-290">When overridden in a derived class, resumes data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> sont deux méthodes qui permettent la suspension temporaire et le rétablissement de la liaison de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-291"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="56a78-292">Vous devez généralement suspendre la liaison de données si l’utilisateur doit être autorisé à modifier des champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="56a78-292">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="56a78-293">Par exemple, l’utilisateur peut avoir besoin de modifier un champ pour être conforme à un deuxième champ ; Sinon, la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="56a78-293">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="SuspendBinding">
      <MemberSignature Language="C#" Value="public abstract void SuspendBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SuspendBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SuspendBinding ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SuspendBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-294">When overridden in a derived class, suspends data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-294">When overridden in a derived class, suspends data binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> et <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> sont deux méthodes qui permettent la suspension temporaire et le rétablissement de la liaison de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-295"><xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A> and <xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A> are two methods that allow the temporary suspension and resumption of data binding.</span></span> <span data-ttu-id="56a78-296">Vous devez généralement suspendre la liaison de données si l’utilisateur doit être autorisé à modifier des champs de données avant la validation.</span><span class="sxs-lookup"><span data-stu-id="56a78-296">You would typically suspend data binding if the user must be allowed to edit data fields before validation occurs.</span></span> <span data-ttu-id="56a78-297">Par exemple, l’utilisateur peut avoir besoin de modifier un champ pour être conforme à un deuxième champ ; Sinon, la validation du premier champ provoquerait le deuxième champ en erreur.</span><span class="sxs-lookup"><span data-stu-id="56a78-297">For example, the user might need to change a field to be in accordance with a second field; otherwise, validating the first field would cause the second field to be in error.</span></span>  
  
   
  
## Examples  
 [!code-cpp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CPP/bindingmanagerbase_suspend_resume_binding.cpp#2)]
 [!code-csharp[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/CS/bindingmanagerbase_suspend_resume_binding.cs#2)]
 [!code-vb[BindingManagerBase_Suspend_Resume_Binding#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BindingManagerBase_Suspend_Resume_Binding/VB/bindingmanagerbase_suspend_resume_binding.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
    <Member MemberName="UpdateIsBinding">
      <MemberSignature Language="C#" Value="protected abstract void UpdateIsBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void UpdateIsBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.BindingManagerBase.UpdateIsBinding" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub UpdateIsBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void UpdateIsBinding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56a78-298">When overridden in a derived class, updates the binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56a78-298">When overridden in a derived class, updates the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56a78-299">Le <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> méthode met à jour la liaison de données entre le contrôle lié et sa source de données.</span><span class="sxs-lookup"><span data-stu-id="56a78-299">The <xref:System.Windows.Forms.BindingManagerBase.UpdateIsBinding%2A> method updates the data binding between the bound control and its data source.</span></span> <span data-ttu-id="56a78-300">Pour les scénarios de liaison de données complexes, elle réinitialise également la position actuelle vers le début de la liste sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="56a78-300">For complex data-binding scenarios, it also resets the current position to the beginning of the underlying list.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.BindingManagerBase.BindingComplete" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.SuspendBinding" />
        <altmember cref="M:System.Windows.Forms.BindingManagerBase.ResumeBinding" />
        <altmember cref="P:System.Windows.Forms.BindingManagerBase.Bindings" />
      </Docs>
    </Member>
  </Members>
</Type>