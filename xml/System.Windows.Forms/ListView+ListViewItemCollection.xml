<Type Name="ListView+ListViewItemCollection" FullName="System.Windows.Forms.ListView+ListViewItemCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0a560b4e650731852240d67c10c86f6f7083632" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53334676" /></Metadata><TypeSignature Language="C#" Value="public class ListView.ListViewItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/ListViewItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.ListViewItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::ListViewItemCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.ListViewItemCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la collection d'éléments dans un contrôle <see cref="T:System.Windows.Forms.ListView" /> ou assignés à un <see cref="T:System.Windows.Forms.ListViewGroup" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ListView.ListViewItemCollection> stocke les éléments affichés dans un <xref:System.Windows.Forms.ListView> contrôler ou affectés à un <xref:System.Windows.Forms.ListViewGroup>. Il existe deux autres collections définies dans le <xref:System.Windows.Forms.ListView> classe qui vous permettent de déterminer les éléments sélectionnés au sein d’un <xref:System.Windows.Forms.ListView> contrôle. Le <xref:System.Windows.Forms.ListView.SelectedListViewItemCollection> classe fournit des propriétés et méthodes pour déterminer quels éléments sont sélectionnés dans un <xref:System.Windows.Forms.ListView> contrôle, tandis que le <xref:System.Windows.Forms.ListView.SelectedIndexCollection> classe vous permet de déterminer les index dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection> d’un <xref:System.Windows.Forms.ListView> contrôle sont sélectionné. En plus des classes de collection de sélection, il existe également deux classes qui vous permettent de déterminer les éléments sélectionnés (lorsque le <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriété de la <xref:System.Windows.Forms.ListView> contrôle est défini sur `true`) au sein de cette collection.  
  
 Il existe plusieurs façons d’ajouter des éléments à la collection. Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode ajoute un élément unique à la collection. Pour ajouter un nombre d’éléments à la collection, vous créez un tableau d’éléments et transmettez-le à la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Si vous souhaitez insérer un élément à un emplacement spécifique dans la collection, vous pouvez utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> (méthode). Pour supprimer des éléments, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> méthode ou le <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> méthode si vous savez où l’élément se trouve dans la collection. Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> méthode vous permet de supprimer tous les éléments de la collection au lieu d’utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> méthode pour supprimer un élément unique à la fois.  
  
 En plus des méthodes et propriétés pour ajouter et supprimer des éléments, le <xref:System.Windows.Forms.ListView.ListViewItemCollection> fournit également des méthodes pour rechercher des éléments dans la collection. Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> méthode vous permet de déterminer si un élément est un membre de la collection. Une fois que vous savez que l’élément se trouve dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> méthode pour déterminer où l’élément se trouve dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment ajouter des éléments à un <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Notez que le <xref:System.Windows.Forms.ListView.Items%2A> propriété du `ListView1` est de type <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Pour exécuter cet exemple, collez le code suivant dans un formulaire qui contient un <xref:System.Windows.Forms.ListView> objet nommé `ListView1` et un <xref:System.Windows.Forms.TextBox> nommé `TextBox1`. Appelez le `InitializeListView` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> Gestionnaire d’événements.  
  
 [!code-cpp[System.Windows.Forms.ListView1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView1/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView1/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection" />
    <altmember cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItemCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewItemCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.ListViewItemCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.ListViewItemCollection" Usage="new System.Windows.Forms.ListView.ListViewItemCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.ListView" /> auquel appartient la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Évitez d’utiliser ce constructeur. Accéder à la place, le <xref:System.Windows.Forms.ListView.ListViewItemCollection> via la <xref:System.Windows.Forms.ListView.Items%2A> propriété de la <xref:System.Windows.Forms.ListView> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un élément à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher pour l'élément.</param>
        <summary>Crée un élément avec le texte spécifié et l'ajoute à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> pour créer une nouvelle méthode <xref:System.Windows.Forms.ListViewItem> à ajouter à un <xref:System.Windows.Forms.ListView> contrôle. Le texte de la nouvelle <xref:System.Windows.Forms.ListViewItem> ajouté pour le contrôle est basé sur le `text` paramètre. Si vous souhaitez spécifier une image pour l’élément, utilisez la version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode qui accepte un index d’image en tant que paramètre. Si vous disposez d’un <xref:System.Windows.Forms.ListViewItem> que vous souhaitez ajouter à la collection, utilisez la version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode qui accepte un <xref:System.Windows.Forms.ListViewItem> en tant que paramètre.  
  
 Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est ajouté. Sinon, l’élément est inséré à la fin de la liste. Si la liste n’est pas triée, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode pour insérer un élément dans le <xref:System.Windows.Forms.ListView> à une position spécifique. Pour ajouter un ensemble d’éléments au contrôle en une seule opération, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Si vous souhaitez utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode pour ajouter un grand nombre d’éléments au contrôle, utilisez la <xref:System.Windows.Forms.ListView.BeginUpdate%2A> et <xref:System.Windows.Forms.ListView.EndUpdate%2A> méthodes pour empêcher le <xref:System.Windows.Forms.ListView> à partir de la mise à jour jusqu'à ce que tous les éléments sont ajoutés. Lors de l’ajout d’éléments à un <xref:System.Windows.Forms.ListView>, il est plus efficace de trier les éléments tout d’abord, puis ajouter de nouveaux éléments.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (System.Windows.Forms.ListViewItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(class System.Windows.Forms.ListViewItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::Windows::Forms::ListViewItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.ListViewItem" /> à ajouter à la collection.</param>
        <summary>Ajoute un <see cref="T:System.Windows.Forms.ListViewItem" /> existant à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode pour ajouter un existant <xref:System.Windows.Forms.ListViewItem> à la collection. Cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode est généralement utilisée pour réutiliser les éléments des autres <xref:System.Windows.Forms.ListView> contrôles ou si le <xref:System.Windows.Forms.ListViewItem> a été créé manuellement avant de l’ajouter à la collection. Si vous souhaitez créer un nouveau <xref:System.Windows.Forms.ListViewItem> au lieu d’utiliser un élément existant, utilisez les autres versions de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> (méthode).  
  
 Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est ajouté. Sinon, l’élément est inséré à la fin de la liste. Si la liste n’est pas triée, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode pour insérer un élément dans le <xref:System.Windows.Forms.ListView> à une position spécifique. Pour ajouter un ensemble d’éléments au contrôle en une seule opération, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Si vous souhaitez utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode pour ajouter un grand nombre d’éléments au contrôle, utilisez la <xref:System.Windows.Forms.ListView.BeginUpdate%2A> et <xref:System.Windows.Forms.ListView.EndUpdate%2A> méthodes pour empêcher le <xref:System.Windows.Forms.ListView> à partir de la mise à jour jusqu'à ce que tous les éléments sont ajoutés. Lors de l’ajout d’éléments à un <xref:System.Windows.Forms.ListView>, il est plus efficace de trier les éléments tout d’abord, puis ajouter de nouveaux éléments.  
  
 Cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode est également utilisée pour affecter un <xref:System.Windows.Forms.ListViewItem> à un <xref:System.Windows.Forms.ListViewGroup>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageIndex">Index de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec le texte et l'image spécifiés et l'ajoute à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> pour créer une nouvelle méthode <xref:System.Windows.Forms.ListViewItem> à ajouter à la <xref:System.Windows.Forms.ListView> contrôle. Le texte de la nouvelle <xref:System.Windows.Forms.ListViewItem> ajouté pour le contrôle est basé sur le `text` paramètre. Vous pouvez également spécifier une image pour l’élément en passant l’index de la <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propriétés pour le `imageIndex` paramètre. (En règle générale, le <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propriétés utilisent les mêmes positions d’index pour afficher des images connexes.) Si vous ne souhaitez pas spécifier un index d’image pour l’élément, utilisez la version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode qui accepte uniquement une chaîne en tant que paramètre. Si vous disposez d’un <xref:System.Windows.Forms.ListViewItem> que vous souhaitez ajouter à la collection, utilisez la version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode qui accepte un <xref:System.Windows.Forms.ListViewItem> en tant que paramètre.  
  
 Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est ajouté. Sinon, l’élément est inséré à la fin de la liste. Si la liste n’est pas triée, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode pour insérer un élément dans le <xref:System.Windows.Forms.ListView> à une position spécifique. Pour ajouter un ensemble d’éléments au contrôle en une seule opération, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Si vous souhaitez utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode pour ajouter un grand nombre d’éléments au contrôle, utilisez la <xref:System.Windows.Forms.ListView.BeginUpdate%2A> et <xref:System.Windows.Forms.ListView.EndUpdate%2A> méthodes pour empêcher le <xref:System.Windows.Forms.ListView> à partir de la mise à jour jusqu'à ce que tous les éléments sont ajoutés. Lors de l’ajout d’éléments à un <xref:System.Windows.Forms.ListView>, il est plus efficace de trier les éléments tout d’abord, puis ajouter de nouveaux éléments.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="P:System.Windows.Forms.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageKey">Clé de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec le texte et l'image spécifiés et l'ajoute à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Forms.ListView> est triée, l’élément est ajouté dans l’ordre de tri correctement ; sinon, il est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément.</param>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageIndex">Index de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec la clé, le texte et l'image spécifiés et ajoute un élément à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Forms.ListView> est triée, l’élément est ajouté dans l’ordre de tri correctement ; sinon, il est ajouté à la fin de la collection. Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode indique le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété à la clé spécifiée, l’élément peut donc être récupéré par son index ou par clé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Windows.Forms.ListView" /> conteneur est en mode virtuel.</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Add : string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément.</param>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageKey">Clé de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec la clé, le texte et l'image spécifiés et l'ajoute à la collection.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 Si le <xref:System.Windows.Forms.ListView> est triée, l’élément est ajouté dans l’ordre de tri correctement ; sinon, il est ajouté à la fin de la collection. Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> méthode indique le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété de l’élément à la clé spécifiée, l’élément peut donc être récupéré par son index ou par clé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute un tableau d'éléments à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListView.ListViewItemCollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListView/ListViewItemCollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListView.ListViewItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListView.ListViewItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListView::ListViewItemCollection ^ items);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListView.ListViewItemCollection -&gt; unit" Usage="listViewItemCollection.AddRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListView+ListViewItemCollection" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> à ajouter à la collection.</param>
        <summary>Ajoute une collection d'éléments à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le contenant <xref:System.Windows.Forms.ListView> est triée, la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> méthode ajoutera les éléments dans un ordre trié ; sinon, il les ajoute à la fin de la collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.Windows.Forms.ListView" /> conteneur est en mode virtuel.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] values) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (values As ListViewItem())" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ values);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange values" FrameworkAlternate="netframework-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem[] items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem[] items) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem())" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ items);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewItem[] -&gt; unit" Usage="listViewItemCollection.AddRange items" FrameworkAlternate="netframework-2.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="items">Tableau d'objets <see cref="T:System.Windows.Forms.ListViewItem" /> à ajouter à la collection.</param>
        <param name="values">Tableau d'objets <see cref="T:System.Windows.Forms.ListViewItem" /> à ajouter à la collection.</param>
        <summary>Ajoute un tableau d'objets <see cref="T:System.Windows.Forms.ListViewItem" /> à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour réutiliser les éléments à partir d’un autre <xref:System.Windows.Forms.ListView> contrôle. Si vous souhaitez ajouter un seul <xref:System.Windows.Forms.ListViewItem>, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> (méthode). Vous pouvez également utiliser le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode si vous souhaitez ajouter un seul <xref:System.Windows.Forms.ListViewItem> à une position spécifique dans la collection.  
  
 Vous pouvez également utiliser cette méthode pour assigner plusieurs <xref:System.Windows.Forms.ListViewItem> des objets sur un <xref:System.Windows.Forms.ListViewGroup>.  
  
 Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après les éléments sont ajoutés. Sinon, les éléments sont insérés à la fin de la liste. Si la liste n’est pas triée, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode pour insérer des éléments dans le <xref:System.Windows.Forms.ListView> à des positions spécifiques.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:System.Windows.Forms.ListView> contrôle avec trois <xref:System.Windows.Forms.ListViewItem> objets spécifiés et trois <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> objets spécifiés pour chaque élément. L’exemple crée également <xref:System.Windows.Forms.ColumnHeader> objets à afficher des sous-éléments en mode Détails. Deux <xref:System.Windows.Forms.ImageList> objets sont également créés dans l’exemple de code pour fournir des images pour les <xref:System.Windows.Forms.ListViewItem> objets. Ces <xref:System.Windows.Forms.ImageList> objets sont ajoutés à la <xref:System.Windows.Forms.ListView.LargeImageList%2A> et <xref:System.Windows.Forms.ListView.SmallImageList%2A> propriétés. L’exemple utilise les propriétés suivantes pour créer le <xref:System.Windows.Forms.ListView> contrôle :  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 Cet exemple nécessite que vous avez ajouté le code à un <xref:System.Windows.Forms.Form> et appelé la méthode créée dans l’exemple à partir du constructeur ou une autre méthode sur le formulaire. L’exemple suppose également que les images nommées `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, et `MyLargeImage2` se trouvent dans le répertoire racine du lecteur C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="items" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewItemCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les éléments de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez des éléments de la collection, toutes les informations sur les éléments supprimés sont perdues. Pour supprimer un élément unique à partir de la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> ou <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ListViewItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewItem -&gt; bool" Usage="listViewItemCollection.Contains item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément à localiser dans la collection.</param>
        <summary>Détermine si l'élément spécifié se trouve dans la collection.</summary>
        <returns><see langword="true" /> si l'élément se trouve dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> méthode vous permet de déterminer si un <xref:System.Windows.Forms.ListViewItem> est un membre de la collection. Une fois que vous savez que l’élément est dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> méthode pour déterminer la position de l’élément dans la collection.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="listViewItemCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément à rechercher.</param>
        <summary>Détermine si la collection contient un élément avec la clé spécifiée.</summary>
        <returns><see langword="true" /> pour indiquer que la collection contient un élément avec la clé spécifiée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewItemCollection.CopyTo (dest, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest"><see cref="T:System.Array" /> représentant le tableau dans lequel le contenu de la collection doit être copié.</param>
        <param name="index">Emplacement dans le tableau de destination auquel les éléments de la collection doivent être copiés.</param>
        <summary>Copie l'ensemble de la collection dans un tableau existant, à un emplacement spécifié dans le tableau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour combiner les éléments sélectionnés à partir de plusieurs collections dans un seul tableau.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d'éléments de la collection.</summary>
        <value>Nombre d'éléments figurant dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de déterminer le nombre d’éléments dans le <xref:System.Windows.Forms.ListView>. Vous pouvez ensuite utiliser cette valeur lorsque vous effectuez une boucle sur les valeurs de la collection et que vous devez fournir un nombre d’itérations pour exécuter la boucle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem[] Find (string key, bool searchAllSubItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem[] Find(string key, bool searchAllSubItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllSubItems As Boolean) As ListViewItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::ListViewItem ^&gt; ^ Find(System::String ^ key, bool searchAllSubItems);" />
      <MemberSignature Language="F#" Value="member this.Find : string * bool -&gt; System.Windows.Forms.ListViewItem[]" Usage="listViewItemCollection.Find (key, searchAllSubItems)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllSubItems" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément à rechercher.</param>
        <param name="searchAllSubItems"><see langword="true" /> pour rechercher des sous-éléments ; sinon, <see langword="false" />.</param>
        <summary>Recherche les éléments dont le nom correspond à la clé spécifiée, en cherchant de manière facultative les sous-éléments.</summary>
        <returns>Tableau d’objets <see cref="T:System.Windows.Forms.ListViewItem" /> contenant les éléments correspondants, ou tableau vide en l’absence d’éléments correspondants.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewItemCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection d'éléments.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> qui représente la collection d'éléments.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le propriétaire <xref:System.Windows.Forms.ListView> est en mode virtuel, vous ne pouvez pas énumérer les <xref:System.Windows.Forms.ListView.ListViewItemCollection> à l’aide d’un énumérateur ou appeler <xref:System.Windows.Forms.ListView.ListViewItemCollection.GetEnumerator%2A>. Au lieu de cela, utilisez le <xref:System.Windows.Forms.ListView.Items%2A?displayProperty=nameWithType> propriété pour accéder à un élément par valeur d’index.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Forms.ListView" /> propriétaire est en mode virtuel.</exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As ListViewItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewItem -&gt; int" Usage="listViewItemCollection.IndexOf item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément à localiser dans la collection.</param>
        <summary>Retourne l'index dans la collection de l'élément spécifié.</summary>
        <returns>Index de base zéro de l'emplacement de l'élément dans la collection ; sinon, -1 si l'élément ne se trouve pas dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> méthode vous permet de déterminer la position d’un élément dans la collection. Pour déterminer si un élément est contenu dans la collection avant d’appeler cette méthode, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Contains%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Contains(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="listViewItemCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément à rechercher dans la collection.</param>
        <summary>Récupère l'index de l'élément avec la clé spécifiée.</summary>
        <returns>Index de base zéro de la première occurrence de l'élément avec la clé spécifiée, s'il existe ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> est appelé plusieurs fois, la dernière retournée index est une correspondance de clés d’abord vérifiée, et si aucune correspondance n’est, la recherche commence au début de la collection.  
  
 Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOfKey%2A> retourne -1`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Insère un élément dans la collection à l'index spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="text">Texte à afficher pour l'élément.</param>
        <summary>Crée un nouvel élément et l'insère dans la collection à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> inséré dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode vous permet d’insérer un nouvel élément à une position spécifique dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Le texte spécifié dans le `text` paramètre est utilisé pour créer un nouveau <xref:System.Windows.Forms.ListViewItem> qui est ensuite inséré dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection> à l’emplacement spécifié.  
  
> [!NOTE]
>  Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est inséré.  
  
 Pour ajouter un élément sans spécifier une position spécifique dans la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Vous pouvez utiliser cette méthode si vous souhaitez insérer un nouvel élément dans une collection d’éléments existante.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, item As ListViewItem) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewItem -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément à insérer.</param>
        <summary>Insère dans la collection un <see cref="T:System.Windows.Forms.ListViewItem" /> existant à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> inséré dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode vous permet d’insérer un existant <xref:System.Windows.Forms.ListViewItem> à une position spécifique dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
> [!NOTE]
>  Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est inséré.  
  
 Pour ajouter un élément sans spécifier une position spécifique dans la collection où ajouter l’élément, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode). Vous pouvez utiliser cette méthode si vous souhaitez insérer un nouvel élément dans une collection d’éléments existante.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="text">Texte à afficher pour l'élément.</param>
        <param name="imageIndex">Index de l'image à afficher pour l'élément.</param>
        <summary>Crée un nouvel élément muni de l'index d'image spécifié et l'insère dans la collection à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> inséré dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode vous permet d’insérer un nouvel élément à une position spécifique dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Le texte spécifié dans le `text` paramètre est utilisé pour créer un nouveau <xref:System.Windows.Forms.ListViewItem> qui est ensuite inséré dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection> à l’emplacement spécifié.  
  
> [!NOTE]
>  Si le <xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=nameWithType> propriété est définie sur une valeur autre que <xref:System.Windows.Forms.SortOrder.None?displayProperty=nameWithType> ou si le <xref:System.Windows.Forms.ListView.ListViewItemSorter%2A> est définie, la liste est triée après l’élément est inséré.  
  
 Vous pouvez également utiliser cette version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode pour spécifier une image pour l’élément en passant l’index de la <xref:System.Windows.Forms.ImageList> affectée à la <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propriétés pour le `imageIndex` paramètre. (En règle générale, le <xref:System.Windows.Forms.ListView.LargeImageList%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.ListView.SmallImageList%2A?displayProperty=nameWithType> propriétés utilisent les mêmes positions d’index pour afficher des images connexes.) Si vous ne souhaitez pas spécifier un index d’image pour l’élément, utilisez l’autre version de la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode qui accepte une chaîne en tant que paramètre.  
  
 Pour ajouter un élément sans spécifier une position spécifique dans la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.AddRange(System.Windows.Forms.ListViewItem[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem Insert (int index, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem Insert(int32 index, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="text">Texte de <see cref="T:System.Windows.Forms.ListViewItem" />.</param>
        <param name="imageKey">Clé de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec le texte et l'image spécifiés, et l'insère dans la collection à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageIndex As Integer) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * int -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> de l'élément.</param>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageIndex">Index de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec la clé, le texte et l'image spécifiés, et l'insère dans la collection à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode indique le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété de l’élément à la clé spécifiée, l’élément peut donc être récupéré par son index ou par clé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.ListViewItem Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Insert (index As Integer, key As String, text As String, imageKey As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::ListViewItem ^ Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem&#xA;override this.Insert : int * string * string * string -&gt; System.Windows.Forms.ListViewItem" Usage="listViewItemCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="key"><see cref="P:System.Windows.Forms.ListViewItem.Name" /> de l'élément.</param>
        <param name="text">Le texte de l'élément.</param>
        <param name="imageKey">Clé de l'image à afficher pour l'élément.</param>
        <summary>Crée un élément avec la clé, le texte et l'image spécifiés, et l'ajoute à la collection à l'index spécifié.</summary>
        <returns><see cref="T:System.Windows.Forms.ListViewItem" /> ajouté à la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Insert%2A> méthode indique le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété de l’élément à la clé spécifiée, l’élément peut donc être récupéré par son index ou par clé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.ListViewItemCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
        <value><see langword="true" /> si la collection est en lecture seule ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est toujours `false` pour cette collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit un élément dans la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewItem" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément à récupérer.</param>
        <summary>Récupère l'élément avec la clé spécifiée.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> dont la propriété <see cref="P:System.Windows.Forms.ListViewItem.Name" /> correspond à la clé spécifiée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int displayIndex] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(displayIndex As Integer) As ListViewItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int displayIndex); void set(int displayIndex, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewItem with get, set" Usage="System.Windows.Forms.ListView.ListViewItemCollection.Item" />
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem this[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As ListViewItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem ^ default[int] { System::Windows::Forms::ListViewItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayIndex" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Index de l'élément dans la collection à obtenir ou à définir.</param>
        <param name="displayIndex">Index de l'élément dans la collection à obtenir ou à définir.</param>
        <summary>Obtient ou définit l'élément à l'index spécifié dans la collection.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément situé à l'index spécifié dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode pour obtenir le <xref:System.Windows.Forms.ListViewItem> stockées dans un emplacement spécifique dans la collection. Pour déterminer l’index d’un élément spécifique dans la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur ou égal à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.IndexOf(System.Windows.Forms.ListViewItem)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.ListViewItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.ListViewItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::ListViewItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Forms.ListViewItem -&gt; unit&#xA;override this.Remove : System.Windows.Forms.ListViewItem -&gt; unit" Usage="listViewItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément à supprimer de la collection.</param>
        <summary>Supprime l'élément spécifié de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez un élément de la collection, les index de modifier des éléments suivants dans la collection. Toutes les informations sur l’élément supprimé sont supprimées. Vous pouvez utiliser cette méthode pour supprimer un élément spécifique de la collection en spécifiant l’élément à supprimer. Pour spécifier l’index de l’élément à supprimer au lieu de l’élément lui-même, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt%2A> (méthode). Pour supprimer tous les éléments de la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur <see cref="T:System.Windows.Forms.ListViewItem" /> assignée au paramètre <paramref name="item" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewItemCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à supprimer.</param>
        <summary>Supprime l'élément à l'index spécifié dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous supprimez un élément de la collection, les index de modifier des éléments suivants dans la collection. Toutes les informations sur l’élément supprimé sont supprimées. Vous pouvez utiliser cette méthode pour supprimer un élément spécifique de la collection en spécifiant l’index de l’élément à supprimer de la collection. Pour spécifier l’élément à supprimer au lieu de l’index à l’élément, utilisez le <xref:System.Windows.Forms.ListView.ListViewItemCollection.Remove%2A> (méthode). Pour supprimer tous les éléments de la collection, utilisez la <xref:System.Windows.Forms.ListView.ListViewItemCollection.Clear%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur ou égal à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Remove(System.Windows.Forms.ListViewItem)" />
        <altmember cref="M:System.Windows.Forms.ListView.ListViewItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="listViewItemCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'élément à supprimer de la collection.</param>
        <summary>Supprime l'élément avec la clé spécifiée de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison de clé ne respecte pas la casse. Le <xref:System.Windows.Forms.ListViewItem.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à la collection est synchronisé (thread-safe).</summary>
        <value><see langword="true" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à la collection de contrôles.</summary>
        <value>Objet utilisé pour synchroniser la collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objet à ajouter à la collection.</param>
        <summary>Ajoute un objet existant à la collection.</summary>
        <returns>Index de base zéro indiquant l'emplacement de l'objet s'il a été ajouté à la collection ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `item` paramètre peut être n’importe quel type. Si `item` est un <xref:System.Windows.Forms.ListViewItem>, il est ajouté à la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` est un autre type, un nouveau <xref:System.Windows.Forms.ListViewItem> est créé qui contient la chaîne à partir de la <xref:System.Object.ToString%2A> méthode de `item`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ item) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Objet qui représente l'élément à rechercher dans la collection.</param>
        <summary>Détermine si l'élément spécifié se trouve dans la collection.</summary>
        <returns><see langword="true" /> si l'élément spécifié se trouve dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ item) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> qui représente l'élément à rechercher dans la collection.</param>
        <summary>Retourne l'index dans la collection de l'élément spécifié.</summary>
        <returns>Index de base zéro de l'élément s'il figure dans la collection ; sinon, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro au niveau duquel l'élément est inséré.</param>
        <param name="item">Objet représentant l'élément à insérer.</param>
        <summary>Insère un objet dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `item` paramètre peut être n’importe quel type. Si `item` est un <xref:System.Windows.Forms.ListViewItem>, il est ajouté à la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` est un autre type, un nouveau <xref:System.Windows.Forms.ListViewItem> est créé qui contient la chaîne à partir de la <xref:System.Object.ToString%2A> méthode de `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre d'index est inférieur à 0 ou supérieur à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est de taille fixe.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir.</param>
        <summary>Obtient ou définit <see cref="T:System.Windows.Forms.ListViewItem" /> à l'index spécifié dans la collection.</summary>
        <value><see cref="T:System.Windows.Forms.ListViewItem" /> qui représente l'élément situé à l'index spécifié dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `item` paramètre peut être défini sur n’importe quel type. Si `item` est un <xref:System.Windows.Forms.ListViewItem>, il est ajouté à la <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Si `item` est un autre type, un nouveau <xref:System.Windows.Forms.ListViewItem> est créé qui contient la chaîne à partir de la <xref:System.Object.ToString%2A> méthode de `item`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre d'index est inférieur à 0 ou supérieur ou égal à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.ListViewItemCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.ListViewItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><see cref="T:System.Windows.Forms.ListViewItem" /> représentant l'élément à supprimer dans la collection.</param>
        <summary>Supprime l'élément spécifié de la collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>