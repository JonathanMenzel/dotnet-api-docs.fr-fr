<Type Name="Control" FullName="System.Windows.Forms.Control">
  <TypeSignature Language="C#" Value="public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.ComponentModel.ISynchronizeInvoke, class System.IDisposable, class System.Windows.Forms.IBindableComponent, class System.Windows.Forms.IDropTarget, class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits Component&#xA;Implements IBindableComponent, IDisposable, IDropTarget, ISynchronizeInvoke, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::ComponentModel::Component, IDisposable, System::ComponentModel::ISynchronizeInvoke, System::Windows::Forms::IBindableComponent, System::Windows::Forms::IDropTarget, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISynchronizeInvoke</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d11f7-101">Définit la classe de base pour les contrôles, qui sont des composants dotés d'une représentation visuelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-101">Defines the base class for controls, which are components with visual representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-102">Pour créer votre propre classe de contrôle, héritez de la <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, ou à partir d’autres formes de Windows les contrôles fournis.</span><span class="sxs-lookup"><span data-stu-id="d11f7-102">To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls.</span></span> <span data-ttu-id="d11f7-103">Pour plus d’informations sur la création de contrôles personnalisés, consultez [développement Windows Forms de contrôles personnalisés avec le .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-103">For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).</span></span>  
  
 <span data-ttu-id="d11f7-104">Le <xref:System.Windows.Forms.Control> classe implémente les fonctionnalités élémentaires requises par les classes qui affichent des informations à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-104">The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user.</span></span> <span data-ttu-id="d11f7-105">Elle gère les entrées d’utilisateur par le biais du clavier et les dispositifs de pointage.</span><span class="sxs-lookup"><span data-stu-id="d11f7-105">It handles user input through the keyboard and pointing devices.</span></span> <span data-ttu-id="d11f7-106">Il gère le routage des messages et sécurité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-106">It handles message routing and security.</span></span> <span data-ttu-id="d11f7-107">Il définit les limites d’un contrôle (sa position et taille), bien qu’il n’implémente pas de peinture.</span><span class="sxs-lookup"><span data-stu-id="d11f7-107">It defines the bounds of a control (its position and size), although it does not implement painting.</span></span> <span data-ttu-id="d11f7-108">Il fournit un handle de fenêtre (`hWnd`).</span><span class="sxs-lookup"><span data-stu-id="d11f7-108">It provides a window handle (`hWnd`).</span></span>  
  
 <span data-ttu-id="d11f7-109">Contrôles Windows Forms utilisent des propriétés ambiantes pour les contrôles enfants peuvent apparaître comme leur environnement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-109">Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</span></span> <span data-ttu-id="d11f7-110">Un *propriété ambiante* est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-110">An *ambient property* is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-111">Si le contrôle n’a pas un <xref:System.Windows.Forms.Control.Parent%2A>et la propriété n’est pas définie, le contrôle tente de déterminer la valeur de la propriété ambiante via la <xref:System.Windows.Forms.Control.Site%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-111">If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property.</span></span> <span data-ttu-id="d11f7-112">Si le contrôle n’est pas placé, si le site ne prend pas en charge les propriétés ambiantes ou si la propriété n’est pas définie sur le <xref:System.Windows.Forms.AmbientProperties>, le contrôle utilise ses propres valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-112">If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values.</span></span> <span data-ttu-id="d11f7-113">En règle générale, une propriété ambiante représente une caractéristique d’un contrôle, tel que <xref:System.Windows.Forms.Control.BackColor%2A>, qui est communiqué à un contrôle enfant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-113">Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control.</span></span> <span data-ttu-id="d11f7-114">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-114">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-115">Les propriétés ambiantes fournies par le <xref:System.Windows.Forms.Control> classe incluent : <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, et <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-115">Ambient properties provided by the <xref:System.Windows.Forms.Control> class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-116">Pour rendre votre application Windows Forms prennent en charge les styles visuels, veillez à définir le <xref:System.Windows.Forms.FlatStyle> propriété `System` et inclure un manifeste avec votre fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-116">To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable.</span></span> <span data-ttu-id="d11f7-117">Un manifeste est un fichier XML qui est inclus en tant que ressource dans votre fichier exécutable d’application ou dans un fichier distinct qui réside dans le même répertoire que le fichier exécutable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-117">A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</span></span> <span data-ttu-id="d11f7-118">Pour obtenir un exemple de manifeste, consultez la section exemple de la <xref:System.Windows.Forms.FlatStyle> énumération.</span><span class="sxs-lookup"><span data-stu-id="d11f7-118">For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration.</span></span> <span data-ttu-id="d11f7-119">Pour plus d’informations sur l’utilisation des styles visuels, consultez [Styles visuels](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-119">For more information about using visual styles, see [Visual Styles](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).</span></span>  
  
 <span data-ttu-id="d11f7-120">Windows Forms prend en charge d’accessibilité intégrées et fournit des informations sur votre application qui lui permet de travailler avec les applications clientes d’accessibilité tels que des utilitaires d’outil et réviseur écran, les utilitaires de d’entrée vocale à l’écran claviers, autres périphériques d’entrée et les utilitaires d’extension de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-120">Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</span></span> <span data-ttu-id="d11f7-121">Parfois, vous devez fournir des informations supplémentaires pour les applications clientes d’accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-121">Sometimes you will want to provide additional information to accessibility client applications.</span></span> <span data-ttu-id="d11f7-122">Il existe deux façons de fournir ces informations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="d11f7-122">There are two ways of providing this additional information.</span></span> <span data-ttu-id="d11f7-123">Vous pouvez définir le <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, et <xref:System.Windows.Forms.Control.AccessibleRole%2A> les valeurs de propriété, qui seront transmises aux applications clientes d’accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-123">You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications.</span></span> <span data-ttu-id="d11f7-124">Cette méthode est généralement utilisée pour fournir des informations d’accessibilité limitées pour des contrôles existants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-124">This method is typically used to provide limited accessibility information for existing controls.</span></span> <span data-ttu-id="d11f7-125">Vous pouvez également écrire votre propre classe dérivant de la <xref:System.Windows.Forms.AccessibleObject> ou <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, en fournissant autant d’informations d’accessibilité en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="d11f7-125">Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-126">Pour maintenir des performances optimales, ne définissez pas la taille d’un contrôle dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-126">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="d11f7-127">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-127">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-128">N’ajoutez pas de liaisons de données pour un <xref:System.Windows.Forms.Control> dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-128">Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor.</span></span> <span data-ttu-id="d11f7-129">Cela provoquera des erreurs dans la génération de code et peut provoquer un comportement indésirable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-129">Doing so will cause errors in code generation and can cause unwanted behavior.</span></span>  
  
 <span data-ttu-id="d11f7-130">La majorité des contrôles dans le <xref:System.Windows.Forms> espace de noms utiliser le contrôle commun Windows sous-jacent comme base pour générer sur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-130">The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on.</span></span> <span data-ttu-id="d11f7-131">Pour plus d’informations sur les contrôles communs Windows, consultez [référence de contrôle général](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-131">For more information about the Windows common controls, see [General Control Reference](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).</span></span>  
  
 <span data-ttu-id="d11f7-132">Pour identifier des contrôles Windows Forms à partir d’un processus distinct, utilisez une norme `SendMessage` appel pour passer le message WM_GETCONTROLNAME.</span><span class="sxs-lookup"><span data-stu-id="d11f7-132">To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message.</span></span> <span data-ttu-id="d11f7-133">WM_GETCONTROLNAME est indépendant du langage et de la hiérarchie de Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-133">WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</span></span> <span data-ttu-id="d11f7-134">Pour plus d’informations, consultez la rubrique « Recommended Solution for Windows Forms » dans[automatisation des formulaires Windows](http://msdn.microsoft.com/library/ms996405.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-134">For more information, see the "Recommended Solution for Windows Forms" topic in[Automating Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).</span></span>  
  
 <span data-ttu-id="d11f7-135">Utilisez le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété pour synchroniser l’accès au contrôle de plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="d11f7-135">Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads.</span></span> <span data-ttu-id="d11f7-136">Pour plus d’informations sur les contrôles Windows Forms multithread, consultez [Comment : effectuer des appels Thread-Safe aux contrôles de Windows Forms](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span><span class="sxs-lookup"><span data-stu-id="d11f7-136">For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="d11f7-137">Seuls les membres suivants sont thread-safe : <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, et <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-137">Only the following members are thread safe: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, and <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-138">Appel <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-138">Calling <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span></threadsafe>
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.ScrollableControl" />
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-139">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-140">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" /> avec les paramètres par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with default settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-141">Le <xref:System.Windows.Forms.Control> classe est la classe de base pour tous les contrôles utilisés dans une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-141">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="d11f7-142">Cette classe n’étant pas généralement utilisée pour créer une instance de la classe, ce constructeur est en général pas appelé directement mais plutôt appelé par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-142">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d11f7-143">Texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-143">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-144">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" /> avec un texte spécifique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-145">Le <xref:System.Windows.Forms.Control> classe est la classe de base pour tous les contrôles utilisés dans une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-145">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="d11f7-146">Cette classe n’étant pas généralement utilisée pour créer une instance de la classe, ce constructeur est en général pas appelé directement mais plutôt appelé par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-146">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="d11f7-147">Cette version de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructeur définit initial <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété à la `text` valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-147">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="d11f7-148">
          <see cref="T:System.Windows.Forms.Control" /> étant le parent du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-148">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="d11f7-149">Texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-149">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-150">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" /> sous forme de contrôle enfant, avec un texte spécifique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-151">Le <xref:System.Windows.Forms.Control> classe est la classe de base pour tous les contrôles utilisés dans une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-151">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="d11f7-152">Cette classe n’étant pas généralement utilisée pour créer une instance de la classe, ce constructeur est en général pas appelé directement mais plutôt appelé par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-152">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="d11f7-153">Cette version de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructeur définit initial <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété à la `text` valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-153">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="d11f7-154">Le constructeur ajoute également le contrôle au contrôle parent <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-154">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d11f7-155">Texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-155">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="d11f7-156">Position <see cref="P:System.Drawing.Point.X" /> du contrôle, en pixels, à partir du bord gauche du conteneur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-156">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="d11f7-157">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Left" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-157">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="d11f7-158">Position <see cref="P:System.Drawing.Point.Y" /> du contrôle, en pixels, à partir du bord supérieur du conteneur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-158">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="d11f7-159">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Top" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-159">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-160">Largeur du contrôle, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-160">The width of the control, in pixels.</span></span> <span data-ttu-id="d11f7-161">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Width" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-161">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-162">Hauteur du contrôle, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-162">The height of the control, in pixels.</span></span> <span data-ttu-id="d11f7-163">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Height" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-163">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="d11f7-164">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" /> avec un texte, une taille et un emplacement spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-164">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-165">Le <xref:System.Windows.Forms.Control> classe est la classe de base pour tous les contrôles utilisés dans une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-165">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="d11f7-166">Cette classe n’étant pas généralement utilisée pour créer une instance de la classe, ce constructeur est en général pas appelé directement mais plutôt appelé par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-166">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="d11f7-167">Cette version de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructeur définit initial <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété à la `text` valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-167">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="d11f7-168">Initial <xref:System.Windows.Forms.Control.Size%2A> et <xref:System.Windows.Forms.Control.Location%2A> du contrôle sont déterminés par le `left`, `top`, `width` et `height` les valeurs de paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-168">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-169">Pour maintenir des performances optimales, ne définissez pas la taille d’un contrôle dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-169">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="d11f7-170">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-170">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="d11f7-171">
          <see cref="T:System.Windows.Forms.Control" /> étant le parent du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-171">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="d11f7-172">Texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-172">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="d11f7-173">Position <see cref="P:System.Drawing.Point.X" /> du contrôle, en pixels, à partir du bord gauche du conteneur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-173">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="d11f7-174">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Left" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-174">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="d11f7-175">Position <see cref="P:System.Drawing.Point.Y" /> du contrôle, en pixels, à partir du bord supérieur du conteneur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-175">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="d11f7-176">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Top" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-176">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-177">Largeur du contrôle, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-177">The width of the control, in pixels.</span></span> <span data-ttu-id="d11f7-178">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Width" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-178">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-179">Hauteur du contrôle, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-179">The height of the control, in pixels.</span></span> <span data-ttu-id="d11f7-180">La valeur est assignée à la propriété <see cref="P:System.Windows.Forms.Control.Height" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-180">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="d11f7-181">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Control" /> sous forme de contrôle enfant, avec du texte, une taille et un emplacement spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-181">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-182">Le <xref:System.Windows.Forms.Control> classe est la classe de base pour tous les contrôles utilisés dans une application Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-182">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="d11f7-183">Cette classe n’étant pas généralement utilisée pour créer une instance de la classe, ce constructeur est en général pas appelé directement mais plutôt appelé par une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-183">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="d11f7-184">Cette version de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructeur définit initial <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété à la `text` valeur du paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-184">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="d11f7-185">Le constructeur ajoute également le contrôle au contrôle parent <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-185">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span> <span data-ttu-id="d11f7-186">Initial <xref:System.Windows.Forms.Control.Size%2A> et <xref:System.Windows.Forms.Control.Location%2A> du contrôle sont déterminés par le `left`, `top`, `width` et `height` les valeurs de paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-186">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-187">Pour maintenir des performances optimales, ne définissez pas la taille d’un contrôle dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-187">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="d11f7-188">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-188">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessibilityNotifyClients">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-189">Notifie les applications d'accessibilité des <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-189">Notifies the accessibility client applications of <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected internal void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="d11f7-190">
          <see cref="T:System.Windows.Forms.AccessibleEvents" /> devant être notifié aux applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-190">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="childID"><span data-ttu-id="d11f7-191"><see cref="T:System.Windows.Forms.Control" /> enfant à avertir de l'événement accessible.</span><span class="sxs-lookup"><span data-stu-id="d11f7-191">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="d11f7-192">Avertit les applications clientes d'accessibilité des <see cref="T:System.Windows.Forms.AccessibleEvents" /> spécifiés pour le contrôle enfant spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-192">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-193">Vous devez appeler la <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> méthode pour chaque <xref:System.Windows.Forms.AccessibleEvents> les applications clientes d’accessibilité doivent être notifiées de.</span><span class="sxs-lookup"><span data-stu-id="d11f7-193">You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of.</span></span> <span data-ttu-id="d11f7-194">Le <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> méthode est généralement appelée lorsqu’une propriété est définie ou à partir d’un gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-194">The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler.</span></span> <span data-ttu-id="d11f7-195">Par exemple, vous pouvez appeler la <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> (méthode) et passez un <xref:System.Windows.Forms.AccessibleEvents> valeur de `Hide` à partir du Gestionnaire d’événements pour le <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-195">For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-196">L’exemple de code suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-196">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="d11f7-197">Le contrôle trace deux courbes avec une légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-197">The control plots two curves along with a legend.</span></span> <span data-ttu-id="d11f7-198">Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart.</span><span class="sxs-lookup"><span data-stu-id="d11f7-198">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="d11f7-199">Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle graphique, elle ne contient pas d’informations accessibles intégrées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-199">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="d11f7-200">Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-200">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="d11f7-201">Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.</span><span class="sxs-lookup"><span data-stu-id="d11f7-201">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="d11f7-202">Cet extrait de code montre comment appeler le <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-202">This code excerpt demonstrates calling the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> method.</span></span> <span data-ttu-id="d11f7-203">Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-203">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#5)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#5)]
 [!code-vb[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 objectID, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, objectID As Integer, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, objectID, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="objectID" Type="System.Int32" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="d11f7-204">
          <see cref="T:System.Windows.Forms.AccessibleEvents" /> devant être notifié aux applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-204">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="objectID"><span data-ttu-id="d11f7-205">Identificateur du <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-205">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></param>
        <param name="childID"><span data-ttu-id="d11f7-206"><see cref="T:System.Windows.Forms.Control" /> enfant à avertir de l'événement accessible.</span><span class="sxs-lookup"><span data-stu-id="d11f7-206">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="d11f7-207">Avertit les applications clientes d'accessibilité des <see cref="T:System.Windows.Forms.AccessibleEvents" /> spécifiés pour le contrôle enfant spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-207">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control .</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Control.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-208">Obtient le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-208">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-209"><see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-209">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-210">Pour contrôler l’instance retournée par cette méthode, substituez le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-210">To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span>  
  
 <span data-ttu-id="d11f7-211">Si aucun <xref:System.Windows.Forms.AccessibleObject> n'est actuellement assigné au contrôle, une nouvelle instance est créée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-211">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-212">Pour obtenir ou définir le <xref:System.Windows.Forms.Control.AccessibilityObject%2A> propriété, vous devez ajouter une référence à la `Accessibility` assembly installé avec le[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d11f7-212">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="d11f7-213">Pour plus d’informations sur les objets accessibles, consultez [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-213">For more information about accessible objects, see [Active Accessibility](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-214">Obtient ou définit la description d'action par défaut du contrôle destinée aux applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-214">Gets or sets the default action description of the control for use by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="d11f7-215">Description d'action par défaut du contrôle destinée aux applications d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-215">The default action description of the control for use by accessibility client applications.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-216">D’un objet <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> propriété décrit la principale méthode de manipulation de point de vue de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-216">An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint.</span></span> <span data-ttu-id="d11f7-217">Cette propriété doit être un verbe ou une phrase verbale courte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-217">This property should be a verb or a short verb phrase.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-218">Pas tous les objets ont des actions par défaut et certains peuvent avoir une action par défaut qui est associée à son <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> propriété, comme dans les exemples suivants :</span><span class="sxs-lookup"><span data-stu-id="d11f7-218">Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> property, such as in the following examples:</span></span>  
  
-   <span data-ttu-id="d11f7-219">Cette case à cocher a une action par défaut « Désactiver » et la valeur « Activée ».</span><span class="sxs-lookup"><span data-stu-id="d11f7-219">A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span>  
  
-   <span data-ttu-id="d11f7-220">Une case à cocher désactivée a une action par défaut de « Vérifier » et la valeur « Désactivé ».</span><span class="sxs-lookup"><span data-stu-id="d11f7-220">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span>  
  
-   <span data-ttu-id="d11f7-221">Un bouton intitulé « Imprimer » a une action par défaut de « Press », sans valeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-221">A button labeled "Print" has a default action of "Press," with no value.</span></span>  
  
-   <span data-ttu-id="d11f7-222">Une étiquette ou un contrôle de zone de texte qui affiche « France » n’a aucune action par défaut, mais a une valeur de « France ».</span><span class="sxs-lookup"><span data-stu-id="d11f7-222">A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</span></span>  
  
 <span data-ttu-id="d11f7-223">Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-223">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-224">Obtient ou définit la description du contrôle utilisée par les applications d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-224">Gets or sets the description of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="d11f7-225">Description du contrôle utilisée par les applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-225">The description of the control used by accessibility client applications.</span></span> <span data-ttu-id="d11f7-226">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-226">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-227">D’un objet <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propriété fournit une description textuelle sur l’apparence visuelle d’un objet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-227">An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance.</span></span> <span data-ttu-id="d11f7-228">La description est principalement utilisée pour fournir plus de contexte pour les utilisateurs malvoyants ou non-voyants, mais peut également être utilisée pour la recherche de contexte ou d’autres applications.</span><span class="sxs-lookup"><span data-stu-id="d11f7-228">The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</span></span>  
  
 <span data-ttu-id="d11f7-229">Le <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propriété est nécessaire si la description n’est pas évident, ou si elle est redondante sur l’objet <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, et <xref:System.Windows.Forms.AccessibleObject.Value%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-229">The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties.</span></span> <span data-ttu-id="d11f7-230">Par exemple, un bouton avec « OK » serait inutile des informations supplémentaires, mais un bouton qui affiche l’image d’un cactus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-230">For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="d11f7-231">Le <xref:System.Windows.Forms.Control.AccessibleName%2A>, et <xref:System.Windows.Forms.Control.AccessibleRole%2A> (et peut-être <xref:System.Windows.Forms.AccessibleObject.Help%2A>) les propriétés du bouton cactus décrivent sa fonction, mais la <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propriété fournit des informations moins significatives, par exemple « Bouton qui affiche l’image d’un cactus. »</span><span class="sxs-lookup"><span data-stu-id="d11f7-231">The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</span></span>  
  
 <span data-ttu-id="d11f7-232">Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-232">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-233">L’exemple de code suivant crée une instance d’un <xref:System.Windows.Forms.CheckBox> classe, dérivée `MyCheckBox`, lui attribue un <xref:System.Drawing.Image> à son <xref:System.Windows.Forms.ButtonBase.Image%2A> propriété et des jeux de la <xref:System.Windows.Forms.Control.AccessibleName%2A> et <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propriétés, car le <xref:System.Windows.Forms.Control.Text%2A> la propriété est `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-233">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="d11f7-234">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> nommé `MyForm`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-234">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.Control.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-235">Obtient ou définit le nom du contrôle utilisé par les applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-235">Gets or sets the name of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="d11f7-236">Nom du contrôle utilisé par les applications clientes d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-236">The name of the control used by accessibility client applications.</span></span> <span data-ttu-id="d11f7-237">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-238">Le <xref:System.Windows.Forms.Control.AccessibleName%2A> propriété est une étiquette qui décrit brièvement et identifie l’objet dans son conteneur, telles que le texte dans un <xref:System.Windows.Forms.Button>, le nom du serveur d’un <xref:System.Windows.Forms.MenuItem>, ou l’étiquette affichée en regard un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-238">The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="d11f7-239">Pour plus d’informations sur les propriétés des objets accessibles, consultez le «[contenu des propriétés descriptives](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-239">For more information about properties of accessible objects, see the "[Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-240">L’exemple de code suivant crée une instance d’un <xref:System.Windows.Forms.CheckBox> classe, dérivée `MyCheckBox`, lui attribue un <xref:System.Drawing.Image> à son <xref:System.Windows.Forms.ButtonBase.Image%2A> propriété et des jeux le <xref:System.Windows.Forms.Control.AccessibleName%2A> et <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propriétés depuis le <xref:System.Windows.Forms.Control.Text%2A> propriété est `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-240">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="d11f7-241">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> nommé `MyForm`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-241">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.Control.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-242">Obtient ou définit le rôle accessible du contrôle</span><span class="sxs-lookup"><span data-stu-id="d11f7-242">Gets or sets the accessible role of the control</span></span></summary>
        <value><span data-ttu-id="d11f7-243">Une des valeurs de <see cref="T:System.Windows.Forms.AccessibleRole" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-243">One of the values of <see cref="T:System.Windows.Forms.AccessibleRole" />.</span></span> <span data-ttu-id="d11f7-244">La valeur par défaut est <see langword="Default" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-244">The default is <see langword="Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-245">La propriété <xref:System.Windows.Forms.Control.AccessibleRole%2A> précise à quel type d'élément d'interface utilisateur correspond un objet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-245">The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is.</span></span> <span data-ttu-id="d11f7-246">Si le rôle du contrôle ne peut pas être déterminé, la propriété <xref:System.Windows.Forms.Control.AccessibleRole%2A> prend la valeur `Default`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-246">If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.</span></span>  
  
 <span data-ttu-id="d11f7-247">Pour plus d’informations sur les propriétés des objets accessibles, consultez [contenu descriptif propriétés](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="d11f7-247">For more information about properties of accessible objects, see [Content of Descriptive Properties](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d11f7-248">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.AccessibleRole" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-248">The value assigned is not one of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.Control.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-249">Obtient ou définit une valeur indiquant si le contrôle peut accepter des données que l'utilisateur y fait glisser.</span><span class="sxs-lookup"><span data-stu-id="d11f7-249">Gets or sets a value indicating whether the control can accept data that the user drags onto it.</span></span></summary>
        <value><span data-ttu-id="d11f7-250"><see langword="true" /> si les opérations de glisser-déplacer sont autorisées dans le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-250"><see langword="true" /> if drag-and-drop operations are allowed in the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-251">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-251">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-252">Le code exemple suivant active l’utilisateur pour faire glisser un fichier image ou une image du formulaire et qu’il affiche à l’emplacement où elle est supprimée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-252">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="d11f7-253">Le <xref:System.Windows.Forms.Control.OnPaint%2A> méthode est substituée pour repeindre l’image chaque fois que le formulaire est peint ; sinon, l’image n’est rendue persistante jusqu'à ce que la mise à jour suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-253">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="d11f7-254">Le <xref:System.Windows.Forms.Control.DragEnter> détermine le type de données glissées sur le formulaire de méthode de gestion des événements et fournit les commentaires appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-254">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="d11f7-255">Le <xref:System.Windows.Forms.Control.DragDrop> méthode de gestion des événements affiche l’image sur le formulaire, si un <xref:System.Drawing.Image> peuvent être créés à partir des données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-255">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="d11f7-256">Étant donné que le <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> les valeurs sont des coordonnées d’écran, l’exemple utilise le <xref:System.Windows.Forms.Control.PointToClient%2A> méthode pour les convertir en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-256">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-257">pour un accès illimité Presse-papiers définir cette propriété sur <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-257">for unrestricted Clipboard access to set this property to <see langword="true" />.</span></span> <span data-ttu-id="d11f7-258">Énumération associée : le <see langword="AllClipboard" /> valeur de <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-258">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-259"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-259"><para>When overriding the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.DragEventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.Control.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-260">Obtient ou définit les bords du conteneur auquel un contrôle est lié et détermine comment un contrôle est redimensionné avec son parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-260">Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="d11f7-261">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.AnchorStyles" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-261">A bitwise combination of the <see cref="T:System.Windows.Forms.AnchorStyles" /> values.</span></span> <span data-ttu-id="d11f7-262">La valeur par défaut est <see langword="Top" /> et <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-262">The default is <see langword="Top" /> and <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-263">Utilisez le <xref:System.Windows.Forms.Control.Anchor%2A> propriété pour définir comment un contrôle est redimensionné automatiquement lorsque son contrôle parent est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-263">Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="d11f7-264">Ancrage d’un contrôle à son contrôle parent garantit que les bords ancrés dans la même position par rapport aux bords du contrôle parent lorsque le contrôle parent est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-264">Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</span></span>  
  
 <span data-ttu-id="d11f7-265">Vous pouvez ancrer un contrôle sur un ou plusieurs bords de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-265">You can anchor a control to one or more edges of its container.</span></span> <span data-ttu-id="d11f7-266">Par exemple, si vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Button> dont <xref:System.Windows.Forms.Control.Anchor%2A> propriété a la valeur `Top` et `Bottom`, le <xref:System.Windows.Forms.Button> est étirée pour maintenir la distance ancrée aux bords supérieur et inférieur de la <xref:System.Windows.Forms.Form>en tant que le <xref:System.Windows.Forms.Control.Height%2A> de la <xref:System.Windows.Forms.Form> est augmentée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-266">For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-267">Le <xref:System.Windows.Forms.Control.Anchor%2A> et <xref:System.Windows.Forms.Control.Dock%2A> propriétés s’excluent mutuellement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-267">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="d11f7-268">Une seule peut être définie à la fois, et la dernière est prioritaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-268">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-269">L’exemple de code suivant ajoute un <xref:System.Windows.Forms.Button> à un formulaire et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-269">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-270">L’exemple ancre le bouton dans l’angle inférieur droit du formulaire afin qu’il conserve sa position relative à mesure que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-270">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="d11f7-271">Il définit ensuite la <xref:System.Windows.Forms.Control.BackgroundImage%2A> et redimensionne le bouton à la même taille que le <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-271">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-272">L’exemple définit ensuite la <xref:System.Windows.Forms.Control.TabStop%2A> à `true` et définit le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-272">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="d11f7-273">Enfin, il ajoute un gestionnaire d’événements pour gérer le <xref:System.Windows.Forms.Control.Click> événements du bouton.</span><span class="sxs-lookup"><span data-stu-id="d11f7-273">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="d11f7-274">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.ImageList> nommé `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-274">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-275"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Anchor" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Anchor" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.Anchor" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-275"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Anchor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Anchor" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Anchor" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.AnchorStyles" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="AutoScrollOffset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point AutoScrollOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point AutoScrollOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScrollOffset As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point AutoScrollOffset { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollOffset : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Point), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-276">Obtient ou définit l'endroit où ce contrôle défile dans <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-276">Gets or sets where this control is scrolled to in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span></span></summary>
        <value><span data-ttu-id="d11f7-277"><see cref="T:System.Drawing.Point" /> spécifiant l'emplacement de défilement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-277">A <see cref="T:System.Drawing.Point" /> specifying the scroll location.</span></span> <span data-ttu-id="d11f7-278">La valeur par défaut est le coin supérieur gauche du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-278">The default is the upper-left corner of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public virtual bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Control.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-279">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-279">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="d11f7-280"><see langword="true" /> si activé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-280"><see langword="true" /> if enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-281">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-281">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-282">Cet événement ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-282">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-283">Cet événement ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-283">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-284">Obtient ou définit la couleur d'arrière-plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-284">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-285"><see cref="T:System.Drawing.Color" /> qui représente la couleur d'arrière-plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-285">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="d11f7-286">La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-286">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-287">Le <xref:System.Windows.Forms.Control.BackColor%2A> propriété ne prend pas en charge les couleurs transparents, sauf si le `SupportsTransparentBackColor` valeur <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-287">The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`.</span></span>  
  
 <span data-ttu-id="d11f7-288">Le <xref:System.Windows.Forms.Control.BackColor%2A> propriété est une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-288">The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property.</span></span> <span data-ttu-id="d11f7-289">Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-289">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-290">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-290">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-291">Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-291">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-292">Le code suivant exemple définit le <xref:System.Windows.Forms.Control.BackColor%2A> et <xref:System.Windows.Forms.Control.ForeColor%2A> des contrôles aux couleurs système par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-292">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="d11f7-293">La code appelle de manière récursive elle-même si le contrôle a des contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-293">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="d11f7-294">Cet exemple de code requiert que vous avez un <xref:System.Windows.Forms.Form> au moins un contrôle enfant ; Toutefois, un conteneur enfant contrôler, comme un <xref:System.Windows.Forms.Panel> ou <xref:System.Windows.Forms.GroupBox>, avec son propre enfant ou les contrôles seraient mettre en évidence la récursivité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-294">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-295"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.BackColor" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.BackColor" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.BackColor" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-295"><para>When overriding the <see cref="P:System.Windows.Forms.Control.BackColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackColor" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.AmbientProperties" />
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-296">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.BackColor" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-296">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-297">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.BackColor%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-297">This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-298">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-298">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-299">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-299">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-300">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-300">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-301">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-301">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-302">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-302">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-303">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-303">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.Control.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-304">Obtient ou définit l'image d'arrière-plan affichée dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-304">Gets or sets the background image displayed in the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-305"><see cref="T:System.Drawing.Image" /> qui représente l'image à afficher à l'arrière-plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-305">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="d11f7-306">Utilisez le <xref:System.Windows.Forms.Control.BackgroundImage%2A> propriété à placer une image graphique sur un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-306">Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-307">Images avec des couleurs translucides ou transparents ne sont pas pris en charge par les contrôles Windows Forms en tant qu’images d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-307">Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</span></span>  
>   
>  <span data-ttu-id="d11f7-308">Cette propriété n’est pas pris en charge sur les contrôles enfants dont <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-308">This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-309">L’exemple de code suivant ajoute un <xref:System.Windows.Forms.Button> à un formulaire et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-309">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-310">L’exemple ancre le bouton dans l’angle inférieur droit du formulaire afin qu’il conserve sa position relative à mesure que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-310">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="d11f7-311">Il définit ensuite la <xref:System.Windows.Forms.Control.BackgroundImage%2A> et redimensionne le bouton à la même taille que le <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-311">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-312">L’exemple définit ensuite la <xref:System.Windows.Forms.Control.TabStop%2A> à `true` et définit le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-312">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="d11f7-313">Enfin, il ajoute un gestionnaire d’événements pour gérer le <xref:System.Windows.Forms.Control.Click> événements du bouton.</span><span class="sxs-lookup"><span data-stu-id="d11f7-313">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="d11f7-314">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.ImageList> nommé `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-314">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-315"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-315"><para>When overriding the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-316">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-316">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-317">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.BackgroundImage%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-317">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-318">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-318">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-319">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-319">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-320">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-320">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-321">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-321">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-322">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-322">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-323">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-323">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-324">Obtient ou définit la disposition d'image d'arrière-plan définie dans l'énumération <see cref="T:System.Windows.Forms.ImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-324">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="d11f7-325">L'une des valeurs de <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" />, <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> ou <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span><span class="sxs-lookup"><span data-stu-id="d11f7-325">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span></span> <span data-ttu-id="d11f7-326"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> est la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-326"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-327">Utilisez le <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> propriété pour spécifier la position et le comportement d’une image que vous avez placé sur un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-327">Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control.</span></span> <span data-ttu-id="d11f7-328"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> prend effet uniquement si le <xref:System.Windows.Forms.Control.BackgroundImage%2A> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="d11f7-328"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.</span></span>  
  
 <span data-ttu-id="d11f7-329">Vous pouvez augmenter les performances pour les grandes images si vous définissez <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> une valeur autre que <xref:System.Windows.Forms.ImageLayout.Tile>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-329">You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d11f7-330">La valeur d'énumération spécifiée n'existe pas.</span><span class="sxs-lookup"><span data-stu-id="d11f7-330">The specified enumeration value does not exist.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-331">Se produit quand la propriété <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-331">Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-332">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> propriété est modifiée par programmation ou par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-332">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-333">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-333">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-334">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-334">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-335">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-335">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span> <span data-ttu-id="d11f7-336">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-336">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-337">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-337">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-338">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-338">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-339">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-339">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#9)]
 [!code-vb[System.Windows.Forms.EventExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-340">Exécute un délégué de manière asynchrone sur le thread sur lequel le handle sous-jacent du contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-340">Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate -&gt; IAsyncResult" Usage="control.BeginInvoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d11f7-341">Délégué vers une méthode qui n'accepte pas de paramètres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-341">A delegate to a method that takes no parameters.</span></span></param>
        <summary><span data-ttu-id="d11f7-342">Exécute le délégué spécifié de manière asynchrone sur le thread sur lequel le handle sous-jacent du contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-342">Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="d11f7-343"><see cref="T:System.IAsyncResult" /> qui représente le résultat de l'opération <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-343">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-344">Le délégué est appelé de façon asynchrone, et cette méthode est retournée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-344">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="d11f7-345">Vous pouvez appeler cette méthode à partir de n’importe quel thread, même le thread qui détient le handle du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-345">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="d11f7-346">Si le handle du contrôle n’existe pas encore, cette méthode recherche dans la chaîne du contrôle parent jusqu'à ce qu’il trouve un contrôle ou un formulaire avec un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-346">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="d11f7-347">Si aucun handle approprié ne peut être trouvé, <xref:System.Windows.Forms.Control.BeginInvoke%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="d11f7-347">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="d11f7-348">Exceptions au sein de la méthode du délégué sont considérés comme non interceptées et sera envoyé au gestionnaire d’exceptions non interceptées de l’application.</span><span class="sxs-lookup"><span data-stu-id="d11f7-348">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="d11f7-349">Vous pouvez appeler <xref:System.Windows.Forms.Control.EndInvoke%2A> pour récupérer la valeur de retour du délégué, si nécessaire, mais cela n’est pas obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-349">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="d11f7-350"><xref:System.Windows.Forms.Control.EndInvoke%2A> bloque jusqu'à ce que la valeur de retour peut être récupérée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-350"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-351">La plupart des méthodes sur un contrôle peut uniquement être appelée à partir du thread dans lequel le contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-351">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="d11f7-352">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-352">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-353">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-353">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-354">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-354">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="d11f7-355">Les méthodes invoke appellent toujours leurs rappels sur le thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-355">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-356">Une exception peut être levée si le thread qui doit traiter le message n’est plus actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-356">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-357">L’exemple de code suivant montre une utilisation de la <xref:System.Windows.Forms.Control.BeginInvoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-357">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#2)]
 [!code-csharp[Control_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#2)]
 [!code-vb[Control_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d11f7-358">Aucun handle de fenêtre approprié n'a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-358">No appropriate window handle can be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-359">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-359">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-360">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-360">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult&#xA;override this.BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="control.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d11f7-361">Délégué vers une méthode qui accepte des paramètres du même nombre et du même type que ceux contenus dans le paramètre <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-361">A delegate to a method that takes parameters of the same number and type that are contained in the <c>args</c> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="d11f7-362">Tableau d’objets à passer comme arguments à la méthode donnée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-362">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="d11f7-363">Peut être <see langword="null" /> si aucun argument n'est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-363">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="d11f7-364">Exécute le délégué spécifié de manière asynchrone avec les arguments spécifiés, sur le thread sur lequel le handle sous-jacent du contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-364">Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="d11f7-365"><see cref="T:System.IAsyncResult" /> qui représente le résultat de l'opération <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-365">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-366">Le délégué est appelé de façon asynchrone, et cette méthode est retournée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-366">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="d11f7-367">Vous pouvez appeler cette méthode à partir de n’importe quel thread, même le thread qui détient le handle du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-367">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="d11f7-368">Si le handle du contrôle n’existe pas encore, cette méthode recherche dans la chaîne du contrôle parent jusqu'à ce qu’il trouve un contrôle ou un formulaire avec un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-368">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="d11f7-369">Si aucun handle approprié ne peut être trouvé, <xref:System.Windows.Forms.Control.BeginInvoke%2A> lève une exception.</span><span class="sxs-lookup"><span data-stu-id="d11f7-369">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="d11f7-370">Exceptions au sein de la méthode du délégué sont considérés comme non interceptées et sera envoyé au gestionnaire d’exceptions non interceptées de l’application.</span><span class="sxs-lookup"><span data-stu-id="d11f7-370">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="d11f7-371">Vous pouvez appeler <xref:System.Windows.Forms.Control.EndInvoke%2A> pour récupérer la valeur de retour du délégué, si nécessaire, mais cela n’est pas obligatoire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-371">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="d11f7-372"><xref:System.Windows.Forms.Control.EndInvoke%2A> bloque jusqu'à ce que la valeur de retour peut être récupérée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-372"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-373">La plupart des méthodes sur un contrôle peut uniquement être appelée à partir du thread dans lequel le contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-373">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="d11f7-374">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-374">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-375">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-375">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-376">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-376">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="d11f7-377">Les méthodes invoke appellent toujours leurs rappels sur le thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-377">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-378">Une exception peut être levée si le thread qui doit traiter le message n’est plus actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-378">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-379">L’exemple de code suivant montre une utilisation de la <xref:System.Windows.Forms.Control.BeginInvoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-379">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#1)]
 [!code-csharp[Control_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#1)]
 [!code-vb[Control_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d11f7-380">Aucun handle de fenêtre approprié n'a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-380">No appropriate window handle can be found.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BindingContext As BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::BindingContext ^ BindingContext { System::Windows::Forms::BindingContext ^ get(); void set(System::Windows::Forms::BindingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.Windows.Forms.BindingContext with get, set" Usage="System.Windows.Forms.Control.BindingContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.BindingContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-381">Obtient ou définit le <see cref="T:System.Windows.Forms.BindingContext" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-381">Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-382"><see cref="T:System.Windows.Forms.BindingContext" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-382">A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-383">Le <xref:System.Windows.Forms.BindingContext> d’un <xref:System.Windows.Forms.Control> est utilisée pour retourner un seul <xref:System.Windows.Forms.BindingManagerBase> pour tous les contrôles liés aux données contenues par la <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-383">The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single <xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="d11f7-384">Le <xref:System.Windows.Forms.BindingManagerBase> conserve tous les contrôles qui sont liés à la même source de données synchronisée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-384">The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized.</span></span> <span data-ttu-id="d11f7-385">Par exemple, si le <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propriété de la <xref:System.Windows.Forms.BindingManagerBase> Spécifie l’élément dans la liste sous-jacente qui tous les contrôles liés aux données pointent vers.</span><span class="sxs-lookup"><span data-stu-id="d11f7-385">For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.</span></span>  
  
 <span data-ttu-id="d11f7-386">Pour plus d’informations sur la création d’un nouveau <xref:System.Windows.Forms.BindingContext> et en l’assignant à la <xref:System.Windows.Forms.Control.BindingContext%2A> propriété, consultez le <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-386">For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-387">L’exemple de code suivant crée quatre <xref:System.Windows.Forms.Binding> objets à lier des contrôles de cinq, un <xref:System.Windows.Forms.DateTimePicker> et quatre <xref:System.Windows.Forms.TextBox> contrôles, à plusieurs sources de données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-387">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources.</span></span> <span data-ttu-id="d11f7-388">Le <xref:System.Windows.Forms.BindingContext> est ensuite utilisé pour obtenir le <xref:System.Windows.Forms.BindingManagerBase> pour chaque source de données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-388">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-389"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.BindingContext" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.BindingContext" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.BindingContext" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-389"><para>When overriding the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BindingContext" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingContextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BindingContextChanged;" />
      <MemberSignature Language="F#" Value="member this.BindingContextChanged : EventHandler " Usage="member this.BindingContextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-390">Se produit quand la valeur de la propriété <see cref="T:System.Windows.Forms.BindingContext" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-390">Occurs when the value of the <see cref="T:System.Windows.Forms.BindingContext" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-391">Pour ajouter un nouveau <xref:System.Windows.Forms.BindingContext> à la <xref:System.Windows.Forms.Control> via la <xref:System.Windows.Forms.Control.BindingContext%2A> propriété, consultez le <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-391">To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="d11f7-392">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.BindingContext%2A> propriété est modifiée est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-392">This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-393">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-393">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-394">L’exemple de code suivant ajoute un <xref:System.EventHandler> déléguer à la <xref:System.Windows.Forms.Control.BindingContextChanged> événement d’un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-394">The following code example adds an <xref:System.EventHandler> delegate to the <xref:System.Windows.Forms.Control.BindingContextChanged> event of a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CS/source.cs#1)]
 [!code-vb[Classic Control.BindingContextChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bottom { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : int" Usage="System.Windows.Forms.Control.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-395">Obtient la distance, en pixels, entre le bord inférieur du contrôle et le bord supérieur de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-395">Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="d11f7-396"><see cref="T:System.Int32" /> représentant la distance, en pixels, entre le bord inférieur du contrôle et le bord supérieur de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-396">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-397">La valeur de cette propriété est égale à la somme de la <xref:System.Windows.Forms.Control.Top%2A> valeur de propriété et le <xref:System.Windows.Forms.Control.Height%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-397">The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.</span></span>  
  
 <span data-ttu-id="d11f7-398">Le <xref:System.Windows.Forms.Control.Bottom%2A> propriété est une propriété en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d11f7-398">The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property.</span></span> <span data-ttu-id="d11f7-399">Vous pouvez manipuler cette valeur de propriété en modifiant la valeur de la <xref:System.Windows.Forms.Control.Top%2A> ou <xref:System.Windows.Forms.Control.Height%2A> propriétés ou appeler le <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, ou <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-399">You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-400">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Bottom%2A> propriété pour définir la limite inférieure d’un <xref:System.Windows.Forms.TextBox> contrôle par rapport à la zone cliente du conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-400">The following code example uses the <xref:System.Windows.Forms.Control.Bottom%2A> property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Control.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-401">Obtient ou définit la taille et l'emplacement du contrôle comprenant ses éléments non clients, en pixels, par rapport au contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-401">Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</span></span></summary>
        <value><span data-ttu-id="d11f7-402"><see cref="T:System.Drawing.Rectangle" /> en pixels relatif au contrôle parent qui représente la taille et l'emplacement du contrôle comprenant ses éléments non clients.</span><span class="sxs-lookup"><span data-stu-id="d11f7-402">A <see cref="T:System.Drawing.Rectangle" /> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-403">Les limites du contrôle incluent les éléments non clients tels que les barres de défilement, les bordures, les barres de titre et les menus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-403">The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="d11f7-404">Le <xref:System.Windows.Forms.Control.SetBoundsCore%2A> méthode est appelée pour définir le <xref:System.Windows.Forms.Control.Bounds%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-404">The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property.</span></span> <span data-ttu-id="d11f7-405">Le <xref:System.Windows.Forms.Control.Bounds%2A> propriété n’est pas toujours modifiée via son `set` méthode afin que vous devez remplacer le <xref:System.Windows.Forms.Control.SetBoundsCore%2A> méthode pour vous assurer que votre code est exécuté lorsque le <xref:System.Windows.Forms.Control.Bounds%2A> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="d11f7-405">The <xref:System.Windows.Forms.Control.Bounds%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-406">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-406">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-407">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-407">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Left" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringToFront();" />
      <MemberSignature Language="F#" Value="member this.BringToFront : unit -&gt; unit" Usage="control.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-408">Fait passer le contrôle au premier rang de l'ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-408">Brings the control to the front of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-409">Le contrôle est déplacé vers l’avant de l’ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-409">The control is moved to the front of the z-order.</span></span> <span data-ttu-id="d11f7-410">Si le contrôle est un enfant d’un autre contrôle, le contrôle enfant est déplacé au début de l’ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-410">If the control is a child of another control, the child control is moved to the front of the z-order.</span></span> <span data-ttu-id="d11f7-411"><xref:System.Windows.Forms.Control.BringToFront%2A> effectue pas de marque un contrôle un contrôle de niveau supérieur et il ne déclenche pas le <xref:System.Windows.Forms.Control.Paint> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-411"><xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-412">L’exemple de code suivant garantit qu’un <xref:System.Windows.Forms.Label> est visible en appelant son <xref:System.Windows.Forms.Control.BringToFront%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-412">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="d11f7-413">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Panel> nommé `panel1`et un <xref:System.Windows.Forms.Label> nommé `label1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-413">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SendToBack" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected virtual bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.Control.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-414">Obtient une valeur qui indique si une valeur active peut être affectée à la propriété <see cref="P:System.Windows.Forms.Control.ImeMode" /> pour activer la prise en charge de l'éditeur de méthode d'entrée (IME).</span><span class="sxs-lookup"><span data-stu-id="d11f7-414">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="d11f7-415"><see langword="true" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="d11f7-415"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-416">Classes dérivées peuvent substituer cette propriété pour retourner `false` si IME n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="d11f7-416">Derived classes can override this property to return `false` if IME is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public bool CanFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFocus : bool" Usage="System.Windows.Forms.Control.CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-417">Obtient une valeur indiquant si le contrôle peut recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-417">Gets a value indicating whether the control can receive focus.</span></span></summary>
        <value><span data-ttu-id="d11f7-418"><see langword="true" /> si le contrôle peut recevoir le focus ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-418"><see langword="true" /> if the control can receive focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-419">Pour un contrôle devant recevoir le focus d’entrée, le contrôle doit avoir un handle qui lui est assigné et le <xref:System.Windows.Forms.Control.Visible%2A> et <xref:System.Windows.Forms.Control.Enabled%2A> propriétés doivent avoir la valeur `true` pour le contrôle et tous ses contrôles parents et le contrôle doivent être un formulaire ou le parent le plus éloigné du contrôle doit être un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-419">In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-420">L’exemple de code suivant définit le focus spécifié <xref:System.Windows.Forms.Control>, si elle peut recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-420">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="CanRaiseEvents">
      <MemberSignature Language="C#" Value="protected override bool CanRaiseEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRaiseEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanRaiseEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanRaiseEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRaiseEvents : bool" Usage="System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-421">Détermine si les événements peuvent être déclenchés sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-421">Determines if events can be raised on the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-422"><see langword="true" /> si le contrôle est hébergé comme un contrôle ActiveX dont les événements ne sont pas gelés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-422"><see langword="true" /> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-423">Si ce contrôle est hébergé comme un contrôle ActiveX, cette propriété retournera `false` si le contrôle ActiveX comprend ses événements figés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-423">If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.Control.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-424">Obtient une valeur indiquant si le contrôle peut être sélectionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-424">Gets a value indicating whether the control can be selected.</span></span></summary>
        <value><span data-ttu-id="d11f7-425"><see langword="true" /> si le contrôle peut être sélectionné ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-425"><see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-426">Cette propriété retourne `true` si le `Selectable` valeur <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> a la valeur `true`, est contenu dans un autre contrôle, le contrôle proprement dit est visible et activé, et tous ses contrôles parents sont visibles et activés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-426">This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</span></span>  
  
 <span data-ttu-id="d11f7-427">Les contrôles Windows Forms dans la liste suivante ne sont pas sélectionnables et retourne la valeur de `false` pour le <xref:System.Windows.Forms.Control.CanSelect%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-427">The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property.</span></span> <span data-ttu-id="d11f7-428">Contrôles dérivés de ces contrôles ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-428">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="d11f7-429"><xref:System.Windows.Forms.LinkLabel> (lorsqu’il n’existe aucun lien présent dans le contrôle)</span><span class="sxs-lookup"><span data-stu-id="d11f7-429"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-430">L’exemple de code suivant sélectionne le texte spécifié <xref:System.Windows.Forms.Control>, s’il est sélectionnable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-430">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Capture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Property Capture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Capture { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Capture : bool with get, set" Usage="System.Windows.Forms.Control.Capture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-431">Obtient ou définit une valeur indiquant si le contrôle a capturé la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-431">Gets or sets a value indicating whether the control has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="d11f7-432"><see langword="true" /> si le contrôle a capturé la souris ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-432"><see langword="true" /> if the control has captured the mouse; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-433">Lorsqu’un contrôle a capturé la souris, il reçoit l’entrée de la souris si le curseur se trouve dans ses limites.</span><span class="sxs-lookup"><span data-stu-id="d11f7-433">When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="d11f7-434">La souris est capturée en général uniquement pendant les opérations de glisser.</span><span class="sxs-lookup"><span data-stu-id="d11f7-434">The mouse is typically only captured during drag operations.</span></span>  
  
 <span data-ttu-id="d11f7-435">Seule la fenêtre de premier plan peut capturer la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-435">Only the foreground window can capture the mouse.</span></span> <span data-ttu-id="d11f7-436">Lorsqu’une fenêtre d’arrière-plan tente de le faire, la fenêtre reçoit des messages uniquement pour les événements de souris qui se produisent lorsque le curseur de la souris se trouve dans la partie visible de la fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-436">When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</span></span> <span data-ttu-id="d11f7-437">En outre, même si la fenêtre de premier plan a capturé la souris, l’utilisateur peut toujours cliquer sur une autre fenêtre, plaçant au premier plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-437">Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</span></span>  
  
 <span data-ttu-id="d11f7-438">Lorsque la souris est capturée, les touches de raccourci ne doivent pas fonctionner.</span><span class="sxs-lookup"><span data-stu-id="d11f7-438">When the mouse is captured, shortcut keys should not work.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-439">L’exemple de code suivant montre le <xref:System.Windows.Forms.Control.Capture%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-439">The following code example demonstrates the <xref:System.Windows.Forms.Control.Capture%2A> property.</span></span> <span data-ttu-id="d11f7-440">Pour exécuter cet exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.Label> nommé label1 et deux <xref:System.Windows.Forms.ListBox> contrôles nommés listbox1 et listbox2.</span><span class="sxs-lookup"><span data-stu-id="d11f7-440">To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2.</span></span> <span data-ttu-id="d11f7-441">Vérifiez que le formulaire et contrôles <xref:System.Windows.Forms.Control.MouseDown> événement est associé à la méthode dans cet exemple.</span><span class="sxs-lookup"><span data-stu-id="d11f7-441">Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlCapture#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-442">pour toutes les fenêtres définir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-442">for all windows to set this property value.</span></span> <span data-ttu-id="d11f7-443">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-443">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Windows.Forms.Control.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-444">Obtient ou définit une valeur indiquant si le contrôle entraîne une validation sur tout contrôle nécessitant une validation lorsqu’il reçoit le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-444">Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</span></span></summary>
        <value><span data-ttu-id="d11f7-445"><see langword="true" /> si le contrôle entraîne une validation sur tout contrôle nécessitant une validation quand il reçoit le focus ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-445"><see langword="true" /> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-446">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-446">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-447">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-447">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-448">Le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété valeur est généralement définie sur `false` pour des contrôles tels qu’un bouton aide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-448">The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-449">L’exemple de code suivant utilise la classe dérivée <xref:System.Windows.Forms.TextBox> et valide une adresse de messagerie entrée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-449">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="d11f7-450">Si l’adresse de messagerie n’est pas au format standard (contenant «@" and ". »), la validation échoue, une <xref:System.Windows.Forms.ErrorProvider> icône s’affiche, et l’événement est annulé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-450">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="d11f7-451">Un des boutons sur le formulaire a son <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété définie sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-451">One of the buttons on the form has its <xref:System.Windows.Forms.Control.CausesValidation%2A> property set to `false`.</span></span> <span data-ttu-id="d11f7-452">En cliquant sur ou de définir le focus à ce bouton ne déclenche pas de validation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-452">Clicking or setting focus to this button does not trigger validation.</span></span> <span data-ttu-id="d11f7-453">Cet exemple suppose qu’un <xref:System.Windows.Forms.TextBox>, un <xref:System.Windows.Forms.ErrorProvider> contrôle et un <xref:System.Windows.Forms.Button> ont été créés sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-453">This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#2)]
 [!code-csharp[Control.Validating#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#2)]
 [!code-vb[Control.Validating#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-454">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.CausesValidation" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-454">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-455">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-455">This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-456">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-456">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ChangeUICues" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChangeUICues As UICuesEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::UICuesEventHandler ^ ChangeUICues;" />
      <MemberSignature Language="F#" Value="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " Usage="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-457">Se produit lorsque les indications visuelles du focus ou de l'interface utilisateur clavier changent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-457">Occurs when the focus or keyboard user interface (UI) cues change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-458">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-458">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-459">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-459">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-460">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.ChangeUICues> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-460">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span> <span data-ttu-id="d11f7-461">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-461">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-462">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-462">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-463">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-463">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-464">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.ChangeUICues> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-464">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CheckForIllegalCrossThreadCalls">
      <MemberSignature Language="C#" Value="public static bool CheckForIllegalCrossThreadCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckForIllegalCrossThreadCalls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckForIllegalCrossThreadCalls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckForIllegalCrossThreadCalls : bool with get, set" Usage="System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-465">Obtient ou définit une valeur indiquant s'il faut intercepter des appels sur le thread incorrect qui accède à la propriété <see cref="P:System.Windows.Forms.Control.Handle" /> d'un contrôle lorsqu'une application est en cours de débogage.</span><span class="sxs-lookup"><span data-stu-id="d11f7-465">Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <see cref="P:System.Windows.Forms.Control.Handle" /> property when an application is being debugged.</span></span></summary>
        <value><span data-ttu-id="d11f7-466"><see langword="true" /> si des appels sur le thread incorrect sont interceptés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-466"><see langword="true" /> if calls on the wrong thread are caught; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-467">Lorsqu’un thread autre que le thread de création d’un contrôle tente d’accéder à l’une des méthodes ou des propriétés de ce contrôle, il entraîne souvent des résultats imprévisibles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-467">When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</span></span> <span data-ttu-id="d11f7-468">Une activité de thread non valide courante est un appel sur le thread incorrect qui accède à du contrôle <xref:System.Windows.Forms.Control.Handle%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-468">A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="d11f7-469">Définissez <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> à `true` pour rechercher et diagnostiquer plus facilement de cette activité de thread pendant le débogage.</span><span class="sxs-lookup"><span data-stu-id="d11f7-469">Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-470">Se produit suite à un clic sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-470">Occurs when the control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-471">Le <xref:System.Windows.Forms.Control.Click> événement passe une <xref:System.EventArgs> à son gestionnaire d’événements, par conséquent, il indique uniquement qu’un clic s’est produite.</span><span class="sxs-lookup"><span data-stu-id="d11f7-471">The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred.</span></span> <span data-ttu-id="d11f7-472">Si vous avez besoin des informations plus spécifiques de la souris (bouton, le nombre de clics, rotation de la roulette ou emplacement), utilisez le <xref:System.Windows.Forms.Control.MouseClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-472">If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="d11f7-473">Toutefois, le <xref:System.Windows.Forms.Control.MouseClick> événement n’est pas déclenché si le clic est provoqué par action autre que celle de la souris, par exemple en appuyant sur la touche ENTRÉE.</span><span class="sxs-lookup"><span data-stu-id="d11f7-473">However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="d11f7-474">Un double-clic est déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-474">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="d11f7-475">L'utilisateur peut définir le délai qui détermine si les clics effectués sur un bouton de souris sont considérés comme un double-clic ou comme deux clics.</span><span class="sxs-lookup"><span data-stu-id="d11f7-475">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="d11f7-476">Le <xref:System.Windows.Forms.Control.Click> événement est déclenché chaque fois qu’un double-clic est effectué sur un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-476">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="d11f7-477">Par exemple, si vous avez des gestionnaires d’événements pour le <xref:System.Windows.Forms.Control.Click> et <xref:System.Windows.Forms.Control.DoubleClick> événements d’un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.Control.Click> et <xref:System.Windows.Forms.Control.DoubleClick> sont déclenchés lorsqu’un double-clic est effectué sur le formulaire et les deux méthodes sont appelées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-477">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="d11f7-478">Si un contrôle utilisateur double-clique sur et que contrôle ne prend pas en charge la <xref:System.Windows.Forms.Control.DoubleClick> événement, le <xref:System.Windows.Forms.Control.Click> peut être déclenché deux fois.</span><span class="sxs-lookup"><span data-stu-id="d11f7-478">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="d11f7-479">Vous devez définir le `StandardClick` valeur <xref:System.Windows.Forms.ControlStyles> à `true` pour cet événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-479">You must set the `StandardClick` value of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-480">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-480">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-481">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-481">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-482">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-482">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-483">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-483">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-484">Le code suivant montre l’exemple le <xref:System.Windows.Forms.Control.Click> événement dans un gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-484">The following code example shows the <xref:System.Windows.Forms.Control.Click> event in an event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-485"><para>Héritage d’un contrôle Windows Forms standard et en modifiant le <see langword="StandardClick" /> ou <see langword="StandardDoubleClick" /> les valeurs de <see cref="T:System.Windows.Forms.ControlStyles" /> à <see langword="true" /> peut provoquer un comportement inattendu ou carrément n’ont aucun effet si le contrôle ne prend pas en charge la <see cref="E:System.Windows.Forms.Control.Click" /> ou <see cref="E:System.Windows.Forms.Control.DoubleClick" />événements.  Le tableau suivant répertorie les contrôles Windows Forms et les événements (<see cref="E:System.Windows.Forms.Control.Click" /> ou <see cref="E:System.Windows.Forms.Control.DoubleClick" />) est déclenché en réponse à l’action de la souris spécifiée.  <list type="table"><listheader><term> Contrôle </term> <description> gauche clic de souris </description> <description> gauche de la souris, double-cliquez sur </description> <description> avec le bouton droit clic de souris </description> <description> droit de la souris, double-cliquez sur </description> <description> Intermédiaire du clic de souris </description> <description> central de la souris, double-cliquez sur </description> <description> clic de souris XButton1 </description> <description> XButton1 de la souris </description> <description> XButton2 Clic de souris </description> <description> XButton2 de la souris </description> </listheader> <item> <term> <see cref="T:System.Windows.Forms.MonthCalendar" />, <see cref="T:System.Windows.Forms.DateTimePicker" />, <see cref="T:System.Windows.Forms.HScrollBar" />, <see cref="T:System.Windows.Forms.VScrollBar" /> </term> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> </item> <item> <term> <see cref="T:System.Windows.Forms.Button" />, <see cref="T:System.Windows.Forms.CheckBox" />, <see cref="T:System.Windows.Forms.RichTextBox" />, <see cref="T:System.Windows.Forms.RadioButton" /> </term> <description> Cliquez sur </description> <description> cliquez sur, cliquez sur </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> </item> <item> <term> <see cref="T:System.Windows.Forms.ListBox" />, <see cref="T:System.Windows.Forms.CheckedListBox" />, <see cref="T:System.Windows.Forms.ComboBox" /> </term> <description> Cliquez sur </description> <description> Click, DoubleClick </description> <description> aucun </description> <description> aucun </description> <description> none  </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> none  </description> </item> <item> <term> <see cref="T:System.Windows.Forms.TextBox" />, <see cref="T:System.Windows.Forms.DomainUpDown" />, <see cref="T:System.Windows.Forms.NumericUpDown" /> </term> <description> Cliquez sur </description> <description>  Cliquez sur, DoubleClick </description> <description> aucun </description> <description> none</description>&lt;s&gt;&lt;/s&gt;</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-485"><para>Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.  The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.  <list type="table"><listheader><term> Control  </term><description> Left Mouse Click  </description><description> Left Mouse Double Click  </description><description> Right Mouse Click  </description><description> Right Mouse Double Click  </description><description> Middle Mouse Click  </description><description> Middle Mouse Double Click  </description><description> XButton1 Mouse Click  </description><description> XButton1 Mouse Double-Click  </description><description> XButton2 Mouse Click  </description><description> XButton2 Mouse Double-Click  </description></listheader><item><term><see cref="T:System.Windows.Forms.MonthCalendar" />,  <see cref="T:System.Windows.Forms.DateTimePicker" />,  <see cref="T:System.Windows.Forms.HScrollBar" />,  <see cref="T:System.Windows.Forms.VScrollBar" /></term><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.Button" />,  <see cref="T:System.Windows.Forms.CheckBox" />,  <see cref="T:System.Windows.Forms.RichTextBox" />,  <see cref="T:System.Windows.Forms.RadioButton" /></term><description> Click  </description><description> Click, Click  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.ListBox" />,  <see cref="T:System.Windows.Forms.CheckedListBox" />,  <see cref="T:System.Windows.Forms.ComboBox" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.TextBox" />,  <see cref="T:System.Windows.Forms.DomainUpDown" />,  <see cref="T:System.Windows.Forms.NumericUpDown" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term> \* <see cref="T:System.Windows.Forms.TreeView" />,  \* <see cref="T:System.Windows.Forms.ListView" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.ProgressBar" />,  <see cref="T:System.Windows.Forms.TrackBar" /></term><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description></item><item><term><see cref="T:System.Windows.Forms.Form" />,  <see cref="T:System.Windows.Forms.DataGrid" />,  <see cref="T:System.Windows.Forms.Label" />,  <see cref="T:System.Windows.Forms.LinkLabel" />,  <see cref="T:System.Windows.Forms.Panel" />,  <see cref="T:System.Windows.Forms.GroupBox" />,  <see cref="T:System.Windows.Forms.PictureBox" />,  <see cref="T:System.Windows.Forms.Splitter" />,  <see cref="T:System.Windows.Forms.StatusBar" />,  <see cref="T:System.Windows.Forms.ToolBar" />,  <see cref="T:System.Windows.Forms.TabPage" />,  \*\* <see cref="T:System.Windows.Forms.TabControl" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description></item></list>  \* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).  \*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-486">Obtient le rectangle qui représente la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-486">Gets the rectangle that represents the client area of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-487"><see cref="T:System.Drawing.Rectangle" /> qui représente la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-487">A <see cref="T:System.Drawing.Rectangle" /> that represents the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-488">La zone cliente d’un contrôle est les limites du contrôle, moins les éléments non clients tels que les barres de défilement, les bordures, les barres de titre et les menus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-488">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span>  
  
 <span data-ttu-id="d11f7-489">Étant donné que les coordonnées clientes sont par rapport à l’angle supérieur gauche de la zone cliente du contrôle, les coordonnées du coin supérieur gauche du rectangle retourné par cette propriété sont (0,0).</span><span class="sxs-lookup"><span data-stu-id="d11f7-489">Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</span></span> <span data-ttu-id="d11f7-490">Vous pouvez utiliser cette propriété pour obtenir la taille et les coordonnées de la zone cliente du contrôle pour des tâches telles que le dessin sur la surface du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-490">You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="d11f7-491">Pour plus d’informations sur le dessin de contrôles, consultez [rendu d’un contrôle de formulaires Windows](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-491">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-492">L’exemple de code suivant active le défilement automatique pour un formulaire, redimensionne le formulaire et permet de s’assurer qu’un bouton reste visible une fois que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-492">The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</span></span> <span data-ttu-id="d11f7-493">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Button> nommé `button2` dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-493">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#2)]
 [!code-csharp[Windows.Forms.Control Member5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#2)]
 [!code-vb[Windows.Forms.Control Member5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-494">Obtient ou définit la hauteur et la largeur de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-494">Gets or sets the height and width of the client area of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-495"><see cref="T:System.Drawing.Size" /> qui représente les dimensions de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-495">A <see cref="T:System.Drawing.Size" /> that represents the dimensions of the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-496">La zone cliente d’un contrôle est les limites du contrôle, moins les éléments non clients tels que les barres de défilement, les bordures, les barres de titre et les menus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-496">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="d11f7-497">Le <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> méthode est appelée pour définir le <xref:System.Windows.Forms.Control.ClientSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-497">The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A> property.</span></span> <span data-ttu-id="d11f7-498">Le <xref:System.Windows.Forms.Control.ClientSize%2A> propriété n’est pas toujours modifiée via son `set` méthode afin que vous devez remplacer le <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> méthode pour vous assurer que votre code est exécuté lorsque le <xref:System.Windows.Forms.Control.ClientSize%2A> propriété est définie.</span><span class="sxs-lookup"><span data-stu-id="d11f7-498">The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.</span></span>  
  
 <span data-ttu-id="d11f7-499">Le <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> et <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> représentent les propriétés de la largeur et la hauteur de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-499">The <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> and <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> properties represent the width and height of the client area of the control.</span></span> <span data-ttu-id="d11f7-500">Vous pouvez utiliser cette propriété pour obtenir la taille de la zone cliente du contrôle pour des tâches telles que le dessin sur la surface du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-500">You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="d11f7-501">Pour plus d’informations sur le dessin de contrôles, consultez [rendu d’un contrôle de formulaires Windows](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-501">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-502">Impossible de lier des paramètres de l’application à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-502">You cannot bind application settings to this property.</span></span> <span data-ttu-id="d11f7-503">Pour plus d’informations sur les paramètres de l’application, consultez [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-503">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-504">L’exemple de code suivant redimensionne le contrôle spécifié pour le contrôle sera adapter son texte mis en forme.</span><span class="sxs-lookup"><span data-stu-id="d11f7-504">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="d11f7-505">Le texte mis en forme est la <xref:System.Windows.Forms.Control.Text%2A> attribuée de propriété avec le contrôle du <xref:System.Windows.Forms.Control.Font%2A> appliqué au texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-505">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="d11f7-506">Le `AutoSizeControl` méthode dans cet exemple présente également un `textPadding` paramètre qui représente la marge à appliquer à tous les bords du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-506">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="d11f7-507">Pour rendre la marge intérieure, alignez le texte avec le <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> valeur, si votre contrôle prend en charge.</span><span class="sxs-lookup"><span data-stu-id="d11f7-507">To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> value, if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ClientSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ClientSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ClientSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.ClientSizeChanged : EventHandler " Usage="member this.ClientSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-508">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.ClientSize" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-508">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-509">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-509">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-510">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-510">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-511">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.ClientSizeChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-511">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span> <span data-ttu-id="d11f7-512">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-512">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-513">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-513">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-514">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-514">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-515">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.ClientSizeChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-515">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#12)]
 [!code-vb[System.Windows.Forms.EventExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Windows.Forms.Control.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("ControlCompanyNameDescr")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-516">Obtient le nom de la société ou du créateur de l'application contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-516">Gets the name of the company or creator of the application containing the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-517">Nom de la société ou créateur de l'application contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-517">The company name or creator of the application containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-518">Le <xref:System.Windows.Forms.Control.CompanyName%2A> propriété est une propriété en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d11f7-518">The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property.</span></span> <span data-ttu-id="d11f7-519">Pour modifier la valeur de cette propriété, définissez la <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> valeur de propriété de la <xref:System.Reflection.AssemblyCompanyAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-519">To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>.</span></span> <span data-ttu-id="d11f7-520">La ligne suivante de jeux de code c# le <xref:System.Windows.Forms.Control.CompanyName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-520">The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.</span></span>  
  
```csharp  
[assembly: AssemblyCompany("Microsoft")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-521">Il est fortement recommandé de fournir le nom de la société, le nom de produit et la version de produit pour votre application.</span><span class="sxs-lookup"><span data-stu-id="d11f7-521">It is strongly recommended that you provide the company name, product name, and product version for your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-522">L’exemple de code suivant affiche des informations sur l’application dans un <xref:System.Windows.Forms.Label> contenus par un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-522">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-523">Cet exemple requiert que le <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> et <xref:System.Windows.Forms.Control.ProductVersion%2A> ont été définies.</span><span class="sxs-lookup"><span data-stu-id="d11f7-523">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyCompanyAttribute.Company" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ctl As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="control.Contains ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="d11f7-524">
          <see cref="T:System.Windows.Forms.Control" /> à évaluer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-524">The <see cref="T:System.Windows.Forms.Control" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="d11f7-525">Récupère une valeur indiquant si le contrôle spécifié est un enfant du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-525">Retrieves a value indicating whether the specified control is a child of the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-526"><see langword="true" /> si le contrôle spécifié est un enfant du contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-526"><see langword="true" /> if the specified control is a child of the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-527">L’exemple de code suivant garantit qu’un <xref:System.Windows.Forms.Label> est visible en appelant son <xref:System.Windows.Forms.Control.BringToFront%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-527">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="d11f7-528">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.Panel> nommé `panel1`et un <xref:System.Windows.Forms.Label> nommé `label1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-528">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFocus">
      <MemberSignature Language="C#" Value="public bool ContainsFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContainsFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsFocus : bool" Usage="System.Windows.Forms.Control.ContainsFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-529">Obtient une valeur indiquant si le contrôle, ou l'un de ses contrôles enfants, a actuellement le focus d'entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-529">Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</span></span></summary>
        <value><span data-ttu-id="d11f7-530"><see langword="true" /> si le contrôle, ou l'un de ses contrôles enfants, a actuellement le focus d'entrée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-530"><see langword="true" /> if the control or one of its child controls currently has the input focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-531">Vous pouvez utiliser cette propriété pour déterminer si un contrôle ou l’un des contrôles qu’il a le focus d’entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-531">You can use this property to determine whether a control or any of the controls contained within it has the input focus.</span></span> <span data-ttu-id="d11f7-532">Pour déterminer si le contrôle a le focus, quelle que soit l’un de ses contrôles enfants ait le focus, utilisez le <xref:System.Windows.Forms.Control.Focused%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-532">To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property.</span></span> <span data-ttu-id="d11f7-533">Pour donner le focus d’entrée à un contrôle, utilisez la <xref:System.Windows.Forms.Control.Focus%2A> ou <xref:System.Windows.Forms.Control.Select%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-533">To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.Control.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-534">Obtient ou définit le menu contextuel associé au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-534">Gets or sets the shortcut menu associated with the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-535"><see cref="T:System.Windows.Forms.ContextMenu" /> qui représente le menu contextuel associé au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-535">A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-536">Utilisez un menu contextuel à donner des options de menu de contexte spécifiques aux utilisateurs quand ils avec le bouton droit sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-536">Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-537">Le code suivant exemple affiche le <xref:System.Windows.Forms.ContextMenu> affectée à un <xref:System.Windows.Forms.TreeView> lorsque le bouton droit de la souris est cliqué et publié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-537">The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released.</span></span> <span data-ttu-id="d11f7-538">Ce code nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TreeView> dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-538">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it.</span></span> <span data-ttu-id="d11f7-539">Elle est également nécessaire que le <xref:System.Windows.Forms.TreeView> a un <xref:System.Windows.Forms.ContextMenu> affecté à ses <xref:System.Windows.Forms.Control.ContextMenu%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-539">It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its <xref:System.Windows.Forms.Control.ContextMenu%2A> property.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#5)]
 [!code-csharp[Windows.Forms.Control Properties2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#5)]
 [!code-vb[Windows.Forms.Control Properties2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-540"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-540"><para>When overriding the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuChanged : EventHandler " Usage="member this.ContextMenuChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-541">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.ContextMenu" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-541">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-542">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.ContextMenu%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-542">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-543">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-543">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-544">L’exemple de code suivant affiche un message lorsqu’une modification se produit sur le menu contextuel.</span><span class="sxs-lookup"><span data-stu-id="d11f7-544">The following code example displays a message when a change occurs to the shortcut menu.</span></span>  
  
 [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CPP/control_contextmenu_creategraphics.cpp#2)]
 [!code-csharp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CS/control_contextmenu_creategraphics.cs#2)]
 [!code-vb[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/VB/control_contextmenu_creategraphics.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-545">Obtient ou définit le <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associé à ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-545">Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.</span></span></summary>
        <value><span data-ttu-id="d11f7-546"><see cref="T:System.Windows.Forms.ContextMenuStrip" /> pour ce contrôle, ou <see langword="null" /> s'il n'y a aucun <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-546">The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or <see langword="null" /> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span></span> <span data-ttu-id="d11f7-547">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-547">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-548">Si un <xref:System.Windows.Forms.ContextMenu> a également été assigné au contrôle, le <xref:System.Windows.Forms.ContextMenu> est prioritaire sur la <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-548">If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-549">L’exemple de code suivant montre comment ajouter trois <xref:System.Windows.Forms.ToolStripMenuItem> des objets sur un <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-549">The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="d11f7-550">En outre il montre comment définir le <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> propriété du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-550">In addition it demonstrates setting the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property of the form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuStripChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStripChanged : EventHandler " Usage="member this.ContextMenuStripChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-551">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-551">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-552">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-552">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-553">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-553">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-554">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.ContextMenuStripChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-554">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span> <span data-ttu-id="d11f7-555">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-555">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-556">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-556">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-557">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-557">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-558">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.ContextMenuStripChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-558">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#14)]
 [!code-vb[System.Windows.Forms.EventExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-559">Se produit quand un nouveau contrôle est ajouté à <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-559">Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-560">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-560">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-561">Le code suivant exemple utilise <xref:System.Windows.Forms.Control.ControlAdded> pour ajouter un contrôle à un formulaire et affiche le nom du contrôle ajouté dans un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-561">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-562">Se produit quand un contrôle est supprimé de <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-562">Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-563">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-563">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-564">Le code suivant exemple utilise <xref:System.Windows.Forms.Control.ControlRemoved> pour supprimer un contrôle à partir d’un formulaire et affiche le nom du contrôle supprimé dans un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-564">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control/ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control::ControlCollection ^ Controls { System::Windows::Forms::Control::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.Control.ControlCollection" Usage="System.Windows.Forms.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-565">Obtient la collection de contrôles contenus dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-565">Gets the collection of controls contained within the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-566"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> représentant la collection de contrôles contenus dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-566">A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-567">Un <xref:System.Windows.Forms.Control> peut agir en tant que parent pour une collection de contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-567">A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls.</span></span> <span data-ttu-id="d11f7-568">Par exemple, lorsque plusieurs contrôles sont ajoutés à un <xref:System.Windows.Forms.Form>, chacun des contrôles est un membre de la <xref:System.Windows.Forms.Control.ControlCollection> affectée à la <xref:System.Windows.Forms.Control.Controls%2A> propriété du formulaire, qui est dérivée de la <xref:System.Windows.Forms.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-568">For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 <span data-ttu-id="d11f7-569">Vous pouvez manipuler les contrôles dans le <xref:System.Windows.Forms.Control.ControlCollection> affectée à la <xref:System.Windows.Forms.Control.Controls%2A> propriété en utilisant les méthodes disponibles dans le <xref:System.Windows.Forms.Control.ControlCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-569">You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.</span></span>  
  
 <span data-ttu-id="d11f7-570">Lorsque vous ajoutez plusieurs contrôles à un contrôle parent, il est recommandé d’appeler le <xref:System.Windows.Forms.Control.SuspendLayout%2A> méthode avant d’initialiser les contrôles à ajouter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-570">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="d11f7-571">Après avoir ajouté les contrôles au contrôle parent, appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-571">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="d11f7-572">Cela améliorera les performances des applications avec de nombreux contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-572">Doing so will increase the performance of applications with many controls.</span></span>  
  
 <span data-ttu-id="d11f7-573">Utilisez le <xref:System.Windows.Forms.Control.Controls%2A> propriété pour effectuer une itération dans tous les contrôles d’un formulaire, y compris les contrôles imbriqués.</span><span class="sxs-lookup"><span data-stu-id="d11f7-573">Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls.</span></span> <span data-ttu-id="d11f7-574">Utilisez le <xref:System.Windows.Forms.Control.GetNextControl%2A> méthode pour récupérer le contrôle enfant précédent ou suivant dans l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-574">Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order.</span></span> <span data-ttu-id="d11f7-575">Utilisez le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propriété à obtenir ou définir le contrôle actif d’un contrôle conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-575">Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-576">Le code suivant exemple supprime un <xref:System.Windows.Forms.Control> à partir de la <xref:System.Windows.Forms.Control.ControlCollection> de la classe dérivée <xref:System.Windows.Forms.Panel> si elle est membre de la collection.</span><span class="sxs-lookup"><span data-stu-id="d11f7-576">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="d11f7-577">L’exemple nécessite que vous avez créé un <xref:System.Windows.Forms.Panel>, un <xref:System.Windows.Forms.Button>et au moins un <xref:System.Windows.Forms.RadioButton> control sur un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-577">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-578">Le <xref:System.Windows.Forms.RadioButton> ou les contrôles sont ajoutés à la <xref:System.Windows.Forms.Panel> contrôle et le <xref:System.Windows.Forms.Panel> contrôle ajouté à la <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-578">The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-579">Lorsque le bouton est activé, la case d’option nommée `removeButton` est supprimé de la <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-579">When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="control.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-580">Crée un nouvel objet d'accessibilité pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-580">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-581">Nouveau <see cref="T:System.Windows.Forms.AccessibleObject" /> pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-581">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-582">Si vous n'avez pas explicitement appelé la méthode <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>, elle sera appelée lorsque la propriété <xref:System.Windows.Forms.Control.AccessibilityObject%2A> sera référencée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-582">If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-583">Pour obtenir ou définir le <xref:System.Windows.Forms.Control.AccessibilityObject%2A> propriété, vous devez ajouter une référence à la `Accessibility` assembly installé avec le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d11f7-583">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-584">L’exemple de code suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-584">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="d11f7-585">Le contrôle trace deux courbes avec une légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-585">The control plots two curves along with a legend.</span></span> <span data-ttu-id="d11f7-586">Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart.</span><span class="sxs-lookup"><span data-stu-id="d11f7-586">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="d11f7-587">Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle graphique, elle ne contient pas d’informations accessibles intégrées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-587">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="d11f7-588">Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-588">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="d11f7-589">Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.</span><span class="sxs-lookup"><span data-stu-id="d11f7-589">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="d11f7-590">Cet extrait de code montre comment substituer la <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-590">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span> <span data-ttu-id="d11f7-591">Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-591">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#2)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#2)]
 [!code-vb[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-592"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> dans une classe dérivée, n’appelez pas la classe de base <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> (méthode).</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-592"><para>When overriding <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> in a derived class, do not call the base class's <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> method.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="CreateControl">
      <MemberSignature Language="C#" Value="public void CreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControl" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateControl();" />
      <MemberSignature Language="F#" Value="member this.CreateControl : unit -&gt; unit" Usage="control.CreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-593">Force la création du contrôle visible, notamment la création du handle et de tout contrôle enfant visible.</span><span class="sxs-lookup"><span data-stu-id="d11f7-593">Forces the creation of the visible control, including the creation of the handle and any visible child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-594">Le <xref:System.Windows.Forms.Control.CreateControl%2A> méthode force un handle doit être créé pour le contrôle et ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-594">The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls.</span></span> <span data-ttu-id="d11f7-595">Cette méthode est utilisée lorsque vous avez immédiatement besoin un handle pour la manipulation du contrôle ou ses enfants ; en appelant simplement constructeur d’un contrôle ne crée pas le <xref:System.Windows.Forms.Control.Handle%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-595">This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.</span></span>  
  
 <span data-ttu-id="d11f7-596"><xref:System.Windows.Forms.Control.CreateControl%2A> ne crée pas une poignée de contrôle si le contrôle <xref:System.Windows.Forms.Control.Visible%2A> propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-596"><xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`.</span></span> <span data-ttu-id="d11f7-597">Vous pouvez appeler la <xref:System.Windows.Forms.Control.CreateHandle%2A> accès ou méthode le <xref:System.Windows.Forms.Control.Handle%2A> propriété pour créer le contrôle ne gérer indépendamment de la visibilité du contrôle, mais dans ce cas, aucune fenêtre de gestionnaires sont créés pour les enfants du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-597">You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection&#xA;override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="control.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-598">Crée une nouvelle instance de la collection de contrôles pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-598">Creates a new instance of the control collection for the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-599">Nouvelle instance de <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assignée au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-599">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-600"><para>La version de la classe de base de cette méthode ne doit pas être appelée par une classe dérivée.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-600"><para>The base class version of this method should not be called by a derived class.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public bool Created { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Created" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Created" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Created As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Created { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Created : bool" Usage="System.Windows.Forms.Control.Created" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-601">Obtient une valeur indiquant si le contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-601">Gets a value indicating whether the control has been created.</span></span></summary>
        <value><span data-ttu-id="d11f7-602"><see langword="true" /> si le contrôle a été créé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-602"><see langword="true" /> if the control has been created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-603">Le <xref:System.Windows.Forms.Control.Created%2A> retourne de la propriété `true` si le <xref:System.Windows.Forms.Control> a été créé avec succès même si le handle du contrôle ne peut-être pas été créé ou est recréé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-603">The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.OnCreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="CreateGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateGraphics();" />
      <MemberSignature Language="F#" Value="member this.CreateGraphics : unit -&gt; System.Drawing.Graphics" Usage="control.CreateGraphics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-604">Crée le <see cref="T:System.Drawing.Graphics" /> pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-604">Creates the <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-605"><see cref="T:System.Drawing.Graphics" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-605">The <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-606">Le <xref:System.Drawing.Graphics> objet que vous récupérez via la <xref:System.Windows.Forms.Control.CreateGraphics%2A> méthode ne doit pas être conservée normalement une fois que le message Windows actuel a été traité, étant donné que quoi que ce soit peint avec cet objet sera effacé avec le message WM_PAINT suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-606">The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</span></span> <span data-ttu-id="d11f7-607">Par conséquent, vous ne pouvez pas mettre en cache le <xref:System.Drawing.Graphics> objet pour une réutilisation, sauf si vous utilisez les méthodes non visual comme <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-607">Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d11f7-608">Au lieu de cela, vous devez appeler <xref:System.Windows.Forms.Control.CreateGraphics%2A> chaque fois que vous souhaitez utiliser le <xref:System.Drawing.Graphics> de l’objet, puis appelez <xref:System.Drawing.Graphics.Dispose%2A> lorsque vous avez fini de l’utiliser.</span><span class="sxs-lookup"><span data-stu-id="d11f7-608">Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it.</span></span> <span data-ttu-id="d11f7-609">Pour plus d’informations sur les messages Windows, consultez <xref:System.Windows.Forms.Control.WndProc%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-609">For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.</span></span>  
  
 <span data-ttu-id="d11f7-610">Par conception, <xref:System.Windows.Forms.Control.CreateGraphics%2A> définit la propriété sur le thread appelant et échoue si elle est appelée sur d’autres threads.</span><span class="sxs-lookup"><span data-stu-id="d11f7-610">By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-611">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-611">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-612">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-612">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-613">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-613">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-614">L’exemple de code suivant redimensionne le contrôle spécifié pour le contrôle sera adapter son texte mis en forme.</span><span class="sxs-lookup"><span data-stu-id="d11f7-614">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="d11f7-615">Le texte mis en forme est la <xref:System.Windows.Forms.Control.Text%2A> attribuée de propriété avec le contrôle du <xref:System.Windows.Forms.Control.Font%2A> appliqué au texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-615">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="d11f7-616">Le `AutoSizeControl` méthode dans cet exemple présente également un `textPadding` paramètre qui représente la marge à appliquer à tous les bords du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-616">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="d11f7-617">Pour rendre la marge intérieure, alignez le texte avec le `MiddleCenter` valeur <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> si votre contrôle prend en charge.</span><span class="sxs-lookup"><span data-stu-id="d11f7-617">To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-618">pour les sous-fenêtres sécurisées d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-618">for safe subwindows to call this method.</span></span> <span data-ttu-id="d11f7-619">Énumération associée : <see langword="SafeSubWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-619">Associated enumeration: <see langword="SafeSubWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : unit -&gt; unit&#xA;override this.CreateHandle : unit -&gt; unit" Usage="control.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-620">Crée un handle pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-620">Creates a handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-621">En général, n’appelez pas la <xref:System.Windows.Forms.Control.CreateHandle%2A> directement la méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-621">You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly.</span></span> <span data-ttu-id="d11f7-622">La méthode recommandée consiste à appeler le <xref:System.Windows.Forms.Control.CreateControl%2A> (méthode), ce qui force un handle doit être créé pour le contrôle et ses contrôles enfants lorsque le contrôle est créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-622">The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d11f7-623">L'objet est dans un état supprimé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-623">The object is in a disposed state.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-624">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-624">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-625">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-625">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-626"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.CreateHandle" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.CreateHandle" /> méthode pour vous assurer que le handle est créé.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-626"><para>When overriding <see cref="M:System.Windows.Forms.Control.CreateHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.CreateHandle" /> method to ensure that the handle is created.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Control.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-627">Obtient le paramètre de création requis lors de la création du handle du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-627">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="d11f7-628"><see cref="T:System.Windows.Forms.CreateParams" /> qui contient les paramètres de création requis quand le handle du contrôle est créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-628">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-629">Le <xref:System.Windows.Forms.Control.CreateParams%2A> propriété ne doit pas être substituée et utilisée pour ajuster les propriétés de votre contrôle dérivé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-629">The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control.</span></span> <span data-ttu-id="d11f7-630">Propriétés, telles que la <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, et <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> doit être définie par les propriétés correspondantes dans votre contrôle comme <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-630">Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d11f7-631">Le <xref:System.Windows.Forms.CreateParams> doit uniquement être étendue lorsque vous encapsulez une classe de contrôle Windows standard ou pour définir des styles non fournis par l’espace de noms Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-631">The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</span></span> <span data-ttu-id="d11f7-632">Pour plus d’informations sur la création de paramètres de contrôle, consultez le `CreateWindow` et `CreateWindowEx` fonctions et les [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)documentation de structure.</span><span class="sxs-lookup"><span data-stu-id="d11f7-632">For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)structure documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-633">L’exemple de code suivant étend la <xref:System.Windows.Forms.Control.CreateParams%2A> propriété d’un <xref:System.Windows.Forms.Button> classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-633">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="d11f7-634">Le <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> propriété est modifiée, ce qui entraîne le bouton pour afficher un <xref:System.Drawing.Icon> plutôt que <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-634">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-635">Cet exemple nécessite que vous disposez d’une classe qui hérite de la <xref:System.Windows.Forms.Button> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-635">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-636">à l’appelant immédiat d’appeler du code non managé lors de l’obtention de la valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-636">for the immediate caller to call unmanaged code when getting the property value.</span></span> <span data-ttu-id="d11f7-637">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-637">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-638"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.CreateParams" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.CreateParams" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-638"><para>When overriding the <see cref="P:System.Windows.Forms.Control.CreateParams" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.CreateParams" /> property to extend the base implementation. Otherwise, you must provide all the implementation.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.Control.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-639">Obtient ou définit le curseur qui est affiché quand le pointeur de la souris se trouve sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-639">Gets or sets the cursor that is displayed when the mouse pointer is over the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-640"><see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur à afficher quand le pointeur de la souris se trouve sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-640">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-641">Affecter un <xref:System.Windows.Forms.Cursor> à la <xref:System.Windows.Forms.Control.Cursor%2A> propriété du contrôle à modifier le curseur affiché lorsque le pointeur de la souris est positionnée sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-641">Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control.</span></span> <span data-ttu-id="d11f7-642">Pour modifier temporairement le curseur de souris pour tous les contrôles sur votre application, définissez le <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-642">To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d11f7-643">En général, vous devez définir le <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> propriété un curseur d’attente lors de l’alimentation à un <xref:System.Windows.Forms.ComboBox> l’enregistrement ou du chargement d’un fichier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-643">Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.</span></span>  
  
 <span data-ttu-id="d11f7-644">Le <xref:System.Windows.Forms.Control.Cursor%2A> propriété est une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-644">The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property.</span></span> <span data-ttu-id="d11f7-645">Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-645">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-646">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-646">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-647">Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-647">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-648">Le code suivant exemple remplit un <xref:System.Windows.Forms.ComboBox> avec les lecteurs logiques disponibles de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-648">The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives.</span></span> <span data-ttu-id="d11f7-649">L’exemple définit également la zone de liste déroulante <xref:System.Windows.Forms.Cursor> propriété donc le <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> curseur s’affiche lorsque le pointeur de la souris se trouve sur le bouton de liste déroulante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-649">The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> cursor is displayed when the mouse pointer is over the drop-down button.</span></span> <span data-ttu-id="d11f7-650">Ce code nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.ComboBox> dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-650">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-651">pour les sous-fenêtres définir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-651">for safe subwindows to set this property value.</span></span> <span data-ttu-id="d11f7-652">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-652">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-653"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Cursor" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Cursor" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> méthodes de la <see cref="P:System.Windows.Forms.Control.Cursor" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-653"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Cursor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Cursor" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursors" />
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-654">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Cursor" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-654">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-655">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Cursor%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-655">This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-656">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-656">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-657">L’exemple de code suivant illustre la modification du curseur de la souris à l’aide du <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> propriété, le <xref:System.Windows.Forms.Cursor> (classe) et le <xref:System.Windows.Forms.Cursors> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-657">The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="d11f7-658">L’exemple crée un formulaire qui contient un <xref:System.Windows.Forms.ComboBox> contrôle, un <xref:System.Windows.Forms.Panel> contrôle et un <xref:System.Windows.Forms.ListView> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-658">The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="d11f7-659">Le <xref:System.Windows.Forms.ComboBox> contient tous les curseurs fournis par la <xref:System.Windows.Forms.Cursors> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-659">The <xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="d11f7-660">Lorsque l’utilisateur sélectionne un curseur de la souris dans le <xref:System.Windows.Forms.ComboBox>, le <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> propriété est définie sur le curseur sélectionné, ce qui met à jour le curseur pour le <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-660">When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-661">Le <xref:System.Windows.Forms.ListView> est de mise à jour chaque fois que le <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-661">The <xref:System.Windows.Forms.ListView> is updated every time the <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> event occurs.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursors#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CPP/cursorexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CS/cursorexample.cs#1)]
 [!code-vb[System.Windows.Forms.Cursors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursors/VB/cursorexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As ControlBindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlBindingsCollection ^ DataBindings { System::Windows::Forms::ControlBindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Windows.Forms.ControlBindingsCollection" Usage="System.Windows.Forms.Control.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-662">Obtient les liaisons de données pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-662">Gets the data bindings for the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-663"><see cref="T:System.Windows.Forms.ControlBindingsCollection" /> qui contient les objets <see cref="T:System.Windows.Forms.Binding" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-663">A <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-664">Utilisez le <xref:System.Windows.Forms.Control.DataBindings%2A> propriété pour accéder à la <xref:System.Windows.Forms.ControlBindingsCollection>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-664">Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>.</span></span> <span data-ttu-id="d11f7-665">En ajoutant <xref:System.Windows.Forms.Binding> objets à la collection, vous pouvez lier n’importe quelle propriété d’un contrôle à la propriété d’un objet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-665">By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-666">L’exemple de code suivant ajoute <xref:System.Windows.Forms.Binding> des objets sur le <xref:System.Windows.Forms.ControlBindingsCollection> de cinq contrôles : quatre <xref:System.Windows.Forms.TextBox> contrôles et un <xref:System.Windows.Forms.DateTimePicker> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-666">The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="d11f7-667"><xref:System.Windows.Forms.ControlBindingsCollection> est accessible via la propriété <xref:System.Windows.Forms.Control.DataBindings%2A> de la classe <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-667">The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the <xref:System.Windows.Forms.Control.DataBindings%2A> property of the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Classic Control.DataBindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.DataBindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CS/source.cs#1)]
 [!code-vb[Classic Control.DataBindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.DataBindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="DefaultBackColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultBackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultBackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBackColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-668">Obtient la couleur d'arrière-plan par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-668">Gets the default background color of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-669"><see cref="T:System.Drawing.Color" /> d'arrière-plan par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-669">The default background <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="d11f7-670">La valeur par défaut est <see cref="P:System.Drawing.SystemColors.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-670">The default is <see cref="P:System.Drawing.SystemColors.Control" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-671">Ceci est la valeur par défaut <xref:System.Windows.Forms.Control.BackColor%2A> valeur de propriété d’un contrôle de niveau supérieur générique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-671">This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control.</span></span> <span data-ttu-id="d11f7-672">Les classes dérivées peuvent avoir différentes valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-672">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-673">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, et <xref:System.Windows.Forms.Control.DefaultForeColor%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-673">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="d11f7-674">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListBox> appelé ListBox1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-674">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="d11f7-675">Appelez le `Populate_ListBox` méthode dans le constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-675">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Control.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-676">Obtient ou définit le curseur par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-676">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-677">Un objet de type <see cref="T:System.Windows.Forms.Cursor" /> qui représente le curseur par défaut actuel.</span><span class="sxs-lookup"><span data-stu-id="d11f7-677">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-678">Substituer <xref:System.Windows.Forms.Control.DefaultCursor%2A> pour configurer un curseur par défaut pour votre contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-678">Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="d11f7-679">Cela est plus efficace que de définir le curseur dans le constructeur du contrôle et offre la prise en charge automatique pour certaines fonctions de concepteur connexes au curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-679">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font DefaultFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Font DefaultFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultFont" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Font ^ DefaultFont { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFont : System.Drawing.Font" Usage="System.Windows.Forms.Control.DefaultFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-680">Obtient la police par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-680">Gets the default font of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-681"><see cref="T:System.Drawing.Font" /> par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-681">The default <see cref="T:System.Drawing.Font" /> of the control.</span></span> <span data-ttu-id="d11f7-682">La valeur retournée varie selon le système d'exploitation de l'utilisateur et le paramètre de culture locale de leur système.</span><span class="sxs-lookup"><span data-stu-id="d11f7-682">The value returned will vary depending on the user's operating system the local culture setting of their system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-683">Le tableau suivant décrit la valeur retournée par <xref:System.Windows.Forms.Control.DefaultFont%2A> selon le système d’exploitation et la culture locale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-683">The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.</span></span>  
  
|<span data-ttu-id="d11f7-684">Système / et ou de la Culture</span><span class="sxs-lookup"><span data-stu-id="d11f7-684">System/and or Culture</span></span>|<span data-ttu-id="d11f7-685">Police</span><span class="sxs-lookup"><span data-stu-id="d11f7-685">Font</span></span>|  
|----------------------------|----------|  
|<span data-ttu-id="d11f7-686">Windows NT 4 x, version japonaise</span><span class="sxs-lookup"><span data-stu-id="d11f7-686">Windows NT 4x, Japanese version</span></span>|<span data-ttu-id="d11f7-687">MS UI Gothic, point 9.</span><span class="sxs-lookup"><span data-stu-id="d11f7-687">MS UI Gothic, 9 point.</span></span>|  
|<span data-ttu-id="d11f7-688">Windows arabe</span><span class="sxs-lookup"><span data-stu-id="d11f7-688">Arabic Windows</span></span>|<span data-ttu-id="d11f7-689">Tahoma, 8 points.</span><span class="sxs-lookup"><span data-stu-id="d11f7-689">Tahoma, 8 point.</span></span>|  
|<span data-ttu-id="d11f7-690">Autre système d’exploitation/culture</span><span class="sxs-lookup"><span data-stu-id="d11f7-690">Other operating system/culture</span></span>|<span data-ttu-id="d11f7-691">Police logique MS Shell Dlg, généralement Microsoft San Serif 8 points.</span><span class="sxs-lookup"><span data-stu-id="d11f7-691">MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</span></span>|  
  
 <span data-ttu-id="d11f7-692">MS Shell Dlg correspond à un jeu de caractères dans le Registre système.</span><span class="sxs-lookup"><span data-stu-id="d11f7-692">MS Shell Dlg maps to a font set in the system registry.</span></span>  
  
 <span data-ttu-id="d11f7-693">Si les polices précédentes ne sont pas installées, la police par défaut est Tahoma, 8 points.</span><span class="sxs-lookup"><span data-stu-id="d11f7-693">If the previous fonts are not installed, the default font is Tahoma, 8 point.</span></span> <span data-ttu-id="d11f7-694">Si la police Tahoma, 8 points n’est pas installé, <xref:System.Windows.Forms.Control.DefaultFont%2A> retourne la valeur de la <xref:System.Drawing.FontFamily.GenericSansSerif%2A> propriété</span><span class="sxs-lookup"><span data-stu-id="d11f7-694">If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A> returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-695">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, et <xref:System.Windows.Forms.Control.DefaultForeColor%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-695">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="d11f7-696">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListBox> appelé ListBox1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-696">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="d11f7-697">Appelez le `Populate_ListBox` méthode dans le constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-697">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d11f7-698">La police par défaut ou la police de remplacement régionale ne sont pas installées sur l'ordinateur client.</span><span class="sxs-lookup"><span data-stu-id="d11f7-698">The default font or the regional alternative fonts are not installed on the client computer.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="DefaultForeColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultForeColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-699">Obtient la couleur de premier plan par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-699">Gets the default foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-700"><see cref="T:System.Drawing.Color" /> de premier plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-700">The default foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="d11f7-701">La valeur par défaut est <see cref="P:System.Drawing.SystemColors.ControlText" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-701">The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-702">Ceci est la valeur par défaut <xref:System.Windows.Forms.Control.ForeColor%2A> valeur de propriété d’un contrôle non apparenté.</span><span class="sxs-lookup"><span data-stu-id="d11f7-702">This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control.</span></span> <span data-ttu-id="d11f7-703">Les classes dérivées peuvent avoir différentes valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-703">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-704">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, et <xref:System.Windows.Forms.Control.DefaultForeColor%2A> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-704">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="d11f7-705">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListBox> appelé ListBox1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-705">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="d11f7-706">Appelez le `Populate_ListBox` méthode dans le constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-706">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-707">Obtient le mode de l'éditeur de méthode d'entrée (IME, Input Method Editor) par défaut pris en charge par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-707">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-708">Une des valeurs de <see cref="T:System.Windows.Forms.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-708">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-709">Éditeur de méthode d’entrée (IME) est un programme qui permet aux utilisateurs d’entrer des caractères complexes et des symboles, tels que des caractères kanji (japonais), à l’aide d’un clavier standard.</span><span class="sxs-lookup"><span data-stu-id="d11f7-709">An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="d11f7-710">Tel qu’implémenté dans le <xref:System.Windows.Forms.Control> classe, cette propriété retourne toujours la <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> valeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-710">As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="d11f7-711">Le <xref:System.Windows.Forms.ImeMode.Inherit> valeur spécifie que le mode IME est hérité du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-711">The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-712">Les éléments suivants exemple de code remplace le <xref:System.Windows.Forms.Control.DefaultImeMode%2A> propriété pour désactiver l’éditeur de méthode d’entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-712">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultImeMode%2A> property to turn off the Input Method Editor.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#4)]
 [!code-csharp[Windows.Forms.Control Properties2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#4)]
 [!code-vb[Windows.Forms.Control Properties2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-713"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-713"><para>When overriding the <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property to extend the base implementation. Otherwise, you must provide all the implementation.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-714">Obtient l'espace entre les contrôles, en pixels, spécifié par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-714">Gets the space, in pixels, that is specified by default between controls.</span></span></summary>
        <value><span data-ttu-id="d11f7-715"><see cref="T:System.Windows.Forms.Padding" /> qui représente l'espace par défaut entre les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-715">A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMaximumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-716">Obtient la longueur et la hauteur, en pixels, spécifiées comme taille maximale par défaut d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-716">Gets the length and height, in pixels, that is specified as the default maximum size of a control.</span></span></summary>
        <value><span data-ttu-id="d11f7-717"><see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> représentant la taille du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-717">A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMinimumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-718">Obtient la longueur et la hauteur, en pixels, spécifiées comme taille minimale par défaut d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-718">Gets the length and height, in pixels, that is specified as the default minimum size of a control.</span></span></summary>
        <value><span data-ttu-id="d11f7-719"><see cref="T:System.Drawing.Size" /> représentant la taille du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-719">A <see cref="T:System.Drawing.Size" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-720">Obtient l'espacement interne, en pixels, du contenu d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-720">Gets the internal spacing, in pixels, of the contents of a control.</span></span></summary>
        <value><span data-ttu-id="d11f7-721"><see cref="T:System.Windows.Forms.Padding" /> qui représente l'espacement interne du contenu d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-721">A <see cref="T:System.Windows.Forms.Padding" /> that represents the internal spacing of the contents of a control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-722">Obtient la taille par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-722">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-723"><see cref="T:System.Drawing.Size" /> par défaut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-723">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-724">Le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété représente le <xref:System.Drawing.Size> du contrôle lorsqu’il est initialement créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-724">The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="d11f7-725">Vous pouvez ajuster la taille du contrôle en définissant son <xref:System.Windows.Forms.Control.Size%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-725">You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-726">Pour maintenir des performances optimales, ne définissez pas la <xref:System.Drawing.Size> d’un contrôle dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-726">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="d11f7-727">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-727">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-728">Sur les systèmes Windows Server 2003, la taille d’un <xref:System.Windows.Forms.Form> est limité par la largeur en pixels maximal et la hauteur de l’analyse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-728">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-729">Les éléments suivants exemple de code remplace le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété et rend la taille par défaut des pixels formulaire 500 carrés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-729">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultSize%2A> property, and makes the default size of the form 500 pixels square.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-730"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.DefaultSize" /> propriété dans une classe dérivée, il est préférable de retourner un <see cref="T:System.Drawing.Size" /> avec les dimensions voulues, plutôt qu’à remplacer l’implémentation de tous les.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-730"><para>When overriding the <see cref="P:System.Windows.Forms.Control.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than to override all the implementation.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected virtual void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member DefWndProc :  -&gt; unit&#xA;override this.DefWndProc :  -&gt; unit" Usage="control.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-731"><see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-731">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-732">Renvoie le message spécifié à la procédure de fenêtre par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-732">Sends the specified message to the default window procedure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-733">Pour plus d’informations sur le traitement des messages de Windows, consultez le [fonction WindowProc](http://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="d11f7-733">For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-734">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-734">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-735">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-735">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="control.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-736">Détruit le handle associé au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-736">Destroys the handle associated with the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-737">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-737">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-738">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-738">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-739"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> méthode pour vous assurer que la destruction du handle.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-739"><para>When overriding <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> method to ensure that the handle is destroyed.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="DeviceDpi">
      <MemberSignature Language="C#" Value="public int DeviceDpi { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceDpi" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DeviceDpi" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeviceDpi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceDpi { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceDpi : int" Usage="System.Windows.Forms.Control.DeviceDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-740">Obtient la valeur en DPI du périphérique d’affichage dans lequel le contrôle est actuellement affiché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-740">Gets the DPI value for the display device where the control is currently being displayed.</span></span></summary>
        <value><span data-ttu-id="d11f7-741">La valeur en DPI du périphérique d’affichage.</span><span class="sxs-lookup"><span data-stu-id="d11f7-741">The DPI value of the display device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.DisplayRectangle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-742">Obtient le rectangle qui représente la zone d'affichage du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-742">Gets the rectangle that represents the display area of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-743"><see cref="T:System.Drawing.Rectangle" /> qui représente la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-743">A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-744">Le <xref:System.Windows.Forms.Control.DisplayRectangle%2A> propriété retourne le rectangle client de la zone d’affichage du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-744">The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control.</span></span> <span data-ttu-id="d11f7-745">Pour la classe de contrôle de base, il est égal au rectangle client.</span><span class="sxs-lookup"><span data-stu-id="d11f7-745">For the base control class, this is equal to the client rectangle.</span></span> <span data-ttu-id="d11f7-746">Toutefois, l’héritage des contrôles souhaiterez modifier cela si leur zone cliente diffère de leur zone d’affichage.</span><span class="sxs-lookup"><span data-stu-id="d11f7-746">However, inheriting controls might want to change this if their client area differs from their display area.</span></span> <span data-ttu-id="d11f7-747">Le rectangle d’affichage est le plus petit <xref:System.Drawing.Rectangle> qui englobe un contrôle et est utilisé pour disposer les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-747">The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-748"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> propriété pour étendre l’implémentation de base. Ou bien, vous devez fournir toute l’implémentation.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-748"><para>When overriding the <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property to extend the base implementation. Alternatively, you must provide all the implementation.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="control.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d11f7-749"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-749"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d11f7-750">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Control" /> et ses contrôles enfants et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-750">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-751">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).`Dispose()`</span><span class="sxs-lookup"><span data-stu-id="d11f7-751">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()`</span></span> <span data-ttu-id="d11f7-752">appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-752">invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d11f7-753"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-753"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d11f7-754">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-754">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references.</span></span> <span data-ttu-id="d11f7-755">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-755">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-756"><para> <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [nettoyage des Resources](~/docs/standard/garbage-collection/unmanaged.md) non managé et [substitution de la méthode Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-756"><para> <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public bool Disposing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Disposing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Disposing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Disposing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Disposing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Disposing : bool" Usage="System.Windows.Forms.Control.Disposing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-757">Obtient une valeur indiquant si la classe <see cref="T:System.Windows.Forms.Control" /> de base est en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="d11f7-757">Gets a value indicating whether the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing.</span></span></summary>
        <value><span data-ttu-id="d11f7-758"><see langword="true" /> si la classe <see cref="T:System.Windows.Forms.Control" /> de base est en cours de suppression ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-758"><see langword="true" /> if the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-759">Lorsque cette propriété retourne `true`, la base de <xref:System.Windows.Forms.Control> classe est en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="d11f7-759">When this property returns `true`, the base <xref:System.Windows.Forms.Control> class is in the process of disposing.</span></span> <span data-ttu-id="d11f7-760">Une fois que le contrôle est supprimé, il peut ne plus être référencé comme un contrôle Windows valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-760">After the control is disposed of, it can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="d11f7-761">Même si l’instance d’un contrôle est supprimée, elle est maintenue en mémoire jusqu'à ce qu’il est supprimé de la mémoire par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="d11f7-761">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="d11f7-762">Lorsqu’un contrôle est supprimé, vous ne pouvez pas appeler son <xref:System.Windows.Forms.Control.RecreateHandle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-762">When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.Control.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-763">Obtient ou définit les bordures de contrôle qui sont ancrées à son contrôle parent et détermine le redimensionnement d'un contrôle avec son parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-763">Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="d11f7-764">Une des valeurs de <see cref="T:System.Windows.Forms.DockStyle" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-764">One of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span> <span data-ttu-id="d11f7-765">La valeur par défaut est <see cref="F:System.Windows.Forms.DockStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-765">The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-766">Utilisez le <xref:System.Windows.Forms.Control.Dock%2A> propriété pour définir comment un contrôle est redimensionné automatiquement lorsque son contrôle parent est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-766">Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="d11f7-767">Par exemple, la définition <xref:System.Windows.Forms.Control.Dock%2A> à <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> , le contrôle s’aligne avec le bord gauche de son contrôle parent et pour redimensionner le contrôle parent est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-767">For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</span></span> <span data-ttu-id="d11f7-768">Les contrôles sont ancrés dans leur ordre de plan, qui est la superposition visuelle des contrôles sur un formulaire sur l’axe z (profondeur).</span><span class="sxs-lookup"><span data-stu-id="d11f7-768">Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</span></span>  
  
 <span data-ttu-id="d11f7-769">Un contrôle peut être ancré à un bord de son conteneur parent ou peut être ancré sur tous les bords et remplissage le conteneur parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-769">A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</span></span>  
  
 <span data-ttu-id="d11f7-770">Définition de la <xref:System.Windows.Forms.Control.Margin%2A> propriété sur un contrôle ancré n’a aucun effet sur la distance du contrôle à partir des bords de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-770">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-771">Le <xref:System.Windows.Forms.Control.Anchor%2A> et <xref:System.Windows.Forms.Control.Dock%2A> propriétés s’excluent mutuellement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-771">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="d11f7-772">Une seule peut être définie à la fois, et la dernière est prioritaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-772">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-773">L’exemple de code suivant crée un <xref:System.Windows.Forms.GroupBox> et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-773">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-774">L’exemple crée un <xref:System.Windows.Forms.TextBox> et définit ses <xref:System.Windows.Forms.Control.Location%2A> dans la zone de groupe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-774">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="d11f7-775">Ensuite, il définit le <xref:System.Windows.Forms.Control.Text%2A> propriété de la zone de groupe et s’ancre le groupe de zone en haut du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-775">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="d11f7-776">Enfin, il désactive la zone de groupe en définissant le <xref:System.Windows.Forms.Control.Enabled%2A> propriété `false`, ce qui entraîne tous les contrôles contenus dans la zone de groupe doit être désactivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-776">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d11f7-777">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.DockStyle" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-777">The value assigned is not one of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span></exception>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-778"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Dock" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Dock" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> méthodes de la <see cref="P:System.Windows.Forms.Control.Dock" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-778"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Dock" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Dock" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Dock" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.DockStyle" />
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="T:System.Windows.Forms.ScrollableControl.DockPaddingEdges" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DockChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DockChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DockChanged;" />
      <MemberSignature Language="F#" Value="member this.DockChanged : EventHandler " Usage="member this.DockChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-779">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Dock" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-779">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-780">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Dock%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-780">This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-781">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-781">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-782">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-782">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-783">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-783">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-784">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-784">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-785">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-785">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-786">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-786">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="T:System.Windows.Forms.DockStyle" />
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="control.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="d11f7-787">Données à faire glisser.</span><span class="sxs-lookup"><span data-stu-id="d11f7-787">The data to drag.</span></span></param>
        <param name="allowedEffects"><span data-ttu-id="d11f7-788">Une des valeurs de <see cref="T:System.Windows.Forms.DragDropEffects" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-788">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-789">Démarre une opération glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-789">Begins a drag-and-drop operation.</span></span></summary>
        <returns><span data-ttu-id="d11f7-790">Valeur de l'énumération <see cref="T:System.Windows.Forms.DragDropEffects" /> qui représente l'effet final obtenu pendant l'opération glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-790">A value from the <see cref="T:System.Windows.Forms.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-791">Le `allowedEffects` paramètre détermine l’opérations glisser peuvent se produire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-791">The `allowedEffects` parameter determines which drag operations can occur.</span></span> <span data-ttu-id="d11f7-792">Si l’opération glisser doit interagir avec des applications dans un autre processus, les données doivent être soit une classe managée de base (<xref:System.String>, <xref:System.Drawing.Bitmap>, ou <xref:System.Drawing.Imaging.Metafile>), ou un objet qui implémente <xref:System.Runtime.Serialization.ISerializable> ou <xref:System.Windows.Forms.IDataObject>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-792">If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.</span></span>  
  
 <span data-ttu-id="d11f7-793">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-793">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-794">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-794">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-795">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-795">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-796">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-796">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-797">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-797">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-798">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-798">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-799">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-799">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-800">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-800">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-801">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-801">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-802">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-802">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-803">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-803">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-804">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-804">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-805">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-805">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-806">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-806">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-807">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-807">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-808">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode intercepte toutes les exceptions et lève à nouveau uniquement la sécurité suivantes ou les exceptions critiques :</span><span class="sxs-lookup"><span data-stu-id="d11f7-808">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:</span></span>  
  
-   <span data-ttu-id="d11f7-809">SecurityException</span><span class="sxs-lookup"><span data-stu-id="d11f7-809">SecurityException</span></span>  
  
-   <span data-ttu-id="d11f7-810">NullReferenceException</span><span class="sxs-lookup"><span data-stu-id="d11f7-810">NullReferenceException</span></span>  
  
-   <span data-ttu-id="d11f7-811">StackOverflowException</span><span class="sxs-lookup"><span data-stu-id="d11f7-811">StackOverflowException</span></span>  
  
-   <span data-ttu-id="d11f7-812">OutOfMemoryException</span><span class="sxs-lookup"><span data-stu-id="d11f7-812">OutOfMemoryException</span></span>  
  
-   <span data-ttu-id="d11f7-813">ThreadAbortException</span><span class="sxs-lookup"><span data-stu-id="d11f7-813">ThreadAbortException</span></span>  
  
-   <span data-ttu-id="d11f7-814">ExecutionEngineException</span><span class="sxs-lookup"><span data-stu-id="d11f7-814">ExecutionEngineException</span></span>  
  
-   <span data-ttu-id="d11f7-815">IndexOutOfRangeException</span><span class="sxs-lookup"><span data-stu-id="d11f7-815">IndexOutOfRangeException</span></span>  
  
-   <span data-ttu-id="d11f7-816">AccessViolationException</span><span class="sxs-lookup"><span data-stu-id="d11f7-816">AccessViolationException</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-817">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-817">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-818">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-818">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-819">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-819">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-820">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-820">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-821">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-821">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-822">L’exemple suppose que deux fichiers curseur, `3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-822">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-823">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-823">The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-824">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-824">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-825">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-825">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-826">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-826">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-827">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-827">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-828">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-828">Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-829">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-829">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-830">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-830">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#1)]  
  
 <span data-ttu-id="d11f7-831">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.DragDropEffects> énumération pour spécifier comment les données doivent être transférées entre les contrôles impliqués dans une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-831">The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-832">Cet exemple requiert que votre formulaire inclut un <xref:System.Windows.Forms.RichTextBox> contrôle et un <xref:System.Windows.Forms.ListBox> contrôle et que le <xref:System.Windows.Forms.ListBox> contrôle soit rempli avec une liste de noms de fichier valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-832">This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names.</span></span> <span data-ttu-id="d11f7-833">Lorsque l’utilisateur fait glisser un nom de fichier sur le <xref:System.Windows.Forms.RichTextBox> contrôle, le contrôle <xref:System.Windows.Forms.Control.DragEnter> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-833">When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised.</span></span> <span data-ttu-id="d11f7-834">Dans le Gestionnaire d’événements, le <xref:System.Windows.Forms.DragEventArgs.Effect%2A> propriété de la <xref:System.Windows.Forms.DragEventArgs> est initialisée à <xref:System.Windows.Forms.DragDropEffects> pour indiquer que les données référencées par le chemin d’accès de fichier doivent être copiées dans le <xref:System.Windows.Forms.RichTextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-834">Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AllowDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.Control.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-835">Obtient ou définit une valeur indiquant si ce contrôle doit redessiner sa surface à l'aide d'une mémoire tampon secondaire afin de réduire ou éviter le scintillement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-835">Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</span></span></summary>
        <value><span data-ttu-id="d11f7-836"><see langword="true" /> si la surface du contrôle doit être dessinée à l'aide d'un mécanisme de double tampon ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-836"><see langword="true" /> if the surface of the control should be drawn using double buffering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-837">Graphiques mis en mémoire tampon peut réduire ou éliminer le scintillement provoqué par le rafraîchissement du dessin progressif de parties d’une surface affichée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-837">Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</span></span> <span data-ttu-id="d11f7-838">Graphiques mis en mémoire tampon requièrent que les données de graphiques mis à jour sont tout d’abord écrite dans une mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="d11f7-838">Buffered graphics require that the updated graphics data is first written to a buffer.</span></span> <span data-ttu-id="d11f7-839">Les données dans la mémoire tampon de graphiques sont ensuite rapidement écrites dans la mémoire de surface affichée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-839">The data in the graphics buffer is then quickly written to displayed surface memory.</span></span> <span data-ttu-id="d11f7-840">Le commutateur relativement rapide de la mémoire de graphiques affichés réduit généralement le scintillement qui peut se produire dans le cas contraire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-840">The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-841"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> n’est pas une propriété pouvant être liée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-841"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
        <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-842">Se produit à la suite d'un double-clic sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-842">Occurs when the control is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-843">Un double-clic est déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-843">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="d11f7-844">L'utilisateur peut définir le délai qui détermine si les clics effectués sur un bouton de souris sont considérés comme un double-clic ou comme deux clics.</span><span class="sxs-lookup"><span data-stu-id="d11f7-844">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="d11f7-845">Le <xref:System.Windows.Forms.Control.Click> événement est déclenché chaque fois qu’un double-clic est effectué sur un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-845">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="d11f7-846">Par exemple, si vous avez des gestionnaires d’événements pour le <xref:System.Windows.Forms.Control.Click> et <xref:System.Windows.Forms.Control.DoubleClick> événements d’un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.Control.Click> et <xref:System.Windows.Forms.Control.DoubleClick> sont déclenchés lorsqu’un double-clic est effectué sur le formulaire et les deux méthodes sont appelées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-846">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="d11f7-847">Si un contrôle utilisateur double-clique sur et que contrôle ne prend pas en charge la <xref:System.Windows.Forms.Control.DoubleClick> événement, le <xref:System.Windows.Forms.Control.Click> peut être déclenché deux fois.</span><span class="sxs-lookup"><span data-stu-id="d11f7-847">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="d11f7-848">Vous devez définir le `StandardDoubleClick` et `StandardClick` les valeurs de <xref:System.Windows.Forms.ControlStyles> à `true` pour cet événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-848">You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span> <span data-ttu-id="d11f7-849">Ces valeurs peuvent déjà être définies pour `true` si vous héritez existant des contrôles Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-849">These values might already be set to `true` if you are inheriting from existing Windows Forms controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-850">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-850">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-851">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-851">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-852">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-852">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-853">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-853">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-854">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.DoubleClick> événement d’un <xref:System.Windows.Forms.ListBox> pour charger des fichiers texte répertoriés dans le <xref:System.Windows.Forms.ListBox> dans un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-854">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-855"><para>Héritage d’un contrôle Windows Forms standard et en modifiant le <see langword="StandardClick" /> ou <see langword="StandardDoubleClick" /> les valeurs de <see cref="T:System.Windows.Forms.ControlStyles" /> à <see langword="true" /> peut provoquer un comportement inattendu ou carrément n’ont aucun effet si le contrôle ne prend pas en charge la <see cref="E:System.Windows.Forms.Control.Click" /> ou <see cref="E:System.Windows.Forms.Control.DoubleClick" />événements.  Le tableau suivant répertorie les contrôles Windows Forms et les événements (<see cref="E:System.Windows.Forms.Control.Click" /> ou <see cref="E:System.Windows.Forms.Control.DoubleClick" />) est déclenché en réponse à l’action de la souris spécifiée.  <list type="table"><listheader><term> Contrôle </term> <description> gauche clic de souris </description> <description> gauche de la souris, double-cliquez sur </description> <description> avec le bouton droit clic de souris </description> <description> droit de la souris, double-cliquez sur </description> <description> Intermédiaire du clic de souris </description> <description> central de la souris, double-cliquez sur </description> <description> clic de souris XButton1 </description> <description> XButton1 de la souris </description> <description> XButton2 Clic de souris </description> <description> XButton2 de la souris </description> </listheader> <item> <term> <see cref="T:System.Windows.Forms.MonthCalendar" />, <see cref="T:System.Windows.Forms.DateTimePicker" />, <see cref="T:System.Windows.Forms.RichTextBox" />, <see cref="T:System.Windows.Forms.HScrollBar" />, <see cref="T:System.Windows.Forms.VScrollBar" /> </term> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description>aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> </item> <item> <term> <see cref="T:System.Windows.Forms.Button" />, <see cref="T:System.Windows.Forms.CheckBox" />, <see cref="T:System.Windows.Forms.RadioButton" /> </term> <description> Cliquez sur </description> <description> cliquez sur, cliquez sur </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> </item> <item> <term> <see cref="T:System.Windows.Forms.ListBox" />, <see cref="T:System.Windows.Forms.CheckedListBox" />, <see cref="T:System.Windows.Forms.ComboBox" /> </term> <description> Cliquez sur </description> <description> Click, DoubleClick </description> <description> aucun </description> <description> aucun </description> <description> none  </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> aucun </description> <description> none  </description> </item> <item> <term> <see cref="T:System.Windows.Forms.TextBox" />, <see cref="T:System.Windows.Forms.DomainUpDown" />, <see cref="T:System.Windows.Forms.NumericUpDown" /> </term> <description> Cliquez sur </description> <description>  Cliquez sur, DoubleClick </description> <description> aucun </description> <description> none</description>&lt;s&gt;&lt;/s&gt;</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-855"><para>Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.  The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.  <list type="table"><listheader><term> Control  </term><description> Left Mouse Click  </description><description> Left Mouse Double Click  </description><description> Right Mouse Click  </description><description> Right Mouse Double Click  </description><description> Middle Mouse Click  </description><description> Middle Mouse Double Click  </description><description> XButton1 Mouse Click  </description><description> XButton1 Mouse Double-Click  </description><description> XButton2 Mouse Click  </description><description> XButton2 Mouse Double-Click  </description></listheader><item><term><see cref="T:System.Windows.Forms.MonthCalendar" />,  <see cref="T:System.Windows.Forms.DateTimePicker" />,  <see cref="T:System.Windows.Forms.RichTextBox" />,  <see cref="T:System.Windows.Forms.HScrollBar" />,  <see cref="T:System.Windows.Forms.VScrollBar" /></term><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.Button" />,  <see cref="T:System.Windows.Forms.CheckBox" />,  <see cref="T:System.Windows.Forms.RadioButton" /></term><description> Click  </description><description> Click, Click  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.ListBox" />,  <see cref="T:System.Windows.Forms.CheckedListBox" />,  <see cref="T:System.Windows.Forms.ComboBox" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.TextBox" />,  <see cref="T:System.Windows.Forms.DomainUpDown" />,  <see cref="T:System.Windows.Forms.NumericUpDown" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term> \* <see cref="T:System.Windows.Forms.TreeView" />,  \* <see cref="T:System.Windows.Forms.ListView" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description><description> none  </description></item><item><term><see cref="T:System.Windows.Forms.ProgressBar" />,  <see cref="T:System.Windows.Forms.TrackBar" /></term><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description><description> Click  </description><description> Click, Click  </description></item><item><term><see cref="T:System.Windows.Forms.Form" />,  <see cref="T:System.Windows.Forms.DataGrid" />,  <see cref="T:System.Windows.Forms.Label" />,  <see cref="T:System.Windows.Forms.LinkLabel" />,  <see cref="T:System.Windows.Forms.Panel" />,  <see cref="T:System.Windows.Forms.GroupBox" />,  <see cref="T:System.Windows.Forms.PictureBox" />,  <see cref="T:System.Windows.Forms.Splitter" />,  <see cref="T:System.Windows.Forms.StatusBar" />,  <see cref="T:System.Windows.Forms.ToolBar" />,  <see cref="T:System.Windows.Forms.TabPage" />,  \*\* <see cref="T:System.Windows.Forms.TabControl" /></term><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description><description> Click  </description><description> Click, DoubleClick  </description></item></list>  \* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).  \*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="DpiChangedAfterParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedAfterParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedAfterParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedAfterParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedAfterParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedAfterParent : EventHandler " Usage="member this.DpiChangedAfterParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-856">Se produit lorsque le paramètre DPI d’un contrôle est modifié par programme après modification de la résolution en DPI du contrôle ou formulaire parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-856">Occurs when the DPI setting for a control is changed programmatically after the DPI of it's parent control or form has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedBeforeParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedBeforeParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedBeforeParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedBeforeParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedBeforeParent : EventHandler " Usage="member this.DpiChangedBeforeParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-857">Se produit lorsque le paramètre DPI d’un contrôle est modifié par programme avant qu’un événement de modification de résolution en DPI se produise pour son contrôle ou formulaire parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-857">Occurs when the DPI setting for a control is changed programmatically before a DPI change event for it's parent control or form has occurred.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-858">Se produit lors d’une opération de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-858">Occurs when a drag-and-drop operation is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-859">Le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés de la <xref:System.Windows.Forms.DragEventArgs> sont en coordonnées d’écran, pas les coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-859">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="d11f7-860">La ligne de code Visual c# suivante convertit les propriétés à un client <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-860">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
```  
Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
```  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-861">Dans les versions antérieures à [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], si vous placez un <xref:System.Windows.Forms.UserControl> avec <xref:System.Windows.Forms.Control.DragEnter> et <xref:System.Windows.Forms.Control.DragDrop> événements sur un formulaire Windows et faites glisser quelque chose sur le <xref:System.Windows.Forms.UserControl> au moment du design, le `DropDrop` et `DropEnter` sont des événements déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-861">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="d11f7-862">Toutefois, lorsque vous fermez et rouvrez la solution, le <xref:System.Windows.Forms.Control.DragEnter> et <xref:System.Windows.Forms.Control.DragDrop> événements ne sont pas déclenchés à nouveau.</span><span class="sxs-lookup"><span data-stu-id="d11f7-862">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="d11f7-863">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-863">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-864">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.DragDrop> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-864">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragDrop> event.</span></span> <span data-ttu-id="d11f7-865">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-865">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-866">Se produit lorsqu'un objet est déplacé dans les limites d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-866">Occurs when an object is dragged into the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-867">Le <xref:System.Windows.Forms.Control.DragEnter> événement est déclenché lorsque l’utilisateur tout d’abord fait glisser le curseur de la souris sur le contrôle pendant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-867">The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-868">Dans les versions antérieures à [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], si vous placez un <xref:System.Windows.Forms.UserControl> avec <xref:System.Windows.Forms.Control.DragEnter> et <xref:System.Windows.Forms.Control.DragDrop> événements sur un formulaire Windows et faites glisser quelque chose sur le <xref:System.Windows.Forms.UserControl> au moment du design, le `DropDrop` et `DropEnter` sont des événements déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-868">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="d11f7-869">Toutefois, lorsque vous fermez et rouvrez la solution, le <xref:System.Windows.Forms.Control.DragEnter> et <xref:System.Windows.Forms.Control.DragDrop> événements ne sont pas déclenchés à nouveau.</span><span class="sxs-lookup"><span data-stu-id="d11f7-869">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="d11f7-870">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-870">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-871">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-871">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-872">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-872">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-873">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-873">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-874">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-874">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-875">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-875">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-876">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-876">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-877">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-877">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-878">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-878">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-879">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-879">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-880">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-880">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-881">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-881">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-882">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-882">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-883">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-883">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-884">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-884">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-885">Le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés de la <xref:System.Windows.Forms.DragEventArgs> sont en coordonnées d’écran, pas les coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-885">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="d11f7-886">La ligne de code Visual c# suivante convertit les propriétés à un client <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-886">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
    ```  
    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
    ```  
  
 <span data-ttu-id="d11f7-887">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-887">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-888">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-888">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-889">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-889">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-890">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-890">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-891">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-891">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-892">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-892">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-893">L’exemple suppose que deux fichiers curseur, `3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-893">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-894">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-894">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-895">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-895">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-896">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-896">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-897">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-897">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-898">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-898">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-899">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-899">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-900">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-900">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-901">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-901">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-902">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.DragEnter> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-902">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragEnter> event.</span></span> <span data-ttu-id="d11f7-903">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-903">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-904">Se produit lorsqu'un objet est déplacé en dehors des limites d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-904">Occurs when an object is dragged out of the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-905">Le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché lorsque l’utilisateur fait glisser le curseur hors du contrôle ou de l’utilisateur annule l’opération de glisser-déplacer en cours.</span><span class="sxs-lookup"><span data-stu-id="d11f7-905">The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="d11f7-906">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-906">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-907">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-907">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-908">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-908">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-909">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-909">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-910">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-910">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-911">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-911">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-912">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-912">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-913">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-913">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-914">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-914">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-915">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-915">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-916">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-916">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-917">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-917">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-918">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-918">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-919">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-919">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-920">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-920">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-921">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-921">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-922">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-922">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-923">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-923">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-924">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-924">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-925">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-925">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-926">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-926">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-927">L’exemple suppose que deux fichiers curseur, `3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-927">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-928">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-928">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-929">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-929">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-930">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-930">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-931">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-931">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-932">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-932">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-933">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-933">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-934">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-934">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-935">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-935">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-936">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.DragLeave> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-936">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragLeave> event.</span></span> <span data-ttu-id="d11f7-937">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-937">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-938">Se produit lorsqu'un objet est déplacé sur les limites d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-938">Occurs when an object is dragged over the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-939">Le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché lorsque le curseur de souris se déplace dans les limites du contrôle durant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-939">The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="d11f7-940">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-940">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-941">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-941">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-942">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-942">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-943">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-943">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-944">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-944">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-945">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-945">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-946">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-946">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-947">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-947">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-948">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-948">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-949">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-949">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-950">Si la valeur de <xref:System.Windows.Forms.DragAction> valeur est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-950">If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-951">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-951">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-952">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-952">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-953">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-953">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-954">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-954">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-955">Le <xref:System.Windows.Forms.DragEventArgs.X%2A> et <xref:System.Windows.Forms.DragEventArgs.Y%2A> propriétés de la <xref:System.Windows.Forms.DragEventArgs> sont en coordonnées d’écran, pas les coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-955">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="d11f7-956">La ligne de code c# suivante convertit les propriétés à un client <xref:System.Drawing.Point>:</span><span class="sxs-lookup"><span data-stu-id="d11f7-956">The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:</span></span>  
    >   
    >  <span data-ttu-id="d11f7-957">Point clientPoint = targetControl.PointToClient (nouveau Point de (dé. X, Allemagne. (Y)) ;</span><span class="sxs-lookup"><span data-stu-id="d11f7-957">Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</span></span>  
  
 <span data-ttu-id="d11f7-958">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-958">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-959">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-959">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-960">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-960">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-961">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-961">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-962">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-962">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-963">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-963">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-964">L’exemple suppose que deux fichiers curseur, `3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-964">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-965">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-965">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-966">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-966">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-967">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-967">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-968">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-968">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-969">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-969">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-970">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-970">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-971">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-971">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-972">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-972">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-973">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.DragOver> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-973">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="d11f7-974">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-974">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="member this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="control.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="d11f7-975">Bitmap dans laquelle effectuer le dessin.</span><span class="sxs-lookup"><span data-stu-id="d11f7-975">The bitmap to be drawn to.</span></span></param>
        <param name="targetBounds"><span data-ttu-id="d11f7-976">Limites dans lesquelles le contrôle est restitué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-976">The bounds within which the control is rendered.</span></span></param>
        <summary><span data-ttu-id="d11f7-977">Prend en charge le rendu dans la bitmap spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-977">Supports rendering to the specified bitmap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-978">Le <xref:System.Windows.Forms.Control.DrawToBitmap%2A> méthode n’est pas prise en charge pour les contrôles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-978">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls.</span></span> <span data-ttu-id="d11f7-979">Vous pouvez remplacer le <xref:System.Windows.Forms.Control.OnPrint%2A> événement et fournir la logique d’impression personnalisée si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-979">You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.</span></span>  
  
 <span data-ttu-id="d11f7-980">Le <xref:System.Windows.Forms.Control.DrawToBitmap%2A> méthode présente les limitations suivantes :</span><span class="sxs-lookup"><span data-stu-id="d11f7-980">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:</span></span>  
  
-   <span data-ttu-id="d11f7-981">Un <xref:System.ArgumentException> peut être levée pour les bitmaps de grande taille.</span><span class="sxs-lookup"><span data-stu-id="d11f7-981">An <xref:System.ArgumentException> might be thrown for large bitmaps.</span></span> <span data-ttu-id="d11f7-982">La taille maximale autorisée varie selon l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-982">The maximum allowable size varies by machine.</span></span>  
  
-   <span data-ttu-id="d11f7-983"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> ne prend pas en charge la `Ink` contrôles pour le système d’exploitation Windows XP Tablet PC Edition 2005.</span><span class="sxs-lookup"><span data-stu-id="d11f7-983"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.</span></span>  
  
-   <span data-ttu-id="d11f7-984"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> ne pas dessiner un enfant <xref:System.Windows.Forms.TextBox> si le <xref:System.Windows.Forms.Control.Visible%2A> propriété de la <xref:System.Windows.Forms.TextBox> est défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-984"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.</span></span>  
  
-   <span data-ttu-id="d11f7-985">Contrôles à l’intérieur de conteneurs sont rendus dans l’ordre inverse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-985">Controls inside containers are rendered in reverse order.</span></span>  
  
-   <span data-ttu-id="d11f7-986"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> n’est pas entièrement fonctionnel pour le <xref:System.Windows.Forms.RichTextBox>; uniquement la bordure d’une image bitmap est dessinée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-986"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Control.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-987">Obtient ou définit une valeur indiquant si un contrôle peut répondre à une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-987">Gets or sets a value indicating whether the control can respond to user interaction.</span></span></summary>
        <value><span data-ttu-id="d11f7-988"><see langword="true" /> si le contrôle peut répondre à une interaction utilisateur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-988"><see langword="true" /> if the control can respond to user interaction; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-989">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-989">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-990">Avec le <xref:System.Windows.Forms.Control.Enabled%2A> propriété, vous pouvez activer ou désactiver des contrôles au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="d11f7-990">With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time.</span></span> <span data-ttu-id="d11f7-991">Par exemple, vous pouvez désactiver les contrôles qui ne s’appliquent pas à l’état actuel de l’application.</span><span class="sxs-lookup"><span data-stu-id="d11f7-991">For example, you can disable controls that do not apply to the current state of the application.</span></span> <span data-ttu-id="d11f7-992">Vous pouvez également désactiver un contrôle pour limiter son utilisation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-992">You can also disable a control to restrict its use.</span></span> <span data-ttu-id="d11f7-993">Par exemple, un bouton peut être désactivé pour empêcher l’utilisateur de cliquer dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-993">For example, a button can be disabled to prevent the user from clicking it.</span></span> <span data-ttu-id="d11f7-994">Si un contrôle est désactivé, il ne peut pas être sélectionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-994">If a control is disabled, it cannot be selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d11f7-995">Définition de la <xref:System.Windows.Forms.Control.Enabled%2A> propriété `false` ne pas désactiver la boîte de contrôle de l’application ou empêcher la fenêtre d’application de recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-995">Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.</span></span>  
  
 <span data-ttu-id="d11f7-996">Quand un contrôle conteneur propriété enabled a la valeur `false`, tous les contrôles contenus sont désactivées, également.</span><span class="sxs-lookup"><span data-stu-id="d11f7-996">When a container control has its enabled property set to `false`, all its contained controls are disabled, as well.</span></span> <span data-ttu-id="d11f7-997">Par exemple, si l’utilisateur clique sur les contrôles contenus dans un désactivé <xref:System.Windows.Forms.GroupBox> contrôle, aucun événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-997">For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-998">Lorsqu’un contrôle à défilement est désactivé, les barres de défilement sont également désactivées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-998">When a scrollable control is disabled, the scroll bars are also disabled.</span></span> <span data-ttu-id="d11f7-999">Par exemple, une zone de texte multiligne désactivé ne peut pas faire défiler pour afficher toutes les lignes de texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-999">For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1000">L’exemple de code suivant crée un <xref:System.Windows.Forms.GroupBox> et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1000">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-1001">L’exemple crée un <xref:System.Windows.Forms.TextBox> et définit ses <xref:System.Windows.Forms.Control.Location%2A> dans la zone de groupe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1001">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="d11f7-1002">Ensuite, il définit le <xref:System.Windows.Forms.Control.Text%2A> propriété de la zone de groupe et s’ancre le groupe de zone en haut du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1002">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="d11f7-1003">Enfin, il désactive la zone de groupe en définissant le <xref:System.Windows.Forms.Control.Enabled%2A> propriété `false`, ce qui entraîne tous les contrôles contenus dans la zone de groupe doit être désactivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1003">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ScrollableControl" />
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1004">Se produit quand la valeur de propriété <see cref="P:System.Windows.Forms.Control.Enabled" /> a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1004">Occurs when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1005">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Enabled%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1005">This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-1006">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1006">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1007">L’exemple de code suivant utilise deux <xref:System.Windows.Forms.RadioButton> contrôles afin d’illustrer le <xref:System.Windows.Forms.Control.EnabledChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1007">The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the <xref:System.Windows.Forms.Control.EnabledChanged> event.</span></span> <span data-ttu-id="d11f7-1008">Cliquer sur un bouton modifie la valeur de la <xref:System.Windows.Forms.Control.Enabled%2A> propriété de l’autre bouton à `false` et affiche un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1008">Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj&#xA;override this.EndInvoke : IAsyncResult -&gt; obj" Usage="control.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="d11f7-1009"><see cref="T:System.IAsyncResult" /> qui représente une opération d'appel asynchrone spécifique, retourné lors de l'appel à <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1009">The <see cref="T:System.IAsyncResult" /> that represents a specific invoke asynchronous operation, returned when calling <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-1010">Récupère la valeur de retour de l'opération asynchrone représentée par le <see cref="T:System.IAsyncResult" /> passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1010">Retrieves the return value of the asynchronous operation represented by the <see cref="T:System.IAsyncResult" /> passed.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1011"><see cref="T:System.Object" /> généré par l'opération asynchrone.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1011">The <see cref="T:System.Object" /> generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1012">Si l’opération asynchrone n’a pas été terminée, cette fonction sera bloquée jusqu'à ce que le résultat est disponible.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1012">If the asynchronous operation has not been completed, this function will block until the result is available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1013">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1013">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-1014">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1014">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-1015">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1015">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d11f7-1016">La valeur du paramètre <paramref name="asyncResult" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1016">The <paramref name="asyncResult" /> parameter value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d11f7-1017">L'objet <paramref name="asyncResult" /> n'a pas été créé par un appel précédent de la méthode <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> à partir du même contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1017">The <paramref name="asyncResult" /> object was not created by a preceding call of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> method from the same control.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1018">Se produit lorsque l'utilisateur entre dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1018">Occurs when the control is entered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1019">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1019">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-1020">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1020">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-1021">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1021">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1022">Le <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements sont supprimés par la <xref:System.Windows.Forms.Form> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1022">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="d11f7-1023">Les événements équivalents dans la <xref:System.Windows.Forms.Form> classe sont les <xref:System.Windows.Forms.Form.Activated> et <xref:System.Windows.Forms.Form.Deactivate> événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1023">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="d11f7-1024">Le <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements sont hiérarchiques et s’accumuleront haut et bas de la chaîne parent jusqu'à ce que le contrôle approprié est atteint.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1024">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="d11f7-1025">Par exemple, supposons que vous ayez un <xref:System.Windows.Forms.Form> avec deux <xref:System.Windows.Forms.GroupBox> contrôles et chaque <xref:System.Windows.Forms.GroupBox> contrôle possède un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1025">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d11f7-1026">Lorsque le signe insertion est déplacé à partir d’un <xref:System.Windows.Forms.TextBox> à l’autre, le <xref:System.Windows.Forms.Control.Leave> événement est déclenché pour la <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.GroupBox>et le <xref:System.Windows.Forms.Control.Enter> événement est déclenché pour les autres <xref:System.Windows.Forms.GroupBox> et <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1026">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-1027">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1027">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-1028">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1028">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-1029">Pour plus d’informations, consultez le `WM_KILLFOCUS` rubrique dans la section « Keyboard Input Reference » et la section « Messages Deadlocks » de la[sur les Messages et les files d’attente](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1029">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx)topic.</span></span>  
  
 <span data-ttu-id="d11f7-1030">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1030">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1031">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Enter> pour modifier les couleurs de premier plan et arrière-plan un <xref:System.Windows.Forms.TextBox> dans des conditions particulières.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1031">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FindForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form FindForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Form FindForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FindForm" />
      <MemberSignature Language="VB.NET" Value="Public Function FindForm () As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Form ^ FindForm();" />
      <MemberSignature Language="F#" Value="member this.FindForm : unit -&gt; System.Windows.Forms.Form" Usage="control.FindForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1032">Récupère le formulaire sur le lequel se trouve le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1032">Retrieves the form that the control is on.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1033"><see cref="T:System.Windows.Forms.Form" /> sur lequel se trouve le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1033">The <see cref="T:System.Windows.Forms.Form" /> that the control is on.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1034">Le contrôle <xref:System.Windows.Forms.Control.Parent%2A> valeur de propriété ne peut pas être identique à la <xref:System.Windows.Forms.Form> retourné par <xref:System.Windows.Forms.Control.FindForm%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1034">The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method.</span></span> <span data-ttu-id="d11f7-1035">Par exemple, si un <xref:System.Windows.Forms.RadioButton> contrôle est contenu dans un <xref:System.Windows.Forms.GroupBox> contrôle et le <xref:System.Windows.Forms.GroupBox> se trouve sur un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.RadioButton> du contrôle <xref:System.Windows.Forms.Control.Parent%2A> est la <xref:System.Windows.Forms.GroupBox> et le <xref:System.Windows.Forms.GroupBox> contrôle <xref:System.Windows.Forms.Control.Parent%2A>est le <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1035">For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1036">L’exemple de code suivant recherche le formulaire qui contient le bouton spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1036">The following code example finds the form that contains the specified button.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1037">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1037">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-1038">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1038">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; bool" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1039">Définit le focus d'entrée sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1039">Sets input focus to the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1040"><see langword="true" /> si la demande de focus d'entrée a abouti ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1040"><see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1041">Le <xref:System.Windows.Forms.Control.Focus%2A> retourne de la méthode `true` si le contrôle a reçu le focus d’entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1041">The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus.</span></span> <span data-ttu-id="d11f7-1042">Le contrôle peut avoir le focus d’entrée sans afficher d’indication visuelle signalant ayant le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1042">The control can have the input focus while not displaying any visual cues of having the focus.</span></span> <span data-ttu-id="d11f7-1043">Ce comportement est principalement observé sur les contrôles non sélectionnable répertoriées ci-dessous, ou tout contrôle dérivé les.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1043">This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</span></span>  
  
 <span data-ttu-id="d11f7-1044">Un contrôle peut être sélectionné et recevoir le focus d’entrée si toutes les conditions suivantes sont remplies : le `Selectable` valeur <xref:System.Windows.Forms.ControlStyles> a la valeur `true`, elle est contenue dans un autre contrôle et tous ses contrôles parents sont visibles et activés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1044">A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="d11f7-1045">Les contrôles Windows Forms dans la liste suivante ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1045">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="d11f7-1046">Contrôles dérivés de ces contrôles ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1046">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="d11f7-1047"><xref:System.Windows.Forms.LinkLabel> (lorsqu’il n’existe aucun lien présent dans le contrôle)</span><span class="sxs-lookup"><span data-stu-id="d11f7-1047"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1048"><xref:System.Windows.Forms.Control.Focus%2A> une méthode de bas niveau vise principalement pour les auteurs de contrôles personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1048"><xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors.</span></span> <span data-ttu-id="d11f7-1049">Au lieu de cela, les programmeurs doivent utiliser le <xref:System.Windows.Forms.Control.Select%2A> méthode ou le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propriété pour les contrôles enfants, ou le <xref:System.Windows.Forms.Form.Activate%2A> méthode pour les formulaires.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1049">Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1050">L’exemple de code suivant définit le focus spécifié <xref:System.Windows.Forms.Control>, si elle peut recevoir le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1050">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1051">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1051">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-1052">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1052">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.Control.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1053">Obtient une valeur indiquant si le contrôle a le focus d'entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1053">Gets a value indicating whether the control has input focus.</span></span></summary>
        <value><span data-ttu-id="d11f7-1054"><see langword="true" /> si le contrôle a le focus ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1054"><see langword="true" /> if the control has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-1055">Le code suivant exemple désactive un <xref:System.Windows.Forms.MenuItem> si un <xref:System.Windows.Forms.TextBox> n’a pas le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1055">The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus.</span></span> <span data-ttu-id="d11f7-1056">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec un <xref:System.Windows.Forms.TextBox> nommé `textBox1` et deux <xref:System.Windows.Forms.MenuItem> objets nommés `menuItemEdit` et `menuItemEditInsertCustomerInfo`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1056">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.</span></span>  
  
 [!code-cpp[Windows.FOrms.Control Members2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#4)]
 [!code-csharp[Windows.FOrms.Control Members2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#4)]
 [!code-vb[Windows.FOrms.Control Members2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1057"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Focused" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Focused" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1057"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Focused" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Focused" /> property to extend the base implementation. Otherwise, you must provide all the implementation.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.Control.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1058">Obtient ou définit la police du texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1058">Gets or sets the font of the text displayed by the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1059"><see cref="T:System.Drawing.Font" /> à appliquer au texte affiché par le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1059">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span></span> <span data-ttu-id="d11f7-1060">La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultFont" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1060">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1061">Le <xref:System.Windows.Forms.Control.Font%2A> propriété est une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1061">The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property.</span></span> <span data-ttu-id="d11f7-1062">Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1062">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-1063">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1063">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-1064">Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1064">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="d11f7-1065">Étant donné que le <xref:System.Drawing.Font> est immuable (ce qui signifie que vous ne pouvez pas ajuster ses propriétés), vous ne pouvez affecter la <xref:System.Windows.Forms.Control.Font%2A> propriété un nouveau <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1065">Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>.</span></span> <span data-ttu-id="d11f7-1066">Toutefois, vous pouvez baser la nouvelle police sur la police existante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1066">However, you can base the new font on the existing font.</span></span>  
  
 <span data-ttu-id="d11f7-1067">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="d11f7-1067">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="d11f7-1068">Voici un exemple montrant comment la police existante pour mettre en gras :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1068">The following is an example of how to adjust the existing font to make it bold:</span></span>  
  
```csharp  
myControl.Font = new Font(myControl.Font,   
    myControl.Font.Style | FontStyle.Bold);  
```  
  
```vb  
MyControl.Font = New Font(MyControl.Font, _   
    MyControl.Font.Style Or FontStyle.Bold)  
```  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1069">Le code suivant exemple affiche un <xref:System.Windows.Forms.FontDialog> à l’utilisateur et les modifications le <xref:System.Drawing.Font> d’un <xref:System.Windows.Forms.DateTimePicker> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1069">The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="d11f7-1070">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> avec <xref:System.Windows.Forms.Button> et un <xref:System.Windows.Forms.DateTimePicker> dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1070">This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.</span></span>  
  
 [!code-cpp[Control_Font#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Font/CPP/control_font.cpp#1)]
 [!code-csharp[Control_Font#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Font/CS/control_font.cs#1)]
 [!code-vb[Control_Font#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Font/VB/control_font.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1071"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Font" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Font" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.Font" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1071"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Font" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Font" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Font" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1072">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Font" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1072">Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1073">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Font%2A> propriété est modifiée par la suite d’une modification par programmation ou via l’interaction.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1073">This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="d11f7-1074">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1074">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1075">L’exemple de code suivant montre le <xref:System.Windows.Forms.Control.FontChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1075">The following code example demonstrates the <xref:System.Windows.Forms.Control.FontChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FontHeight : int with get, set" Usage="System.Windows.Forms.Control.FontHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1076">Obtient ou définit la hauteur de la police du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1076">Gets or sets the height of the font of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1077">Hauteur du <see cref="T:System.Drawing.Font" /> du contrôle en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1077">The height of the <see cref="T:System.Drawing.Font" /> of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1078">Le <xref:System.Windows.Forms.Control.FontHeight%2A> propriété ne doit pas être définie sur n’importe quelle valeur autre que le contrôle <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> valeur, ou -1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1078">The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> value, or -1.</span></span> <span data-ttu-id="d11f7-1079">Paramètre <xref:System.Windows.Forms.Control.FontHeight%2A> sur -1 a pour effet d’effacer la valeur de hauteur mise en cache, et la valeur est recalculée la prochaine fois que la propriété est référencée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1079">Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.Height" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1080">Obtient ou définit la couleur de premier plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1080">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1081"><see cref="T:System.Drawing.Color" /> de premier plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1081">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="d11f7-1082">La valeur par défaut est la valeur de la propriété <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1082">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1083">Le <xref:System.Windows.Forms.Control.ForeColor%2A> propriété est une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1083">The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property.</span></span> <span data-ttu-id="d11f7-1084">Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1084">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-1085">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1085">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-1086">Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1086">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1087">Le code suivant exemple définit le <xref:System.Windows.Forms.Control.BackColor%2A> et <xref:System.Windows.Forms.Control.ForeColor%2A> des contrôles aux couleurs système par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1087">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="d11f7-1088">La code appelle de manière récursive elle-même si le contrôle a des contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1088">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="d11f7-1089">Cet exemple de code requiert que vous avez un <xref:System.Windows.Forms.Form> au moins un contrôle enfant ; Toutefois, un conteneur enfant contrôler, comme un <xref:System.Windows.Forms.Panel> ou <xref:System.Windows.Forms.GroupBox>, avec son propre enfant ou les contrôles seraient mettre en évidence la récursivité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1089">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1090"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.ForeColor" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.ForeColor" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.ForeColor" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1090"><para>When overriding the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1091">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.ForeColor" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1091">Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1092">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.ForeColor%2A> propriété est modifiée par la suite d’une modification par programmation ou via l’interaction.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1092">This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="d11f7-1093">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1093">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1094">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1094">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1095">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1095">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1096">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1096">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-1097">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1097">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1098">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1098">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="FromChildHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromChildHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromChildHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromChildHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromChildHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromChildHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="d11f7-1099">Handle de fenêtre (<see langword="HWND" />) à rechercher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1099">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="d11f7-1100">Récupère le contrôle qui contient le handle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1100">Retrieves the control that contains the specified handle.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1101"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle associé au handle spécifié ; retourne <see langword="null" /> en l'absence d'un contrôle associé au handle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1101">The <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1102">Cette méthode recherche dans la chaîne parente du handle de fenêtre jusqu'à ce qu’il trouve un handle qui est associé à un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1102">This method searches up the window handle parent chain until it finds a handle that is associated with a control.</span></span> <span data-ttu-id="d11f7-1103">Cette méthode est plus fiable que la <xref:System.Windows.Forms.Control.FromHandle%2A> (méthode), car elle retourne correctement les contrôles possédant plusieurs handles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1103">This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1104">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1104">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-1105">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1105">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="d11f7-1106">Handle de fenêtre (<see langword="HWND" />) à rechercher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1106">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="d11f7-1107">Retourne le contrôle actuellement associé au handle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1107">Returns the control that is currently associated with the specified handle.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1108"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle associé au handle spécifié ; retourne <see langword="null" /> en l'absence d'un contrôle associé au handle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1108">A <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1109">Utilisez le <xref:System.Windows.Forms.Control.FromChildHandle%2A> méthode si vous avez besoin retourner des contrôles possédant plusieurs handles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1109">Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1110">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1110">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-1111">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1111">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="control.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="objectId"><span data-ttu-id="d11f7-1112"><see langword="Int32" /> qui identifie le <see cref="T:System.Windows.Forms.AccessibleObject" /> à récupérer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1112">An <see langword="Int32" /> that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</span></span></param>
        <summary><span data-ttu-id="d11f7-1113">Récupère le <see cref="T:System.Windows.Forms.AccessibleObject" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1113">Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1114"><see cref="T:System.Windows.Forms.AccessibleObject" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1114">The specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.AutoSizeMode GetAutoSizeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAutoSizeMode () As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::AutoSizeMode GetAutoSizeMode();" />
      <MemberSignature Language="F#" Value="member this.GetAutoSizeMode : unit -&gt; System.Windows.Forms.AutoSizeMode" Usage="control.GetAutoSizeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1115">Récupère une valeur indiquant comment un contrôle se comporte quand sa propriété <see cref="P:System.Windows.Forms.Control.AutoSize" /> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1115">Retrieves a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1116">Une des valeurs de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1116">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildAtPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-1117">Récupère le contrôle enfant à un emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1117">Retrieves the child control at a specified location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="d11f7-1118"><see cref="T:System.Drawing.Point" /> qui contient les coordonnées où vous souhaitez rechercher un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1118">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="d11f7-1119">Les coordonnées sont exprimées par rapport au coin supérieur gauche de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1119">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <summary><span data-ttu-id="d11f7-1120">Récupère le contrôle enfant qui est situé aux coordonnées spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1120">Retrieves the child control that is located at the specified coordinates.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1121"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle qui se trouve au point spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1121">A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is located at the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1122">S’il n’existe aucun contrôle enfant au point spécifié, le <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> retourne de la méthode `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1122">If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1123">pour toutes les fenêtres d’appeler cette méthode si le contrôle retourné ne sont pas un enfant du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1123">for all windows to call this method if the control returned is not a child of the control.</span></span> <span data-ttu-id="d11f7-1124">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1124">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.GetChildAtPointSkip skipValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point, skipValue As GetChildAtPointSkip) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt, System::Windows::Forms::GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point * System.Windows.Forms.GetChildAtPointSkip -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint (pt, skipValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="skipValue" Type="System.Windows.Forms.GetChildAtPointSkip" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="d11f7-1125"><see cref="T:System.Drawing.Point" /> qui contient les coordonnées où vous souhaitez rechercher un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1125">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="d11f7-1126">Les coordonnées sont exprimées par rapport au coin supérieur gauche de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1126">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <param name="skipValue"><span data-ttu-id="d11f7-1127">Une des valeurs de <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, déterminant s'il faut ignorer les contrôles enfants d'un certain type.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1127">One of the values of <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, determining whether to ignore child controls of a certain type.</span></span></param>
        <summary><span data-ttu-id="d11f7-1128">Récupère le contrôle enfant localisé aux coordonnées spécifiées, en spécifiant s'il faut ignorer ceux d'un certain type.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1128">Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1129"><see cref="T:System.Windows.Forms.Control" /> aux coordonnées spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1129">The child <see cref="T:System.Windows.Forms.Control" /> at the specified coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IContainerControl GetContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.IContainerControl GetContainerControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContainerControl () As IContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IContainerControl ^ GetContainerControl();" />
      <MemberSignature Language="F#" Value="member this.GetContainerControl : unit -&gt; System.Windows.Forms.IContainerControl" Usage="control.GetContainerControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IContainerControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1130">Retourne le <see cref="T:System.Windows.Forms.ContainerControl" /> suivant en remontant la chaîne de contrôles parents du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1130">Returns the next <see cref="T:System.Windows.Forms.ContainerControl" /> up the control's chain of parent controls.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1131"><see cref="T:System.Windows.Forms.IContainerControl" /> qui représente le parent du <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1131">An <see cref="T:System.Windows.Forms.IContainerControl" />, that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1132">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1132">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-1133">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1133">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="T:System.Windows.Forms.IContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="GetNextControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetNextControl(class System.Windows.Forms.Control ctl, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextControl (ctl As Control, forward As Boolean) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetNextControl(System::Windows::Forms::Control ^ ctl, bool forward);" />
      <MemberSignature Language="F#" Value="member this.GetNextControl : System.Windows.Forms.Control * bool -&gt; System.Windows.Forms.Control" Usage="control.GetNextControl (ctl, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="d11f7-1134"><see cref="T:System.Windows.Forms.Control" /> à partir duquel commencer la recherche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1134">The <see cref="T:System.Windows.Forms.Control" /> to start the search with.</span></span></param>
        <param name="forward"><span data-ttu-id="d11f7-1135"><see langword="true" /> pour rechercher vers le bas dans l'ordre de tabulation ; <see langword="false" /> pour rechercher vers le haut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1135"><see langword="true" /> to search forward in the tab order; <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="d11f7-1136">Récupère le contrôle suivant vers le bas ou vers le haut dans l'ordre de tabulation des contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1136">Retrieves the next control forward or back in the tab order of child controls.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1137"><see cref="T:System.Windows.Forms.Control" /> suivant dans l'ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1137">The next <see cref="T:System.Windows.Forms.Control" /> in the tab order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1138">Le <xref:System.Windows.Forms.Control.GetNextControl%2A> méthode dépend de l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1138">The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order.</span></span> <span data-ttu-id="d11f7-1139">Pour effectuer une itération dans tous les contrôles d’un formulaire, y compris les contrôles imbriqués, utilisez le <xref:System.Windows.Forms.Control.Controls%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1139">To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="d11f7-1140">Pour obtenir ou définir le contrôle actif d’un contrôle conteneur, utilisez le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1140">To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(System.Drawing.Size)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="proposedSize"><span data-ttu-id="d11f7-1141">Zone de taille personnalisée pour un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1141">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="d11f7-1142">Récupère la taille d'une zone rectangulaire qui peut contenir un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1142">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1143">Paire ordonnée de type <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur d'un rectangle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1143">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1144">Le comportement de <xref:System.Windows.Forms.Control.GetPreferredSize%2A> diffère par contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1144">The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="d11f7-1145">Le <xref:System.Windows.Forms.Control.LayoutEngine%2A> peut être impossible d’affecter la taille retournée au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1145">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="d11f7-1146">Vous pouvez retourner une taille plus grande que les contraintes indiquées dans le `proposedSize` paramètre, mais `proposedSize` doit diminuer lorsque les contraintes diminuent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1146">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="d11f7-1147">Par exemple, `GetPreferredSize(new Size(100, 0))` ne doit pas être plus large que `GetPreferredSize(new Size(200, 0))`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1147">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="d11f7-1148">L’exception est un `proposedSize` 0 ou `Size.Empty`, qui sont définis en tant que sans contrainte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1148">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle&#xA;override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="control.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="bounds"><span data-ttu-id="d11f7-1149"><see cref="T:System.Drawing.Rectangle" /> qui spécifie la zone pour laquelle les limites d'affichage sont récupérées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1149">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span></span></param>
        <param name="factor"><span data-ttu-id="d11f7-1150">Hauteur et largeur des limites du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1150">The height and width of the control's bounds.</span></span></param>
        <param name="specified"><span data-ttu-id="d11f7-1151">Une des valeurs de <see cref="T:System.Windows.Forms.BoundsSpecified" /> qui spécifie les limites du contrôle à utiliser pendant la définition de sa taille et de sa position.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1151">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="d11f7-1152">Récupère les limites dans lesquelles le contrôle est mis à l'échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1152">Retrieves the bounds within which the control is scaled.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1153"><see cref="T:System.Drawing.Rectangle" /> représentant les limites dans lesquelles le contrôle est mis à l'échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1153">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1154">Il s’agit d’une méthode d’assistance qui est appelée par <xref:System.Windows.Forms.Control.ScaleControl%2A> pour récupérer les limites dans lesquelles le contrôle est mis à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1154">This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled.</span></span> <span data-ttu-id="d11f7-1155">Vous pouvez substituer cette méthode pour réutiliser le <xref:System.Windows.Forms.Control.ScaleControl%2A> mise à l’échelle à la logique, mais vous devez fournir vos propres limites.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1155">You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds.</span></span> <span data-ttu-id="d11f7-1156">L’implémentation par défaut retourne les limites de mise à l’échelle qui prennent en compte la `specified` limites, si le contrôle est de niveau supérieur, si le contrôle est fixe la largeur ou de taille automatique et de tous les ornements que le contrôle peut avoir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1156">The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="protected bool GetStyle (System.Windows.Forms.ControlStyles flag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetStyle(valuetype System.Windows.Forms.ControlStyles flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyle (flag As ControlStyles) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetStyle(System::Windows::Forms::ControlStyles flag);" />
      <MemberSignature Language="F#" Value="member this.GetStyle : System.Windows.Forms.ControlStyles -&gt; bool" Usage="control.GetStyle flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="d11f7-1157">Bit <see cref="T:System.Windows.Forms.ControlStyles" /> duquel retourner la valeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1157">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to return the value from.</span></span></param>
        <summary><span data-ttu-id="d11f7-1158">Récupère la valeur du bit de style de contrôle spécifié pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1158">Retrieves the value of the specified control style bit for the control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1159"><see langword="true" /> si le bit de style de contrôle spécifié a la valeur <see langword="true" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1159"><see langword="true" /> if the specified control style bit is set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1160">Indicateurs de bits de style de contrôle sont utilisés pour classer le comportement pris en charge.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1160">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="d11f7-1161">Un contrôle peut activer un style en appelant le <xref:System.Windows.Forms.Control.SetStyle%2A> (méthode) et en passant le texte approprié <xref:System.Windows.Forms.ControlStyles> bits et la valeur booléenne pour définir le bit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1161">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to.</span></span> <span data-ttu-id="d11f7-1162">Pour déterminer la valeur assignée à une certaine <xref:System.Windows.Forms.ControlStyles> de bits, utilisez le <xref:System.Windows.Forms.Control.GetStyle%2A> (méthode) et passez le <xref:System.Windows.Forms.ControlStyles> membre à évaluer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1162">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1163">L’exemple de code suivant retourne la valeur de style liés à la mise en mémoire tampon double bits pour un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1163">The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-1164">Cet exemple retourne `true` uniquement si tous les bits de style sont définis sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1164">This example returns `true` only if all the style bits are set to `true`.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#4)]
 [!code-csharp[Windows.Forms.ControlMembers6#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#4)]
 [!code-vb[Windows.Forms.ControlMembers6#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevel">
      <MemberSignature Language="C#" Value="protected bool GetTopLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetTopLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetTopLevel" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTopLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetTopLevel();" />
      <MemberSignature Language="F#" Value="member this.GetTopLevel : unit -&gt; bool" Usage="control.GetTopLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1165">Détermine si le contrôle est un contrôle du niveau le plus élevé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1165">Determines if the control is a top-level control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1166"><see langword="true" /> si le contrôle est du niveau le plus élevé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1166"><see langword="true" /> if the control is a top-level control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1167">Se produit pendant une opération glisser.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1167">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1168">Le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché lorsqu’une opération de glisser-déplacer commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1168">The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started.</span></span> <span data-ttu-id="d11f7-1169">Avec le <xref:System.Windows.Forms.Control.GiveFeedback> événement, la source d’un événement glisser de modifier l’apparence du pointeur de la souris pour fournir une rétroaction visuelle pendant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1169">With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="d11f7-1170">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1170">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-1171">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1171">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-1172">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1172">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-1173">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1173">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-1174">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1174">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-1175">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1175">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-1176">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1176">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-1177">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1177">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-1178">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1178">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-1179">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1179">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-1180">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1180">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-1181">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1181">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-1182">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1182">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-1183">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1183">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-1184">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1184">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-1185">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1185">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1186">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1186">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-1187">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1187">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-1188">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1188">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-1189">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1189">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-1190">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1190">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-1191">L’exemple suppose que deux fichiers curseur, `3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1191">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-1192">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1192">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-1193">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1193">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-1194">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1194">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-1195">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1195">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-1196">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1196">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-1197">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1197">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-1198">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1198">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-1199">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1199">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-1200">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.GiveFeedback> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1200">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="d11f7-1201">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1201">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : EventHandler " Usage="member this.GotFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1202">Se produit quand le contrôle reçoit le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1202">Occurs when the control receives focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1203">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1203">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-1204">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1204">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-1205">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1205">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-1206">**Remarque** le <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> les événements sont des événements de focus de bas niveau qui sont liés aux messages WM_KILLFOCUS et WM_SETFOCUS Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1206">**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="d11f7-1207">En règle générale, le <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> événements sont uniquement utilisés lorsque la mise à jour <xref:System.Windows.Forms.UICues> ou lors de l’écriture des contrôles personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1207">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="d11f7-1208">À la place la <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements doivent être utilisés pour tous les contrôles à l’exception de la <xref:System.Windows.Forms.Form> classe, qui utilise le <xref:System.Windows.Forms.Form.Activated> et <xref:System.Windows.Forms.Form.Deactivate> événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1208">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="d11f7-1209">Pour plus d’informations sur la <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> les événements, consultez le [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)et[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) rubriques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1209">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-1210">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1210">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-1211">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1211">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-1212">Pour plus d’informations, consultez le [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1212">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="d11f7-1213">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1213">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1214">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1214">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1215">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.GotFocus> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1215">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span> <span data-ttu-id="d11f7-1216">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1216">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="d11f7-1217">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1217">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1218">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.GotFocus> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1218">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#47)]
 [!code-vb[System.Windows.Forms.EventExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Control.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-515)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1219">Obtient le handle de fenêtre auquel le contrôle est lié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1219">Gets the window handle that the control is bound to.</span></span></summary>
        <value><span data-ttu-id="d11f7-1220"><see cref="T:System.IntPtr" /> qui contient le handle de fenêtre (<see langword="HWND" />) du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1220">An <see cref="T:System.IntPtr" /> that contains the window handle (<see langword="HWND" />) of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1221">La valeur de la <xref:System.Windows.Forms.Control.Handle%2A> propriété est un Windows `HWND`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1221">The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`.</span></span> <span data-ttu-id="d11f7-1222">Si le handle n’a pas encore été créé, la référence à cette propriété forcera le handle doit être créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1222">If the handle has not yet been created, referencing this property will force the handle to be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1223">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.Control.Handle%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1223">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> and the <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="d11f7-1224">Pour exécuter l’exemple, collez le code suivant dans un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1224">To run the example paste the following code in a form.</span></span> <span data-ttu-id="d11f7-1225">Ajoutez deux boutons nommés `Button1` et `Button2` au formulaire et vérifiez que tous les événements sont associés à leurs gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1225">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleCreated">
      <MemberSignature Language="C#" Value="public event EventHandler HandleCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleCreated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleCreated;" />
      <MemberSignature Language="F#" Value="member this.HandleCreated : EventHandler " Usage="member this.HandleCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1226">Se produit lors de la création d'un handle pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1226">Occurs when a handle is created for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1227">Un handle est créé lorsque le <xref:System.Windows.Forms.Control> s’affiche pour la première fois.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1227">A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time.</span></span> <span data-ttu-id="d11f7-1228">Par exemple, si un <xref:System.Windows.Forms.Control> est créé qui a <xref:System.Windows.Forms.Control.Visible%2A> définie sur `false`, le <xref:System.Windows.Forms.Control.HandleCreated> événement n’est pas déclenché tant que <xref:System.Windows.Forms.Control.Visible%2A> est défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1228">For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="d11f7-1229">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1229">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1230">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1230">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1231">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.HandleCreated> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1231">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span> <span data-ttu-id="d11f7-1232">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1232">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1233">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1233">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1234">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1234">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1235">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.HandleCreated> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1235">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#37)]
 [!code-vb[System.Windows.Forms.EventExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler HandleDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleDestroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleDestroyed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleDestroyed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleDestroyed;" />
      <MemberSignature Language="F#" Value="member this.HandleDestroyed : EventHandler " Usage="member this.HandleDestroyed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1236">Se produit pendant le processus de destruction du handle du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1236">Occurs when the control's handle is in the process of being destroyed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1237">Lors de la <xref:System.Windows.Forms.Control.HandleDestroyed> événement, le contrôle est toujours un contrôle Windows valide et le <xref:System.Windows.Forms.Control.Handle%2A> peut être recréé en appelant le <xref:System.Windows.Forms.Control.RecreateHandle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1237">During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="d11f7-1238">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1238">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1239">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1239">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1240">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.HandleDestroyed> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1240">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span> <span data-ttu-id="d11f7-1241">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1241">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1242">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1242">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1243">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1243">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1244">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.HandleDestroyed> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1244">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#38)]
 [!code-vb[System.Windows.Forms.EventExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Windows.Forms.Control.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1245">Obtient une valeur indiquant si le contrôle contient un ou plusieurs contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1245">Gets a value indicating whether the control contains one or more child controls.</span></span></summary>
        <value><span data-ttu-id="d11f7-1246"><see langword="true" /> si le contrôle contient un ou plusieurs contrôles enfants ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1246"><see langword="true" /> if the control contains one or more child controls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1247">Si le <xref:System.Windows.Forms.Control.Controls%2A> collection a un <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> supérieur à zéro, le <xref:System.Windows.Forms.Control.HasChildren%2A> propriété retournera `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1247">If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`.</span></span> <span data-ttu-id="d11f7-1248">L’accès à la <xref:System.Windows.Forms.Control.HasChildren%2A> propriété ne force pas la création d’un <xref:System.Windows.Forms.Control.ControlCollection> si le contrôle n’a aucuns enfants, par conséquent, faisant référence à cette propriété peut améliorer les performances lorsque vous parcourez une arborescence des contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1248">Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1249">Le code suivant exemple définit le <xref:System.Windows.Forms.Control.BackColor%2A> et <xref:System.Windows.Forms.Control.ForeColor%2A> des contrôles aux couleurs système par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1249">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="d11f7-1250">La code appelle de manière récursive elle-même si le contrôle a des contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1250">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="d11f7-1251">Cet exemple de code requiert que vous avez un <xref:System.Windows.Forms.Form> au moins un contrôle enfant ; Toutefois, un conteneur enfant contrôler, comme un <xref:System.Windows.Forms.Panel> ou <xref:System.Windows.Forms.GroupBox>, avec son propre enfant ou les contrôles seraient mettre en évidence la récursivité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1251">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.Control.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1252">Obtient ou définit la hauteur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1252">Gets or sets the height of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1253">Hauteur du contrôle en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1253">The height of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1254">Modifications apportées à la <xref:System.Windows.Forms.Control.Height%2A> et <xref:System.Windows.Forms.Control.Top%2A> cause de valeurs de propriété du <xref:System.Windows.Forms.Control.Bottom%2A> valeur de la propriété du contrôle à modifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1254">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1255">La hauteur minimale pour le contrôle dérivé <xref:System.Windows.Forms.Splitter> est un pixel.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1255">The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel.</span></span> <span data-ttu-id="d11f7-1256">La hauteur par défaut pour le <xref:System.Windows.Forms.Splitter> contrôle est trois pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1256">The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels.</span></span> <span data-ttu-id="d11f7-1257">Définition de la hauteur de la <xref:System.Windows.Forms.Splitter> contrôle à une valeur inférieure à un réinitialise la valeur de propriété à la hauteur par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1257">Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1258">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1258">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-1259">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1259">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Drawing.Size.Height" />
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HelpRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequested As HelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HelpEventHandler ^ HelpRequested;" />
      <MemberSignature Language="F#" Value="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " Usage="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1260">Se produit quand l'utilisateur fait appel à l'aide pour un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1260">Occurs when the user requests help for a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1261">Le <xref:System.Windows.Forms.Control.HelpRequested> est généralement déclenché lorsque l’utilisateur appuie sur F1 clé ou un bouton d’aide contextuelle associé est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1261">The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</span></span>  
  
 <span data-ttu-id="d11f7-1262">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1262">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1263">L’exemple de code suivant illustre la gestion du <xref:System.Windows.Forms.Control.HelpRequested> événement pour afficher le contenu d’aide personnalisé sur un formulaire contenant quatre champs d’adresse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1263">The following code example demonstrates handling the <xref:System.Windows.Forms.Control.HelpRequested> event to display custom Help content on a form containing four address fields.</span></span> <span data-ttu-id="d11f7-1264">Le <xref:System.Windows.Forms.Control.HelpRequested> événement est déclenché en appuyant sur la touche F1 avec le focus dans un champ d’adresse, soit en l’à l’aide du bouton d’aide contextuels en cliquant sur le curseur d’aide sur un champ d’adresse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1264">The <xref:System.Windows.Forms.Control.HelpRequested> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</span></span> <span data-ttu-id="d11f7-1265">Le <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> propriété est définie sur true pour indiquer que le `HelpRequested` événement est géré.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1265">The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled.</span></span> <span data-ttu-id="d11f7-1266">L’exemple montre également stocker le texte d’aide dans le <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1266">The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CPP/helpevent.cpp#1)]
 [!code-csharp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CS/helpevent.cs#1)]
 [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/VB/helpevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <altmember cref="T:System.Windows.Forms.HelpProvider" />
        <altmember cref="T:System.Windows.Forms.Help" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="control.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1267">Masque le contrôle à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1267">Conceals the control from the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1268">Masquer le contrôle revient à affecter la <xref:System.Windows.Forms.Control.Visible%2A> propriété `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1268">Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`.</span></span> <span data-ttu-id="d11f7-1269">Après le <xref:System.Windows.Forms.Control.Hide%2A> méthode est appelée, le <xref:System.Windows.Forms.Control.Visible%2A> propriété retourne une valeur de `false` jusqu'à ce que le <xref:System.Windows.Forms.Control.Show%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1269">After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1270">L’exemple de code suivant masque un bouton si la touche CTRL est enfoncée lorsque le bouton est activé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1270">The following code example hides a button if the CTRL key is pressed when the button is clicked.</span></span> <span data-ttu-id="d11f7-1271">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Button> nommé `button1` sur un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1271">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1272">Obtient ou définit le mode de l'éditeur de méthode d'entrée (IME, Input Method Editor) du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1272">Gets or sets the Input Method Editor (IME) mode of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1273">Une des valeurs de <see cref="T:System.Windows.Forms.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1273">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span> <span data-ttu-id="d11f7-1274">La valeur par défaut est <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1274">The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1275">Un IME est un programme qui permet aux utilisateurs d’entrer des caractères complexes et des symboles, tels que des caractères kanji (japonais), à l’aide d’un clavier standard.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1275">An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</span></span> <span data-ttu-id="d11f7-1276">Le <xref:System.Windows.Forms.Control.ImeMode%2A> propriété est généralement définie sur <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> pour un <xref:System.Windows.Forms.TextBox> contrôle destiné à entrer uniquement des valeurs numériques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1276">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values.</span></span> <span data-ttu-id="d11f7-1277">Le <xref:System.Windows.Forms.Control.ImeMode%2A> propriété a la valeur <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> pour la <xref:System.Windows.Forms.Form> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1277">The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> for the <xref:System.Windows.Forms.Form> class.</span></span>  
  
 <span data-ttu-id="d11f7-1278">La plupart des classes qui ne pas directement prise en charge les éditeurs de méthode d’entrée, ou autoriser l’entrée directe à partir d’un IME, définissent la valeur de cette propriété sur <xref:System.Windows.Forms.ImeMode.NoControl>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1278">Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d11f7-1279">L’utilisateur peut modifier de manière interactive la <xref:System.Windows.Forms.Control.ImeMode%2A> , sauf si elle a été définie par programmation <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1279">The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d11f7-1280">Dans ce cas, l’utilisateur ne sera pas en mesure d’utiliser l’éditeur IME.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1280">In this case, the user will not be able to use the IME.</span></span>  
>   
>  <span data-ttu-id="d11f7-1281">Le <xref:System.Windows.Forms.Control.ImeMode%2A> propriété est ignorée sur Windows 8 lorsque le mode de saisie global est en vigueur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1281">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect.</span></span> <span data-ttu-id="d11f7-1282">Pour plus d’informations, consultez [commutateur texte d’entrée a été remplacée par Thread par l’utilisateur](http://go.microsoft.com/fwlink/?LinkID=256509).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1282">For more info, see [Switch Text Input Changed from Per-Thread to Per-User](http://go.microsoft.com/fwlink/?LinkID=256509).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d11f7-1283">La valeur assignée ne fait pas partie des valeurs d'énumération <see cref="T:System.Windows.Forms.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1283">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1284">Obtient ou définit le mode IME d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1284">Gets or sets the IME mode of a control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1285">Mode IME du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1285">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1286">Se produit quand la propriété <see cref="P:System.Windows.Forms.Control.ImeMode" /> a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1286">Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1287">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.ImeMode%2A> propriété est modifiée par la suite d’une modification par programmation ou via l’interaction.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1287">This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="d11f7-1288">Les contrôles qui ne prennent pas en charge les gestionnaires de méthode d’entrée ne seront jamais déclencher cet événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1288">Controls that do not support Input Method Managers will never raise this event.</span></span>  
  
 <span data-ttu-id="d11f7-1289">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1289">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1290">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1290">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1291">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1291">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1292">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1292">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-1293">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1293">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1294">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1294">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="protected virtual void InitLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InitLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitLayout();" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : unit -&gt; unit&#xA;override this.InitLayout : unit -&gt; unit" Usage="control.InitLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1295">Appelé après l'ajout du contrôle à un autre conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1295">Called after the control has been added to another container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1296">Le <xref:System.Windows.Forms.Control.InitLayout%2A> méthode est appelée immédiatement après l’ajout d’un contrôle à un conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1296">The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container.</span></span> <span data-ttu-id="d11f7-1297">Le <xref:System.Windows.Forms.Control.InitLayout%2A> méthode permet à un contrôle d’initialiser son état de mise en page en fonction de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1297">The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container.</span></span> <span data-ttu-id="d11f7-1298">Par exemple, vous appliqueriez généralement ancrage et au contrôle dans le <xref:System.Windows.Forms.Control.InitLayout%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1298">For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1299"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.InitLayout" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.InitLayout" /> méthode afin que le contrôle est affiché correctement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1299"><para>When overriding <see cref="M:System.Windows.Forms.Control.InitLayout" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.InitLayout" /> method so that the control is displayed correctly.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-1300">Invalide une zone spécifique du contrôle et provoque l'envoi au contrôle d'un message relatif à la peinture.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1300">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="control.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1301">Invalide la surface totale du contrôle et le contrôle est redessiné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1301">Invalidates the entire surface of the control and causes the control to be redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1302">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1302">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1303">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1303">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1304">Le code exemple suivant active l’utilisateur pour faire glisser un fichier image ou une image du formulaire et qu’il affiche à l’emplacement où elle est supprimée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1304">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="d11f7-1305">Le <xref:System.Windows.Forms.Control.OnPaint%2A> méthode est substituée pour repeindre l’image chaque fois que le formulaire est peint ; sinon, l’image n’est rendue persistante jusqu'à ce que la mise à jour suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1305">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="d11f7-1306">Le <xref:System.Windows.Forms.Control.DragEnter> détermine le type de données glissées sur le formulaire de méthode de gestion des événements et fournit les commentaires appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1306">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="d11f7-1307">Le <xref:System.Windows.Forms.Control.DragDrop> méthode de gestion des événements affiche l’image sur le formulaire, si un <xref:System.Drawing.Image> peuvent être créés à partir des données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1307">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="d11f7-1308">Étant donné que le <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> les valeurs sont des coordonnées d’écran, l’exemple utilise le <xref:System.Windows.Forms.Control.PointToClient%2A> méthode pour les convertir en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1308">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : bool -&gt; unit" Usage="control.Invalidate invalidateChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidateChildren"><span data-ttu-id="d11f7-1309"><see langword="true" /> pour invalider les contrôles enfants du contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1309"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-1310">Invalide une zone spécifique du contrôle et provoque l'envoi au contrôle d'un message relatif à la peinture.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1310">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="d11f7-1311">Invalide éventuellement les contrôles enfants assignés au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1311">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1312">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1312">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1313">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1313">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.Invalidate rc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="d11f7-1314"><see cref="T:System.Drawing.Rectangle" /> qui représente la région à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1314">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <summary><span data-ttu-id="d11f7-1315">Invalide la zone spécifiée du contrôle (l'ajoute à la zone de mise à jour du contrôle, qui est la zone qui sera repeinte lors de la prochaine opération de peinture), et entraîne l'envoi d'un message de peinture au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1315">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1316">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1316">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1317">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1317">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region -&gt; unit" Usage="control.Invalidate region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="d11f7-1318"><see cref="T:System.Drawing.Region" /> à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1318">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <summary><span data-ttu-id="d11f7-1319">Invalide la zone spécifiée du contrôle (l'ajoute à la zone de mise à jour du contrôle, qui est la zone qui sera repeinte lors de la prochaine opération de peinture), et entraîne l'envoi d'un message de peinture au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1319">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1320">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1320">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1321">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1321">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle, invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle * bool -&gt; unit" Usage="control.Invalidate (rc, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="d11f7-1322"><see cref="T:System.Drawing.Rectangle" /> qui représente la région à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1322">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="d11f7-1323"><see langword="true" /> pour invalider les contrôles enfants du contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1323"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-1324">Invalide la zone spécifiée du contrôle (l'ajoute à la zone de mise à jour du contrôle, qui est la zone qui sera repeinte lors de la prochaine opération de peinture), et entraîne l'envoi d'un message de peinture au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1324">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="d11f7-1325">Invalide éventuellement les contrôles enfants assignés au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1325">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1326">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1326">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1327">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1327">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region * bool -&gt; unit" Usage="control.Invalidate (region, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="d11f7-1328"><see cref="T:System.Drawing.Region" /> à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1328">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="d11f7-1329"><see langword="true" /> pour invalider les contrôles enfants du contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1329"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-1330">Invalide la zone spécifiée du contrôle (l'ajoute à la zone de mise à jour du contrôle, qui est la zone qui sera repeinte lors de la prochaine opération de peinture), et entraîne l'envoi d'un message de peinture au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1330">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="d11f7-1331">Invalide éventuellement les contrôles enfants assignés au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1331">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1332">Appelant le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode n’impose pas de peinture synchrone ; pour imposer une peinture synchrone, appelez le <xref:System.Windows.Forms.Control.Update%2A> méthode après avoir appelé la <xref:System.Windows.Forms.Control.Invalidate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1332">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="d11f7-1333">Lorsque cette méthode est appelée sans paramètres, la zone cliente est ajoutée à la région de mise à jour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1333">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InvalidateEventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InvalidateEventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invalidated As InvalidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InvalidateEventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " Usage="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InvalidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1334">Se produit quand l'affichage d'un contrôle doit être redessiné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1334">Occurs when a control's display requires redrawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1335">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1335">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1336">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1336">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1337">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.Invalidated> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1337">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span> <span data-ttu-id="d11f7-1338">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1338">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1339">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1339">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1340">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1340">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1341">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.Invalidated> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1341">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#40)]
 [!code-vb[System.Windows.Forms.EventExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-1342">Exécute un délégué sur le thread qui détient le handle de fenêtre sous-jacent du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1342">Executes a delegate on the thread that owns the control's underlying window handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate -&gt; obj" Usage="control.Invoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d11f7-1343">Délégué qui contient une méthode à appeler dans le contexte du thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1343">A delegate that contains a method to be called in the control's thread context.</span></span></param>
        <summary><span data-ttu-id="d11f7-1344">Exécute le délégué spécifié sur le thread qui détient le handle de fenêtre sous-jacent du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1344">Executes the specified delegate on the thread that owns the control's underlying window handle.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1345">Valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1345">The return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1346">Les délégués sont comparables aux pointeurs de fonction dans des langages C ou C++.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1346">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="d11f7-1347">Ils encapsulent une référence à une méthode à l’intérieur d’un objet de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1347">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="d11f7-1348">L’objet délégué peut ensuite être passé au code qui appelle la méthode référencée, et la méthode à appeler peut être inconnue au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1348">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="d11f7-1349">Contrairement aux pointeurs fonction en C ou C++, les délégués sont orientés objet, de type sécurisé et plus sécurisée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1349">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="d11f7-1350">Le <xref:System.Windows.Forms.Control.Invoke%2A> recherches de méthode de la chaîne du contrôle parent jusqu'à ce qu’il trouve un contrôle ou un formulaire qui dispose d’une fenêtre Gérer si le handle de fenêtre sous-jacent du contrôle actuel n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1350">The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</span></span> <span data-ttu-id="d11f7-1351">Si aucun handle approprié ne peut être trouvé, le <xref:System.Windows.Forms.Control.Invoke%2A> méthode lèvera une exception.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1351">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception.</span></span> <span data-ttu-id="d11f7-1352">Exceptions générées pendant l’appel seront propagées à l’appelant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1352">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1353">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1353">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-1354">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1354">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-1355">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1355">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="d11f7-1356">Le délégué peut être une instance de <xref:System.EventHandler>, auquel cas le paramètre sender contiendra ce contrôle, et le paramètre d’événement contiendra <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1356">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d11f7-1357">Le délégué peut également être une instance de <xref:System.Windows.Forms.MethodInvoker>, ou tout autre délégué qui accepte une liste de paramètres void.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1357">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="d11f7-1358">Un appel à une <xref:System.EventHandler> ou <xref:System.Windows.Forms.MethodInvoker> délégué sera plus rapide qu’un appel à un autre type de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1358">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1359">Une exception peut être levée si le thread qui doit traiter le message n’est plus actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1359">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1360">L’exemple de code suivant montre les contrôles qui contiennent un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1360">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="d11f7-1361">Le délégué encapsule une méthode qui ajoute des éléments à la zone de liste, et cette méthode est exécutée sur le thread qui détient le handle sous-jacent du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1361">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</span></span> <span data-ttu-id="d11f7-1362">Lorsque l’utilisateur clique sur le bouton, `Invoke` s’exécute le délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1362">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke2/CPP/control_invoke2.cpp#1)]
 [!code-csharp[Control_Invoke2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke2/CS/control_invoke2.cs#1)]
 [!code-vb[Control_Invoke2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke2/VB/control_invoke2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj&#xA;override this.Invoke : Delegate * obj[] -&gt; obj" Usage="control.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="d11f7-1363">Délégué vers une méthode qui accepte des paramètres du même nombre et du même type que ceux contenus dans le paramètre <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1363">A delegate to a method that takes parameters of the same number and type that are contained in the <c>args</c> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="d11f7-1364">Tableau d'objets à passer comme arguments à la méthode spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1364">An array of objects to pass as arguments to the specified method.</span></span> <span data-ttu-id="d11f7-1365">Ce paramètre peut être <see langword="null" /> si la méthode n'accepte aucun argument.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1365">This parameter can be <see langword="null" /> if the method takes no arguments.</span></span></param>
        <summary><span data-ttu-id="d11f7-1366">Exécute le délégué spécifié sur le thread qui détient le handle de fenêtre sous-jacent du contrôle, avec la liste d’arguments spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1366">Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1367"><see cref="T:System.Object" /> qui contient la valeur de retour du délégué appelé ou <see langword="null" /> si le délégué n'a pas de valeur de retour.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1367">An <see cref="T:System.Object" /> that contains the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1368">Les délégués sont comparables aux pointeurs de fonction dans des langages C ou C++.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1368">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="d11f7-1369">Ils encapsulent une référence à une méthode à l’intérieur d’un objet de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1369">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="d11f7-1370">L’objet délégué peut ensuite être passé au code qui appelle la méthode référencée, et la méthode à appeler peut être inconnue au moment de la compilation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1370">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="d11f7-1371">Contrairement aux pointeurs fonction en C ou C++, les délégués sont orientés objet, de type sécurisé et plus sécurisée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1371">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="d11f7-1372">Si le handle du contrôle n’existe pas encore, cette méthode recherche dans la chaîne du contrôle parent jusqu'à ce qu’il trouve un contrôle ou un formulaire avec un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1372">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="d11f7-1373">Si aucun handle approprié ne peut être trouvé, cette méthode lève une exception.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1373">If no appropriate handle can be found, this method throws an exception.</span></span> <span data-ttu-id="d11f7-1374">Exceptions générées pendant l’appel seront propagées à l’appelant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1374">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1375">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe : <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1375">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-1376">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1376">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-1377">Pour tous les autres appels de méthode, vous devez utiliser une des méthodes invoke pour marshaler l’appel au thread du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1377">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="d11f7-1378">Le délégué peut être une instance de <xref:System.EventHandler>, auquel cas le paramètre sender contiendra ce contrôle, et le paramètre d’événement contiendra <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1378">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d11f7-1379">Le délégué peut également être une instance de <xref:System.Windows.Forms.MethodInvoker>, ou tout autre délégué qui accepte une liste de paramètres void.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1379">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="d11f7-1380">Un appel à une <xref:System.EventHandler> ou <xref:System.Windows.Forms.MethodInvoker> délégué sera plus rapide qu’un appel à un autre type de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1380">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1381">Une exception peut être levée si le thread qui doit traiter le message n’est plus actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1381">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1382">L’exemple de code suivant montre les contrôles qui contiennent un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1382">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="d11f7-1383">Le délégué encapsule une méthode qui ajoute des éléments à la zone de liste, et cette méthode est exécutée sur le thread qui détient le handle sous-jacent du formulaire, en utilisant les arguments spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1383">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</span></span> <span data-ttu-id="d11f7-1384">Lorsque l’utilisateur clique sur le bouton, `Invoke` s’exécute le délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1384">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke1/CPP/control_invoke1.cpp#1)]
 [!code-csharp[Control_Invoke1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke1/CS/control_invoke1.cs#1)]
 [!code-vb[Control_Invoke1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke1/VB/control_invoke1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="InvokeGotFocus">
      <MemberSignature Language="C#" Value="protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeGotFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeGotFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeGotFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeGotFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeGotFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="d11f7-1385"><see cref="T:System.Windows.Forms.Control" /> auquel assigner l'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1385">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-1386"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1386">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1387">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.GotFocus" /> pour le contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1387">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeLostFocus">
      <MemberSignature Language="C#" Value="protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeLostFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeLostFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeLostFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeLostFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeLostFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="d11f7-1388"><see cref="T:System.Windows.Forms.Control" /> auquel assigner l'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1388">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-1389"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1389">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1390">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.LostFocus" /> pour le contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1390">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOnClick">
      <MemberSignature Language="C#" Value="protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeOnClick(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeOnClick (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeOnClick(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeOnClick : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeOnClick (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="d11f7-1391"><see cref="T:System.Windows.Forms.Control" /> auquel assigner l'événement <see cref="E:System.Windows.Forms.Control.Click" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1391">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Click" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-1392"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1392">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1393">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Click" /> pour le contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1393">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokePaint">
      <MemberSignature Language="C#" Value="protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaint(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaint (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaint(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaint : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaint (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="d11f7-1394"><see cref="T:System.Windows.Forms.Control" /> auquel assigner l'événement <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1394">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-1395"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1395">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1396">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Paint" /> pour le contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1396">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="InvokePaintBackground">
      <MemberSignature Language="C#" Value="protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaintBackground(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaintBackground (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaintBackground(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaintBackground : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaintBackground (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="d11f7-1397"><see cref="T:System.Windows.Forms.Control" /> auquel assigner l'événement <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1397">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-1398"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1398">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1399">Déclenche l'événement <see langword="PaintBackground" /> pour le contrôle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1399">Raises the <see langword="PaintBackground" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.Windows.Forms.Control.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1400">Obtient une valeur indiquant si l'appelant doit appeler une méthode Invoke lors d'appels de méthode au contrôle parce que l'appelant se trouve sur un thread différent de celui sur lequel le contrôle a été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1400">Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</span></span></summary>
        <value><span data-ttu-id="d11f7-1401"><see langword="true" /> si la propriété <see cref="P:System.Windows.Forms.Control.Handle" /> du contrôle a été créée sur un thread différent du thread appelant (ce qui indique que vous devez effectuer les appels au contrôle par l'intermédiaire d'une méthode Invoke) ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1401"><see langword="true" /> if the control's <see cref="P:System.Windows.Forms.Control.Handle" /> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1402">Contrôles dans les Windows Forms sont liés à un thread spécifique et ne sont pas thread-safe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1402">Controls in Windows Forms are bound to a specific thread and are not thread safe.</span></span> <span data-ttu-id="d11f7-1403">Par conséquent, si vous appelez une méthode de contrôle d’un thread différent, vous devez utiliser une des méthodes pour marshaler l’appel au thread approprié d’appel du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1403">Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</span></span> <span data-ttu-id="d11f7-1404">Cette propriété peut être utilisée pour déterminer si vous devez appeler une méthode invoke, ce qui peut être utile si vous ne savez pas quel thread possède un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1404">This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1405">Outre le <xref:System.Windows.Forms.Control.InvokeRequired%2A> propriété, il existe quatre méthodes sur un contrôle qui sont thread-safe à appeler : <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> et <xref:System.Windows.Forms.Control.CreateGraphics%2A> si le handle pour le contrôle a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1405">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="d11f7-1406">Appel <xref:System.Windows.Forms.Control.CreateGraphics%2A> avant que le handle du contrôle a été créé sur un thread d’arrière-plan peut entraîner des appels du thread inter illégaux.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1406">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="d11f7-1407">Tous les autres appels de méthode, vous devez utiliser une de ces méthodes invoke lors de l’appel à partir d’un thread différent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1407">For all other method calls, you should use one of these invoke methods when calling from a different thread.</span></span>  
  
 <span data-ttu-id="d11f7-1408">Si le handle du contrôle n’existe pas encore, <xref:System.Windows.Forms.Control.InvokeRequired%2A> recherches jusqu'à la chaîne du contrôle parent jusqu'à ce qu’il trouve un contrôle ou un formulaire avec un handle de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1408">If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="d11f7-1409">Si aucun handle approprié ne peut être trouvé, le <xref:System.Windows.Forms.Control.InvokeRequired%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1409">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="d11f7-1410">Cela signifie que <xref:System.Windows.Forms.Control.InvokeRequired%2A> peut retourner `false` si <xref:System.Windows.Forms.Control.Invoke%2A> n’est pas obligatoire (l’appel se produit sur le même thread), ou si le contrôle a été créé sur un thread différent, mais que le handle du contrôle n’a pas encore été créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1410">This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A> can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</span></span>  
  
 <span data-ttu-id="d11f7-1411">Dans le cas où le handle du contrôle n’a pas encore été créé, vous ne devez pas simplement appeler des événements, des méthodes ou des propriétés sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1411">In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</span></span> <span data-ttu-id="d11f7-1412">Cela peut entraîner le handle du contrôle doit être créé sur le thread d’arrière-plan, isolant ainsi le contrôle sur un thread sans pompe de messages et rendant l’application instable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1412">This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</span></span>  
  
 <span data-ttu-id="d11f7-1413">Vous pouvez éviter cela en vérifiant également la valeur de <xref:System.Windows.Forms.Control.IsHandleCreated%2A> lorsque <xref:System.Windows.Forms.Control.InvokeRequired%2A> retourne `false` sur un thread d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1413">You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread.</span></span> <span data-ttu-id="d11f7-1414">Si la poignée de contrôle n’a pas encore été créée, vous devez attendre jusqu'à ce qu’il a été créé avant d’appeler <xref:System.Windows.Forms.Control.Invoke%2A> ou <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1414">If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span></span> <span data-ttu-id="d11f7-1415">En règle générale, cela se produit uniquement si un thread d’arrière-plan est créé dans le constructeur du formulaire principal de l’application (comme dans `Application.Run(new MainForm())`, avant l’affichage de l’écran ou `Application.Run` a été appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1415">Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.</span></span>  
  
 <span data-ttu-id="d11f7-1416">Une solution consiste à attendre que le handle du formulaire a été créé avant de démarrer le thread d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1416">One solution is to wait until the form's handle has been created before starting the background thread.</span></span> <span data-ttu-id="d11f7-1417">Soit forcer la création du handle en appelant le <xref:System.Windows.Forms.Control.Handle%2A> propriété, ou patientez jusqu'à ce que le <xref:System.Windows.Forms.Form.Load> événement pour démarrer le processus d’arrière-plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1417">Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.</span></span>  
  
 <span data-ttu-id="d11f7-1418">Une solution bien meilleure consiste à utiliser le `SynchronizationContext` retourné par <xref:System.Threading.SynchronizationContext> au lieu d’un contrôle pour le marshaling inter-threads.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1418">An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1419">Une exception peut être levée si le thread qui doit traiter le message n’est plus actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1419">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
 <span data-ttu-id="d11f7-1420">Pour plus d’informations sur les contrôles Windows Forms multithread, consultez [Comment : utiliser un Thread d’arrière-plan pour rechercher des fichiers](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) et [Comment : effectuer des appels Thread-Safe aux contrôles de Windows Forms](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1420">For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessible">
      <MemberSignature Language="C#" Value="public bool IsAccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsAccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAccessible : bool with get, set" Usage="System.Windows.Forms.Control.IsAccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1421">Obtient ou définit une valeur indiquant si le contrôle est visible pour les applications d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1421">Gets or sets a value indicating whether the control is visible to accessibility applications.</span></span></summary>
        <value><span data-ttu-id="d11f7-1422"><see langword="true" /> si le contrôle est visible pour les applications d'accessibilité ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1422"><see langword="true" /> if the control is visible to accessibility applications; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.Control.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1423">Obtient une valeur indiquant si le contrôle a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1423">Gets a value indicating whether the control has been disposed of.</span></span></summary>
        <value><span data-ttu-id="d11f7-1424"><see langword="true" /> si le contrôle a été supprimé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1424"><see langword="true" /> if the control has been disposed of; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1425">Lorsque cette propriété retourne `true`, le contrôle est supprimé et ne peut plus être référencé comme un contrôle Windows valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1425">When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="d11f7-1426">Même si l’instance d’un contrôle est supprimée, elle est maintenue en mémoire jusqu'à ce qu’il est supprimé de la mémoire par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1426">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="d11f7-1427">Lorsqu’un contrôle est supprimé, vous ne pouvez pas appeler son <xref:System.Windows.Forms.Control.RecreateHandle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1427">When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="IsHandleCreated">
      <MemberSignature Language="C#" Value="public bool IsHandleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsHandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHandleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHandleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHandleCreated : bool" Usage="System.Windows.Forms.Control.IsHandleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1428">Obtient une valeur indiquant si le contrôle est associé à un handle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1428">Gets a value indicating whether the control has a handle associated with it.</span></span></summary>
        <value><span data-ttu-id="d11f7-1429"><see langword="true" /> Si un handle a été assigné au contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1429"><see langword="true" /> if a handle has been assigned to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1430">Utilisez le <xref:System.Windows.Forms.Control.IsHandleCreated%2A> propriété afin de déterminer si <xref:System.Windows.Forms.Control.CreateHandle%2A> a été appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1430">Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="control.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="d11f7-1431">Caractère à tester.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1431">The character to test.</span></span></param>
        <summary><span data-ttu-id="d11f7-1432">Détermine si un caractère est un caractère d'entrée que le contrôle reconnaît.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1432">Determines if a character is an input character that the control recognizes.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1433"><see langword="true" /> si le caractère doit être envoyé directement au contrôle sans prétraitement ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1433"><see langword="true" /> if the character should be sent directly to the control and not preprocessed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1434">Appelez le <xref:System.Windows.Forms.Control.IsInputChar%2A> méthode pour déterminer si le caractère spécifié par le `charCode` paramètre est un caractère d’entrée que le contrôle demande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1434">Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants.</span></span> <span data-ttu-id="d11f7-1435">Cette méthode est appelée pendant le prétraitement d’un message de fenêtre pour déterminer si le caractère d’entrée spécifié doit être prétraité ou envoyé directement au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1435">This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="d11f7-1436">Si <xref:System.Windows.Forms.Control.IsInputChar%2A> retourne `true`, le caractère spécifié est envoyé directement au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1436">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control.</span></span> <span data-ttu-id="d11f7-1437">Si <xref:System.Windows.Forms.Control.IsInputChar%2A> retourne `false`, le caractère spécifié est prétraité et uniquement envoyé au contrôle si elle n’est pas consommée par la phase de prétraitement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1437">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="d11f7-1438">Le prétraitement d’un caractère inclut le contrôle si le caractère est un caractère mnémonique d’un autre contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1438">The preprocessing of a character includes checking whether the character is a mnemonic of another control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1439">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1439">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-1440">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1440">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="d11f7-1441">Une des valeurs de <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1441">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-1442">Détermine si la touche spécifiée est une touche de saisie normale ou une touche spéciale nécessitant un prétraitement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1442">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1443"><see langword="true" /> si la touche spécifiée est une touche de saisie standard ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1443"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1444">Appelez le <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode pour déterminer si la clé spécifiée par le `keyData` paramètre est une touche de saisie qui souhaite que le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1444">Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants.</span></span> <span data-ttu-id="d11f7-1445">Cette méthode est appelée pendant le prétraitement d’un message de fenêtre pour déterminer si la clé d’entrée spécifiée doit être prétraitée ou envoyée directement au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1445">This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="d11f7-1446">Si <xref:System.Windows.Forms.Control.IsInputKey%2A> retourne `true`, la clé spécifiée est envoyée directement au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1446">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control.</span></span> <span data-ttu-id="d11f7-1447">Si <xref:System.Windows.Forms.Control.IsInputKey%2A> retourne `false`, la clé spécifiée est prétraitée et envoyée uniquement pour le contrôle s’il n’est pas utilisé par la phase de prétraitement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1447">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="d11f7-1448">Les touches prétraitées comprennent l’onglet, retour, ÉCHAP et les touches flèche haut, bas, gauche et droite.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1448">Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1449">L’exemple de code suivant vous montre comment substituer la <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode pour un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1449">The following code example shows you how to override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d11f7-1450">Dans cet exemple, le `TabTextBox` classe gère la touche TAB.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1450">In this example, the `TabTextBox` class handles the TAB key.</span></span> <span data-ttu-id="d11f7-1451">Lorsque le `TabTextBox` a le focus et l’utilisateur appuie sur la touche TAB quatre espaces sont ajoutés au point d’insertion de texte, en remplaçant le texte sélectionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1451">When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</span></span> <span data-ttu-id="d11f7-1452">Par défaut, le <xref:System.Windows.Forms.TextBox> contrôle gère la touche TAB en déplaçant le focus d’entrée au contrôle suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1452">By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control.</span></span> <span data-ttu-id="d11f7-1453">Dans ce cas, la touche n’atteint jamais la <xref:System.Windows.Forms.Control.OnKeyDown%2A> substitution de méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1453">In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override.</span></span> <span data-ttu-id="d11f7-1454">Pour empêcher ce comportement par défaut, le <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode `true` lorsque l’utilisateur appuie sur la touche TAB.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1454">To prevent this default behavior, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns `true` when the user presses the TAB key.</span></span> <span data-ttu-id="d11f7-1455">Pour toute autre activation de touche, le <xref:System.Windows.Forms.Control.IsInputKey%2A> substitution de méthode retourne le résultat de l’appel de la version de la classe de base de la méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1455">For all other keypresses, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns the result of calling the base-class version of the method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/cs/form1.cs#0)]
 [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1456">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1456">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-1457">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1457">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="P:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyLocked">
      <MemberSignature Language="C#" Value="public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyLocked(valuetype System.Windows.Forms.Keys keyVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyLocked (keyVal As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyLocked(System::Windows::Forms::Keys keyVal);" />
      <MemberSignature Language="F#" Value="static member IsKeyLocked : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.Control.IsKeyLocked keyVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyVal" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyVal"><span data-ttu-id="d11f7-1458">Membre Verr. maj, Verr. Num ou Arrêt défil de l'énumération <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1458">The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="d11f7-1459">Détermine si la touche Verr. maj, Verr. Num ou Arrêt défil est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1459">Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1460"><see langword="true" /> si la ou les touches spécifiées sont activées ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1460"><see langword="true" /> if the specified key or keys are in effect; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1461">Utilisez le <xref:System.Windows.Forms.Control.IsKeyLocked%2A> propriété pour déterminer si les touches VERR. MAJ, VERR. NUM ou arrêt défil, si individuellement ou conjointement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1461">Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1462">L’exemple de code suivant affiche une boîte de message qui indique si la clé spécifiée (la clé de verrouillage des majuscules dans ce cas) est en vigueur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1462">The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</span></span>  
  
 [!code-cpp[ControlIsKeyLocked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlIsKeyLocked/CPP/controliskeylocked.cpp#1)]
 [!code-csharp[ControlIsKeyLocked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlIsKeyLocked/CS/controliskeylocked.cs#1)]
 [!code-vb[ControlIsKeyLocked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlIsKeyLocked/VB/controliskeylocked.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d11f7-1463">Le paramètre <paramref name="keyVal" /> fait référence à une touche autre que Verr. maj, Verr. Num ou Arrêt défil.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1463">The <paramref name="keyVal" /> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public bool IsMirrored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMirrored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsMirrored" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMirrored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMirrored { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMirrored : bool" Usage="System.Windows.Forms.Control.IsMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1464">Obtient une valeur indiquant si le contrôle est mis en miroir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1464">Gets a value indicating whether the control is mirrored.</span></span></summary>
        <value><span data-ttu-id="d11f7-1465"><see langword="true" /> si le contrôle est mis en miroir ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1465"><see langword="true" /> if the control is mirrored; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1466">Un contrôle de mise en miroir affiche la mise en page et le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1466">A mirrored control displays both layout and text from right to left.</span></span> <span data-ttu-id="d11f7-1467">Pour plus d’informations, consultez [Comment : créer des formulaires Windows mise en miroir et contrôles](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1467">For more information, see [How to: Create Mirrored Windows Forms and Controls](http://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMnemonic">
      <MemberSignature Language="C#" Value="public static bool IsMnemonic (char charCode, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMnemonic(char charCode, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMnemonic (charCode As Char, text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMnemonic(char charCode, System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsMnemonic : char * string -&gt; bool" Usage="System.Windows.Forms.Control.IsMnemonic (charCode, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="d11f7-1468">Caractère à tester.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1468">The character to test.</span></span></param>
        <param name="text"><span data-ttu-id="d11f7-1469">Chaîne à rechercher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1469">The string to search.</span></span></param>
        <summary><span data-ttu-id="d11f7-1470">Détermine si le caractère spécifié est le caractère mnémonique assigné au contrôle dans la chaîne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1470">Determines if the specified character is the mnemonic character assigned to the control in the specified string.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1471"><see langword="true" /> si le caractère <paramref name="charCode" /> est le caractère mnémonique assigné au contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1471"><see langword="true" /> if the <paramref name="charCode" /> character is the mnemonic character assigned to the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1472">Le caractère mnémonique est le caractère qui suit immédiatement la première instance de « & » dans un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1472">The mnemonic character is the character immediately following the first instance of "&" in a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1473">L’exemple de code suivant illustre une extension de la classe de bouton qui remplace le <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> méthode un comportement personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1473">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="d11f7-1474">L’exemple illustre également l’utilisation de la <xref:System.Windows.Forms.Control.CanSelect%2A> et <xref:System.Windows.Forms.Control.IsMnemonic%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1474">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="d11f7-1475">Pour exécuter cet exemple, collez le code suivant après une classe de formulaire, dans le même fichier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1475">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="d11f7-1476">Ajoutez un bouton de type `MnemonicButton` au formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1476">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-1477">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1477">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-1478">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1478">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1479">Se produit lorsqu'une touche est enfoncée alors que le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1479">Occurs when a key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1480">Principaux événements se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1480">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="d11f7-1481">Pour gérer les événements de clavier uniquement au niveau du formulaire et pas autoriser d’autres contrôles recevoir des événements de clavier, définissez le <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propriété dans votre formulaire <xref:System.Windows.Forms.Control.KeyPress> méthode de gestion d’événements à `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1481">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="d11f7-1482">Certaines clés, telles que les touches de tabulation, retour, ÉCHAP et flèche sont gérées automatiquement par les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1482">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="d11f7-1483">Pour que ces touches déclenchent le <xref:System.Windows.Forms.Control.KeyDown> événement, vous devez substituer la <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode dans chaque contrôle sur votre formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1483">To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="d11f7-1484">Le code de substituer le <xref:System.Windows.Forms.Control.IsInputKey%2A> doit déterminer si une des touches spéciales est enfoncée et retourner une valeur de `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1484">The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span> <span data-ttu-id="d11f7-1485">Au lieu de remplacer le <xref:System.Windows.Forms.Control.IsInputKey%2A> (méthode), vous pouvez gérer le <xref:System.Windows.Forms.Control.PreviewKeyDown> .PreviewKeyDown et définir le <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1485">Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="d11f7-1486">Pour obtenir un exemple de code, consultez le <xref:System.Windows.Forms.Control.PreviewKeyDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1486">For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span>  
  
 <span data-ttu-id="d11f7-1487">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1487">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1488">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyDown> événement pour déterminer le type de caractère entré dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1488">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.KeyEventHandler" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1489">Se produit en cas de pression</span><span class="sxs-lookup"><span data-stu-id="d11f7-1489">Occurs when a character.</span></span> <span data-ttu-id="d11f7-1490">sur une touche Espace ou Retour arrière alors que le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1490">space or backspace key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1491">Principaux événements se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1491">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="d11f7-1492">Le <xref:System.Windows.Forms.Control.KeyPress> événement n’est pas déclenché par les touches autre que l’espace et de retour arrière ; Toutefois, les touches déclenchent le <xref:System.Windows.Forms.Control.KeyDown> et <xref:System.Windows.Forms.Control.KeyUp> événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1492">The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span>  
  
 <span data-ttu-id="d11f7-1493">Utilisez le <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propriété aux séquences de touches exemple en cours d’exécution et à utiliser ou modifier un sous-ensemble de séquences de touches courantes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1493">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</span></span>  
  
 <span data-ttu-id="d11f7-1494">Pour gérer les événements de clavier uniquement au niveau du formulaire et pas autoriser d’autres contrôles recevoir des événements de clavier, définissez le <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propriété dans votre formulaire <xref:System.Windows.Forms.Control.KeyPress> méthode de gestion d’événements à `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1494">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="d11f7-1495">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1495">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1496">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyPress> événement pour empêcher les caractères d’entrée du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1496">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1497">Se produit lorsqu’une touche est relâchée alors que le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1497">Occurs when a key is released while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1498">Principaux événements se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1498">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="d11f7-1499">Pour gérer les événements de clavier uniquement au niveau du formulaire et pas autoriser d’autres contrôles recevoir des événements de clavier, définissez le <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propriété dans votre formulaire <xref:System.Windows.Forms.Control.KeyPress> méthode de gestion d’événements à `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1499">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="d11f7-1500">Certaines clés, telles que les touches de tabulation, retour, ÉCHAP et flèche sont gérées automatiquement par les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1500">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="d11f7-1501">Pour que ces touches déclenchent le <xref:System.Windows.Forms.Control.KeyUp> événement, vous devez substituer la <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode dans chaque contrôle sur votre formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1501">To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="d11f7-1502">Le code pour le remplacement de <xref:System.Windows.Forms.Control.IsInputKey%2A> doit déterminer si une des touches spéciales est enfoncée et retourner une valeur de `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1502">The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span>  
  
 <span data-ttu-id="d11f7-1503">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1503">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1504">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyUp> événement avec le <xref:System.Windows.Forms.Help> classe pour afficher l’aide de style contextuel à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1504">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Layout As LayoutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LayoutEventHandler ^ Layout;" />
      <MemberSignature Language="F#" Value="member this.Layout : System.Windows.Forms.LayoutEventHandler " Usage="member this.Layout : System.Windows.Forms.LayoutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1505">Se produit lorsqu'un contrôle doit repositionner ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1505">Occurs when a control should reposition its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1506">Le <xref:System.Windows.Forms.Control.Layout> événement se produit lorsque les contrôles enfants sont ajoutés ou supprimés, lorsque les limites du contrôle change, et lors d’autres modifications peuvent affecter la disposition du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1506">The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</span></span> <span data-ttu-id="d11f7-1507">L’événement layout peut être supprimé en utilisant le <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1507">The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span> <span data-ttu-id="d11f7-1508">Suspension de disposition vous permet de vous permettent d’effectuer plusieurs actions sur un contrôle sans avoir à effectuer une mise en page pour chaque modification.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1508">Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</span></span> <span data-ttu-id="d11f7-1509">Par exemple, si vous redimensionnez et déplacez un contrôle, chaque opération déclencherait une <xref:System.Windows.Forms.Control.Layout> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1509">For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.</span></span>  
  
 <span data-ttu-id="d11f7-1510">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1510">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1511">Le code suivant exemple centres un <xref:System.Windows.Forms.Form> dans l’écran le <xref:System.Windows.Forms.Control.Layout> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1511">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="d11f7-1512">Cela conservera le formulaire centré pendant que l’utilisateur le redimensionne.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1512">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="d11f7-1513">Cet exemple nécessite que vous avez créé un <xref:System.Windows.Forms.Form> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1513">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.Control.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1514">Obtient une instance mise en cache du moteur de disposition du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1514">Gets a cached instance of the control's layout engine.</span></span></summary>
        <value><span data-ttu-id="d11f7-1515"><see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> pour le contenu du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1515">The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> for the control's contents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1516">Le <xref:System.Windows.Forms.Control.LayoutEngine%2A> propriété obtient le moteur de présentation pour les enfants du contrôle plutôt que pour le contrôle proprement dit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1516">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1517">Se produit quand le focus d'entrée s'écarte du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1517">Occurs when the input focus leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1518">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1518">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-1519">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1519">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-1520">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1520">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1521">Le <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements sont supprimés par la <xref:System.Windows.Forms.Form> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1521">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="d11f7-1522">Les événements équivalents dans la <xref:System.Windows.Forms.Form> classe sont les <xref:System.Windows.Forms.Form.Activated> et <xref:System.Windows.Forms.Form.Deactivate> événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1522">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="d11f7-1523">Le <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements sont hiérarchiques et s’accumuleront haut et bas de la chaîne parent jusqu'à ce que le contrôle approprié est atteint.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1523">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="d11f7-1524">Par exemple, supposons que vous ayez un <xref:System.Windows.Forms.Form> avec deux <xref:System.Windows.Forms.GroupBox> contrôles et chaque <xref:System.Windows.Forms.GroupBox> contrôle possède un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1524">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="d11f7-1525">Lorsque le signe insertion est déplacé à partir d’un <xref:System.Windows.Forms.TextBox> à l’autre, le <xref:System.Windows.Forms.Control.Leave> événement est déclenché pour la <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.GroupBox>et le <xref:System.Windows.Forms.Control.Enter> événement est déclenché pour les autres <xref:System.Windows.Forms.GroupBox> et <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1525">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-1526">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1526">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-1527">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1527">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-1528">Pour plus d’informations, consultez le [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1528">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="d11f7-1529">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1529">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1530">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Leave> événement pour réinitialiser un contrôle à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1530">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="System.Windows.Forms.Control.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1531">Obtient ou définit la distance, en pixels, entre le bord gauche du contrôle et le bord gauche de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1531">Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="d11f7-1532"><see cref="T:System.Int32" /> représentant la distance, en pixels, entre le bord gauche du contrôle et le bord gauche de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1532">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1533">Le <xref:System.Windows.Forms.Control.Left%2A> valeur de propriété est équivalente à la <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> propriété de la <xref:System.Windows.Forms.Control.Location%2A> valeur de la propriété du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1533">The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="d11f7-1534">Modifications apportées à la <xref:System.Windows.Forms.Control.Width%2A> et <xref:System.Windows.Forms.Control.Left%2A> cause de valeurs de propriété du <xref:System.Windows.Forms.Control.Right%2A> valeur de la propriété du contrôle à modifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1534">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1535">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1535">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-1536">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1536">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.X" />
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1537">Obtient ou définit les coordonnées du coin supérieur gauche du contrôle par rapport au coin supérieur gauche de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1537">Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</span></span></summary>
        <value><span data-ttu-id="d11f7-1538"><see cref="T:System.Drawing.Point" /> qui représente le coin supérieur gauche du contrôle par rapport au coin supérieur gauche de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1538">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1539">Étant donné que le <xref:System.Drawing.Point> classe est un type valeur (`Structure` en Visual Basic, `struct` en Visual c#), elle est retournée par valeur, ce qui signifie que l’accès à la propriété retourne une copie du point supérieur gauche du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1539">Because the <xref:System.Drawing.Point> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</span></span> <span data-ttu-id="d11f7-1540">Ainsi, l’ajustement le <xref:System.Drawing.Point.X%2A> ou <xref:System.Drawing.Point.Y%2A> propriétés de la <xref:System.Drawing.Point> retourné à partir de cette propriété n’affecte pas la <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, ou <xref:System.Windows.Forms.Control.Bottom%2A> les valeurs de propriété du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1540">So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control.</span></span> <span data-ttu-id="d11f7-1541">Pour modifier ces propriétés, définissez la valeur de chaque propriété individuellement, ou définir le <xref:System.Windows.Forms.Control.Location%2A> propriété avec un nouveau <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1541">To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="d11f7-1542">Si le <xref:System.Windows.Forms.Control> est un <xref:System.Windows.Forms.Form>, le <xref:System.Windows.Forms.Control.Location%2A> valeur de propriété représente le coin supérieur gauche de la <xref:System.Windows.Forms.Form> en coordonnées d’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1542">If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1543">L’exemple de code suivant crée un <xref:System.Windows.Forms.GroupBox> et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1543">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-1544">L’exemple crée un <xref:System.Windows.Forms.TextBox> et définit ses <xref:System.Windows.Forms.Control.Location%2A> dans la zone de groupe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1544">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="d11f7-1545">Ensuite, il définit le <xref:System.Windows.Forms.Control.Text%2A> propriété de la zone de groupe et s’ancre le groupe de zone en haut du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1545">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="d11f7-1546">Enfin, il désactive la zone de groupe en définissant le <xref:System.Windows.Forms.Control.Enabled%2A> propriété `false`, ce qui entraîne tous les contrôles contenus dans la zone de groupe doit être désactivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1546">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1547">Se produit quand la valeur de propriété <see cref="P:System.Windows.Forms.Control.Location" /> a été modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1547">Occurs when the <see cref="P:System.Windows.Forms.Control.Location" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1548">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Location%2A> propriété est modifiée par la suite d’une modification par programmation ou via l’interaction.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1548">This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="d11f7-1549">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1549">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1550">Le code suivant exemple déclenche le <xref:System.Windows.Forms.Control.LocationChanged> événement sur un <xref:System.Windows.Forms.StatusStrip> lorsque le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1550">The following code example raises the <xref:System.Windows.Forms.Control.LocationChanged> event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LocationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LocationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public int LogicalToDeviceUnits (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LogicalToDeviceUnits(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LogicalToDeviceUnits(int value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : int -&gt; int" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d11f7-1551">La valeur logique à convertir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1551">The Logical value to convert.</span></span></param>
        <summary><span data-ttu-id="d11f7-1552">Convertit une valeur en DPI logique en son équivalent en DeviceUnit DPI.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1552">Converts a Logical DPI value to it's equivalent DeviceUnit DPI value.</span></span></summary>
        <returns><span data-ttu-id="d11f7-1553">La valeur DeviceUnit résultante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1553">The resulting DeviceUnit value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : EventHandler " Usage="member this.LostFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1554">Se produit quand le contrôle perd le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1554">Occurs when the control loses focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1555">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1555">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-1556">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1556">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-1557">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1557">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-1558">Si le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.ComponentModel.CancelEventArgs> a la valeur `true` dans le <xref:System.Windows.Forms.Control.Validating> délégué d’événement, tous les événements qui seraient produit généralement après la <xref:System.Windows.Forms.Control.Validating> événement sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1558">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1559">Le <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> les événements sont des événements de focus de bas niveau qui sont liés aux messages WM_KILLFOCUS et WM_SETFOCUS Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1559">The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="d11f7-1560">En règle générale, le <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> événements sont uniquement utilisés lorsque la mise à jour <xref:System.Windows.Forms.UICues> ou lors de l’écriture des contrôles personnalisés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1560">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="d11f7-1561">À la place la <xref:System.Windows.Forms.Control.Enter> et <xref:System.Windows.Forms.Control.Leave> événements doivent être utilisés pour tous les contrôles à l’exception de la <xref:System.Windows.Forms.Form> classe, qui utilise le <xref:System.Windows.Forms.Form.Activated> et <xref:System.Windows.Forms.Form.Deactivate> événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1561">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="d11f7-1562">Pour plus d’informations sur la <xref:System.Windows.Forms.Control.GotFocus> et <xref:System.Windows.Forms.Control.LostFocus> les événements, consultez le [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) et [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) rubriques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1562">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-1563">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1563">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-1564">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1564">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-1565">Pour plus d’informations, consultez le [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1565">For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="d11f7-1566">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1566">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1567">L’exemple de code suivant illustre la validation du texte de TextBox1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1567">The following code example demonstrates validating the text for TextBox1.</span></span> <span data-ttu-id="d11f7-1568">Il montre également comment gérer le <xref:System.Windows.Forms.Control.LostFocus> événement en définissant le <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> texte à la propriété dans TextBox1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1568">It also demonstrates handling the <xref:System.Windows.Forms.Control.LostFocus> event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> property to the text in TextBox1.</span></span> <span data-ttu-id="d11f7-1569">L’exemple de code utilisé le <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> méthode pour vérifier une erreur avant d’ouvrir la boîte de dialogue de fichier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1569">The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> method to check for an error before opening the file dialog box.</span></span> <span data-ttu-id="d11f7-1570">Pour exécuter cet exemple, collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.TextBox> nommé `TextBox1`, un <xref:System.Windows.Forms.OpenFileDialog> nommé `OpenFileDialog1`, un <xref:System.Windows.Forms.Button> nommé `Button1`et un <xref:System.Windows.Forms.ErrorProvider> nommé `ErrorProvider1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1570">To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`.</span></span> <span data-ttu-id="d11f7-1571">Vérifiez que tous les événements sont associés à leurs gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1571">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1572">Obtient ou définit l'espace entre les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1572">Gets or sets the space between controls.</span></span></summary>
        <value><span data-ttu-id="d11f7-1573"><see cref="T:System.Windows.Forms.Padding" /> représentant l'espace entre les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1573">A <see cref="T:System.Windows.Forms.Padding" /> representing the space between controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1574">Valeurs par défaut pour les contrôles reçoivent <xref:System.Windows.Forms.Control.Margin%2A> qui sont relativement proches indications d’interface utilisateur Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1574">Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="d11f7-1575">Certains ajustements peuvent être encore nécessaires pour des applications spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1575">Some adjustments might still be necessary for particular applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1576">Définition de la <xref:System.Windows.Forms.Control.Margin%2A> propriété sur un contrôle ancré n’a aucun effet sur la distance du contrôle à partir des bords de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1576">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1577">Se produit quand la marge du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1577">Occurs when the control's margin changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1578">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1578">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1579">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1579">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1580">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.MarginChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1580">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span> <span data-ttu-id="d11f7-1581">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1581">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1582">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1582">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1583">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1583">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1584">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.MarginChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1584">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#21)]
 [!code-vb[System.Windows.Forms.EventExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1585">Obtient ou définit la taille qui correspond à la limite supérieure que <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> peut spécifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1585">Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="d11f7-1586">Paire ordonnée de type <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur d'un rectangle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1586">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1587">Obtient ou définit la taille qui correspond à la limite inférieure que <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> peut spécifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1587">Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="d11f7-1588">Paire ordonnée de type <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur d'un rectangle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1588">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifierKeys">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Keys ModifierKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.Keys ModifierKeys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ModifierKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModifierKeys As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Keys ModifierKeys { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.ModifierKeys : System.Windows.Forms.Keys" Usage="System.Windows.Forms.Control.ModifierKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1589">Obtient une valeur indiquant quelle touche de modification (MAJ, CTRL et ALT) est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1589">Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="d11f7-1590">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1590">A bitwise combination of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span> <span data-ttu-id="d11f7-1591">La valeur par défaut est <see cref="F:System.Windows.Forms.Keys.None" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1591">The default is <see cref="F:System.Windows.Forms.Keys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-1592">L’exemple de code suivant masque un bouton lorsque la touche CTRL est enfoncée alors que le bouton est activé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1592">The following code example hides a button when the CTRL key is pressed while the button is clicked.</span></span> <span data-ttu-id="d11f7-1593">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Button> nommé `button1` sur un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1593">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MouseButtons">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.MouseButtons MouseButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.MouseButtons MouseButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MouseButtons" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MouseButtons As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::MouseButtons MouseButtons { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtons : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.Control.MouseButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1594">Obtient une valeur indiquant quel bouton de souris est à l'état Enfoncé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1594">Gets a value indicating which of the mouse buttons is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="d11f7-1595">Combinaison d'opérations de bits des valeurs d'énumération <see cref="T:System.Windows.Forms.MouseButtons" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1595">A bitwise combination of the <see cref="T:System.Windows.Forms.MouseButtons" /> enumeration values.</span></span> <span data-ttu-id="d11f7-1596">La valeur par défaut est <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1596">The default is <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-1597">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, et <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1597">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="d11f7-1598">Pour exécuter l’exemple, collez le code suivant dans un formulaire nommé Form1 contenant plusieurs contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1598">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="d11f7-1599">Cet exemple requiert que le <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, et <xref:System.Windows.Forms.Control.MouseUp> événements sont associés aux gestionnaires d’événements définis dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1599">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseCaptureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseCaptureChanged;" />
      <MemberSignature Language="F#" Value="member this.MouseCaptureChanged : EventHandler " Usage="member this.MouseCaptureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1600">Se produit quand le contrôle perd la capture de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1600">Occurs when the control loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1601">Dans rares cas, vous devrez peut-être détecter entrée inattendue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1601">In rare scenarios, you might need to detect unexpected input.</span></span> <span data-ttu-id="d11f7-1602">Par exemple, considérez les scénarios suivants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1602">For example, consider the following scenarios.</span></span>  
  
-   <span data-ttu-id="d11f7-1603">Pendant une opération de la souris, l’utilisateur ouvre le menu Démarrer en appuyant sur la clé de Windows ou CTRL + ÉCHAP.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1603">During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</span></span>  
  
-   <span data-ttu-id="d11f7-1604">Pendant une opération de la souris, l’utilisateur bascule vers un autre programme en appuyant sur ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1604">During a mouse operation, the user switches to another program by pressing ALT+TAB.</span></span>  
  
-   <span data-ttu-id="d11f7-1605">Pendant une opération de la souris, un autre programme affiche une fenêtre ou une boîte de message qui prend le focus en dehors de l’application actuelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1605">During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</span></span>  
  
 <span data-ttu-id="d11f7-1606">Opérations de la souris peuvent inclure cliquez et maintenez la souris sur un formulaire ou un contrôle, ou opération de glissement de l’exécution de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1606">Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</span></span> <span data-ttu-id="d11f7-1607">Si vous devez détecter lorsqu’un formulaire ou un contrôle perd la capture de la souris pour ces scénarios connexes inattendus, vous pouvez utiliser le <xref:System.Windows.Forms.Control.MouseCaptureChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1607">If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1608">L’exemple de code suivant montre le <xref:System.Windows.Forms.Control.MouseCaptureChanged> événement pour un <xref:System.Windows.Forms.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1608">The following code example demonstrates the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event for a <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/vb/form1.vb#1)]  
  
 <span data-ttu-id="d11f7-1609">Pour tester cet exemple, exécutez-le dans le débogueur en appuyant sur F5.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1609">To test this example, run it in the debugger by pressing F5.</span></span> <span data-ttu-id="d11f7-1610">Ouvrez le **sortie** fenêtre dans Visual Studio afin que vous puissiez voir lorsque les événements sont déclenchés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1610">Open the **Output** window in Visual Studio so that you can see when events are raised.</span></span> <span data-ttu-id="d11f7-1611">Cliquez sur le <xref:System.Windows.Forms.Button> et observez le résultat suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1611">Click the <xref:System.Windows.Forms.Button> and notice the following output.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseUp`  
  
 `button1_MouseCaptureChanged`  
  
 <span data-ttu-id="d11f7-1612">Maintenant, cliquez et maintenez le bouton gauche de la souris sur le <xref:System.Windows.Forms.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1612">Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="d11f7-1613">En cliquant encore sur la souris, appuyez sur ALT + TAB pour basculer vers un autre programme.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1613">While still clicking the mouse, press ALT+TAB to switch to another program.</span></span> <span data-ttu-id="d11f7-1614">Notez que le <xref:System.Windows.Forms.Control.MouseCaptureChanged> événement est déclenché, ce qui vous permet de gérer potentiellement ce scénario.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1614">Notice that the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event is raised enabling you to potentially handle this scenario.</span></span> <span data-ttu-id="d11f7-1615">En fonction de vos actions, le <xref:System.Windows.Forms.Control.MouseUp> ne peut pas être déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1615">Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised.</span></span> <span data-ttu-id="d11f7-1616">Vous pouvez également essayer ce test avec la clé de Windows ou CTRL + ÉCHAP.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1616">You can also try this test with the Windows key or CTRL+ESC.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseCaptureChanged`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1617">Se produit après un clic de souris sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1617">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1618">Pression de la souris lorsque le curseur se trouve généralement sur un contrôle déclenche la série d’événements à partir du contrôle suivante :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1618">Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</span></span>  
  
1.  <span data-ttu-id="d11f7-1619">Événement <xref:System.Windows.Forms.Control.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1619"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="d11f7-1620">Événement <xref:System.Windows.Forms.Control.Click>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1620"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="d11f7-1621">Événement <xref:System.Windows.Forms.Control.MouseClick>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1621"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="d11f7-1622">Événement <xref:System.Windows.Forms.Control.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1622"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="d11f7-1623">Dans ce cas, les différents événements ne peut pas être désactivés dans la classe du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1623">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
 <span data-ttu-id="d11f7-1624">Deux simples clics qui se produisent assez précis, tel que déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur, généreront un <xref:System.Windows.Forms.Control.MouseDoubleClick> événement au lieu de la seconde <xref:System.Windows.Forms.Control.MouseClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1624">Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d11f7-1625"><xref:System.Windows.Forms.Control.Click> les événements sont des événements de manière logique de niveau supérieur d’un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1625"><xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control.</span></span> <span data-ttu-id="d11f7-1626">Ils sont souvent déclenchés par d’autres actions, par exemple en appuyant sur la touche entrée quand le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1626">They are often raised by other actions, such as pressing the ENTER key when the control has focus.</span></span>  
  
 <span data-ttu-id="d11f7-1627">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1627">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1628">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1628">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1629">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.MouseClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1629">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="d11f7-1630">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1630">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1631">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1631">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1632">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1632">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1633">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.MouseClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1633">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1634">Se produit après un double-clic de souris sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1634">Occurs when the control is double clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1635">Le <xref:System.Windows.Forms.Control.MouseDoubleClick> événement se produit lorsque l’utilisateur appuie deux fois de suite un bouton de la souris lorsque le curseur se trouve sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1635">The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</span></span> <span data-ttu-id="d11f7-1636">L’intervalle de temps qui sépare les deux clics simples à partir d’un double-clic est déterminé par les paramètres de la souris du système d’exploitation de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1636">The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</span></span>  
  
 <span data-ttu-id="d11f7-1637">La série d’événements suivante est déclenchée par le contrôle lorsque l’action de l’utilisateur a lieu :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1637">The following series of events is raised by the control when such a user action takes place:</span></span>  
  
1.  <span data-ttu-id="d11f7-1638">Événement <xref:System.Windows.Forms.Control.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1638"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="d11f7-1639">Événement <xref:System.Windows.Forms.Control.Click>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1639"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="d11f7-1640">Événement <xref:System.Windows.Forms.Control.MouseClick>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1640"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="d11f7-1641">Événement <xref:System.Windows.Forms.Control.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1641"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
5.  <span data-ttu-id="d11f7-1642">Événement <xref:System.Windows.Forms.Control.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1642"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
6.  <span data-ttu-id="d11f7-1643">Événement <xref:System.Windows.Forms.Control.DoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1643"><xref:System.Windows.Forms.Control.DoubleClick> event.</span></span>  
  
7.  <span data-ttu-id="d11f7-1644">Événement <xref:System.Windows.Forms.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1644"><xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
8.  <span data-ttu-id="d11f7-1645">Événement <xref:System.Windows.Forms.Control.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1645"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="d11f7-1646">Dans ce cas, les différents événements ne peut pas être désactivés dans la classe du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1646">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d11f7-1647"><xref:System.Windows.Forms.Control.DoubleClick> les événements sont des événements de manière logique de niveau supérieur d’un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1647"><xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control.</span></span> <span data-ttu-id="d11f7-1648">Ils peuvent être déclenchés par d’autres actions utilisateur, telles que des combinaisons de touches de raccourci.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1648">They may be raised by other user actions, such as shortcut key combinations.</span></span>  
  
 <span data-ttu-id="d11f7-1649">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1649">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1650">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1650">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-1651">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.MouseDoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1651">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span> <span data-ttu-id="d11f7-1652">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1652">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-1653">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1653">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-1654">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1654">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-1655">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.MouseDoubleClick> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1655">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#55)]
 [!code-vb[System.Windows.Forms.EventExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1656">Se produit quand le pointeur de la souris se trouve sur le contrôle et qu'un bouton de la souris est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1656">Occurs when the mouse pointer is over the control and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1657">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1657">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1658">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1658">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1659">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1659">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1660">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1660">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1661">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1661">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1662">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1662">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1663">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1663">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1664">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1664">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1665">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1665">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1666">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1666">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1667">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1667">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1668">Se produit quand le pointeur de la souris se place dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1668">Occurs when the mouse pointer enters the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1669">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1669">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1670">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1670">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1671">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1671">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1672">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1672">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1673">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1673">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1674">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1674">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1675">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1675">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1676">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1676">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1677">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1677">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1678">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1678">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1679">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1679">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1680">Se produit quand le pointeur de la souris se positionne sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1680">Occurs when the mouse pointer rests on the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1681">En règle générale <xref:System.Windows.Forms.Control.MouseHover> consiste à afficher une info-bulle lorsque la souris s’arrête sur un contrôle dans une zone spécifiée autour du contrôle (« rectangle de pointage »).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1681">A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</span></span> <span data-ttu-id="d11f7-1682">Le temps nécessaire pour le déclenchement de cet événement est spécifié en millisecondes par le <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1682">The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.</span></span>  
  
 <span data-ttu-id="d11f7-1683">Le <xref:System.Windows.Forms.Control.MouseHover> événement est défini et détecté en rapport avec la <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> et <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1683">The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.</span></span>  
  
 <span data-ttu-id="d11f7-1684">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1684">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1685">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1685">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1686">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1686">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1687">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1687">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1688">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1688">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1689">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1689">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1690">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1690">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1691">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1691">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1692">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1692">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1693">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1693">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1694">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1694">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1695">Se produit quand le pointeur de la souris s'écarte du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1695">Occurs when the mouse pointer leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1696">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1696">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1697">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1697">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1698">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1698">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1699">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1699">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1700">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1700">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1701">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1701">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1702">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1702">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1703">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1703">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1704">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1704">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1705">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1705">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1706">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1706">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1707">Se produit quand le pointeur de la souris est placé sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1707">Occurs when the mouse pointer is moved over the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1708">Utilisations courantes de <xref:System.Windows.Forms.Control.MouseMove> consistent à modifier la couleur du contrôle ou de peindre un rectangle autour du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1708">Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.</span></span>  
  
 <span data-ttu-id="d11f7-1709">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1709">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1710">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1710">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1711">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1711">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1712">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1712">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1713">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1713">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1714">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1714">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1715">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1715">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1716">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1716">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1717">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1717">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1718">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1718">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1719">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1719">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.Control.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1720">Obtient la position du curseur de la souris en coordonnées d'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1720">Gets the position of the mouse cursor in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="d11f7-1721"><see cref="T:System.Drawing.Point" /> qui contient les coordonnées du curseur de la souris par rapport au coin supérieur gauche de l'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1721">A <see cref="T:System.Drawing.Point" /> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1722">Le <xref:System.Windows.Forms.Control.MousePosition%2A> propriété retourne un <xref:System.Drawing.Point> qui représente la position du curseur de la souris au moment de la propriété a été référencée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1722">The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced.</span></span> <span data-ttu-id="d11f7-1723">Les coordonnées indiquent la position sur l’écran, pas relatif au contrôle et sont retournées indépendamment de si le curseur est positionné sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1723">The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</span></span> <span data-ttu-id="d11f7-1724">Les coordonnées de l’angle supérieur gauche de l’écran sont 0,0.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1724">The coordinates of the upper-left corner of the screen are 0,0.</span></span>  
  
 <span data-ttu-id="d11f7-1725">Le <xref:System.Windows.Forms.Control.MousePosition%2A> propriété est identique à la <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1725">The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1726">Le code suivant exemple met un <xref:System.Windows.Forms.TreeNode> étiquette dans l’état modifiable lorsque l’utilisateur appuie sur ALT + E alors que le curseur de la souris est sur le nœud d’arbre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1726">The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</span></span> <span data-ttu-id="d11f7-1727">Une fois que l’utilisateur est terminé. Modifiez l’étiquette, les étiquettes ne sont pas modifiables à nouveau jusqu'à ce que la combinaison de touches ALT + E à nouveau.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1727">After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</span></span> <span data-ttu-id="d11f7-1728">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.TreeView> sur un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1728">This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-1729">L’arborescence doit également avoir au moins un <xref:System.Windows.Forms.TreeNode> dans son <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1729">The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1730">Se produit quand le pointeur de la souris se trouve sur le contrôle et qu’un bouton de la souris est relâché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1730">Occurs when the mouse pointer is over the control and a mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1731">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1731">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-1732">Les événements suivants ne sont pas déclenchés pour la <xref:System.Windows.Forms.TabControl> classe sauf s’il existe au moins un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection : <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> et <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1732">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="d11f7-1733">S’il existe au moins un <xref:System.Windows.Forms.TabPage> dans la collection, et l’utilisateur interagit avec l’onglet en-tête du contrôle (où le <xref:System.Windows.Forms.TabPage> noms apparaissent), le <xref:System.Windows.Forms.TabControl> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1733">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="d11f7-1734">Toutefois, si l’interaction utilisateur se trouve dans la zone cliente de la page d’onglets, le <xref:System.Windows.Forms.TabPage> déclenche l’événement approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1734">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="d11f7-1735">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1735">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1736">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1736">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1737">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1737">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1738">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1738">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1739">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1739">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1740">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1740">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1741">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1741">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1742">Se produit quand la roulette de la souris bouge pendant que le contrôle a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1742">Occurs when the mouse wheel moves while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1743">Lors du traitement de la <xref:System.Windows.Forms.Control.MouseWheel> événement, il est important de respecter les normes d’interface (UI) utilisateur associés à la roulette de souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1743">When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</span></span> <span data-ttu-id="d11f7-1744">Le <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> valeur de propriété indique le montant que la roulette de la souris a été déplacé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1744">The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> property value indicates the amount the mouse wheel has been moved.</span></span> <span data-ttu-id="d11f7-1745">L’interface utilisateur doit faire défiler lorsque le delta cumulé est plus ou moins 120.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1745">The UI should scroll when the accumulated delta is plus or minus 120.</span></span> <span data-ttu-id="d11f7-1746">L’interface utilisateur doit faire défiler le nombre de lignes logiques retournées par la <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> propriété pour chaque valeur delta atteinte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1746">The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> property for every delta value reached.</span></span> <span data-ttu-id="d11f7-1747">Vous pouvez également faire défiler adoucit plus petits qui s’incrémente de 120 unités, cependant, le rapport doit rester constant, c'est-à-dire <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> défilement de lignes par 120 unités delta de déplacement de roulette.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1747">You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> lines scrolled per 120 delta units of wheel movement.</span></span>  
  
 <span data-ttu-id="d11f7-1748">Pour plus d’informations sur la gestion des messages de roulette de la souris, consultez la[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1748">For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx)topic.</span></span>  
  
 <span data-ttu-id="d11f7-1749">Les événements de souris se produisent dans l'ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-1749">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
 <span data-ttu-id="d11f7-1750">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1750">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1751">L’exemple de code suivant illustre l’utilisation de différents événements de souris pour dessiner le chemin d’accès de la souris sur un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1751">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="d11f7-1752">Un segment de ligne est ajouté à la <xref:System.Drawing.Drawing2D.GraphicsPath> pour chaque <xref:System.Windows.Forms.Control.MouseMove> et <xref:System.Windows.Forms.Control.MouseDown> événements qui se produisent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1752">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="d11f7-1753">Pour mettre à jour les graphiques, les <xref:System.Windows.Forms.Control.Invalidate%2A> méthode est appelée pour la <xref:System.Windows.Forms.Panel> sur chaque `MouseDown` et `MouseUp` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1753">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="d11f7-1754">En outre, le chemin d’accès graphique défile vers le haut ou vers le bas lorsque le <xref:System.Windows.Forms.Control.MouseWheel> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1754">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="d11f7-1755">Événements de souris supplémentaires, tels que <xref:System.Windows.Forms.Control.MouseHover>, sont identifiés à l’écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1755">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="d11f7-1756">Affiche également sur l’écran est plus d’informations sur la souris à partir de la <xref:System.Windows.Forms.SystemInformation> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1756">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Move" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Move As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Move;" />
      <MemberSignature Language="F#" Value="member this.Move : EventHandler " Usage="member this.Move : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1757">Se produit quand le contrôle est déplacé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1757">Occurs when the control is moved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1758">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1758">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1759">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Move> événement pour afficher l’emplacement de l’écran en coordonnées d’écran dans la barre de légende du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1759">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Control.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-1760">Obtient ou définit le nom du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1760">Gets or sets the name of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-1761">Nom du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1761">The name of the control.</span></span> <span data-ttu-id="d11f7-1762">La valeur par défaut est une chaîne vide ("").</span><span class="sxs-lookup"><span data-stu-id="d11f7-1762">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1763">Le <xref:System.Windows.Forms.Control.Name%2A> propriété peut être utilisée au moment de l’exécution pour évaluer l’objet par nom plutôt que de type et nom de programmation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1763">The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name.</span></span> <span data-ttu-id="d11f7-1764">Étant donné que le <xref:System.Windows.Forms.Control.Name%2A> propriété retourne un <xref:System.String> type, il peut être évaluée dans des instructions logiques cas (`Select` instruction en Visual Basic, `switch` instruction en Visual c# et [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1764">Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in Visual Basic, `switch` statement in Visual C# and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1765">Le code suivant exemple affiche le <xref:System.Windows.Forms.Control.Name%2A> d’un contrôle dans un <xref:System.Windows.Forms.MessageBox> quand le contrôle est ajouté ou supprimé d’un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1765">The following code example displays the <xref:System.Windows.Forms.Control.Name%2A> of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ISite.Name" />
      </Docs>
    </Member>
    <Member MemberName="NotifyInvalidate">
      <MemberSignature Language="C#" Value="protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyInvalidate(valuetype System.Drawing.Rectangle invalidatedArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyInvalidate (invalidatedArea As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyInvalidate(System::Drawing::Rectangle invalidatedArea);" />
      <MemberSignature Language="F#" Value="abstract member NotifyInvalidate : System.Drawing.Rectangle -&gt; unit&#xA;override this.NotifyInvalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.NotifyInvalidate invalidatedArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidatedArea" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="invalidatedArea"><span data-ttu-id="d11f7-1766"><see cref="T:System.Drawing.Rectangle" /> représentant la zone à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1766">A <see cref="T:System.Drawing.Rectangle" /> representing the area to invalidate.</span></span></param>
        <summary><span data-ttu-id="d11f7-1767">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Invalidated" /> avec une région spécifiée du contrôle à invalider.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1767">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event with a specified region of the control to invalidate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="control.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1768"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1768">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1769">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1769">Raises the <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1770">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1770">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1771">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1771">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1772">La méthode <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1772">The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1773">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1773">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1774"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1774"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="control.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1775"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1775">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1776">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1776">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1777">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1777">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1778">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1778">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1779">La méthode <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1779">The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1780">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1780">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1781">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1781">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1782">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1782">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1783">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1783">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1784">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1784">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1785">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1785">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1786"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1786"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1787"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1787">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1788">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1788">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1789">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1789">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1790">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1790">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1791">La méthode <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1791">The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1792">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1792">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1793">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1793">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1794">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1794">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1795">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1795">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1796">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1796">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1797">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1797">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1798"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1798"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1799"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1799">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1800">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1800">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1801">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1801">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1802">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1802">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1803">La méthode <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1803">The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1804">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1804">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1805"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1805"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1806"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1806">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1807">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1807">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1808">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1808">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1809">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1809">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1810">La méthode <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1810">The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1811">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1811">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1812"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1812"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
      </Docs>
    </Member>
    <Member MemberName="OnCausesValidationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCausesValidationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCausesValidationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCausesValidationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCausesValidationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCausesValidationChanged : EventArgs -&gt; unit&#xA;override this.OnCausesValidationChanged : EventArgs -&gt; unit" Usage="control.OnCausesValidationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1813"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1813">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1814">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1814">Raises the <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1815">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1815">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1816">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1816">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1817">La méthode <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1817">The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1818">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1818">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1819">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1819">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1820">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1820">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1821">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1821">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1822">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1822">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1823">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1823">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1824"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1824"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit&#xA;override this.OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit" Usage="control.OnChangeUICues e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1825"><see cref="T:System.Windows.Forms.UICuesEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1825">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1826">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ChangeUICues" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1826">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1827">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1827">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1828">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1828">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1829">La méthode <xref:System.Windows.Forms.Control.OnChangeUICues%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1829">The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1830">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1830">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1831"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1831"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="T:System.Windows.Forms.UICues" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="control.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1832"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1832">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1833">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Click" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1833">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1834">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1834">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1835">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1835">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1836">La méthode <xref:System.Windows.Forms.Control.OnClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1836">The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1837">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1837">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1838">L’exemple de code suivant illustre la substitution de la <xref:System.Windows.Forms.Control.OnClick%2A> méthode dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1838">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.OnClick%2A> method in a derived class.</span></span> <span data-ttu-id="d11f7-1839">Pour exécuter l’exemple, collez le code suivant après une classe de formulaire, dans le même fichier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1839">To run the example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="d11f7-1840">Ajouter une zone de texte de type `SingleClickTextBox` au formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1840">Add a textbox of type `SingleClickTextBox` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/VB/form1.vb#1)]  
  
 <span data-ttu-id="d11f7-1841">L’exemple de code suivant montre une des nombreuses utilisations de le <xref:System.Windows.Forms.Control.Click> événement et le Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1841">The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1842"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1842"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnClientSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnClientSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClientSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClientSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClientSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClientSizeChanged : EventArgs -&gt; unit&#xA;override this.OnClientSizeChanged : EventArgs -&gt; unit" Usage="control.OnClientSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1843"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1843">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1844">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1844">Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1845">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1845">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1846">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1846">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1847">La méthode <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1847">The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1848">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1848">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1849"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1849"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1850"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1850">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1851">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1851">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1852">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1852">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1853">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1853">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1854">La méthode <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1854">The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1855">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1855">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1856">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1856">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1857">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1857">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1858">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1858">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1859">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1859">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1860">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1860">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1861"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1861"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuStripChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuStripChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuStripChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuStripChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuStripChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuStripChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1862"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1862">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1863">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1863">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1864">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1864">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1865">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1865">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1866">La méthode <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1866">The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1867">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1867">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1868"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1868"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1869"><see cref="T:System.Windows.Forms.ControlEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1869">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1870">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ControlAdded" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1870">Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1871">Appelé lorsqu’un contrôle enfant est ajouté au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1871">Called when a child control is added to the control.</span></span>  
  
 <span data-ttu-id="d11f7-1872">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1872">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1873">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1873">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1874">La méthode <xref:System.Windows.Forms.Control.OnControlAdded%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1874">The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1875">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1875">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1876">Le code suivant exemple utilise <xref:System.Windows.Forms.Control.ControlAdded> pour ajouter un contrôle à un formulaire et affiche le nom du contrôle ajouté dans un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1876">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1877"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1877"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlAdded" />
      </Docs>
    </Member>
    <Member MemberName="OnControlRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlRemoved(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlRemoved (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlRemoved(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1878"><see cref="T:System.Windows.Forms.ControlEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1878">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1879">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ControlRemoved" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1879">Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1880">Appelé lorsqu’un contrôle enfant est supprimé à partir du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1880">Called when a child control is removed from the control.</span></span>  
  
 <span data-ttu-id="d11f7-1881">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1881">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1882">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1882">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1883">La méthode <xref:System.Windows.Forms.Control.OnControlRemoved%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1883">The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1884">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1884">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1885">Le code suivant exemple utilise <xref:System.Windows.Forms.Control.ControlRemoved> pour supprimer un contrôle à partir d’un formulaire et affiche le nom du contrôle supprimé dans un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1885">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1886"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1886"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlRemoved" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateControl();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateControl : unit -&gt; unit&#xA;override this.OnCreateControl : unit -&gt; unit" Usage="control.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-1887">Déclenche la méthode <see cref="M:System.Windows.Forms.Control.CreateControl" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1887">Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1888">Le <xref:System.Windows.Forms.Control.OnCreateControl%2A> méthode est appelée lorsque le contrôle est créé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1888">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.</span></span>  
  
 <span data-ttu-id="d11f7-1889">La méthode <xref:System.Windows.Forms.Control.OnCreateControl%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1889">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1890">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1890">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1891"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1891"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCursorChanged : EventArgs -&gt; unit&#xA;override this.OnCursorChanged : EventArgs -&gt; unit" Usage="control.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1892"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1892">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1893">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.CursorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1893">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1894">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1894">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1895">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1895">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1896">La méthode <xref:System.Windows.Forms.Control.OnCursorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1896">The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1897">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1897">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1898">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1898">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1899">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1899">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1900">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1900">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1901">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1901">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1902">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1902">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1903"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1903"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="OnDockChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDockChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDockChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDockChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDockChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDockChanged : EventArgs -&gt; unit&#xA;override this.OnDockChanged : EventArgs -&gt; unit" Usage="control.OnDockChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1904"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1904">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1905">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DockChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1905">Raises the <see cref="E:System.Windows.Forms.Control.DockChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1906">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1906">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1907">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1907">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1908">La méthode <xref:System.Windows.Forms.Control.OnDockChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1908">The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1909">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1909">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1910">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1910">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1911">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1911">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1912">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1912">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1913">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1913">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1914">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1914">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1915"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1915"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DockChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="control.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1916"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1916">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1917">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DoubleClick" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1917">Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1918">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1918">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1919">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1919">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1920">La méthode <xref:System.Windows.Forms.Control.OnDoubleClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1920">The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1921">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1921">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1922">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.DoubleClick> événement d’un <xref:System.Windows.Forms.ListBox> pour charger des fichiers texte répertoriés dans le <xref:System.Windows.Forms.ListBox> dans un <xref:System.Windows.Forms.TextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1922">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1923"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1923"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedAfterParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedAfterParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedAfterParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedAfterParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedAfterParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedAfterParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedAfterParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedAfterParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1924"><see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1924">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1925">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1925">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedBeforeParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedBeforeParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedBeforeParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedBeforeParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedBeforeParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedBeforeParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedBeforeParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1926"><see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1926">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1927">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1927">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragDrop drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="d11f7-1928"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1928">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1929">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragDrop" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1929">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1930">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1930">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1931">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1931">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1932">La méthode <xref:System.Windows.Forms.Control.OnDragDrop%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1932">The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1933">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1933">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1934"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1934"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragEnter drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="d11f7-1935"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1935">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1936">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1936">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1937">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1937">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1938">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1938">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1939">La méthode <xref:System.Windows.Forms.Control.OnDragEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1939">The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1940">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1940">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1941"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1941"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="control.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1942"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1942">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1943">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1943">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1944">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1944">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1945">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1945">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1946">La méthode <xref:System.Windows.Forms.Control.OnDragLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1946">The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1947">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1947">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1948"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1948"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragOver drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="d11f7-1949"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1949">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1950">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1950">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1951">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1951">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1952">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1952">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1953">La méthode <xref:System.Windows.Forms.Control.OnDragOver%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1953">The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1954">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1954">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1955"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1955"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="control.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1956"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1956">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1957">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.EnabledChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1957">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1958">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1958">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1959">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1959">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1960">La méthode <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1960">The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1961">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1961">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1962"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1962"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : EventArgs -&gt; unit&#xA;override this.OnEnter : EventArgs -&gt; unit" Usage="control.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1963"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1963">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1964">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Enter" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1964">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1965">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1965">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1966">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1966">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1967">La méthode <xref:System.Windows.Forms.Control.OnEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1967">The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1968">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1968">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1969">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Enter> pour modifier les couleurs de premier plan et arrière-plan un <xref:System.Windows.Forms.TextBox> dans des conditions particulières.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1969">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1970"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1970"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="control.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1971"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1971">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1972">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1972">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1973">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1973">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1974">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1974">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1975">La méthode <xref:System.Windows.Forms.Control.OnFontChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1975">The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1976">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1976">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1977">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1977">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1978">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1978">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1979">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1979">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1980">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1980">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1981">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1981">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1982"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1982"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="control.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-1983"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1983">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1984">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1984">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1985">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1985">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1986">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1986">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1987">La méthode <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1987">The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-1988">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1988">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-1989">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1989">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-1990">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1990">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-1991">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1991">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-1992">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1992">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-1993">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1993">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-1994"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-1994"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="control.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent"><span data-ttu-id="d11f7-1995"><see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1995">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-1996">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1996">Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-1997">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1997">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-1998">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-1998">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-1999">La méthode <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-1999">The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2000">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2000">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2001"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2001"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : EventArgs -&gt; unit&#xA;override this.OnGotFocus : EventArgs -&gt; unit" Usage="control.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2002"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2002">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2003">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2003">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2004">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2004">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2005">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2005">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2006">La méthode <xref:System.Windows.Forms.Control.OnGotFocus%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2006">The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2007">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2007">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2008"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2008"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleCreated : EventArgs -&gt; unit&#xA;override this.OnHandleCreated : EventArgs -&gt; unit" Usage="control.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2009"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2009">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2010">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2010">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2011">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2011">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2012">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2012">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2013">La méthode <xref:System.Windows.Forms.Control.OnHandleCreated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2013">The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2014">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2014">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2015"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2015"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleDestroyed : EventArgs -&gt; unit&#xA;override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="control.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2016"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2016">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2017">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2017">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2018">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2018">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2019">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2019">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2020">La méthode <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2020">The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2021">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2021">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2022"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2022"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleDestroyed" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequested">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequested(class System.Windows.Forms.HelpEventArgs hevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequested (hevent As HelpEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequested(System::Windows::Forms::HelpEventArgs ^ hevent);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit&#xA;override this.OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit" Usage="control.OnHelpRequested hevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hevent" Type="System.Windows.Forms.HelpEventArgs" />
      </Parameters>
      <Docs>
        <param name="hevent"><span data-ttu-id="d11f7-2023"><see cref="T:System.Windows.Forms.HelpEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2023">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2024">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.HelpRequested" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2024">Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2025">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2025">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2026">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2026">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2027">La méthode <xref:System.Windows.Forms.Control.OnHelpRequested%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2027">The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2028">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2028">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2029"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2029"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="OnImeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnImeModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeModeChanged : EventArgs -&gt; unit&#xA;override this.OnImeModeChanged : EventArgs -&gt; unit" Usage="control.OnImeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2030"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2030">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2031">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ImeModeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2031">Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2032">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2032">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2033">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2033">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2034">La méthode <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2034">The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2035">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2035">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2036">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2036">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2037">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2037">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2038">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2038">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2039">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2039">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2040">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2040">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2041"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2041"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ImeModeChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.Windows.Forms.InvalidateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As InvalidateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(System::Windows::Forms::InvalidateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit&#xA;override this.OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit" Usage="control.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2042"><see cref="T:System.Windows.Forms.InvalidateEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2042">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2043">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Invalidated" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2043">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2044">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2044">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2045">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2045">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2046">La méthode <xref:System.Windows.Forms.Control.OnInvalidated%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2046">The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2047">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2047">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2048"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2048"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Invalidated" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2049"><see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2049">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2050">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2050">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2051">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2051">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2052">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2052">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2053">La méthode <xref:System.Windows.Forms.Control.OnKeyDown%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2053">The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2054">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2054">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2055">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyDown> événement pour déterminer le type de caractère entré dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2055">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2056"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2056"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="control.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2057"><see cref="T:System.Windows.Forms.KeyPressEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2057">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2058">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.KeyPress" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2058">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2059">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2059">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2060">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2060">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2061">La méthode <xref:System.Windows.Forms.Control.OnKeyPress%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2061">The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2062">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2062">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2063">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyPress> événement pour empêcher les caractères d’entrée du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2063">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2064"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2064"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2065"><see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2065">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2066">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2066">Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2067">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2067">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2068">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2068">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2069">La méthode <xref:System.Windows.Forms.Control.OnKeyUp%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2069">The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2070">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2070">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2071">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.KeyUp> événement avec le <xref:System.Windows.Forms.Help> classe pour afficher l’aide de style contextuel à l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2071">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2072"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2072"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="control.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="d11f7-2073"><see cref="T:System.Windows.Forms.LayoutEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2073">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2074">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Layout" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2074">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2075">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2075">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2076">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2076">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2077">La méthode <xref:System.Windows.Forms.Control.OnLayout%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2077">The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2078">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2078">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2079"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement et d’ancrage fonctionnent. Les classes dérivées doivent substituer cette méthode pour effectuer toute logique de disposition personnalisée.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2079"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> method so that registered delegates receive the event and for typical docking and anchoring functions to work. Derived classes should override this method to do any custom layout logic.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : EventArgs -&gt; unit&#xA;override this.OnLeave : EventArgs -&gt; unit" Usage="control.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2080"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2080">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2081">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Leave" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2081">Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2082">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2082">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2083">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2083">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2084">La méthode <xref:System.Windows.Forms.Control.OnLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2084">The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2085">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2085">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2086">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Leave> événement pour réinitialiser un contrôle à son état précédent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2086">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2087"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2087"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="control.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2088"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2088">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2089">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.LocationChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2089">Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2090">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2090">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2091">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2091">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2092">La méthode <xref:System.Windows.Forms.Control.OnLocationChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2092">The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2093">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2093">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2094">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2094">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2095">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2095">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2096">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2096">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2097">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2097">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2098">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2098">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2099"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2099"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.LocationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : EventArgs -&gt; unit&#xA;override this.OnLostFocus : EventArgs -&gt; unit" Usage="control.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2100"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2100">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2101">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2101">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2102">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2102">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2103">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2103">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2104">La méthode <xref:System.Windows.Forms.Control.OnLostFocus%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2104">The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2105">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2105">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2106"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2106"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnMarginChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMarginChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMarginChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMarginChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMarginChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMarginChanged : EventArgs -&gt; unit&#xA;override this.OnMarginChanged : EventArgs -&gt; unit" Usage="control.OnMarginChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2107"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2107">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2108">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MarginChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2108">Raises the <see cref="E:System.Windows.Forms.Control.MarginChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2109">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2109">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2110">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2110">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2111">La méthode <xref:System.Windows.Forms.Control.OnMarginChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2111">The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2112">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2112">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2113"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2113"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : EventArgs -&gt; unit&#xA;override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="control.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2114"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2114">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2115">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2115">Raises the <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2116">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2116">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2117">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2117">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2118">La méthode <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2118">The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2119">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2119">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2120"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2120"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2121"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2121">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2122">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseClick" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2122">Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2123">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2123">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2124">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2124">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2125">La méthode <xref:System.Windows.Forms.Control.OnMouseClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2125">The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2126">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2126">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2127"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2127"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2128"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2128">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2129">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2129">Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2130">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2130">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2131">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2131">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2132">La méthode <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2132">The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2133">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2133">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2134"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2134"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2135"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2135">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2136">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2136">Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2137">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2137">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2138">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2138">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2139">La méthode <xref:System.Windows.Forms.Control.OnMouseDown%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2139">The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2140">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2140">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2141"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2141"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="control.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2142"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2142">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2143">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2143">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2144">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2144">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2145">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2145">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2146">La méthode <xref:System.Windows.Forms.Control.OnMouseEnter%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2146">The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2147">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2147">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2148"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2148"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="control.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2149"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2149">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2150">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseHover" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2150">Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2151">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2151">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2152">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2152">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2153">La méthode <xref:System.Windows.Forms.Control.OnMouseHover%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2153">The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2154">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2154">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2155">L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.Control.OnMouseHover%2A> et <xref:System.Windows.Forms.Control.OnMouseMove%2A> méthodes dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2155">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="d11f7-2156">Pour exécuter l’exemple, collez le code suivant dans un nouveau formulaire et collez cette classe, formant le même fichier, après le formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2156">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="d11f7-2157">Ajoutez un bouton de type `FunButton` au formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2157">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2158"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2158"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="control.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2159"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2159">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2160">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2160">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2161">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2161">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2162">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2162">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2163">La méthode <xref:System.Windows.Forms.Control.OnMouseLeave%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2163">The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2164">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2164">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2165"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2165"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2166"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2166">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2167">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2167">Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2168">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2168">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2169">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2169">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2170">La méthode <xref:System.Windows.Forms.Control.OnMouseMove%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2170">The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2171">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2171">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2172">L’exemple de code suivant montre comment substituer la <xref:System.Windows.Forms.Control.OnMouseHover%2A> et <xref:System.Windows.Forms.Control.OnMouseMove%2A> méthodes dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2172">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="d11f7-2173">Pour exécuter l’exemple, collez le code suivant dans un nouveau formulaire et collez cette classe, formant le même fichier, après le formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2173">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="d11f7-2174">Ajoutez un bouton de type `FunButton` au formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2174">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2175"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2175"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2176"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2176">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2177">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2177">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2178">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2178">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2179">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2179">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2180">La méthode <xref:System.Windows.Forms.Control.OnMouseUp%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2180">The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2181">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2181">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2182"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2182"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2183"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2183">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2184">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2184">Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2185">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2185">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2186">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2186">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2187">La méthode <xref:System.Windows.Forms.Control.OnMouseWheel%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2187">The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2188">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2188">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2189"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2189"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseWheel" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMove (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMove(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMove (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMove(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMove : EventArgs -&gt; unit&#xA;override this.OnMove : EventArgs -&gt; unit" Usage="control.OnMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2190"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2190">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2191">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Move" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2191">Raises the <see cref="E:System.Windows.Forms.Control.Move" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2192">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2192">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2193">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2193">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2194">La méthode <xref:System.Windows.Forms.Control.OnMove%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2194">The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2195">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2195">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2196">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Move> événement pour afficher l’emplacement de l’écran en coordonnées d’écran dans la barre de légende du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2196">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2197"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2197"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="OnNotifyMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyMessage(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNotifyMessage (m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNotifyMessage(System::Windows::Forms::Message m);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnNotifyMessage : System.Windows.Forms.Message -&gt; unit" Usage="control.OnNotifyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-2198"><see cref="T:System.Windows.Forms.Message" /> qui représente le message Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2198">A <see cref="T:System.Windows.Forms.Message" /> that represents the Windows message.</span></span></param>
        <summary><span data-ttu-id="d11f7-2199">Signale au contrôle des messages Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2199">Notifies the control of Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2200">Le <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> méthode est appelée si le contrôle `EnableNotifyMessage` bit de style est défini dans <xref:System.Windows.Forms.ControlStyles>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2200">The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>.</span></span> <span data-ttu-id="d11f7-2201">Le `EnableNotifyMessage` appliquer un style dans <xref:System.Windows.Forms.ControlStyles> permet au contrôle d’être notifié lorsque le <xref:System.Windows.Forms.Control.WndProc%2A> méthode reçoit un message Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2201">The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message.</span></span> <span data-ttu-id="d11f7-2202">Avec cette méthode, les contrôles de niveau de confiance partiel peuvent écouter les messages de Windows sans leur permettant de modifier le message.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2202">With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2203"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> dans une classe dérivée, appelle la classe de base <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> méthode n’est pas nécessaire car il n’existe aucune implémentation initiale.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2203"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> in a derived class, calling the base class's <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is not necessary because there is no initial implementation.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaddingChanged : EventArgs -&gt; unit&#xA;override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="control.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2204"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2204">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2205">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.PaddingChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2205">Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2206">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2206">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2207">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2207">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2208">La méthode <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2208">The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2209">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2209">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2210"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2210"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2211"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2211">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2212">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2212">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2213">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2213">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2214">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2214">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2215">Le <xref:System.Windows.Forms.Control.OnPaint%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2215">The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2216">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2216">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2217">L’exemple de code suivant permet à l’utilisateur faire glisser un fichier image ou une image du formulaire et qu’il affichera au point sur lequel il est supprimé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2217">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</span></span> <span data-ttu-id="d11f7-2218">Le <xref:System.Windows.Forms.Control.OnPaint%2A> méthode est substituée pour repeindre l’image chaque fois que le formulaire est peint ; sinon, l’image n’est rendue persistante jusqu'à ce que la mise à jour suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2218">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="d11f7-2219">Le <xref:System.Windows.Forms.Control.DragEnter> détermine le type de données glissées sur le formulaire de méthode de gestion des événements et fournit les commentaires appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2219">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="d11f7-2220">Le <xref:System.Windows.Forms.Control.DragDrop> méthode de gestion des événements affiche l’image sur le formulaire, si un <xref:System.Drawing.Image> peuvent être créés à partir des données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2220">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="d11f7-2221">Étant donné que le <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> les valeurs sont des coordonnées d’écran, l’exemple utilise le <xref:System.Windows.Forms.Control.PointToClient%2A> méthode pour les convertir en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2221">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2222"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2222"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent"><span data-ttu-id="d11f7-2223"><see cref="T:System.Windows.Forms.PaintEventArgs" /> contenant des informations sur le contrôle à peindre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2223">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint.</span></span></param>
        <summary><span data-ttu-id="d11f7-2224">Peint l'arrière-plan du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2224">Paints the background of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2225">Le <xref:System.Windows.Forms.Control.OnPaintBackground%2A> méthode permet aux classes dérivées de la gérer en arrière-plan Windows des demandes d’effacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2225">The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2226"><para>Les classes qui héritent doivent substituer cette méthode pour traiter la requête d’arrière-plan de l’effacement à partir de windows. Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> dans une classe dérivée, il n’est pas nécessaire d’appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2226"><para>Inheriting classes should override this method to handle the erase background request from windows. When overriding <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> in a derived class it is not necessary to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="control.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2227"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2227">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2228">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.BackColor" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2228">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2229">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2229">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2230">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2230">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2231">Le <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2231">The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2232">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2232">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2233">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2233">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2234">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2234">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2235">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2235">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2236">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2236">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2237">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2237">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2238"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2238"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnParentBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2239"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2239">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2240">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2240">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2241">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2241">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2242">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2242">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2243">Le <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2243">The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2244">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2244">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2245">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2245">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2246">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2246">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2247">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2247">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2248">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2248">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2249">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2249">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2250"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2250"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnParentBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnParentBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2251"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2251">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2252">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.BindingContext" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2252">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2253">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2253">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2254">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2254">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2255">Le <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2255">The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2256">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2256">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2257">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2257">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2258">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2258">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2259">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2259">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2260">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2260">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2261">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2261">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2262"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2262"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : EventArgs -&gt; unit&#xA;override this.OnParentChanged : EventArgs -&gt; unit" Usage="control.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2263"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2263">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2264">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2264">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2265">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2265">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2266">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2266">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2267">Le <xref:System.Windows.Forms.Control.OnParentChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2267">The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2268">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2268">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2269">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2269">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2270">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2270">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2271">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2271">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2272">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2272">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2273">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2273">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2274"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2274"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ParentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentCursorChanged : EventArgs -&gt; unit&#xA;override this.OnParentCursorChanged : EventArgs -&gt; unit" Usage="control.OnParentCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2275"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2275">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2276">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.CursorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2276">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2277">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2277">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2278">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2278">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2279">La méthode <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2279">The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2280">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2280">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2281"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2281"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="control.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2282"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2282">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2283">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Enabled" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2283">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2284">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2284">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2285">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2285">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2286">Le <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2286">The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2287">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2287">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2288">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2288">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2289">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2289">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2290">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2290">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2291">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2291">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2292">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2292">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2293"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2293"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentFontChanged : EventArgs -&gt; unit&#xA;override this.OnParentFontChanged : EventArgs -&gt; unit" Usage="control.OnParentFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2294"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2294">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2295">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.FontChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Font" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2295">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Font" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2296">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2296">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2297">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2297">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2298">Le <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2298">The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2299">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2299">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2300">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2300">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2301">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2301">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2302">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2302">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2303">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2303">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2304">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2304">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2305"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2305"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="control.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2306"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2306">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2307">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.ForeColor" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2307">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2308">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2308">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2309">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2309">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2310">Le <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2310">The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2311">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2311">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2312">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2312">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2313">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2313">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2314">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2314">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2315">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2315">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2316">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2316">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2317"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2317"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2318"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2318">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2319">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.RightToLeft" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2319">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2320">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2320">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2321">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2321">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2322">Le <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2322">The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2323">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2323">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2324">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2324">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2325">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2325">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2326">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2326">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2327">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2327">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2328">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2328">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2329"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2329"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnParentVisibleChanged : EventArgs -&gt; unit" Usage="control.OnParentVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2330"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2330">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2331">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Visible" /> du conteneur du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2331">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2332">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2332">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2333">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2333">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2334">Le <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2334">The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2335">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2335">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2336">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2336">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2337">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2337">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2338">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2338">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2339">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2339">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2340">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2340">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2341"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2341"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Forms.PreviewKeyDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As PreviewKeyDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Forms::PreviewKeyDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit" Usage="control.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PreviewKeyDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2342"><see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2342">A <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2343">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2343">Raises the <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2344">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2344">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2345">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2345">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2346">La méthode <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2346">The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2347">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2347">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2348"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2348"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2349"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2349">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2350">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2350">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2351">Si le `UserPaint` bit de la <xref:System.Windows.Forms.ControlStyles> est défini, vous pouvez remplacer <xref:System.Windows.Forms.Control.OnPrint%2A> pour effectuer une peinture en couches.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2351">If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting.</span></span> <span data-ttu-id="d11f7-2352">Pour plus d'informations, voir <xref:System.Windows.Forms.Control.SetStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2352">See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d11f7-2353">Le paramètre <paramref name="e" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2353">The <paramref name="e" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="control.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent"><span data-ttu-id="d11f7-2354"><see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2354">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2355">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2355">Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2356">Lorsque vous commencez, cette méthode est appelée à plusieurs reprises par le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] jusqu'à ce que l’opération glisser soit annulée ou terminée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2356">After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2357">Substituez cette méthode si vous souhaitez modifier le point en les faisant glisser soit annulée ou à laquelle une opération déplacer se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2357">Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</span></span>  
  
 <span data-ttu-id="d11f7-2358">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2358">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2359">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2359">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2360">Le <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2360">The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2361">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2361">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2362"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2362"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnRegionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRegionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRegionChanged : EventArgs -&gt; unit&#xA;override this.OnRegionChanged : EventArgs -&gt; unit" Usage="control.OnRegionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2363"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2363">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2364">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.RegionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2364">Raises the <see cref="E:System.Windows.Forms.Control.RegionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2365">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2365">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2366">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2366">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2367">La méthode <xref:System.Windows.Forms.Control.OnRegionChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2367">The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2368">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2368">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2369"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2369"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected virtual void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResize : EventArgs -&gt; unit&#xA;override this.OnResize : EventArgs -&gt; unit" Usage="control.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2370"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2370">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2371">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Resize" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2371">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2372">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2372">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2373">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2373">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2374">Le <xref:System.Windows.Forms.Control.OnResize%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2374">The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2375">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2375">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2376"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement. Le <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> méthode peut être appelée pendant la construction, ainsi si vous substituez <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> elle peut être appelée avant que le constructeur du contrôle est appelé.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2376"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method so that registered delegates receive the event. The <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method can be called during construction, so if you override <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> it can be called before the control constructor is called.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2377"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2377">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2378">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2378">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2379">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2379">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2380">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2380">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2381">Le <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2381">The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2382">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2382">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2383">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2383">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2384">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2384">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2385">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2385">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2386">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2386">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2387">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2387">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2388"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2388"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSizeChanged : EventArgs -&gt; unit&#xA;override this.OnSizeChanged : EventArgs -&gt; unit" Usage="control.OnSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2389"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2389">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2390">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.SizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2390">Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2391">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2391">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2392">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2392">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2393">Le <xref:System.Windows.Forms.Control.OnSizeChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2393">The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2394">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2394">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2395"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2395"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : EventArgs -&gt; unit&#xA;override this.OnStyleChanged : EventArgs -&gt; unit" Usage="control.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2396"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2396">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2397">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.StyleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2397">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2398">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2398">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2399">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2399">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2400">Le <xref:System.Windows.Forms.Control.OnStyleChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2400">The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2401">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2401">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2402"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2402"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.StyleChanged" />
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSystemColorsChanged : EventArgs -&gt; unit&#xA;override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="control.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2403"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2403">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2404">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2404">Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2405">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2405">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2406">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2406">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2407">Le <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2407">The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2408">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2408">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2409"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2409"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexChanged : EventArgs -&gt; unit&#xA;override this.OnTabIndexChanged : EventArgs -&gt; unit" Usage="control.OnTabIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2410"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2410">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2411">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.TabIndexChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2411">Raises the <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2412">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2412">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2413">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2413">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2414">Le <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2414">The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2415">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2415">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2416"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2416"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.TabIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabStopChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabStopChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabStopChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopChanged : EventArgs -&gt; unit&#xA;override this.OnTabStopChanged : EventArgs -&gt; unit" Usage="control.OnTabStopChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2417"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2417">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2418">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.TabStopChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2418">Raises the <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2419">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2419">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2420">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2420">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2421">Le <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2421">The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2422">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2422">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2423">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2423">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2424">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2424">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2425">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2425">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2426">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2426">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2427">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2427">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2428"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2428"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.TabStopChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="control.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2429"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2429">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2430">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2430">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2431">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2431">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2432">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2432">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2433">Le <xref:System.Windows.Forms.Control.OnTextChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2433">The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2434">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2434">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2435">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2435">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2436">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2436">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2437">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2437">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2438"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2438"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidated : EventArgs -&gt; unit&#xA;override this.OnValidated : EventArgs -&gt; unit" Usage="control.OnValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2439"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2439">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2440">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Validated" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2440">Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2441">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2441">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2442">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2442">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2443">Le <xref:System.Windows.Forms.Control.OnValidated%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2443">The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2444">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2444">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2445"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2445"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="control.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2446"><see cref="T:System.ComponentModel.CancelEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2446">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2447">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.Validating" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2447">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2448">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2448">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2449">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2449">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2450">Le <xref:System.Windows.Forms.Control.OnValidating%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2450">The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2451">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2451">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2452"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2452"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="control.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-2453"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2453">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2454">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.VisibleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2454">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2455">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2455">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="d11f7-2456">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2456">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d11f7-2457">Le <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> méthode permet également aux classes dérivées de gérer l’événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2457">The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="d11f7-2458">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2458">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2459">L’exemple de code suivant est une méthode de déclenchement d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2459">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2460">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom `On` *PropertyName* `Changed` qui déclenchent le correspondantes *PropertyName* `Changed` événement lors de la *PropertyName* valeur modifiée (*PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2460">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2461">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise de classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2461">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="d11f7-2462">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2462">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2463">Cet exemple nécessite que vous disposez d’une classe qui dérive de la <xref:System.Windows.Forms.TextBox> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2463">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2464"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2464"><para>When overriding <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2465">Obtient ou définit la marge intérieure du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2465">Gets or sets padding within the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-2466"><see cref="T:System.Windows.Forms.Padding" /> représentant les caractéristiques d'espacement interne du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2466">A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2467">Pour les conteneurs tels que <xref:System.Windows.Forms.GroupBox> et <xref:System.Windows.Forms.TabControl>, le <xref:System.Windows.Forms.Control.Padding%2A> propriété obtient ou définit leur respectifs <xref:System.Windows.Forms.Control.DisplayRectangle%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2467">For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties.</span></span> <span data-ttu-id="d11f7-2468">Le <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> propriété est égale à son <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2468">The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="d11f7-2469">Valeurs par défaut pour les contrôles reçoivent <xref:System.Windows.Forms.Control.Padding%2A> qui sont relativement proches indications d’interface utilisateur Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2469">Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="d11f7-2470">Certains ajustements peuvent être encore nécessaires pour des applications spécifiques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2470">Some adjustments might still be necessary for particular applications.</span></span>  
  
 <span data-ttu-id="d11f7-2471">Tous les contrôles qui implémentent <xref:System.Windows.Forms.Control.GetPreferredSize%2A> sont agrandie de la valeur dans <xref:System.Windows.Forms.Control.Padding%2A> lorsque <xref:System.Windows.Forms.Control.AutoSize%2A> est `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2471">All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.</span></span>  
  
 <span data-ttu-id="d11f7-2472">Les contrôles suivants n’utilisent pas <xref:System.Windows.Forms.Control.Padding%2A>:</span><span class="sxs-lookup"><span data-stu-id="d11f7-2472">The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:</span></span>  
  
-   <span data-ttu-id="d11f7-2473">Les contrôles qui n’implémentent pas <xref:System.Windows.Forms.Control.AutoSize%2A> via <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span><span class="sxs-lookup"><span data-stu-id="d11f7-2473">Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span></span>  
  
-   <span data-ttu-id="d11f7-2474">Contrôles personnalisés qui héritent directement de <xref:System.Windows.Forms.Control></span><span class="sxs-lookup"><span data-stu-id="d11f7-2474">Custom controls that directly inherit from <xref:System.Windows.Forms.Control></span></span>  
  
-   <xref:System.Windows.Forms.AxHost>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DataGridView>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MaskedTextBox>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.PropertyGrid>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.SplitContainer>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TextBoxBase>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
-   <xref:System.Windows.Forms.WebBrowser>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2475">Se produit quand la marge intérieure du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2475">Occurs when the control's padding changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2476">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2476">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2477">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2477">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-2478">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.PaddingChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2478">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span> <span data-ttu-id="d11f7-2479">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2479">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-2480">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2480">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-2481">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2481">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-2482">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.PaddingChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2482">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#41)]
 [!code-vb[System.Windows.Forms.EventExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2483">Se produit quand le contrôle est redessiné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2483">Occurs when the control is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2484">Le <xref:System.Windows.Forms.Control.Paint> événement est déclenché lorsque le contrôle est redessiné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2484">The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn.</span></span> <span data-ttu-id="d11f7-2485">Il passe une instance de <xref:System.Windows.Forms.PaintEventArgs> pour l’ou les méthodes qui gère la <xref:System.Windows.Forms.Control.Paint> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2485">It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
 <span data-ttu-id="d11f7-2486">Lorsque vous créez un nouveau contrôle personnalisé ou un contrôle hérité avec une apparence visuelle différente, vous devez fournir le code pour restituer le contrôle en substituant la <xref:System.Windows.Forms.Control.OnPaint%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2486">When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method.</span></span> <span data-ttu-id="d11f7-2487">Pour plus d’informations, consultez [remplacer la méthode OnPaint](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) et [contrôle peinture et rendu personnalisés](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2487">For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).</span></span>  
  
 <span data-ttu-id="d11f7-2488">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2488">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2489">L’exemple de code suivant crée un <xref:System.Windows.Forms.PictureBox> contrôle sur le formulaire et utilise le <xref:System.Windows.Forms.Control.Paint> événement pour dessiner dessus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2489">The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the <xref:System.Windows.Forms.Control.Paint> event to draw to it.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Parent { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2490">Obtient ou définit le conteneur parent du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2490">Gets or sets the parent container of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-2491"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle parent ou le contrôle conteneur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2491">A <see cref="T:System.Windows.Forms.Control" /> that represents the parent or container control of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2492">Définition de la <xref:System.Windows.Forms.Control.Parent%2A> valeur de propriété à `null` supprime le contrôle à partir de la <xref:System.Windows.Forms.Control.ControlCollection> de son contrôle parent actuel.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2492">Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2493">Le code suivant exemple utilise le <xref:System.Windows.Forms.Control.Parent%2A> propriété et la <xref:System.Windows.Forms.Control.FindForm%2A> méthode pour définir les propriétés sur le contrôle parent d’un bouton et son formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2493">The following code example uses the <xref:System.Windows.Forms.Control.Parent%2A> property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2494">pour toutes les fenêtres obtenir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2494">for all windows to get this property value.</span></span> <span data-ttu-id="d11f7-2495">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-2495">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2496">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Parent" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2496">Occurs when the <see cref="P:System.Windows.Forms.Control.Parent" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2497">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Parent%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2497">This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-2498">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2498">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PerformLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2499">Force le contrôle à appliquer la logique de présentation aux contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2499">Forces the control to apply layout logic to child controls.</span></span></summary>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="control.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2500">Force le contrôle à appliquer la logique de présentation à tous ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2500">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2501">Si le <xref:System.Windows.Forms.Control.SuspendLayout%2A> méthode a été appelée avant d’appeler le <xref:System.Windows.Forms.Control.PerformLayout%2A> (méthode), le <xref:System.Windows.Forms.Control.Layout> événement est supprimé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2501">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-2502">Le <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> et <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> propriétés de la <xref:System.Windows.Forms.LayoutEventArgs> créés sont configurés pour `null` si aucune valeur n’a été fournie lorsque le <xref:System.Windows.Forms.Control.PerformLayout%2A> méthode a été appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2502">The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2503">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2503">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="d11f7-2504">Il montre également la manière dont le <xref:System.Windows.Forms.Control.Layout> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2504">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="d11f7-2505">Dans cet exemple, le `Click` Gestionnaire d’événements pour `Button1` appelle explicitement <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2505">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="d11f7-2506">Le `Click` Gestionnaire d’événements pour `Button2` appelle implicitement <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2506">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="d11f7-2507"><xref:System.Windows.Forms.Control.PerformLayout%2A> est également appelé lorsque le formulaire est chargé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2507"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="d11f7-2508">`Button3` Retourne le contrôle à l’état qu'où il se trouvait lors du chargement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2508">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="d11f7-2509">Dans chaque cas, le <xref:System.Windows.Forms.Control.Layout> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2509">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-2510">Il s’agit d’un exemple complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2510">This is a complete example.</span></span> <span data-ttu-id="d11f7-2511">Pour exécuter l’exemple, collez le code suivant dans un formulaire vide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2511">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(class System.Windows.Forms.Control affectedControl, string affectedProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (affectedControl As Control, affectedProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(System::Windows::Forms::Control ^ affectedControl, System::String ^ affectedProperty);" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : System.Windows.Forms.Control * string -&gt; unit" Usage="control.PerformLayout (affectedControl, affectedProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="affectedProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedControl"><span data-ttu-id="d11f7-2512"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle le plus récemment modifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2512">A <see cref="T:System.Windows.Forms.Control" /> that represents the most recently changed control.</span></span></param>
        <param name="affectedProperty"><span data-ttu-id="d11f7-2513">Nom de la propriété la plus récemment modifiée sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2513">The name of the most recently changed property on the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-2514">Force le contrôle à appliquer la logique de présentation à tous ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2514">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2515">Si le <xref:System.Windows.Forms.Control.SuspendLayout%2A> méthode a été appelée avant d’appeler le <xref:System.Windows.Forms.Control.PerformLayout%2A> (méthode), le <xref:System.Windows.Forms.Control.Layout> événement est supprimé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2515">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-2516">Le `affectedControl` et `affectedProperty` paramètres peuvent avoir la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2516">The `affectedControl` and `affectedProperty` parameters can both be set to `null`.</span></span> <span data-ttu-id="d11f7-2517">Ainsi, le <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> et <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> propriétés de la <xref:System.Windows.Forms.LayoutEventArgs> créé pour être définie sur `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2517">Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2518">L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2518">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="d11f7-2519">Il montre également la manière dont le <xref:System.Windows.Forms.Control.Layout> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2519">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="d11f7-2520">Dans cet exemple, le `Click` Gestionnaire d’événements pour `Button1` appelle explicitement <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2520">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="d11f7-2521">Le `Click` Gestionnaire d’événements pour `Button2` appelle implicitement <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2521">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="d11f7-2522"><xref:System.Windows.Forms.Control.PerformLayout%2A> est également appelé lorsque le formulaire est chargé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2522"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="d11f7-2523">`Button3` Retourne le contrôle à l’état qu'où il se trouvait lors du chargement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2523">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="d11f7-2524">Dans chaque cas, le <xref:System.Windows.Forms.Control.Layout> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2524">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-2525">Il s’agit d’un exemple complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2525">This is a complete example.</span></span> <span data-ttu-id="d11f7-2526">Pour exécuter l’exemple, collez le code suivant dans un formulaire vide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2526">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToClient (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToClient(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToClient (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToClient(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToClient p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="d11f7-2527">
          <see cref="T:System.Drawing.Point" /> de coordonnées d'écran à convertir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2527">The screen coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d11f7-2528">Calcule l'emplacement du point spécifié à l'écran en coordonnées client.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2528">Computes the location of the specified screen point into client coordinates.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2529"><see cref="T:System.Drawing.Point" /> qui représente le <see cref="T:System.Drawing.Point" /> converti, <paramref name="p" />, en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2529">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-2530">Le code exemple suivant active l’utilisateur pour faire glisser un fichier image ou une image du formulaire et qu’il affiche à l’emplacement où elle est supprimée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2530">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="d11f7-2531">Le <xref:System.Windows.Forms.Control.OnPaint%2A> méthode est substituée pour repeindre l’image chaque fois que le formulaire est peint ; sinon, l’image n’est rendue persistante jusqu'à ce que la mise à jour suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2531">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="d11f7-2532">Le <xref:System.Windows.Forms.Control.DragEnter> détermine le type de données glissées sur le formulaire de méthode de gestion des événements et fournit les commentaires appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2532">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="d11f7-2533">Le <xref:System.Windows.Forms.Control.DragDrop> méthode de gestion des événements affiche l’image sur le formulaire, si un <xref:System.Drawing.Image> peuvent être créés à partir des données.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2533">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="d11f7-2534">Étant donné que le <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> et <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> les valeurs sont des coordonnées d’écran, l’exemple utilise le <xref:System.Windows.Forms.Control.PointToClient%2A> méthode pour les convertir en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2534">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToScreen (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToScreen p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="d11f7-2535">
          <see cref="T:System.Drawing.Point" /> de coordonnées clientes à convertir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2535">The client coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d11f7-2536">Calcule l'emplacement du point client spécifié en coordonnées d'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2536">Computes the location of the specified client point into screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2537"><see cref="T:System.Drawing.Point" /> qui représente le <see cref="T:System.Drawing.Point" /> converti, <paramref name="p" />, en coordonnées d'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2537">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-2538">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, et <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2538">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="d11f7-2539">Pour exécuter l’exemple, collez le code suivant dans un formulaire nommé Form1 contenant plusieurs contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2539">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="d11f7-2540">Cet exemple requiert que le <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, et <xref:System.Windows.Forms.Control.MouseUp> événements sont associés aux gestionnaires d’événements définis dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2540">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2541">Obtient la taille d'une zone rectangulaire qui peut contenir le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2541">Gets the size of a rectangular area into which the control can fit.</span></span></summary>
        <value><span data-ttu-id="d11f7-2542"><see cref="T:System.Drawing.Size" /> contenant la hauteur et largeur, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2542">A <see cref="T:System.Drawing.Size" /> containing the height and width, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessControlMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.PreProcessControlState PreProcessControlMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreProcessControlMessage (ByRef msg As Message) As PreProcessControlState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::PreProcessControlState PreProcessControlMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="member this.PreProcessControlMessage :  -&gt; System.Windows.Forms.PreProcessControlState" Usage="control.PreProcessControlMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreProcessControlState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="d11f7-2543">
          <see cref="T:System.Windows.Forms.Message" /> qui représente le message à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2543">A <see cref="T:System.Windows.Forms.Message" /> that represents the message to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2544">Prétraite des messages d'entrée ou du clavier dans la boucle de messages avant leur distribution.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2544">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2545">L'une des valeurs de <see cref="T:System.Windows.Forms.PreProcessControlState" />, selon que <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> a la valeur <see langword="true" /> ou <see langword="false" /> et selon que <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> ou <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> a la valeur <see langword="true" /> ou <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2545">One of the <see cref="T:System.Windows.Forms.PreProcessControlState" /> values, depending on whether <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is <see langword="true" /> or <see langword="false" /> and whether <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are <see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessMessage">
      <MemberSignature Language="C#" Value="public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreProcessMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreProcessMessage (ByRef msg As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PreProcessMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="abstract member PreProcessMessage :  -&gt; bool&#xA;override this.PreProcessMessage :  -&gt; bool" Usage="control.PreProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="d11f7-2546"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2546">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process.</span></span> <span data-ttu-id="d11f7-2547">Les valeurs possibles sont WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR et WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2547">The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span></param>
        <summary><span data-ttu-id="d11f7-2548">Prétraite des messages d'entrée ou du clavier dans la boucle de messages avant leur distribution.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2548">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2549"><see langword="true" /> si le message a été traité par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2549"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2550"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> est appelée par la boucle de message de l’application pour prétraiter les messages d’entrée avant qu’ils soient distribués.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2550"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched.</span></span> <span data-ttu-id="d11f7-2551">Les valeurs possibles pour le `msg` paramètre sont WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR et WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2551">Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span>  
  
 <span data-ttu-id="d11f7-2552">Lors de la substitution <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, un contrôle doit retourner `true` pour indiquer qu’il a traité le message.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2552">When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message.</span></span> <span data-ttu-id="d11f7-2553">Pour les messages qui ne sont pas traités par le contrôle, le résultat de `base.PreProcessMessage` doit être retourné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2553">For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned.</span></span> <span data-ttu-id="d11f7-2554">Contrôles substituent généralement l’une des méthodes plus spécialisées telles que <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, ou <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> au lieu de remplacer <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2554">Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2555">pour toutes les fenêtres à l’appelant immédiat d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2555">for all windows for the immediate caller to call this method.</span></span> <span data-ttu-id="d11f7-2556">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2556">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As PreviewKeyDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PreviewKeyDownEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreviewKeyDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2557">Se produit avant l'événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> quand l'utilisateur appuie sur une touche pendant que le focus est sur ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2557">Occurs before the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event when a key is pressed while focus is on this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2558">Certaines touches, telles que l’onglet retour, ÉCHAP et les touches de direction, sont généralement ignorées par certains contrôles, car ils ne sont pas considérés comme des activations de touches d’entrée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2558">Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</span></span> <span data-ttu-id="d11f7-2559">Par exemple, par défaut, un <xref:System.Windows.Controls.Button> contrôle ignore les touches de direction.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2559">For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys.</span></span> <span data-ttu-id="d11f7-2560">En appuyant sur les touches de direction généralement provoque le focus se déplace au contrôle précédent ou suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2560">Pressing the arrow keys typically causes the focus to move to the previous or next control.</span></span> <span data-ttu-id="d11f7-2561">Les touches de direction sont considérés comme des touches de navigation et en appuyant sur ces clés ne déclenchent pas généralement la <xref:System.Windows.Forms.Control.KeyDown> événement pour un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2561">The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a <xref:System.Windows.Controls.Button>.</span></span> <span data-ttu-id="d11f7-2562">Toutefois, en appuyant sur la flèche de clés pour un <xref:System.Windows.Controls.Button> déclenche le <xref:System.Windows.Forms.Control.PreviewKeyDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2562">However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span> <span data-ttu-id="d11f7-2563">En gérant la <xref:System.Windows.Forms.Control.PreviewKeyDown> événement pour un <xref:System.Windows.Controls.Button> et en définissant le <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propriété `true`, vous pouvez déclencher la <xref:System.Windows.Forms.Control.KeyDown> événements lorsque les touches de direction sont actionnées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2563">By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed.</span></span> <span data-ttu-id="d11f7-2564">Toutefois, si vous gérez les touches de direction, le focus passe n’est plus au contrôle précédent ou suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2564">However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</span></span>  
  
 <span data-ttu-id="d11f7-2565">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2565">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2566">L’exemple de code suivant montre un <xref:System.Windows.Forms.Button> qui inclut un <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2566">The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="d11f7-2567">Lorsque le <xref:System.Windows.Forms.Button> a le focus et que vous appuyez sur les touches flèche haut ou flèche bas, la <xref:System.Windows.Forms.ContextMenuStrip> s’affiche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2567">When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears.</span></span> <span data-ttu-id="d11f7-2568">Le <xref:System.Windows.Forms.Control.PreviewKeyDown> détecte lorsque les touches flèche haut ou bas sont utilisées de gestionnaire d’événements et définit le <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2568">The <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="d11f7-2569">Cela déclenche le <xref:System.Windows.Forms.Control.KeyDown> événement afin que vous pouvez afficher le <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2569">This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="d11f7-2570">Vous ne devez placer aucune logique le <xref:System.Windows.Forms.Control.PreviewKeyDown> Gestionnaire d’événements, sauf pour définir le <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2570">You should not put any logic in the <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property.</span></span> <span data-ttu-id="d11f7-2571">Au lieu de cela, vous devez placer votre logique le <xref:System.Windows.Forms.Control.KeyDown> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2571">Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="d11f7-2572"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message de fenêtre à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2572">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="d11f7-2573">Une des valeurs <see cref="T:System.Windows.Forms.Keys" /> qui représente la touche à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2573">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2574">Traite une touche de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2574">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2575"><see langword="true" /> si le caractère a été traité par le contrôle ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2575"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2576">Cette méthode est appelée pendant le prétraitement du message pour gérer les touches de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2576">This method is called during message preprocessing to handle command keys.</span></span> <span data-ttu-id="d11f7-2577">Touches de commande sont des clés qui ont toujours priorité sur les touches d’entrée standards.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2577">Command keys are keys that always take precedence over regular input keys.</span></span> <span data-ttu-id="d11f7-2578">Accélérateurs et des raccourcis de menu sont des exemples de touches de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2578">Examples of command keys include accelerators and menu shortcuts.</span></span> <span data-ttu-id="d11f7-2579">La méthode doit retourner `true` pour indiquer qu’il a traité la touche de commande, ou `false` pour indiquer que la clé n’est pas une touche de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2579">The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key.</span></span> <span data-ttu-id="d11f7-2580">Cette méthode est appelée uniquement lorsque le contrôle est hébergé dans une application Windows Forms ou comme un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2580">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 <span data-ttu-id="d11f7-2581">Le <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> méthode détermine d’abord si le contrôle a un <xref:System.Windows.Forms.ContextMenu>et si tel est le cas, permet la <xref:System.Windows.Forms.ContextMenu> pour traiter la touche de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2581">The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key.</span></span> <span data-ttu-id="d11f7-2582">Si la clé de commande n’est pas un raccourci du menu et le contrôle a un parent, la clé est transmise à du parent <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2582">If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method.</span></span> <span data-ttu-id="d11f7-2583">L’effet net est que les clés sont « propagés » à la hiérarchie des contrôles de commande.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2583">The net effect is that command keys are "bubbled" up the control hierarchy.</span></span> <span data-ttu-id="d11f7-2584">En plus de la touche de l’utilisateur, les données de clé indiquent également quelle, le cas échéant, les touches de modification ont été enfoncées en même temps que la clé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2584">In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</span></span> <span data-ttu-id="d11f7-2585">Touches de modification incluent les touches MAJ, CTRL et ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2585">Modifier keys include the SHIFT, CTRL, and ALT keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-2586">pour l’appelant immédiat et les classes qui héritent d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2586">for the immediate caller and inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2587">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2587">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2588"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> méthode dans une classe dérivée, un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Pour les clés qui ne sont pas traités par le contrôle, le résultat de l’appel de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> méthode doit être retournée. Contrôles rarement, voire jamais, devez substituer cette méthode.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2588"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method should be returned. Controls will seldom, if ever, need to override this method.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogChar : char -&gt; bool&#xA;override this.ProcessDialogChar : char -&gt; bool" Usage="control.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="d11f7-2589">Caractère à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2589">The character to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2590">Traite un caractère de boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2590">Processes a dialog character.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2591"><see langword="true" /> si le caractère a été traité par le contrôle ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2591"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2592">Cette méthode est appelée pendant le prétraitement pour gérer les caractères de boîte de dialogue, tels que les mnémoniques du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2592">This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</span></span> <span data-ttu-id="d11f7-2593">Cette méthode est appelée uniquement si la <xref:System.Windows.Forms.Control.IsInputChar%2A> méthode indique que le contrôle ne traite pas le caractère.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2593">This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character.</span></span> <span data-ttu-id="d11f7-2594">Le <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> méthode envoie simplement le caractère à du parent <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> (méthode), ou retourne `false` si le contrôle n’a aucun parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2594">The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="d11f7-2595">Le <xref:System.Windows.Forms.Form> classe substitue cette méthode pour effectuer le traitement réel de caractères de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2595">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters.</span></span> <span data-ttu-id="d11f7-2596">Cette méthode est appelée uniquement lorsque le contrôle est hébergé dans une application Windows Forms ou comme un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2596">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2597">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2597">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2598">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2598">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2599"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> méthode dans une classe dérivée, un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité le caractère. Pour les caractères qui ne sont pas traités par le contrôle, le résultat de l’appel de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> méthode doit être retournée. Contrôles rarement, voire jamais, devez substituer cette méthode.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2599"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the character. For characters that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned. Controls will seldom, if ever, need to override this method.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="d11f7-2600">Une des valeurs <see cref="T:System.Windows.Forms.Keys" /> qui représente la touche à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2600">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2601">Traite une touche de boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2601">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2602"><see langword="true" /> si la touche a été traitée par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2602"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2603">Cette méthode est appelée pendant le prétraitement du message pour gérer les caractères de boîte de dialogue, telles que les clés de tabulation, retour, ÉCHAP et flèche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2603">This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</span></span> <span data-ttu-id="d11f7-2604">Cette méthode est appelée uniquement si la <xref:System.Windows.Forms.Control.IsInputKey%2A> méthode indique que le contrôle ne traite pas de la clé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2604">This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key.</span></span> <span data-ttu-id="d11f7-2605">Le <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> envoie simplement le caractère à du parent <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> (méthode), ou retourne `false` si le contrôle n’a aucun parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2605">The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="d11f7-2606">Le <xref:System.Windows.Forms.Form> classe substitue cette méthode pour effectuer le traitement réel des clés de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2606">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span> <span data-ttu-id="d11f7-2607">Cette méthode est appelée uniquement lorsque le contrôle est hébergé dans une application Windows Forms ou comme un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2607">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2608">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2608">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2609">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2609">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2610"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> méthode dans une classe dérivée, un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Pour les clés qui ne sont pas traités par le contrôle, le résultat de l’appel de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> méthode doit être retournée. Contrôles rarement, voire jamais, devez substituer cette méthode.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2610"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned. Controls will seldom, if ever, need to override this method.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyEventArgs :  -&gt; bool&#xA;override this.ProcessKeyEventArgs :  -&gt; bool" Usage="control.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-2611"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message de fenêtre à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2611">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2612">Traite un message de touche et génère les événements de contrôle appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2612">Processes a key message and generates the appropriate control events.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2613"><see langword="true" /> si le message a été traité par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2613"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2614">Cette méthode est appelée lorsqu’un contrôle reçoit un message de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2614">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="d11f7-2615">La méthode est chargée de générer les événements clés appropriés pour le message en appelant le <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, ou <xref:System.Windows.Forms.Control.OnKeyUp%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2615">The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods.</span></span> <span data-ttu-id="d11f7-2616">Le `m` paramètre contient le message de fenêtre qui doit être traité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2616">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="d11f7-2617">Les valeurs possibles pour le <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propriété sont WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP et WM_IME_CHAR.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2617">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2618">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2618">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2619">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2619">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-2620">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2620">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-2621">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-2621">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2622"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> méthode dans une classe dérivée, un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Pour les clés qui ne sont pas traités par le contrôle, le résultat de l’appel de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> méthode doit être retournée. Contrôles rarement, voire jamais, devez substituer cette méthode.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2622"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method should be returned. Controls will seldom, if ever, need to override this method.</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyMessage :  -&gt; bool&#xA;override this.ProcessKeyMessage :  -&gt; bool" Usage="control.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-2623"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message de fenêtre à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2623">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2624">Traite un message de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2624">Processes a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2625"><see langword="true" /> si le message a été traité par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2625"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2626">Cette méthode est appelée lorsqu’un contrôle reçoit un message de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2626">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="d11f7-2627">La méthode détermine d’abord si le contrôle a un parent ; Si, par conséquent, il appelle le parent <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2627">The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method.</span></span> <span data-ttu-id="d11f7-2628">Si le parent <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> méthode ne traite pas le message puis le <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> méthode est appelée pour générer les événements de clavier appropriés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2628">If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events.</span></span> <span data-ttu-id="d11f7-2629">Le `m` paramètre contient le message de fenêtre qui doit être traité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2629">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="d11f7-2630">Les valeurs possibles pour le <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propriété sont WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP et WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2630">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2631">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2631">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2632">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2632">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2633"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> (méthode), un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Pour les clés qui ne sont pas traités par le contrôle, le résultat de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> doit être retourné. Contrôles rarement, voire jamais, devez substituer cette méthode.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2633"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> method, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> should be returned. Controls will seldom, if ever, need to override this method.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyPreview :  -&gt; bool&#xA;override this.ProcessKeyPreview :  -&gt; bool" Usage="control.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-2634"><see cref="T:System.Windows.Forms.Message" />, passé par référence, qui représente le message de fenêtre à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2634">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2635">Affiche un aperçu d'un message du clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2635">Previews a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2636"><see langword="true" /> si le message a été traité par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2636"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2637">Cette méthode est appelée par un contrôle enfant lorsque le contrôle enfant reçoit un message de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2637">This method is called by a child control when the child control receives a keyboard message.</span></span> <span data-ttu-id="d11f7-2638">Le contrôle enfant appelle cette méthode avant de générer les événements de clavier pour le message.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2638">The child control calls this method before generating any keyboard events for the message.</span></span> <span data-ttu-id="d11f7-2639">Si cette méthode retourne `true`, le contrôle enfant considère que le message de traitement et ne génère pas d’événements de clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2639">If this method returns `true`, the child control considers the message processed and does not generate any keyboard events.</span></span> <span data-ttu-id="d11f7-2640">Le `m` paramètre contient le message de fenêtre pour afficher un aperçu.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2640">The `m` parameter contains the window message to preview.</span></span> <span data-ttu-id="d11f7-2641">Les valeurs possibles pour le <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propriété sont WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP et WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2641">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span> <span data-ttu-id="d11f7-2642">Le <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> méthode envoie simplement le caractère à du parent <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> (méthode), ou retourne `false` si le contrôle n’a aucun parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2642">The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="d11f7-2643">Le <xref:System.Windows.Forms.Form> classe substitue cette méthode pour effectuer le traitement réel des clés de la boîte de dialogue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2643">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2644">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2644">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2645">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2645">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-2646">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2646">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-2647">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-2647">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2648"><para>Lors du remplacement de la <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> méthode dans une classe dérivée, un contrôle doit retourner <see langword="true" /> pour indiquer qu’il a traité la clé. Pour les clés qui ne sont pas traités par le contrôle, le résultat de l’appel de la classe de base <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> méthode doit être retournée.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2648"><para>When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key. For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method should be returned.</para></span></span></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="control.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="d11f7-2649">Caractère à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2649">The character to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-2650">Traite un caractère mnémonique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2650">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2651"><see langword="true" /> si le caractère a été traité comme un mnémonique par le contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2651"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2652">Cette méthode est appelée pour fournir au contrôle l’opportunité de traiter un caractère mnémonique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2652">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="d11f7-2653">La méthode doit déterminer si le contrôle est dans un état à traiter les mnémoniques et si le caractère donné représente un mnémonique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2653">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="d11f7-2654">Si, par conséquent, la méthode doit effectuer l’action associée au mnémonique et retourner `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2654">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="d11f7-2655">Si non, la méthode doit retourner `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2655">If not, the method should return `false`.</span></span> <span data-ttu-id="d11f7-2656">Les implémentations de cette méthode utilisent souvent le <xref:System.Windows.Forms.Control.IsMnemonic%2A> méthode pour déterminer si le caractère donné correspond à un caractère mnémonique dans le texte du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2656">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="d11f7-2657">Exemple :</span><span class="sxs-lookup"><span data-stu-id="d11f7-2657">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
      // Perform action associated with mnemonic.  
       }  
```  
  
 <span data-ttu-id="d11f7-2658">Cette implémentation par défaut de la <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> méthode renvoie simplement `false` pour indiquer que le contrôle n’a aucun mnémonique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2658">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2659">L’exemple de code suivant illustre une extension de la classe de bouton qui remplace le <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> méthode un comportement personnalisé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2659">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="d11f7-2660">L’exemple illustre également l’utilisation de la <xref:System.Windows.Forms.Control.CanSelect%2A> et <xref:System.Windows.Forms.Control.IsMnemonic%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2660">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="d11f7-2661">Pour exécuter cet exemple, collez le code suivant après une classe de formulaire, dans le même fichier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2661">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="d11f7-2662">Ajoutez un bouton de type `MnemonicButton` au formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2662">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2663">pour toutes les fenêtres pour hériter de classes pour appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2663">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="d11f7-2664">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2664">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Windows.Forms.Control.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2665">Obtient de nom de produit de l'assembly contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2665">Gets the product name of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-2666">Nom de produit de l'assembly contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2666">The product name of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2667">Le <xref:System.Windows.Forms.Control.ProductName%2A> propriété est une propriété en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2667">The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property.</span></span> <span data-ttu-id="d11f7-2668">Pour modifier la valeur de cette propriété, définissez la <xref:System.Reflection.AssemblyProductAttribute.Product%2A> valeur de propriété de la <xref:System.Reflection.AssemblyProductAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2668">To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>.</span></span> <span data-ttu-id="d11f7-2669">La ligne suivante de jeux de code c# le <xref:System.Windows.Forms.Control.ProductName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2669">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.</span></span>  
  
```  
[assembly: AssemblyProduct("MyApplication")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2670">Il est fortement recommandé que vous fournissez le nom de la société, le nom de produit et la version de produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2670">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="d11f7-2671">Fourniture de ces informations permet l’utilisation des fonctionnalités de Windows Forms comme <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> qui le rendent plus faciles à créer des applications conformes au programme « Certifié pour Windows ».</span><span class="sxs-lookup"><span data-stu-id="d11f7-2671">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="d11f7-2672">Pour plus d’informations sur le programme certifié pour Windows, consultez http://msdn.microsoft.com/certification.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2672">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2673">L’exemple de code suivant affiche des informations sur l’application dans un <xref:System.Windows.Forms.Label> contenus par un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2673">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-2674">Cet exemple requiert que le <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> et <xref:System.Windows.Forms.Control.ProductVersion%2A> ont été définies.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2674">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyProductAttribute.Product" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Windows.Forms.Control.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2675">Obtient la version de l'assembly contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2675">Gets the version of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-2676">Version de fichier de l'assembly contenant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2676">The file version of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2677">Le <xref:System.Windows.Forms.Control.ProductVersion%2A> propriété est une propriété en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2677">The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property.</span></span> <span data-ttu-id="d11f7-2678">Pour modifier la valeur de cette propriété, définissez la <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> valeur de propriété de la <xref:System.Reflection.AssemblyVersionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2678">To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>.</span></span> <span data-ttu-id="d11f7-2679">La ligne suivante de jeux de code c# le <xref:System.Windows.Forms.Control.ProductVersion%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2679">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.</span></span>  
  
```  
[assembly: AssemblyVersion("1.0.1")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2680">Il est fortement recommandé que vous fournissez le nom de la société, le nom de produit et la version de produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2680">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="d11f7-2681">Fourniture de ces informations permet l’utilisation des fonctionnalités de Windows Forms comme <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> qui le rendent plus faciles à créer des applications conformes au programme « Certifié pour Windows ».</span><span class="sxs-lookup"><span data-stu-id="d11f7-2681">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="d11f7-2682">Pour plus d’informations sur le programme certifié pour Windows, consultez http://msdn.microsoft.com/certification.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2682">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2683">L’exemple de code suivant affiche des informations sur l’application dans un <xref:System.Windows.Forms.Label> contenus par un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2683">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-2684">Cet exemple requiert que le <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> et <xref:System.Windows.Forms.Control.ProductVersion%2A> ont été définies.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2684">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyVersionAttribute.Version" />
      </Docs>
    </Member>
    <Member MemberName="PropagatingImeMode">
      <MemberSignature Language="C#" Value="protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ImeMode PropagatingImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PropagatingImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Windows::Forms::ImeMode PropagatingImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.PropagatingImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2685">Obtient un objet qui représente un mode IME de propagation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2685">Gets an object that represents a propagating IME mode.</span></span></summary>
        <value><span data-ttu-id="d11f7-2686">Objet qui représente un mode IME de propagation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2686">An object that represents a propagating IME mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2687">Se produit quand <see cref="T:System.Windows.Forms.AccessibleObject" /> fournit de l'aide aux applications d'accessibilité.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2687">Occurs when <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing help to accessibility applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2688">Vous devez utiliser le <xref:System.Windows.Forms.HelpProvider> classe pour permettre aux utilisateurs d’appeler l’aide sur votre objet accessible en appuyant sur la touche F1.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2688">You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key.</span></span> <span data-ttu-id="d11f7-2689">À l’aide de la <xref:System.Windows.Forms.HelpProvider> vous fournit des informations complètes dans le <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2689">Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span></span> <span data-ttu-id="d11f7-2690">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2690">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2691">L’exemple de code suivant illustre la création d’un graphique prenant en charge d’accessibilité contrôler, à l’aide de la <xref:System.Windows.Forms.AccessibleObject> et <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes à exposer des informations accessibles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2691">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="d11f7-2692">Le contrôle trace deux courbes avec une légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2692">The control plots two curves along with a legend.</span></span> <span data-ttu-id="d11f7-2693">Le `ChartControlAccessibleObject` classe qui dérive de `ControlAccessibleObject`, est utilisé dans le <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> méthode pour fournir des informations accessibles personnalisées pour le contrôle chart.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2693">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="d11f7-2694">Dans la mesure où la légende du graphique n’est pas un réel <xref:System.Windows.Forms.Control> -en fonction de contrôle, mais au lieu de cela est dessiné par le contrôle graphique, elle ne contient pas d’informations accessibles intégrées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2694">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="d11f7-2695">Pour cette raison, le `ChartControlAccessibleObject` substitue le <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> méthode pour retourner le `CurveLegendAccessibleObject` qui représente des informations accessibles pour chaque partie de la légende.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2695">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="d11f7-2696">Lorsqu’une application accessible prenant en charge les utilise ce contrôle, le contrôle peut fournir les informations accessibles nécessaires.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2696">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="d11f7-2697">Cet extrait de code illustre la gestion du <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2697">This code excerpt demonstrates handling the <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> event.</span></span> <span data-ttu-id="d11f7-2698">Consultez le <xref:System.Windows.Forms.AccessibleObject> vue d’ensemble de la classe pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2698">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#3)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#3)]
 [!code-vb[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2699">Se produit pendant une opération glisser-déplacer et permet à la source de cette opération de déterminer si l'opération doit être annulée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2699">Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2700">Le <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché en cas d’une modification dans l’état du bouton de souris ou le clavier pendant une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2700">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-2701">Le <xref:System.Windows.Forms.Control.QueryContinueDrag> événement permet de la source de glissement déterminer si l’opération de glisser-déplacer doit être annulée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2701">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="d11f7-2702">Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2702">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="d11f7-2703">Le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode détermine le contrôle sous l’emplacement du curseur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2703">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="d11f7-2704">Elle vérifie ensuite si le contrôle est une cible de dépôt valide.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2704">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="d11f7-2705">Si le contrôle est une cible de dépôt valide, le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec l’effet de glisser-déplacer spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2705">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="d11f7-2706">Pour obtenir la liste des effets de glisser-déplacer, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2706">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="d11f7-2707">Les modifications apportées à la position du curseur de la souris, à l'état du clavier et à l'état du bouton de la souris font l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2707">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="d11f7-2708">Si l'utilisateur se déplace hors de la fenêtre, l'événement <xref:System.Windows.Forms.Control.DragLeave> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2708">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-2709">Si la souris entre dans un autre contrôle, l'événement <xref:System.Windows.Forms.Control.DragEnter> du contrôle est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2709">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="d11f7-2710">Si la souris se déplace uniquement dans les limites du même contrôle, l'événement <xref:System.Windows.Forms.Control.DragOver> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2710">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-2711">S’il existe une modification de l’état de bouton de souris ou le clavier, la <xref:System.Windows.Forms.Control.QueryContinueDrag> événement est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propriété de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2711">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="d11f7-2712">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Continue`, le <xref:System.Windows.Forms.Control.DragOver> événement est déclenché pour poursuivre l’opération et le <xref:System.Windows.Forms.Control.GiveFeedback> événement est déclenché avec le nouvel effet, pour rétroaction visuelle appropriée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2712">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="d11f7-2713">Pour obtenir la liste des effets de déplacement valides, consultez l'énumération <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2713">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d11f7-2714">Le <xref:System.Windows.Forms.Control.DragOver> et <xref:System.Windows.Forms.Control.GiveFeedback> les événements sont associés afin que lorsque la souris se trouve sur la cible de déplacement, l’utilisateur reçoit les commentaires les plus actuels sur la position de la souris.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2714">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="d11f7-2715">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Drop`, la valeur d’effet de déplacement est retournée à la source, afin de l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2715">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="d11f7-2716">Si la valeur de <xref:System.Windows.Forms.DragAction> est `Cancel`, le <xref:System.Windows.Forms.Control.DragLeave> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2716">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="d11f7-2717">Par défaut, le <xref:System.Windows.Forms.Control.QueryContinueDrag> ensembles d’événements <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> à `Cancel` dans <xref:System.Windows.Forms.DragAction> si la touche ÉCHAP a été enfoncée et affecte <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> à `Drop` dans <xref:System.Windows.Forms.DragAction> si le bouton de gauche, du milieu ou de droite de la souris est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2717">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="d11f7-2718">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2718">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2719">L’exemple de code suivant illustre une opération de glisser-déplacer entre deux <xref:System.Windows.Forms.ListBox> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2719">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="d11f7-2720">L’exemple appelle la <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode lorsque l’action glisser commence.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2720">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="d11f7-2721">L’action glisser démarre si la souris a été déplacé plus de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> à partir de l’emplacement de la souris pendant la <xref:System.Windows.Forms.Control.MouseDown> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2721">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="d11f7-2722">Le <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> méthode est utilisée pour déterminer l’index de l’élément à faire glisser pendant la `MouseDown` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2722">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="d11f7-2723">Il illustre également l’utilisation de curseurs personnalisés pour l’opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2723">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="d11f7-2724">L’exemple suppose que deux fichiers curseur,`3dwarro.cur` et `3dwno.cur`, existent dans le répertoire de l’application, pour le glisser-déplacer personnalisés-déplacer et les curseurs, respectivement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2724">The example requires that two cursor files,`3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="d11f7-2725">Les curseurs personnalisés sont utilisés si le `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2725">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="d11f7-2726">Les curseurs personnalisés sont définis dans le <xref:System.Windows.Forms.Control.GiveFeedback> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2726">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-2727">L’état du clavier est évalué dans le <xref:System.Windows.Forms.Control.DragOver> Gestionnaire d’événements pour le droit `ListBox`, afin de déterminer l’opération glisser en fonction de l’état des touches MAJ, CTRL, ALT ou CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2727">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="d11f7-2728">L’emplacement dans le `ListBox` où le déplacement peut avoir lieu est également déterminé lors de la `DragOver` événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2728">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="d11f7-2729">Si les données à déplacer ne sont pas un `String`, puis le <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> a la valeur `None` dans <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2729">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="d11f7-2730">Enfin, l’état de la liste déroulante s’affiche dans le `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2730">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="d11f7-2731">Les données à déplacer pour le droit `ListBox` est déterminé dans le <xref:System.Windows.Forms.Control.DragDrop> Gestionnaire d’événements et le `String` valeur est ajoutée à l’emplacement approprié dans le `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2731">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="d11f7-2732">Si l’opération glisser va au-delà des limites du formulaire, l’opération de glisser-déplacer est annulée dans le <xref:System.Windows.Forms.Control.QueryContinueDrag> Gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2732">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="d11f7-2733">Cet extrait de code montre comment utiliser le <xref:System.Windows.Forms.Control.QueryContinueDrag> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2733">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.QueryContinueDrag> event.</span></span> <span data-ttu-id="d11f7-2734">Consultez le <xref:System.Windows.Forms.Control.DoDragDrop%2A> méthode pour l’exemple de code complet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2734">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDragEvent">
      <MemberSignature Language="C#" Value="protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseDragEvent(object key, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseDragEvent (key As Object, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseDragEvent(System::Object ^ key, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseDragEvent : obj * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.RaiseDragEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d11f7-2735">Événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2735">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-2736"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2736">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2737">Déclenche l'événement Glisser approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2737">Raises the appropriate drag event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseKeyEvent">
      <MemberSignature Language="C#" Value="protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseKeyEvent(object key, class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseKeyEvent (key As Object, e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseKeyEvent(System::Object ^ key, System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseKeyEvent : obj * System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.RaiseKeyEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d11f7-2738">Événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2738">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-2739"><see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2739">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2740">Déclenche l'événement de touche approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2740">Raises the appropriate key event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseMouseEvent">
      <MemberSignature Language="C#" Value="protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseMouseEvent(object key, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseMouseEvent (key As Object, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseMouseEvent(System::Object ^ key, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseMouseEvent : obj * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.RaiseMouseEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d11f7-2741">Événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2741">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-2742"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2742">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2743">Déclenche l'événement de souris approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2743">Raises the appropriate mouse event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePaintEvent">
      <MemberSignature Language="C#" Value="protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaisePaintEvent(object key, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaisePaintEvent (key As Object, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaisePaintEvent(System::Object ^ key, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaisePaintEvent : obj * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.RaisePaintEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d11f7-2744">Événement à déclencher.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2744">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="d11f7-2745"><see cref="T:System.Windows.Forms.PaintEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2745">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-2746">Déclenche l'événement de peinture approprié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2746">Raises the appropriate paint event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RecreateHandle">
      <MemberSignature Language="C#" Value="protected void RecreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RecreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RecreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RecreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RecreateHandle();" />
      <MemberSignature Language="F#" Value="member this.RecreateHandle : unit -&gt; unit" Usage="control.RecreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2747">Impose la recréation du handle pour ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2747">Forces the re-creation of the handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2748">Le <xref:System.Windows.Forms.Control.RecreateHandle%2A> méthode est appelée chaque fois que les paramètres sont nécessaires pour un nouveau contrôle, mais à l’aide d’un appel à partir de <xref:System.Windows.Forms.Control.UpdateStyles%2A> à <xref:System.Windows.Forms.Control.CreateParams%2A> est insuffisante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2748">The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient.</span></span> <span data-ttu-id="d11f7-2749">Cette méthode appelle également <xref:System.Windows.Forms.Control.DestroyHandle%2A> et <xref:System.Windows.Forms.Control.CreateHandle%2A> et définit <xref:System.Windows.Forms.Control.RecreatingHandle%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2749">This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and <xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RecreatingHandle">
      <MemberSignature Language="C#" Value="public bool RecreatingHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecreatingHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RecreatingHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecreatingHandle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecreatingHandle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RecreatingHandle : bool" Usage="System.Windows.Forms.Control.RecreatingHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2750">Obtient une valeur indiquant si le contrôle recrée actuellement son handle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2750">Gets a value indicating whether the control is currently re-creating its handle.</span></span></summary>
        <value><span data-ttu-id="d11f7-2751"><see langword="true" /> si le contrôle recrée actuellement son handle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2751"><see langword="true" /> if the control is currently re-creating its handle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2752">Le <xref:System.Windows.Forms.Control.RecreatingHandle%2A> retourne de la propriété `true` si le <xref:System.Windows.Forms.Control.RecreateHandle%2A> méthode est en cours d’exécution sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2752">The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToClient(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToClient (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToClient(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToClient r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="d11f7-2753">
          <see cref="T:System.Drawing.Rectangle" /> de coordonnées d'écran à convertir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2753">The screen coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d11f7-2754">Calcule la taille et l'emplacement du rectangle d'écran spécifié en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2754">Computes the size and location of the specified screen rectangle in client coordinates.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2755"><see cref="T:System.Drawing.Rectangle" /> qui représente le <see cref="T:System.Drawing.Rectangle" /> converti, <paramref name="r" />, en coordonnées clientes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2755">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToScreen (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToScreen r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="d11f7-2756">
          <see cref="T:System.Drawing.Rectangle" /> de coordonnées clientes à convertir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2756">The client coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d11f7-2757">Calcule la taille et l'emplacement du rectangle client spécifié en coordonnées d'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2757">Computes the size and location of the specified client rectangle in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2758"><see cref="T:System.Drawing.Rectangle" /> qui représente le <see cref="T:System.Drawing.Rectangle" /> converti, <paramref name="p" />, en coordonnées d'écran.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2758">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-2759">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, et <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> membres.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2759">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="d11f7-2760">Pour exécuter l’exemple, collez le code suivant dans un formulaire nommé **Form1** contenant plusieurs contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2760">To run the example, paste the following code in a form called **Form1** containing several controls.</span></span> <span data-ttu-id="d11f7-2761">Cet exemple requiert que le <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, et <xref:System.Windows.Forms.Control.MouseUp> événements sont associés aux gestionnaires d’événements définis dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2761">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="ReflectMessage">
      <MemberSignature Language="C#" Value="protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ReflectMessage(native int hWnd, valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ReflectMessage (hWnd As IntPtr, ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ReflectMessage(IntPtr hWnd, System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="static member ReflectMessage : nativeint *  -&gt; bool" Usage="System.Windows.Forms.Control.ReflectMessage (hWnd, m)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="d11f7-2762"><see cref="T:System.IntPtr" /> représentant le handle du contrôle auquel refléter le message.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2762">An <see cref="T:System.IntPtr" /> representing the handle of the control to reflect the message to.</span></span></param>
        <param name="m"><span data-ttu-id="d11f7-2763"><see cref="T:System.Windows.Forms.Message" /> représentant le message Windows à refléter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2763">A <see cref="T:System.Windows.Forms.Message" /> representing the Windows message to reflect.</span></span></param>
        <summary><span data-ttu-id="d11f7-2764">Reflète le message spécifié au contrôle lié au handle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2764">Reflects the specified message to the control that is bound to the specified handle.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2765"><see langword="true" /> si le message a été réfléchi ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2765"><see langword="true" /> if the message was reflected; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2766">Le <xref:System.Windows.Forms.Control.ReflectMessage%2A> méthode est une méthode d’infrastructure et ne doit généralement pas être appelée à partir de votre code.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2766">The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.</span></span>  
  
 <span data-ttu-id="d11f7-2767">Si le `hWnd` paramètre ne représente pas un contrôle valide, la <xref:System.Windows.Forms.Control.ReflectMessage%2A> retourne de la méthode `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2767">If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="d11f7-2768">Étant donné que les messages Windows sont retournés à la fenêtre de niveau supérieur, le <xref:System.Windows.Forms.Control.ReflectMessage%2A> méthode est utilisée pour propager le message de retour au contrôle qui a envoyé le message.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2768">Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2769">pour toutes les fenêtres d’appeler cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2769">for all windows to call this method.</span></span> <span data-ttu-id="d11f7-2770">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2770">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh();" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit&#xA;override this.Refresh : unit -&gt; unit" Usage="control.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2771">Force le contrôle à invalider sa zone cliente et à se redessiner immédiatement avec tous ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2771">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2772"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.Refresh" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.Refresh" /> méthode pour que le contrôle et ses contrôles enfants sont invalidés et redessinés.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2772"><para>When overriding <see cref="M:System.Windows.Forms.Control.Refresh" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.Refresh" /> method so the control and its child controls are invalidated and redrawn.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.Update" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Region { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Region" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Region" />
      <MemberSignature Language="VB.NET" Value="Public Property Region As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Region { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Region : System.Drawing.Region with get, set" Usage="System.Windows.Forms.Control.Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2773">Obtient ou définit la zone de la fenêtre associée au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2773">Gets or sets the window region associated with the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-2774"><see cref="T:System.Drawing.Region" /> de la fenêtre associé au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2774">The window <see cref="T:System.Drawing.Region" /> associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2775">La région de fenêtre est une collection de pixels dans la fenêtre où le système d’exploitation permet le dessin.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2775">The window region is a collection of pixels within the window where the operating system permits drawing.</span></span> <span data-ttu-id="d11f7-2776">Le système d’exploitation n’affiche pas toute partie d’une fenêtre qui se trouve en dehors de la région de fenêtre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2776">The operating system does not display any portion of a window that lies outside of the window region.</span></span> <span data-ttu-id="d11f7-2777">Les coordonnées de la zone d’un contrôle sont par rapport à l’angle supérieur gauche du contrôle, pas la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2777">The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2778">La collection de pixels contenus avec la zone peut être non contigue.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2778">The collection of pixels contained with the region can be noncontiguous.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2779">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.Region%2A> propriété en créant un bouton rond.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2779">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.Region%2A> property by creating a round button.</span></span> <span data-ttu-id="d11f7-2780">Pour exécuter l’exemple, collez le code suivant dans un formulaire contenant un bouton appelé `roundButton`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2780">To run the example, paste the following code in a form containing a button called `roundButton`.</span></span> <span data-ttu-id="d11f7-2781">Cet exemple requiert que le <xref:System.Windows.Forms.Control.Paint> événement est connecté au gestionnaire d’événements défini dans l’exemple.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2781">This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.Region#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.Region#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.Region#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-2782">pour toutes les fenêtres définir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2782">for all windows to set this property value.</span></span> <span data-ttu-id="d11f7-2783">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-2783">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RegionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RegionChanged;" />
      <MemberSignature Language="F#" Value="member this.RegionChanged : EventHandler " Usage="member this.RegionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2784">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Region" /> change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2784">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2785">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2785">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2786">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2786">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-2787">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.RegionChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2787">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span> <span data-ttu-id="d11f7-2788">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2788">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-2789">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2789">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-2790">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2790">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-2791">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.RegionChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2791">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#22)]
 [!code-vb[System.Windows.Forms.EventExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderRightToLeft">
      <MemberSignature Language="C#" Value="protected internal bool RenderRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property RenderRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool RenderRightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderRightToLeft : bool" Usage="System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2792">cette propriété est désormais obsolète.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2792">This property is now obsolete.</span></span></summary>
        <value><span data-ttu-id="d11f7-2793"><see langword="true" /> si le contrôle est affiché de droite à gauche ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2793"><see langword="true" /> if the control is rendered from right to left; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-2794">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2794">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected virtual void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="abstract member RescaleConstantsForDpi : int * int -&gt; unit&#xA;override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="control.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="d11f7-2795">Valeur PPP avant la modification.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2795">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="d11f7-2796">Valeur PPP après la modification.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2796">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="d11f7-2797">Fournit des constantes pour la remise à l’échelle du contrôle lorsqu’une modification de la résolution se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2797">Provides constants for rescaling the control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="control.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2798">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.BackColor" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2798">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2799">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2799">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBindings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings();" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : unit -&gt; unit" Usage="control.ResetBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2800">Entraîne la relecture par un contrôle lié au <see cref="T:System.Windows.Forms.BindingSource" /> de tous les éléments dans la liste et l'actualisation de leurs valeurs affichées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2800">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2801">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2801">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="ResetCursor">
      <MemberSignature Language="C#" Value="public virtual void ResetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetCursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetCursor();" />
      <MemberSignature Language="F#" Value="abstract member ResetCursor : unit -&gt; unit&#xA;override this.ResetCursor : unit -&gt; unit" Usage="control.ResetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2802">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2802">Resets the <see cref="P:System.Windows.Forms.Control.Cursor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2803">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2803">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="control.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2804">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.Font" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2804">Resets the <see cref="P:System.Windows.Forms.Control.Font" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2805">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2805">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="control.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2806">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.ForeColor" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2806">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2807">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2807">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImeMode">
      <MemberSignature Language="C#" Value="public void ResetImeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetImeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetImeMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetImeMode();" />
      <MemberSignature Language="F#" Value="member this.ResetImeMode : unit -&gt; unit" Usage="control.ResetImeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2808">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2808">Resets the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2809">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2809">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMouseEventArgs">
      <MemberSignature Language="C#" Value="protected void ResetMouseEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetMouseEventArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetMouseEventArgs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetMouseEventArgs();" />
      <MemberSignature Language="F#" Value="member this.ResetMouseEventArgs : unit -&gt; unit" Usage="control.ResetMouseEventArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2810">Réinitialise le contrôle pour gérer l'événement <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2810">Resets the control to handle the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="control.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2811">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2811">Resets the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2812">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2812">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public virtual void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetText();" />
      <MemberSignature Language="F#" Value="abstract member ResetText : unit -&gt; unit&#xA;override this.ResetText : unit -&gt; unit" Usage="control.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2813">Rétablit la valeur par défaut de la propriété <see cref="P:System.Windows.Forms.Control.Text" /> (<see cref="F:System.String.Empty" />).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2813">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2814">Vous utilisez généralement cette méthode si vous créez un concepteur pour le <xref:System.Windows.Forms.Control> ou votre propre contrôle incorporant la <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2814">You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : EventHandler " Usage="member this.Resize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2815">Se produit quand le contrôle est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2815">Occurs when the control is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2816">Pour déterminer le <xref:System.Windows.Forms.Control.Size%2A> du contrôle redimensionné, vous pouvez effectuer un cast le `sender` paramètre d’inscrit <xref:System.Windows.Forms.ControlEventHandler> méthode à un <xref:System.Windows.Forms.Control> et obtenir son <xref:System.Windows.Forms.Control.Size%2A> propriété (ou <xref:System.Windows.Forms.Control.Height%2A> et <xref:System.Windows.Forms.Control.Width%2A> propriétés individuellement).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2816">To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).</span></span>  
  
 <span data-ttu-id="d11f7-2817">Pour gérer les dispositions personnalisées, utilisez le <xref:System.Windows.Forms.Control.Layout> événement au lieu de l’événement de redimensionnement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2817">To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event.</span></span> <span data-ttu-id="d11f7-2818">Le <xref:System.Windows.Forms.Control.Layout> événement est déclenché en réponse à une <xref:System.Windows.Forms.Control.Resize> événement, mais également en réponse à d’autres modifications qui affectent la disposition du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2818">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.</span></span>  
  
 <span data-ttu-id="d11f7-2819">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2819">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2820">Le code suivant exemple gère le <xref:System.Windows.Forms.Control.Resize> événement d’un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2820">The following code example handles the <xref:System.Windows.Forms.Control.Resize> event of a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-2821">Lorsque le formulaire est redimensionné, le Gestionnaire d’événements permet de s’assurer qu’il reste carré (son <xref:System.Windows.Forms.Control.Height%2A> et <xref:System.Windows.Forms.Control.Width%2A> demeurent inchangés).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2821">When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal).</span></span> <span data-ttu-id="d11f7-2822">Pour exécuter cet exemple, assurez-vous qu’et associer cette méthode de gestion d’événements du formulaire <xref:System.Windows.Forms.Control.Resize> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2822">To run this example, make sure and associate this event-handling method with the form’s <xref:System.Windows.Forms.Control.Resize> event.</span></span>  
  
 [!code-cpp[WinForms.Control.Resize#1](~/samples/snippets/cpp/VS_Snippets_Winforms/WinForms.Control.Resize/CPP/form1.cpp#1)]
 [!code-csharp[WinForms.Control.Resize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/WinForms.Control.Resize/CS/form1.cs#1)]
 [!code-vb[WinForms.Control.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WinForms.Control.Resize/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="protected bool ResizeRedraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeRedraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResizeRedraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ResizeRedraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeRedraw : bool with get, set" Usage="System.Windows.Forms.Control.ResizeRedraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2823">Obtient ou définit une valeur indiquant si le contrôle se redessine lors d'un redimensionnement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2823">Gets or sets a value indicating whether the control redraws itself when resized.</span></span></summary>
        <value><span data-ttu-id="d11f7-2824"><see langword="true" /> si le contrôle se redessine lors d'un redimensionnement ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2824"><see langword="true" /> if the control redraws itself when resized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2825">Le <xref:System.Windows.Forms.Control.ResizeRedraw%2A> valeur de propriété est équivalente à la valeur de retour de la <xref:System.Windows.Forms.Control.GetStyle%2A> méthode lors du passage dans la <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> valeur en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2825">The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> value as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2826">Reprend la logique de présentation habituelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2826">Resumes the usual layout logic.</span></span></summary>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout();" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : unit -&gt; unit" Usage="control.ResumeLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2827">Reprend la logique de présentation normale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2827">Resumes usual layout logic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2828">Appel de la <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode impose une présentation immédiate s’il existe des demandes de disposition en attente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2828">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="d11f7-2829">Le <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes sont utilisées en tandem pour supprimer plusieurs <xref:System.Windows.Forms.Control.Layout> événements lorsque vous ajustez plusieurs attributs du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2829">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="d11f7-2830">Par exemple, vous appelez généralement la <xref:System.Windows.Forms.Control.SuspendLayout%2A> (méthode), puis définissez le <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A> propriétés du contrôle et puis appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode pour permettre les modifications prennent effet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2830">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="d11f7-2831">Il ne doit y avoir aucun appel en attente <xref:System.Windows.Forms.Control.SuspendLayout%2A> pour <xref:System.Windows.Forms.Control.ResumeLayout%2A> puisse être appelé avec succès.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2831">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2832">L’exemple de code suivant ajoute deux boutons à un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2832">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="d11f7-2833">Les transactions de l’exemple l’ajout des boutons à l’aide de la <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2833">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout (bool performLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout(bool performLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout (performLayout As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout(bool performLayout);" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : bool -&gt; unit" Usage="control.ResumeLayout performLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="performLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="performLayout"><span data-ttu-id="d11f7-2834"><see langword="true" /> pour exécuter les demandes de présentation en instance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2834"><see langword="true" /> to execute pending layout requests; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-2835">Reprend la logique de présentation habituelle, en forçant éventuellement une présentation immédiate des demandes de disposition en attente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2835">Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2836">Appel de la <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode impose une présentation immédiate s’il existe des demandes de disposition en attente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2836">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span> <span data-ttu-id="d11f7-2837">Lorsque le `performLayout` paramètre est défini sur `true`, une présentation immédiate se produit s’il existe des demandes de disposition en attente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2837">When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="d11f7-2838">Le <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes sont utilisées en tandem pour supprimer plusieurs <xref:System.Windows.Forms.Control.Layout> événements lorsque vous ajustez plusieurs attributs du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2838">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="d11f7-2839">Par exemple, vous appelez généralement la <xref:System.Windows.Forms.Control.SuspendLayout%2A> (méthode), puis définissez le <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A> propriétés du contrôle et puis appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode pour permettre les modifications prennent effet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2839">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="d11f7-2840">Il ne doit y avoir aucun appel en attente <xref:System.Windows.Forms.Control.SuspendLayout%2A> pour <xref:System.Windows.Forms.Control.ResumeLayout%2A> puisse être appelé avec succès.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2840">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2841">Lorsque vous ajoutez plusieurs contrôles à un contrôle parent, il est recommandé d’appeler le <xref:System.Windows.Forms.Control.SuspendLayout%2A> méthode avant d’initialiser les contrôles à ajouter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2841">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="d11f7-2842">Après avoir ajouté les contrôles au contrôle parent, appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2842">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="d11f7-2843">Cela augmente les performances des applications avec de nombreux contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2843">This will increase the performance of applications with many controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Right { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : int" Usage="System.Windows.Forms.Control.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2844">Obtient la distance, en pixels, entre le bord droit du contrôle et le bord gauche de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2844">Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="d11f7-2845"><see cref="T:System.Int32" /> représentant la distance, en pixels, entre le bord droit du contrôle et le bord gauche de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2845">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2846">La valeur de la <xref:System.Windows.Forms.Control.Right%2A> propriété est égale à la somme de la <xref:System.Windows.Forms.Control.Left%2A> valeur de propriété et la <xref:System.Windows.Forms.Control.Width%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2846">The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.</span></span>  
  
 <span data-ttu-id="d11f7-2847">La propriété <xref:System.Windows.Forms.Control.Right%2A> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2847">The <xref:System.Windows.Forms.Control.Right%2A> property is read-only.</span></span> <span data-ttu-id="d11f7-2848">Vous pouvez modifier cette valeur de propriété indirectement en modifiant la valeur de la <xref:System.Windows.Forms.Control.Left%2A> ou <xref:System.Windows.Forms.Control.Width%2A> propriétés ou appeler le <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, ou <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2848">You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2849">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2849">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-2850">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2850">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.Control.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2851">Obtient ou définit une valeur indiquant si les éléments du contrôle sont alignés pour prendre en charge les paramètres régionaux utilisant des polices de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2851">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span></span></summary>
        <value><span data-ttu-id="d11f7-2852">Une des valeurs de <see cref="T:System.Windows.Forms.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2852">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span> <span data-ttu-id="d11f7-2853">La valeur par défaut est <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2853">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2854">Le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété est une propriété ambiante.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2854">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property.</span></span> <span data-ttu-id="d11f7-2855">Une propriété ambiante est une propriété du contrôle qui, si pas définie, est récupérée à partir du contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2855">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="d11f7-2856">Par exemple, un <xref:System.Windows.Forms.Button> aura le même <xref:System.Windows.Forms.Control.BackColor%2A> en tant que son parent <xref:System.Windows.Forms.Form> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2856">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="d11f7-2857">Pour plus d’informations sur les propriétés ambiantes, consultez la <xref:System.Windows.Forms.AmbientProperties> classe ou le <xref:System.Windows.Forms.Control> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2857">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="d11f7-2858">Le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété est utilisée dans les applications internationales où le langage est écrit de droite à gauche, telles que l’hébreu ou l’arabe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2858">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</span></span> <span data-ttu-id="d11f7-2859">Lorsque cette propriété a la valeur <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, éléments de contrôle qui incluent du texte sont affichés de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2859">When this property is set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, control elements that include text are displayed from right to left.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-2860">Si la valeur de la <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété est modifiée au moment de l’exécution, seul le texte brut sans mise en forme est conservé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2860">If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.</span></span>  
  
 <span data-ttu-id="d11f7-2861">Voici quelques exemples montrant comment les éléments de contrôle sont affectés par la <xref:System.Windows.Forms.Control.RightToLeft%2A> valeur de propriété <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span><span class="sxs-lookup"><span data-stu-id="d11f7-2861">The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span></span>  
  
-   <span data-ttu-id="d11f7-2862">Barres de défilement verticales sont affichées sur le côté gauche plutôt qu’à droite des contrôles à défilement (par exemple, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>multiligne <xref:System.Windows.Forms.TextBox>, et <xref:System.Windows.Forms.RichTextBox>).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2862">Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).</span></span>  
  
-   <span data-ttu-id="d11f7-2863">Barres de défilement horizontales démarrer avec la case de défilement (curseur) alignée à droite.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2863">Horizontal scroll bars start with the scroll box (thumb) right-aligned.</span></span>  
  
-   <span data-ttu-id="d11f7-2864">L’alignement d’élément de case à cocher, contrôlé par le `CheckAlign` propriété, est inversé pour <xref:System.Windows.Forms.CheckBox> et <xref:System.Windows.Forms.RadioButton> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2864">The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
-   <span data-ttu-id="d11f7-2865">Éléments dans la zone de liste, zone de liste déroulante et contrôles haut-bas sont alignés à droite.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2865">Items in list box, combo box, and up-down controls are right aligned.</span></span>  
  
-   <span data-ttu-id="d11f7-2866">Boutons haut et bas sont alignés à gauche sur <xref:System.Windows.Forms.NumericUpDown> et <xref:System.Windows.Forms.DomainUpDown> contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2866">Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.</span></span>  
  
-   <span data-ttu-id="d11f7-2867">Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, et <xref:System.Windows.Forms.ContextMenu>) sont affichés à droite.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2867">Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.</span></span>  
  
-   <span data-ttu-id="d11f7-2868">L’alignement des boutons de barre d’outils dans un <xref:System.Windows.Forms.ToolBar> contrôle ou l’alignement du texte sur un <xref:System.Windows.Forms.ToolBarButton> n’est pas affecté par la <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2868">The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.</span></span>  
  
-   <span data-ttu-id="d11f7-2869"><xref:System.Windows.Forms.AxHost> prend en charge l’alignement de droite à gauche ; Toutefois, l’effet sur un contrôle ActiveX dépend de l’étendue à laquelle l’auteur du contrôle implémenté la prise en charge pour l’affichage de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2869"><xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="d11f7-2870">La valeur assignée ne fait pas partie des valeurs <see cref="T:System.Windows.Forms.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2870">The assigned value is not one of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span></exception>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-2871"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-2871"><para>When overriding the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2872">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.RightToLeft" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2872">Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2873">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2873">This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-2874">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2874">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2875">L’exemple de code suivant est un gestionnaire d’événements qui est exécutée lorsque la <xref:System.Windows.Forms.Control.Text%2A> valeur de propriété change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2875">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="d11f7-2876">Le <xref:System.Windows.Forms.Control> classe possède plusieurs méthodes avec le modèle de nom *PropertyName* `Changed` qui sont déclenché lorsque le correspondant *PropertyName* valeur modifiée (* PropertyName* représente le nom de la propriété correspondante).</span><span class="sxs-lookup"><span data-stu-id="d11f7-2876">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="d11f7-2877">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2877">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-2878">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2878">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-2879">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2879">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RtlTranslateAlignment">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2880">Convertit l'alignement actuel en alignement approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2880">Converts the current alignment to the appropriate alignment to support right-to-left text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateAlignment(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::ContentAlignment RtlTranslateAlignment(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2881">Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2881">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2882">Convertit le <see cref="T:System.Drawing.ContentAlignment" /> spécifié en <see cref="T:System.Drawing.ContentAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2882">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2883">Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2883">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2884">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2884">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateAlignment(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2885">Une des valeurs de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2885">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2886">Convertit le <see cref="T:System.Windows.Forms.HorizontalAlignment" /> spécifié en <see cref="T:System.Windows.Forms.HorizontalAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2886">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2887">Une des valeurs de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2887">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2888">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2888">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateAlignment(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2889">Une des valeurs de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2889">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2890">Convertit le <see cref="T:System.Windows.Forms.LeftRightAlignment" /> spécifié en <see cref="T:System.Windows.Forms.LeftRightAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2890">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2891">Une des valeurs de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2891">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2892">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2892">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateContent">
      <MemberSignature Language="C#" Value="protected internal System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateContent(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function RtlTranslateContent (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Drawing::ContentAlignment RtlTranslateContent(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateContent : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateContent align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2893">Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2893">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2894">Convertit le <see cref="T:System.Drawing.ContentAlignment" /> spécifié en <see cref="T:System.Drawing.ContentAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2894">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2895">Une des valeurs de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2895">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2896">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2896">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateHorizontal">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateHorizontal (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateHorizontal(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateHorizontal : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateHorizontal align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2897">Une des valeurs de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2897">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2898">Convertit le <see cref="T:System.Windows.Forms.HorizontalAlignment" /> spécifié en <see cref="T:System.Windows.Forms.HorizontalAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2898">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2899">Une des valeurs de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2899">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2900">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2900">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateLeftRight">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateLeftRight (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateLeftRight(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateLeftRight : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateLeftRight align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="d11f7-2901">Une des valeurs de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2901">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2902">Convertit le <see cref="T:System.Windows.Forms.LeftRightAlignment" /> spécifié en <see cref="T:System.Windows.Forms.LeftRightAlignment" /> approprié pour prendre en charge le texte de droite à gauche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2902">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2903">Une des valeurs de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2903">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2904">Si le <xref:System.Windows.Forms.Control.RightToLeft%2A> propriété de <xref:System.Windows.Forms.RightToLeft> a la valeur `No`, la valeur de retour est égale à la `align` paramètre passé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2904">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2905">Dimensionne le contrôle et ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2905">Scales the control and any child controls.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (System.Drawing.SizeF factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype System.Drawing.SizeF factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (factor As SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(System::Drawing::SizeF factor);" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Drawing.SizeF -&gt; unit" Usage="control.Scale factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="d11f7-2906"><see cref="T:System.Drawing.SizeF" /> qui contient les facteurs d'échelle horizontale et verticale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2906">A <see cref="T:System.Drawing.SizeF" /> containing the horizontal and vertical scaling factors.</span></span></param>
        <summary><span data-ttu-id="d11f7-2907">Dimensionne le contrôle et tous les contrôles enfants au facteur d'échelle spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2907">Scales the control and all child controls by the specified scaling factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2908">Le <xref:System.Windows.Forms.Control.Scale%2A> méthode dimensionne le contrôle par la mise à l’échelle spécifiée `factor`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2908">The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`.</span></span> <span data-ttu-id="d11f7-2909">Elle également récursivement met à l’échelle tous les contrôles enfants si la <xref:System.Windows.Forms.Control.ScaleChildren%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2909">It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`.</span></span> <span data-ttu-id="d11f7-2910">En interne, cette méthode appelle <xref:System.Windows.Forms.Control.ScaleControl%2A> à l’échelle de chaque contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2910">Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float ratio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 ratio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (ratio As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float ratio);" />
      <MemberSignature Language="F#" Value="member this.Scale : single -&gt; unit" Usage="control.Scale ratio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ratio"><span data-ttu-id="d11f7-2911">Rapport à utiliser pour la mise à l'échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2911">The ratio to use for scaling.</span></span></param>
        <summary><span data-ttu-id="d11f7-2912">Dimensionne le contrôle et ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2912">Scales the control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="control.Scale (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="d11f7-2913">Facteur d'échelle horizontale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2913">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="d11f7-2914">Facteur d'échelle verticale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2914">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="d11f7-2915">Dimensionne l'intégralité du contrôle et ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2915">Scales the entire control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBitmapLogicalToDevice">
      <MemberSignature Language="C#" Value="public void ScaleBitmapLogicalToDevice (ref System.Drawing.Bitmap logicalBitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleBitmapLogicalToDevice(class System.Drawing.Bitmap&amp; logicalBitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleBitmapLogicalToDevice (ByRef logicalBitmap As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleBitmapLogicalToDevice(System::Drawing::Bitmap ^ % logicalBitmap);" />
      <MemberSignature Language="F#" Value="member this.ScaleBitmapLogicalToDevice :  -&gt; unit" Usage="control.ScaleBitmapLogicalToDevice logicalBitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalBitmap" Type="System.Drawing.Bitmap&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="logicalBitmap"><span data-ttu-id="d11f7-2916">Le bitmap à mettre à l’échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2916">The bitmap to scale.</span></span></param>
        <summary><span data-ttu-id="d11f7-2917">Met à l’échelle une valeur de bitmap logique sur son appareil équivalent lorsqu’une modification de la résolution en DPI se produit.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2917">Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleChildren">
      <MemberSignature Language="C#" Value="protected virtual bool ScaleChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScaleChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ScaleChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ScaleChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ScaleChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScaleChildren : bool" Usage="System.Windows.Forms.Control.ScaleChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-2918">Obtient une valeur qui détermine la mise à l'échelle des contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2918">Gets a value that determines the scaling of child controls.</span></span></summary>
        <value><span data-ttu-id="d11f7-2919"><see langword="true" /> si les contrôles enfants sont mis à l'échelle quand la méthode <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> sur ce contrôle est appelée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2919"><see langword="true" /> if child controls will be scaled when the <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> method on this control is called; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-2920">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2920">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2921">Si le <xref:System.Windows.Forms.Control.ScaleChildren%2A> propriété est `true`, puis le <xref:System.Windows.Forms.Control.Scale%2A> méthode s’appeler de manière récursive la <xref:System.Windows.Forms.Control.ScaleControl%2A> méthode de chacun de ses contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2921">If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.</span></span>  
  
 <span data-ttu-id="d11f7-2922">L’implémentation par défaut de <xref:System.Windows.Forms.Control.ScaleChildren%2A> retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2922">The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`.</span></span> <span data-ttu-id="d11f7-2923">Les classes dérivées peuvent substituer <xref:System.Windows.Forms.Control.ScaleChildren%2A> pour retourner `false` pour indiquer que la mise à l’échelle ne doit pas être exécutée sur leurs enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2923">Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="d11f7-2924">Facteur selon lequel la hauteur et la largeur du contrôle sont mises à l'échelle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2924">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="d11f7-2925">Valeur <see cref="T:System.Windows.Forms.BoundsSpecified" /> qui spécifie les limites du contrôle à utiliser pendant la définition de sa taille et de sa position.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2925">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="d11f7-2926">Met à l'échelle l'emplacement, la taille, la marge intérieure et la marge d'un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2926">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2927">Si le contrôle est de niveau supérieur, il ne sera pas mise à l’échelle l’emplacement du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2927">If the control is top level, this will not scale the control's location.</span></span> <span data-ttu-id="d11f7-2928">Cela n’évolue pas enfants ou la taille des contrôles dimensionnés automatiquement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2928">This does not scale children or the size of automatically sized controls.</span></span> <span data-ttu-id="d11f7-2929">Vous pouvez omettre la mise à l’échelle dans n’importe quelle direction en modifiant la valeur de la `specified` paramètre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2929">You can omit scaling in any direction by changing the value of the `specified` parameter.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Forms.BoundsSpecified>  
  
 <xref:System.Windows.Forms.Control.Scale%2A>  
  
 <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  
  
 <xref:System.Windows.Forms.Control.SetBoundsCore%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected virtual void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="abstract member ScaleCore : single * single -&gt; unit&#xA;override this.ScaleCore : single * single -&gt; unit" Usage="control.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="d11f7-2930">Facteur d'échelle horizontale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2930">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="d11f7-2931">Facteur d'échelle verticale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2931">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="d11f7-2932">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2932">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2933">Cette méthode ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2933">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2934">Active un contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2934">Activates a control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="control.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2935">Active le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2935">Activates the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2936">Le <xref:System.Windows.Forms.Control.Select%2A> méthode active le contrôle si le contrôle `Selectable` bit de style est défini sur `true` dans <xref:System.Windows.Forms.ControlStyles>, elle est contenue dans un autre contrôle et tous ses contrôles parents sont visibles et activés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2936">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="d11f7-2937">Les contrôles Windows Forms dans la liste suivante ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2937">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="d11f7-2938">Contrôles dérivés de contrôles dans la liste ne peut également pas être sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2938">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="d11f7-2939"><xref:System.Windows.Forms.LinkLabel> (lorsqu’il n’existe aucun lien présent dans le contrôle)</span><span class="sxs-lookup"><span data-stu-id="d11f7-2939"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2940">L’exemple de code suivant sélectionne le texte spécifié <xref:System.Windows.Forms.Control>, s’il est sélectionnable.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2940">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="abstract member Select : bool * bool -&gt; unit&#xA;override this.Select : bool * bool -&gt; unit" Usage="control.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><span data-ttu-id="d11f7-2941"><see langword="true" /> pour spécifier la direction du contrôle à sélectionner ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2941"><see langword="true" /> to specify the direction of the control to select; otherwise, <see langword="false" />.</span></span></param>
        <param name="forward"><span data-ttu-id="d11f7-2942"><see langword="true" /> pour se déplacer vers le bas dans l'ordre de tabulation ; <see langword="false" /> pour se déplacer vers le haut dans l'ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2942"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <summary><span data-ttu-id="d11f7-2943">Active un contrôle enfant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2943">Activates a child control.</span></span> <span data-ttu-id="d11f7-2944">Spécifie éventuellement la direction de l'ordre de tabulation pour sélectionner le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2944">Optionally specifies the direction in the tab order to select the control from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2945">Le `directed` et `forward` paramètres sont utilisés par les contrôles de style conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2945">The `directed` and `forward` parameters are used by container-style controls.</span></span> <span data-ttu-id="d11f7-2946">Lorsque le `directed` paramètre est défini sur `true`, le `forward` paramètre est évalué pour déterminer le contrôle à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2946">When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select.</span></span> <span data-ttu-id="d11f7-2947">Lorsque `forward` a la valeur `true`, le contrôle suivant dans l’ordre de tabulation est sélectionné ; lorsque `false`, le contrôle précédent dans l’ordre de tabulation est sélectionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2947">When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.</span></span>  
  
 <span data-ttu-id="d11f7-2948">Le <xref:System.Windows.Forms.Control.Select%2A> méthode active le contrôle si le contrôle `Selectable` bit de style est défini sur `true` dans <xref:System.Windows.Forms.ControlStyles>, elle est contenue dans un autre contrôle et tous ses contrôles parents sont visibles et activés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2948">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="d11f7-2949">Les contrôles Windows Forms dans la liste suivante ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2949">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="d11f7-2950">Contrôles dérivés de contrôles dans la liste ne peut également pas être sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2950">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="d11f7-2951"><xref:System.Windows.Forms.LinkLabel> (lorsqu’il n’existe aucun lien présent dans le contrôle)</span><span class="sxs-lookup"><span data-stu-id="d11f7-2951"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectNextControl">
      <MemberSignature Language="C#" Value="public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SelectNextControl(class System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNextControl (ctl As Control, forward As Boolean, tabStopOnly As Boolean, nested As Boolean, wrap As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SelectNextControl(System::Windows::Forms::Control ^ ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="F#" Value="member this.SelectNextControl : System.Windows.Forms.Control * bool * bool * bool * bool -&gt; bool" Usage="control.SelectNextControl (ctl, forward, tabStopOnly, nested, wrap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
        <Parameter Name="tabStopOnly" Type="System.Boolean" />
        <Parameter Name="nested" Type="System.Boolean" />
        <Parameter Name="wrap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="d11f7-2952">
          <see cref="T:System.Windows.Forms.Control" /> à partir duquel commencer la recherche.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2952">The <see cref="T:System.Windows.Forms.Control" /> at which to start the search.</span></span></param>
        <param name="forward"><span data-ttu-id="d11f7-2953"><see langword="true" /> pour se déplacer vers le bas dans l'ordre de tabulation ; <see langword="false" /> pour se déplacer vers le haut dans l'ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2953"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <param name="tabStopOnly"><span data-ttu-id="d11f7-2954"><see langword="true" /> pour ignorer les contrôles dont la propriété <see cref="P:System.Windows.Forms.Control.TabStop" /> a la valeur <see langword="false" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2954"><see langword="true" /> to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to <see langword="false" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="nested"><span data-ttu-id="d11f7-2955"><see langword="true" /> pour inclure les contrôles enfants imbriqués (enfants de contrôles enfants) ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2955"><see langword="true" /> to include nested (children of child controls) child controls; otherwise, <see langword="false" />.</span></span></param>
        <param name="wrap"><span data-ttu-id="d11f7-2956"><see langword="true" /> pour poursuivre la recherche à partir du premier contrôle dans l'ordre de tabulation après que le dernier contrôle a été atteint ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2956"><see langword="true" /> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-2957">Active le contrôle suivant.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2957">Activates the next control.</span></span></summary>
        <returns><span data-ttu-id="d11f7-2958"><see langword="true" /> si un contrôle a été activé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2958"><see langword="true" /> if a control was activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2959">Le <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthode active le contrôle suivant dans l’ordre de tabulation si le contrôle `Selectable` bit de style est défini sur `true` dans <xref:System.Windows.Forms.ControlStyles>, elle est contenue dans un autre contrôle et tous ses contrôles parents sont visibles et activés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2959">The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="d11f7-2960">Les contrôles Windows Forms dans la liste suivante ne sont pas sélectionnables.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2960">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="d11f7-2961">Contrôles dérivés de contrôles dans la liste ne peut également pas être sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2961">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="d11f7-2962"><xref:System.Windows.Forms.LinkLabel> (lorsqu’il n’existe aucun lien présent dans le contrôle)</span><span class="sxs-lookup"><span data-stu-id="d11f7-2962"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 <span data-ttu-id="d11f7-2963">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-2963">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-2964">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2964">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-2965">Le code suivant exampleshows le <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthode utilisée dans un formulaire qui a des contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2965">The following code exampleshows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has some controls.</span></span> <span data-ttu-id="d11f7-2966">Chaque fois que vous cliquez sur le formulaire, le contrôle suivant est activé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2966">Each time that you click the form, the next control is activated.</span></span> <span data-ttu-id="d11f7-2967">Le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propriété obtient le contrôle actuellement actif dans le contrôle conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2967">The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#1)]  
  
 <span data-ttu-id="d11f7-2968">Le code suivant montre l’exemple le <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthode utilisée dans un formulaire qui a un <xref:System.Windows.Forms.Button> et quelques autres contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2968">The following code example shows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls.</span></span> <span data-ttu-id="d11f7-2969">Lorsque vous cliquez sur le <xref:System.Windows.Forms.Button>, le contrôle suivant après le <xref:System.Windows.Forms.Button> est activé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2969">When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated.</span></span> <span data-ttu-id="d11f7-2970">Notez que vous devez obtenir le parent de la <xref:System.Windows.Forms.Button> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2970">Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="d11f7-2971">Dans la mesure où <xref:System.Windows.Forms.Button> n’est pas un conteneur, l’appel <xref:System.Windows.Forms.Control.SelectNextControl%2A> directement sur le <xref:System.Windows.Forms.Button> ne changerait pas l’activation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2971">Since <xref:System.Windows.Forms.Button> is not a container, calling <xref:System.Windows.Forms.Control.SelectNextControl%2A> directly on the <xref:System.Windows.Forms.Button> would not change the activation.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#2)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public void SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendToBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendToBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendToBack();" />
      <MemberSignature Language="F#" Value="member this.SendToBack : unit -&gt; unit" Usage="control.SendToBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-2972">Fait passer le contrôle au dernier rang de l'ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2972">Sends the control to the back of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-2973">Le contrôle est déplacé vers l’arrière de l’ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2973">The control is moved to the back of the z-order.</span></span> <span data-ttu-id="d11f7-2974">Si le contrôle est un enfant d’un autre contrôle, le contrôle enfant est déplacé à l’arrière de l’ordre de plan.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2974">If the control is a child of another control, the child control is moved to the back of the z-order.</span></span> <span data-ttu-id="d11f7-2975">Si le contrôle est un contrôle de niveau supérieur, cette méthode ne fonctionnera pas correctement, sauf si le contrôle est actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2975">If the control is a top-level control, this method will not work correctly unless the control is active.</span></span> <span data-ttu-id="d11f7-2976">Un contrôle de niveau supérieur est un contrôle, comme un <xref:System.Windows.Forms.Form>, qui est pas un enfant d’un autre contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2976">A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control.</span></span> <span data-ttu-id="d11f7-2977">Un contrôle actif est un contrôle visible qui a le focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2977">An active control is a visible control that has input focus.</span></span> <span data-ttu-id="d11f7-2978">Pour utiliser le <xref:System.Windows.Forms.Control.SendToBack%2A> méthode avec un contrôle inactif, de niveau supérieur, appelez d’abord la <xref:System.Windows.Forms.Control.BringToFront%2A> méthode sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2978">To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAutoSizeMode(valuetype System.Windows.Forms.AutoSizeMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAutoSizeMode (mode As AutoSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAutoSizeMode(System::Windows::Forms::AutoSizeMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetAutoSizeMode : System.Windows.Forms.AutoSizeMode -&gt; unit" Usage="control.SetAutoSizeMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.AutoSizeMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="d11f7-2979">Une des valeurs de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2979">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-2980">Définit une valeur indiquant comment un contrôle se comporte quand sa propriété <see cref="P:System.Windows.Forms.Control.AutoSize" /> est activée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2980">Sets a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-2981">Définit les limites du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2981">Sets the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int -&gt; unit" Usage="control.SetBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-2982">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Left" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2982">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-2983">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Top" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2983">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-2984">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Width" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2984">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-2985">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Height" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2985">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-2986">Définit les limites du contrôle à l'emplacement et à la taille spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2986">Sets the bounds of the control to the specified location and size.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBounds (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-2987">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Left" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2987">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-2988">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Top" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2988">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-2989">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Width" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2989">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-2990">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Height" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2990">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="d11f7-2991">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2991">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span> <span data-ttu-id="d11f7-2992">Pour tout paramètre non spécifié, la valeur actuelle sera utilisée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2992">For any parameter not specified, the current value will be used.</span></span></param>
        <summary><span data-ttu-id="d11f7-2993">Définit les limites spécifiées du contrôle à l'emplacement et à la taille spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2993">Sets the specified bounds of the control to the specified location and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d11f7-2994">Le code suivant exemple centres un <xref:System.Windows.Forms.Form> dans l’écran le <xref:System.Windows.Forms.Control.Layout> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2994">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="d11f7-2995">Cela conservera le formulaire centré pendant que l’utilisateur le redimensionne.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2995">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="d11f7-2996">Cet exemple nécessite que vous avez créé un <xref:System.Windows.Forms.Form> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2996">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-2997">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Left" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2997">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-2998">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Top" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2998">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-2999">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Width" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-2999">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-3000">Nouvelle valeur de la propriété <see cref="P:System.Windows.Forms.Control.Height" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3000">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="d11f7-3001">Combinaison d'opérations de bits des valeurs <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3001">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="d11f7-3002">Exécute le travail de définition des limites spécifiées de ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3002">Performs the work of setting the specified bounds of this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3003">En règle générale, les paramètres qui correspondent aux limites non incluses dans le `specified` paramètre sont passés avec leurs valeurs actuelles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3003">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="d11f7-3004">Par exemple, le <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, ou le <xref:System.Drawing.Point.X%2A> ou <xref:System.Drawing.Point.Y%2A> propriétés de la <xref:System.Windows.Forms.Control.Location%2A> propriété peut être passée avec une référence à l’instance actuelle du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3004">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="d11f7-3005">Toutefois, toutes les valeurs passées dans sont respectées et appliqués au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3005">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="d11f7-3006">Le `boundsSpecified` paramètre représente les éléments des contrôles <xref:System.Windows.Forms.Control.Bounds%2A> modifiés par votre application.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3006">The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="d11f7-3007">Par exemple, si vous modifiez le <xref:System.Windows.Forms.Control.Size%2A> du contrôle, le `boundsSpecified` valeur du paramètre est le `Size` valeur <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3007">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="d11f7-3008">Toutefois, si le <xref:System.Windows.Forms.Control.Size%2A> est ajusté en réponse à la <xref:System.Windows.Forms.Control.Dock%2A> propriété qui est définie, le `boundsSpecified` valeur du paramètre est le `None` valeur de <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3008">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-3009">Sur les systèmes Windows Server 2003, la taille d’un <xref:System.Windows.Forms.Form> est limité par la largeur en pixels maximal et la hauteur de l’analyse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3009">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3010">Les éléments suivants exemple de code remplace le <xref:System.Windows.Forms.Control.SetBoundsCore%2A> pour s’assurer que le contrôle conserve une taille fixe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3010">The following code example overrides the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that the control remains a fixed size.</span></span> <span data-ttu-id="d11f7-3011">Cet exemple nécessite que vous disposez d’une classe qui est directement ou indirectement dérivée de la <xref:System.Windows.Forms.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3011">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#1)]
 [!code-csharp[Windows.Forms.Control_Methods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#1)]
 [!code-vb[Windows.Forms.Control_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3012"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> méthode pour forcer les limites du contrôle à modifier. Les classes dérivées peuvent ajouter des restrictions de taille pour le <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> (méthode).</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3012"><para>When overriding <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change. Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected virtual void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member SetClientSizeCore : int * int -&gt; unit&#xA;override this.SetClientSizeCore : int * int -&gt; unit" Usage="control.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-3013">Largeur de la zone cliente, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3013">The client area width, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-3014">Hauteur de la zone cliente, en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3014">The client area height, in pixels.</span></span></param>
        <summary><span data-ttu-id="d11f7-3015">Définit la taille de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3015">Sets the size of the client area of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3016">La zone cliente commence à la (0, 0) emplacement et s’étend à la (`x`, `y`) emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3016">The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.</span></span>  
  
 <span data-ttu-id="d11f7-3017">En règle générale, vous ne devez pas définir le <xref:System.Windows.Forms.Control.ClientSize%2A> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3017">Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3018">Les éléments suivants exemple de code remplace le <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> méthode pour s’assurer que le contrôle reste carré.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3018">The following code example overrides the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that the control remains square.</span></span> <span data-ttu-id="d11f7-3019">Cet exemple nécessite que vous disposez d’une classe qui est directement ou indirectement dérivée de la <xref:System.Windows.Forms.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3019">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#2)]
 [!code-csharp[Windows.Forms.Control_Methods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#2)]
 [!code-vb[Windows.Forms.Control_Methods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3020"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> méthode afin que le <see cref="P:System.Windows.Forms.Control.ClientSize" /> propriété est ajustée.  Pour plus d’informations sur le dessin des contrôles, consultez [rendu d’un Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3020"><para>When overriding <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> method so that the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property is adjusted.  For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetStyle(valuetype System.Windows.Forms.ControlStyles flag, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetStyle (flag As ControlStyles, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetStyle(System::Windows::Forms::ControlStyles flag, bool value);" />
      <MemberSignature Language="F#" Value="member this.SetStyle : System.Windows.Forms.ControlStyles * bool -&gt; unit" Usage="control.SetStyle (flag, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="d11f7-3021">Bit <see cref="T:System.Windows.Forms.ControlStyles" /> à définir.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3021">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to set.</span></span></param>
        <param name="value"><span data-ttu-id="d11f7-3022"><see langword="true" /> pour appliquer le style spécifié au contrôle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3022"><see langword="true" /> to apply the specified style to the control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-3023">Affecte à un indicateur <see cref="T:System.Windows.Forms.ControlStyles" /> spécifié la valeur <see langword="true" /> ou <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3023">Sets a specified <see cref="T:System.Windows.Forms.ControlStyles" /> flag to either <see langword="true" /> or <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3024">Indicateurs de bits de style de contrôle sont utilisés pour classer le comportement pris en charge.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3024">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="d11f7-3025">Un contrôle peut activer un style en appelant le <xref:System.Windows.Forms.Control.SetStyle%2A> (méthode) et en passant le texte approprié <xref:System.Windows.Forms.ControlStyles> bits (ou bits) et la valeur booléenne à attribuer aux bits.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3025">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="d11f7-3026">Pour déterminer la valeur assignée à une certaine <xref:System.Windows.Forms.ControlStyles> de bits, utilisez le <xref:System.Windows.Forms.Control.GetStyle%2A> (méthode) et passez le <xref:System.Windows.Forms.ControlStyles> membre à évaluer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3026">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-3027">Définition des bits de style du contrôle peut modifier considérablement le comportement du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3027">Setting the control style bits can substantially change the behavior of the control.</span></span> <span data-ttu-id="d11f7-3028">Examinez le <xref:System.Windows.Forms.ControlStyles> documentation de l’énumération de comprendre les effets de la modification des bits de style de contrôle avant d’appeler le <xref:System.Windows.Forms.Control.SetStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3028">Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3029">L’exemple de code suivant active la double mise en mémoire tampon sur un <xref:System.Windows.Forms.Form> et met à jour les styles pour refléter les modifications.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3029">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SetTopLevel">
      <MemberSignature Language="C#" Value="protected void SetTopLevel (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTopLevel(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTopLevel (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTopLevel(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetTopLevel : bool -&gt; unit" Usage="control.SetTopLevel value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d11f7-3030"><see langword="true" /> pour définir le contrôle comme le contrôle du niveau le plus élevé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3030"><see langword="true" /> to set the control as the top-level control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-3031">Définit le contrôle comme le contrôle du niveau le plus élevé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3031">Sets the control as the top-level control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3032">Si vous appelez le <xref:System.Windows.Forms.Control.SetTopLevel%2A> méthode d’un <xref:System.Windows.Forms.Form> et passer une valeur de `false`, le formulaire ne seront pas visible jusqu'à ce que vous appeliez <xref:System.Windows.Forms.Control.SetTopLevel%2A> à nouveau, en transmettant une valeur de `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3032">If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A> again, passing in a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d11f7-3033">Le paramètre <paramref name="value" /> a la valeur <see langword="true" /> et le contrôle est un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3033">The <paramref name="value" /> parameter is set to <see langword="true" /> and the control is an ActiveX control.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="d11f7-3034">La valeur de retour de <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> n'est pas égale au paramètre <paramref name="value" /> et la propriété <see cref="P:System.Windows.Forms.Control.Parent" /> n'est pas <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3034">The <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> return value is not equal to the <paramref name="value" /> parameter and the <see cref="P:System.Windows.Forms.Control.Parent" /> property is not <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-3035">Pour définir le contrôle comme un contrôle de niveau supérieur dans le cas d’un type autre que <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3035">to set the control as a top-level control if it is of any type other than <see cref="T:System.Windows.Forms.Form" />.</span></span> <span data-ttu-id="d11f7-3036">Cette autorisation est requise uniquement si le <paramref name="value" /> paramètre est <see langword="true" /> et le contrôle n’est pas un contrôle ActiveX.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3036">This permission is only demanded if the <paramref name="value" /> parameter is <see langword="true" /> and the control is not an ActiveX control.</span></span> <span data-ttu-id="d11f7-3037">Énumération associée : <see langword="AllWindows" /> valeur <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3037">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="control.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d11f7-3038"><see langword="true" /> pour rendre le contrôle visible ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3038"><see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d11f7-3039">Définit le contrôle à l'état visible spécifié.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3039">Sets the control to the specified visible state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3040">Vous devez généralement remplacer cette méthode pour modifier le comportement de visibilité du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3040">You would typically override this method to change the visibility behavior of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3041"><para>Lors de la substitution <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> méthode pour forcer la visibilité du contrôle à modifier.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3041"><para>When overriding <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> method to force the visibility of the control to change.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="control.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3042">Affiche le contrôle à l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3042">Displays the control to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3043">L’affichage du contrôle revient à affecter la <xref:System.Windows.Forms.Control.Visible%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3043">Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="d11f7-3044">Après le <xref:System.Windows.Forms.Control.Show%2A> méthode est appelée, le <xref:System.Windows.Forms.Control.Visible%2A> propriété retourne une valeur de `true` jusqu'à ce que le <xref:System.Windows.Forms.Control.Hide%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3044">After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3045">Le code suivant exemple affiche une sur la boîte de dialogue et dessine temporairement un carré bleu sur sa surface.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3045">The following code example displays an about dialog box and temporarily draws a blue square on its surface.</span></span> <span data-ttu-id="d11f7-3046">Cet exemple nécessite que vous avez défini une classe qui dérive de <xref:System.Windows.Forms.Form> nommé `AboutDialog`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3046">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#1)]
 [!code-vb[Windows.Forms.Control Members2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="ShowFocusCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowFocusCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFocusCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowFocusCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowFocusCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowFocusCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowFocusCues : bool" Usage="System.Windows.Forms.Control.ShowFocusCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3047">Obtient une valeur indiquant si le contrôle doit afficher des rectangles de focus.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3047">Gets a value indicating whether the control should display focus rectangles.</span></span></summary>
        <value><span data-ttu-id="d11f7-3048"><see langword="true" /> si le contrôle doit afficher des rectangles de focus ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3048"><see langword="true" /> if the control should display focus rectangles; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3049">Pour plus d’informations sur cette fonctionnalité, consultez le[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)et le [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)rubriques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3049">For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)topics.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3050"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3050"><para>When overriding the <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property to extend the base implementation. Otherwise, you must provide all the implementation.</para></span></span></block>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3051">Obtient une valeur indiquant si l'interface utilisateur est dans un état qui permet d'afficher ou de masquer les accélérateurs clavier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3051">Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</span></span></summary>
        <value><span data-ttu-id="d11f7-3052"><see langword="true" /> si les accélérateurs clavier sont visibles ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3052"><see langword="true" /> if the keyboard accelerators are visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3053">Dans les contrôles créés dans le Concepteur Windows Forms, les accélérateurs clavier sont visibles par défaut.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3053">In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</span></span>  
  
 <span data-ttu-id="d11f7-3054">Pour plus d’informations sur cette fonctionnalité, consultez le[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)et le [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)rubriques.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3054">For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx)topics.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowFocusCues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Windows.Forms.Control.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3055">Obtient ou définit le site du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3055">Gets or sets the site of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-3056"><see cref="T:System.ComponentModel.ISite" /> éventuellement associé à <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3056">The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ISite" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3057">Obtient ou définit la hauteur et la largeur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3057">Gets or sets the height and width of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-3058"><see cref="T:System.Drawing.Size" /> qui représente la hauteur et la largeur du contrôle en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3058">The <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3059">Étant donné que le <xref:System.Drawing.Size> classe est un type valeur (`Structure` en Visual Basic, `struct` en Visual c#), elle est retournée par valeur, ce qui signifie que l’accès à la propriété retourne une copie de la taille du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3059">Because the <xref:System.Drawing.Size> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</span></span> <span data-ttu-id="d11f7-3060">Ainsi, l’ajustement le <xref:System.Drawing.Size.Width%2A> ou <xref:System.Drawing.Size.Height%2A> propriétés de la <xref:System.Drawing.Size> retourné par cette propriété n’affecte pas la <xref:System.Windows.Forms.Control.Width%2A> ou <xref:System.Windows.Forms.Control.Height%2A> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3060">So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control.</span></span> <span data-ttu-id="d11f7-3061">Pour ajuster le <xref:System.Windows.Forms.Control.Width%2A> ou <xref:System.Windows.Forms.Control.Height%2A> du contrôle, vous devez définir le contrôle <xref:System.Windows.Forms.Control.Width%2A> ou <xref:System.Windows.Forms.Control.Height%2A> propriété, ou un jeu le <xref:System.Windows.Forms.Control.Size%2A> propriété avec un nouveau <xref:System.Drawing.Size>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3061">To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-3062">Pour maintenir des performances optimales, ne définissez pas la <xref:System.Drawing.Size> d’un contrôle dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3062">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="d11f7-3063">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.Control.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3063">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-3064">Sur les systèmes Windows Server 2003, la taille d’un <xref:System.Windows.Forms.Form> est limité par la largeur en pixels maximal et la hauteur de l’analyse.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3064">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3065">L’exemple de code suivant ajoute un <xref:System.Windows.Forms.Button> à un formulaire et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3065">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-3066">L’exemple ancre le bouton dans l’angle inférieur droit du formulaire afin qu’il conserve sa position relative à mesure que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3066">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="d11f7-3067">Il définit ensuite la <xref:System.Windows.Forms.Control.BackgroundImage%2A> et redimensionne le bouton à la même taille que le <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3067">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-3068">L’exemple définit ensuite la <xref:System.Windows.Forms.Control.TabStop%2A> à `true` et définit le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3068">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="d11f7-3069">Enfin, il ajoute un gestionnaire d’événements pour gérer le <xref:System.Windows.Forms.Control.Click> événements du bouton.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3069">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="d11f7-3070">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.ImageList> nommé `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3070">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3071">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Size" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3071">Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3072">Il est préférable d’utiliser le <xref:System.Windows.Forms.Control.Layout> événement à gérer des dispositions personnalisées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3072">It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts.</span></span> <span data-ttu-id="d11f7-3073">Le <xref:System.Windows.Forms.Control.Layout> événement est déclenché en réponse à <xref:System.Windows.Forms.Control.Resize> événements, mais également dans d’autres conditions lors de la mise en page doit être appliquée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3073">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.</span></span>  
  
 <span data-ttu-id="d11f7-3074">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Size%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3074">This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3075">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3075">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3076">L’exemple de code suivant montre le <xref:System.Windows.Forms.Control.SizeChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3076">The following code example demonstrates the <xref:System.Windows.Forms.Control.SizeChanged> event.</span></span> <span data-ttu-id="d11f7-3077">Une instance d’un <xref:System.Windows.Forms.Button> contrôle a été fournie, qui peut être mis à l’échelle horizontalement et verticalement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3077">An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically.</span></span> <span data-ttu-id="d11f7-3078">Un <xref:System.Windows.Forms.NumericUpDown> instance fournit la valeur d’échelle horizontale et verticale.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3078">A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value.</span></span> <span data-ttu-id="d11f7-3079">Le <xref:System.Windows.Forms.Button> instance nommée **OK** est utilisé pour définir les valeurs d’échelle pour le <xref:System.Windows.Forms.Button> instance de contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3079">The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance.</span></span> <span data-ttu-id="d11f7-3080">Chaque fois que la taille du contrôle change, le Gestionnaire d’événements associé à la <xref:System.Windows.Forms.Control.SizeChanged> événement du contrôle est appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3080">Whenever the size of the control changes, the event handler associated with the <xref:System.Windows.Forms.Control.SizeChanged> event of the control is called.</span></span> <span data-ttu-id="d11f7-3081">Ce gestionnaire d’événements affiche un message indiquant que la taille du contrôle a changé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3081">This event handler displays a message box indicating that the size of the control has changed.</span></span>  
  
 [!code-cpp[Control_Scale1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Scale1/CPP/control_scale1.cpp#2)]
 [!code-csharp[Control_Scale1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Scale1/CS/control_scale1.cs#2)]
 [!code-vb[Control_Scale1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Scale1/VB/control_scale1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="SizeFromClientSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size SizeFromClientSize(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SizeFromClientSize (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size SizeFromClientSize(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="abstract member SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.SizeFromClientSize clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="clientSize"><span data-ttu-id="d11f7-3082">Valeur <see cref="T:System.Drawing.Size" /> représentant la hauteur et la largeur de la zone cliente du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3082">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the control's client area.</span></span></param>
        <summary><span data-ttu-id="d11f7-3083">Détermine la taille de l'ensemble du contrôle à partir de la hauteur et de la largeur de sa zone cliente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3083">Determines the size of the entire control from the height and width of its client area.</span></span></summary>
        <returns><span data-ttu-id="d11f7-3084">Valeur <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur de l'ensemble du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3084">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the entire control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3085">Se produit quand le style du contrôle change.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3085">Occurs when the control style changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3086">Le <xref:System.Windows.Forms.Control.StyleChanged> événement se produit lorsque <xref:System.Windows.Forms.ControlStyles> indicateurs ont été ajoutés ou modifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3086">The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.</span></span>  
  
 <span data-ttu-id="d11f7-3087">Cet événement est déclenché si le style du contrôle est modifié par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3087">This event is raised if the control style is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3088">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3088">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3089">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3089">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-3090">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.StyleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3090">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span> <span data-ttu-id="d11f7-3091">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3091">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-3092">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3092">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-3093">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3093">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-3094">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.StyleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3094">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#68)]
 [!code-vb[System.Windows.Forms.EventExamples#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#68)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SuspendLayout">
      <MemberSignature Language="C#" Value="public void SuspendLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SuspendLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendLayout();" />
      <MemberSignature Language="F#" Value="member this.SuspendLayout : unit -&gt; unit" Usage="control.SuspendLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3095">Interrompt temporairement la logique de présentation du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3095">Temporarily suspends the layout logic for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3096">La logique de disposition du contrôle est suspendue jusqu'à ce que le <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3096">The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.</span></span>  
  
 <span data-ttu-id="d11f7-3097">Le <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes sont utilisées en tandem pour supprimer plusieurs <xref:System.Windows.Forms.Control.Layout> événements lorsque vous ajustez plusieurs attributs du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3097">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="d11f7-3098">Par exemple, vous appelez généralement la <xref:System.Windows.Forms.Control.SuspendLayout%2A> (méthode), puis définissez le <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A> propriétés du contrôle et puis appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthode pour permettre les modifications prennent effet.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3098">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="d11f7-3099">Il ne doit y avoir aucun appel en attente <xref:System.Windows.Forms.Control.SuspendLayout%2A> pour <xref:System.Windows.Forms.Control.ResumeLayout%2A> puisse être appelé avec succès.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3099">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d11f7-3100">Lorsque vous ajoutez plusieurs contrôles à un contrôle parent, il est recommandé d’appeler le <xref:System.Windows.Forms.Control.SuspendLayout%2A> méthode avant d’initialiser les contrôles à ajouter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3100">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="d11f7-3101">Après avoir ajouté les contrôles au contrôle parent, appelez le <xref:System.Windows.Forms.Control.ResumeLayout%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3101">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="d11f7-3102">Cela augmente les performances des applications avec de nombreux contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3102">This will increase the performance of applications with many controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3103">L’exemple de code suivant ajoute deux boutons à un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3103">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="d11f7-3104">Les transactions de l’exemple l’ajout des boutons à l’aide de la <xref:System.Windows.Forms.Control.SuspendLayout%2A> et <xref:System.Windows.Forms.Control.ResumeLayout%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3104">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (drgEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="d11f7-3105"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3105">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-3106">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragDrop" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3106">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (drgEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="d11f7-3107"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3107">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-3108">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3108">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="d11f7-3109"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3109">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-3110">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3110">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (drgEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="d11f7-3111"><see cref="T:System.Windows.Forms.DragEventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3111">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="d11f7-3112">Déclenche l'événement <see cref="E:System.Windows.Forms.Control.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3112">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SystemColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SystemColorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SystemColorsChanged;" />
      <MemberSignature Language="F#" Value="member this.SystemColorsChanged : EventHandler " Usage="member this.SystemColorsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3113">Se produit quand les couleurs système changent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3113">Occurs when the system colors change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3114">Cet événement est déclenché si la <xref:System.Drawing.SystemColors> est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3114">This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3115">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3115">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3116">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3116">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-3117">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.SystemColorsChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3117">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span> <span data-ttu-id="d11f7-3118">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3118">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-3119">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3119">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-3120">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3120">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-3121">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.SystemColorsChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3121">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#69)]
 [!code-vb[System.Windows.Forms.EventExamples#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#69)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Control.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3122">Obtient ou définit l'ordre de tabulation du contrôle dans son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3122">Gets or sets the tab order of the control within its container.</span></span></summary>
        <value><span data-ttu-id="d11f7-3123">Valeur d'index du contrôle dans le jeu de contrôles de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3123">The index value of the control within the set of controls within its container.</span></span> <span data-ttu-id="d11f7-3124">Les contrôles du conteneur sont inclus dans l'ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3124">The controls in the container are included in the tab order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3125">Un index de tabulation peut contenir un entier valide supérieur ou égal à zéro, les nombres inférieurs étant plus haut dans l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3125">A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</span></span> <span data-ttu-id="d11f7-3126">Si plusieurs contrôles sur le même contrôle parent a le même index de tabulation, l’ordre de plan des contrôles détermine l’ordre pour faire défiler les contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3126">If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</span></span>  
  
 <span data-ttu-id="d11f7-3127">Pour un contrôle à inclure dans l’ordre de tabulation, sa <xref:System.Windows.Forms.Control.TabStop%2A> propriété doit être définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3127">For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3128">L’exemple de code suivant ajoute un <xref:System.Windows.Forms.Button> à un formulaire et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3128">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-3129">L’exemple ancre le bouton dans l’angle inférieur droit du formulaire afin qu’il conserve sa position relative à mesure que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3129">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="d11f7-3130">Il définit ensuite la <xref:System.Windows.Forms.Control.BackgroundImage%2A> et redimensionne le bouton à la même taille que le <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3130">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-3131">L’exemple définit ensuite la <xref:System.Windows.Forms.Control.TabStop%2A> à `true` et définit le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3131">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="d11f7-3132">Enfin, il ajoute un gestionnaire d’événements pour gérer le <xref:System.Windows.Forms.Control.Click> événements du bouton.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3132">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="d11f7-3133">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.ImageList> nommé `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3133">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3134">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.TabIndex" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3134">Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3135">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3135">This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3136">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3136">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3137">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3137">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-3138">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.TabIndexChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3138">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span> <span data-ttu-id="d11f7-3139">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3139">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-3140">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3140">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-3141">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3141">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-3142">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.TabIndexChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3142">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#25)]
 [!code-vb[System.Windows.Forms.EventExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Control.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3143">Obtient ou définit une valeur indiquant si l'utilisateur peut donner le focus à ce contrôle à l'aide de la touche Tab.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3143">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span></span></summary>
        <value><span data-ttu-id="d11f7-3144"><see langword="true" /> si l'utilisateur peut donner le focus au contrôle avec la touche TAB ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3144"><see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-3145">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3145">The default is <see langword="true" />.</span></span>  
  
 <span data-ttu-id="d11f7-3146"><block subset="none" type="note"><para> Cette propriété retourne toujours <see langword="true" /> d’une instance de la <see cref="T:System.Windows.Forms.Form" /> classe.  </para></block></span><span class="sxs-lookup"><span data-stu-id="d11f7-3146"><block subset="none" type="note"><para> This property will always return <see langword="true" /> for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.  </para></block></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3147">Lorsque l’utilisateur appuie sur la touche TAB, le focus d’entrée est défini sur le contrôle suivant dans l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3147">When the user presses the TAB key, the input focus is set to the next control in the tab order.</span></span> <span data-ttu-id="d11f7-3148">Contrôle avec le <xref:System.Windows.Forms.Control.TabStop%2A> valeur de propriété de `false` ne sont pas inclus dans la collection de contrôles dans l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3148">Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order.</span></span> <span data-ttu-id="d11f7-3149">L’ordre de tabulation peut être manipulé en définissant le contrôle <xref:System.Windows.Forms.Control.TabIndex%2A> valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3149">The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3150">L’exemple de code suivant ajoute un <xref:System.Windows.Forms.Button> à un formulaire et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3150">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-3151">L’exemple ancre le bouton dans l’angle inférieur droit du formulaire afin qu’il conserve sa position relative à mesure que le formulaire est redimensionné.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3151">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="d11f7-3152">Il définit ensuite la <xref:System.Windows.Forms.Control.BackgroundImage%2A> et redimensionne le bouton à la même taille que le <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3152">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="d11f7-3153">L’exemple définit ensuite la <xref:System.Windows.Forms.Control.TabStop%2A> à `true` et définit le <xref:System.Windows.Forms.Control.TabIndex%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3153">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="d11f7-3154">Enfin, il ajoute un gestionnaire d’événements pour gérer le <xref:System.Windows.Forms.Control.Click> événements du bouton.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3154">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="d11f7-3155">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.ImageList> nommé `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3155">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3156">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.TabStop" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3156">Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3157">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.TabStop%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3157">This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3158">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3158">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3159">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3159">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="d11f7-3160">Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.Control.TabStopChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3160">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span> <span data-ttu-id="d11f7-3161">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3161">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="d11f7-3162">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3162">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="d11f7-3163">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3163">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="d11f7-3164">Ensuite, nommez l’instance `Control1` et vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.TabStopChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3164">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#26)]
 [!code-vb[System.Windows.Forms.EventExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Control.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3165">Obtient ou définit l'objet qui contient les données relatives au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3165">Gets or sets the object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-3166"><see cref="T:System.Object" /> qui contient les données relatives au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3166">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="d11f7-3167">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3167">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3168">N’importe quel type dérivé de la <xref:System.Object> classe peut être assignée à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3168">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="d11f7-3169">Si la <xref:System.Windows.Forms.Control.Tag%2A> est définie par le biais du Concepteur Windows Forms, peut avoir que du texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3169">If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="d11f7-3170">Une utilisation courante pour le <xref:System.Windows.Forms.Control.Tag%2A> propriété consiste à stocker des données qui sont étroitement associées au contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3170">A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="d11f7-3171">Par exemple, si vous avez un contrôle qui affiche des informations sur un client, vous pouvez stocker un <xref:System.Data.DataSet> qui contient l’historique de commande du client dans ce contrôle <xref:System.Windows.Forms.Control.Tag%2A> afin d’accéder rapidement les données de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3171">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3172">L’exemple de code suivant affiche un formulaire et stocke un `Customer` dans son <xref:System.Windows.Forms.Control.Tag%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3172">The following code example displays a form and stores a `Customer` in its <xref:System.Windows.Forms.Control.Tag%2A> property.</span></span> <span data-ttu-id="d11f7-3173">Cet exemple nécessite que vous avez défini une classe qui dérive de <xref:System.Windows.Forms.Form> nommé `CustomerForm` et que vous avez défini un `Customer`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3173">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#3)]
 [!code-vb[Windows.Forms.Control Members2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Control.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3174">Obtient ou définit le texte associé à ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3174">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="d11f7-3175">Texte associé à ce contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3175">The text associated with this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3176">Le <xref:System.Windows.Forms.Control.Text%2A> propriété du contrôle est utilisée différemment par chaque classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3176">The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class.</span></span> <span data-ttu-id="d11f7-3177">Par exemple le <xref:System.Windows.Forms.Control.Text%2A> propriété d’un <xref:System.Windows.Forms.Form> s’affiche dans la barre de titre en haut du formulaire, est relativement faible de nombre de caractères et affiche généralement le nom de l’application ou le document.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3177">For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</span></span> <span data-ttu-id="d11f7-3178">Toutefois, le <xref:System.Windows.Forms.Control.Text%2A> propriété d’un <xref:System.Windows.Forms.RichTextBox> peuvent être volumineux et peuvent inclure de nombreux caractères invisibles utilisés pour mettre en forme le texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3178">However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text.</span></span> <span data-ttu-id="d11f7-3179">Par exemple, le texte affiché dans un <xref:System.Windows.Forms.RichTextBox> peut être mis en forme en ajustant la <xref:System.Drawing.Font> propriétés, ou par l’ajout d’espaces ou des caractères de tabulation pour aligner le texte.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3179">For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3180">L’exemple de code suivant crée un <xref:System.Windows.Forms.GroupBox> et définit certaines de ses propriétés communes.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3180">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="d11f7-3181">L’exemple crée un <xref:System.Windows.Forms.TextBox> et définit ses <xref:System.Windows.Forms.Control.Location%2A> dans la zone de groupe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3181">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="d11f7-3182">Ensuite, il définit le <xref:System.Windows.Forms.Control.Text%2A> propriété de la zone de groupe et s’ancre le groupe de zone en haut du formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3182">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="d11f7-3183">Enfin, il désactive la zone de groupe en définissant le <xref:System.Windows.Forms.Control.Enabled%2A> propriété `false`, ce qui entraîne tous les contrôles contenus dans la zone de groupe doit être désactivée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3183">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3184"><para>Lors du remplacement de la <see cref="P:System.Windows.Forms.Control.Text" /> propriété dans une classe dérivée, utilisez la classe de base <see cref="P:System.Windows.Forms.Control.Text" /> propriété pour étendre l’implémentation de base. Sinon, vous devez fournir toute l’implémentation. Vous n’êtes pas obligé de substituer les deux le <see langword="get" /> et <see langword="set" /> accesseurs de la <see cref="P:System.Windows.Forms.Control.Text" /> propriété ; vous pouvez substituer un seul si nécessaire.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3184"><para>When overriding the <see cref="P:System.Windows.Forms.Control.Text" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Text" /> property to extend the base implementation. Otherwise, you must provide all the implementation. You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Text" /> property; you can override only one if needed.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3185">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Text" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3185">Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3186">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Text%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3186">This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3187">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3187">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3188">Le code suivant exemple modifie le <xref:System.Windows.Forms.Control.ForeColor%2A> d’un <xref:System.Windows.Forms.TextBox> affichage des données de devise.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3188">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="d11f7-3189">L’exemple convertit le texte en nombre décimal et modifications le <xref:System.Windows.Forms.Control.ForeColor%2A> à <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si le nombre est négatif et à <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si le nombre est positif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3189">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="d11f7-3190">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui contient un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3190">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="System.Windows.Forms.Control.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3191">Obtient ou définit la distance, en pixels, entre le bord supérieur du contrôle et le bord supérieur de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3191">Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="d11f7-3192"><see cref="T:System.Int32" /> représentant la distance, en pixels, entre le bord inférieur du contrôle et le bord supérieur de la zone cliente de son conteneur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3192">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3193">Le <xref:System.Windows.Forms.Control.Top%2A> valeur de propriété est équivalente à la <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> propriété de la <xref:System.Windows.Forms.Control.Location%2A> valeur de la propriété du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3193">The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="d11f7-3194">Modifications apportées à la <xref:System.Windows.Forms.Control.Height%2A> et <xref:System.Windows.Forms.Control.Top%2A> cause de valeurs de propriété du <xref:System.Windows.Forms.Control.Bottom%2A> valeur de la propriété du contrôle à modifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3194">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3195">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3195">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-3196">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3196">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.Y" />
        <altmember cref="P:System.Windows.Forms.Control.Bottom" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control TopLevelControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control TopLevelControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TopLevelControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ TopLevelControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.TopLevelControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3197">Obtient le contrôle parent n'ayant pas d'autre contrôle parent Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3197">Gets the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="d11f7-3198">En règle générale, il s'agit du <see cref="T:System.Windows.Forms.Form" /> le plus à l'extérieur dans lequel le contrôle est contenu.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3198">Typically, this is the outermost <see cref="T:System.Windows.Forms.Form" /> that the control is contained in.</span></span></summary>
        <value><span data-ttu-id="d11f7-3199"><see cref="T:System.Windows.Forms.Control" /> qui représente le contrôle du niveau le plus élevé qui contient le contrôle actif.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3199">The <see cref="T:System.Windows.Forms.Control" /> that represents the top-level control that contains the current control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3200">Le contrôle de niveau supérieur est défini comme le contrôle parent qui n’est pas apparenté à un autre contrôle Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3200">The top-level control is defined as the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="d11f7-3201">En règle générale, il s'agit du <xref:System.Windows.Forms.Form> le plus à l'extérieur dans lequel le contrôle est contenu.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3201">Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in.</span></span> <span data-ttu-id="d11f7-3202">Par exemple, si le contrôle est contenu dans un enfant MDI <xref:System.Windows.Forms.Form>, puis le contrôle de niveau supérieur est le parent de l’Interface multidocument (MDI, Multiple Document Interface) <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3202">For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="d11f7-3203">Si le contrôle n’est pas apparenté à un <xref:System.Windows.Forms.Form>, cette propriété retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3203">If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="d11f7-3204">pour toutes les fenêtres obtenir cette valeur de propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3204">for all windows to get this property value.</span></span> <span data-ttu-id="d11f7-3205">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="d11f7-3205">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="control.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3206">Force le contrôle à redessiner les zones invalidées dans sa zone cliente.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3206">Causes the control to redraw the invalidated regions within its client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3207">Exécute toutes les demandes en attente pour la peinture.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3207">Executes any pending requests for painting.</span></span>  
  
 <span data-ttu-id="d11f7-3208">Il existe deux façons de repeindre un formulaire et son contenu :</span><span class="sxs-lookup"><span data-stu-id="d11f7-3208">There are two ways to repaint a form and its contents:</span></span>  
  
-   <span data-ttu-id="d11f7-3209">Vous pouvez utiliser l’une des surcharges de la <xref:System.Windows.Forms.Control.Invalidate%2A> méthode avec le <xref:System.Windows.Forms.Control.Update%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3209">You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
-   <span data-ttu-id="d11f7-3210">Vous pouvez appeler la <xref:System.Windows.Forms.Control.Refresh%2A> (méthode), ce qui force le contrôle à redessiner lui-même et tous ses enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3210">You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children.</span></span> <span data-ttu-id="d11f7-3211">Cela revient à affecter la <xref:System.Windows.Forms.Control.Invalidate%2A> méthode `true` et son utilisation avec <xref:System.Windows.Forms.Control.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3211">This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.</span></span>  
  
 <span data-ttu-id="d11f7-3212">Le <xref:System.Windows.Forms.Control.Invalidate%2A> méthode régit les peindre ou à repeindre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3212">The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted.</span></span> <span data-ttu-id="d11f7-3213">Le <xref:System.Windows.Forms.Control.Update%2A> méthode régit lors de l’opération doit se produire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3213">The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs.</span></span> <span data-ttu-id="d11f7-3214">Si vous utilisez le <xref:System.Windows.Forms.Control.Invalidate%2A> et <xref:System.Windows.Forms.Control.Update%2A> ensemble au lieu d’appeler des méthodes <xref:System.Windows.Forms.Control.Refresh%2A>, ce qui doit être repeint dépend de quelle surcharge de <xref:System.Windows.Forms.Control.Invalidate%2A> vous utilisez.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3214">If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use.</span></span> <span data-ttu-id="d11f7-3215">Le <xref:System.Windows.Forms.Control.Update%2A> méthode force simplement le contrôle à peindre immédiatement, mais la <xref:System.Windows.Forms.Control.Invalidate%2A> méthode régit que peint lorsque vous appelez le <xref:System.Windows.Forms.Control.Update%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3215">The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
 <span data-ttu-id="d11f7-3216">Pour plus d’informations, consultez le[WM_PAINT](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3216">For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx)topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d11f7-3217">Met à jour les limites du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3217">Updates the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected internal void UpdateBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void UpdateBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub UpdateBounds ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void UpdateBounds();" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : unit -&gt; unit" Usage="control.UpdateBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3218">Met à jour les limites du contrôle avec l'emplacement et la taille actuels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3218">Updates the bounds of the control with the current size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3219">Si la nouvelle <xref:System.Windows.Forms.Control.Size%2A> du contrôle est différent du précédent <xref:System.Drawing.Size>, le <xref:System.Windows.Forms.Control.SizeChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3219">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="d11f7-3220">De même, si le <xref:System.Windows.Forms.Control.Location%2A> du contrôle change, le <xref:System.Windows.Forms.Control.LocationChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3220">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-3221">Coordonnée <see cref="P:System.Drawing.Point.X" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3221">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-3222">Coordonnée <see cref="P:System.Drawing.Point.Y" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3222">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-3223"><see cref="P:System.Drawing.Size.Width" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3223">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-3224"><see cref="P:System.Drawing.Size.Height" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3224">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-3225">Met à jour les limites du contrôle avec la taille et l'emplacement spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3225">Updates the bounds of the control with the specified size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3226">Si la nouvelle <xref:System.Windows.Forms.Control.Size%2A> du contrôle s’il est différent du précédent <xref:System.Drawing.Size>, le <xref:System.Windows.Forms.Control.SizeChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3226">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="d11f7-3227">De même, est la <xref:System.Windows.Forms.Control.Location%2A> du contrôle change, le <xref:System.Windows.Forms.Control.LocationChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3227">Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height, int32 clientWidth, int32 clientHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer, clientWidth As Integer, clientHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height, clientWidth, clientHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="clientWidth" Type="System.Int32" />
        <Parameter Name="clientHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="d11f7-3228">Coordonnée <see cref="P:System.Drawing.Point.X" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3228">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="d11f7-3229">Coordonnée <see cref="P:System.Drawing.Point.Y" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3229">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="d11f7-3230"><see cref="P:System.Drawing.Size.Width" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3230">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="d11f7-3231"><see cref="P:System.Drawing.Size.Height" /> du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3231">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <param name="clientWidth"><span data-ttu-id="d11f7-3232"><see cref="P:System.Drawing.Size.Width" /> du client du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3232">The client <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="clientHeight"><span data-ttu-id="d11f7-3233"><see cref="P:System.Drawing.Size.Height" /> du client du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3233">The client <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="d11f7-3234">Met à jour les limites du contrôle avec la taille, l'emplacement et la taille de client spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3234">Updates the bounds of the control with the specified size, location, and client size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3235">Si la nouvelle <xref:System.Windows.Forms.Control.Size%2A> du contrôle est différent du précédent <xref:System.Drawing.Size>, le <xref:System.Windows.Forms.Control.SizeChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3235">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="d11f7-3236">De même, si le <xref:System.Windows.Forms.Control.Location%2A> du contrôle change, le <xref:System.Windows.Forms.Control.LocationChanged> événement est déclenché.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3236">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
      </Docs>
    </Member>
    <Member MemberName="UpdateStyles">
      <MemberSignature Language="C#" Value="protected void UpdateStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateStyles : unit -&gt; unit" Usage="control.UpdateStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3237">Force la réapplication au contrôle des styles assignés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3237">Forces the assigned styles to be reapplied to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3238">Cette méthode appelle la <xref:System.Windows.Forms.Control.CreateParams%2A> méthode pour obtenir les styles à appliquer.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3238">This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply.</span></span> <span data-ttu-id="d11f7-3239">Les styles assignés à la <xref:System.Windows.Forms.CreateParams.Style%2A> et <xref:System.Windows.Forms.CreateParams.ExStyle%2A> propriétés de la <xref:System.Windows.Forms.CreateParams> assigné au contrôle <xref:System.Windows.Forms.Control.CreateParams%2A> propriété sont réappliquées.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3239">The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied.</span></span> <span data-ttu-id="d11f7-3240">Le contrôle est redessiné pour refléter les modifications de style si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3240">The control is repainted to reflect the style changes if necessary.</span></span>  
  
 <span data-ttu-id="d11f7-3241">Le <xref:System.Windows.Forms.Control.UpdateStyles%2A> méthode n’a aucun effet si le <xref:System.Windows.Forms.Control.IsHandleCreated%2A> valeur de propriété est `false`.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3241">The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3242">L’exemple de code suivant active la double mise en mémoire tampon sur un <xref:System.Windows.Forms.Form> et met à jour les styles pour refléter les modifications.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3242">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="UpdateZOrder">
      <MemberSignature Language="C#" Value="protected void UpdateZOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateZOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateZOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateZOrder ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateZOrder();" />
      <MemberSignature Language="F#" Value="member this.UpdateZOrder : unit -&gt; unit" Usage="control.UpdateZOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d11f7-3243">Met à jour le contrôle dans l'ordre de plan de son parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3243">Updates the control in its parent's z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3244">Le <xref:System.Windows.Forms.Control.UpdateZOrder%2A> méthode met à jour la position du contrôle dans l’ordre de plan de son contrôle parent.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3244">The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order.</span></span> <span data-ttu-id="d11f7-3245">Par exemple, si ce contrôle est nouvellement créés pour contrôler qui a été ajouté à un <xref:System.Windows.Forms.Control.ControlCollection>, l’ordre de plan est mis à jour avec le nouveau contrôle ajouté à l’arrière.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3245">For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="UseWaitCursor">
      <MemberSignature Language="C#" Value="public bool UseWaitCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWaitCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.UseWaitCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseWaitCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWaitCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseWaitCursor : bool with get, set" Usage="System.Windows.Forms.Control.UseWaitCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3246">Obtient ou définit une valeur indiquant s'il faut utiliser le curseur d'attente pour le contrôle actuel et tous les contrôles enfants.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3246">Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</span></span></summary>
        <value><span data-ttu-id="d11f7-3247"><see langword="true" /> pour utiliser le curseur d'attente du contrôle actuel et tous les contrôles enfants ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3247"><see langword="true" /> to use the wait cursor for the current control and all child controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-3248">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3248">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3249">Utilisez un curseur d’attente chaque fois que vous effectuez une opération qui prend un certain temps. Toutefois, notez que les opérations qui bloquent le thread d’interface utilisateur pour bloquer également acursor modification. Par conséquent, cette propriété doit uniquement être utilisée lors de l’exécution des opérations de longue durée dans un autre thread.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3249">Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.However, note that operations that block the UI thread will also block acursor change.Therefore, this property should only be used when performing time-consuming operations in another thread.</span></span> <span data-ttu-id="d11f7-3250">Pour modifier le curseur dans le monde entier et immédiatement, voir le <xref:System.Windows.Forms.Cursor.Current%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3250">To change the cursor globally and immediately, seethe <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberSignature Language="F#" Value="member this.Validated : EventHandler " Usage="member this.Validated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3251">Se produit quand le contrôle a terminé la validation.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3251">Occurs when the control is finished validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3252">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-3252">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-3253">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-3253">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-3254">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3254">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-3255">Si le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.ComponentModel.CancelEventArgs> a la valeur `true` dans le <xref:System.Windows.Forms.Control.Validating> délégué d’événement, tous les événements qui seraient produit généralement après la <xref:System.Windows.Forms.Control.Validating> événement sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3255">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-3256">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3256">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-3257">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3257">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-3258">Pour plus d’informations, consultez le[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)rubrique et la section « Messages Deadlocks » de la [sur les Messages et les files d’attente](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) rubrique.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3258">For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)topic, and the "Message Deadlocks" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="d11f7-3259">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3259">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3260">L’exemple de code suivant utilise la classe dérivée <xref:System.Windows.Forms.TextBox> et valide une adresse de messagerie entrée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3260">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="d11f7-3261">Si l’adresse de messagerie n’est pas au format standard (contenant «@" and ". »), la validation échoue, une <xref:System.Windows.Forms.ErrorProvider> icône s’affiche, et l’événement est annulé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3261">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="d11f7-3262">Cet exemple suppose qu’un <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.ErrorProvider> contrôle ont été créées sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3262">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberSignature Language="F#" Value="member this.Validating : System.ComponentModel.CancelEventHandler " Usage="member this.Validating : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3263">Se produit lors de la validation du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3263">Occurs when the control is validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3264">Lorsque vous modifiez le focus à l’aide du clavier (onglet, MAJ + TAB et ainsi de suite), en appelant le <xref:System.Windows.Forms.Control.Select%2A> ou <xref:System.Windows.Forms.Control.SelectNextControl%2A> méthodes, ou en définissant le <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propriété au formulaire actuel, le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-3264">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="d11f7-3265">Lorsque vous modifiez le focus à l’aide de la souris ou en appelant le <xref:System.Windows.Forms.Control.Focus%2A> (méthode), le focus se produisent dans l’ordre suivant :</span><span class="sxs-lookup"><span data-stu-id="d11f7-3265">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="d11f7-3266">Si le <xref:System.Windows.Forms.Control.CausesValidation%2A> propriété est définie sur `false`, le <xref:System.Windows.Forms.Control.Validating> et <xref:System.Windows.Forms.Control.Validated> les événements sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3266">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="d11f7-3267">Si le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété de la <xref:System.ComponentModel.CancelEventArgs> a la valeur `true` dans le <xref:System.Windows.Forms.Control.Validating> délégué d’événement, tous les événements qui seraient produit généralement après la <xref:System.Windows.Forms.Control.Validating> événement sont supprimés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3267">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d11f7-3268">N’essayez pas de définir le focus depuis le <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, ou <xref:System.Windows.Forms.Control.Validated> gestionnaires d’événements.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3268">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="d11f7-3269">Cela peut entraîner votre application ou le système d’exploitation cesse de répondre.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3269">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="d11f7-3270">Pour plus d’informations, consultez le `WM_KILLFOCUS` rubrique dans la section « Référence d’entrée de clavier » et la section « Messages Deadlocks » de la rubrique « Sur les Messages et files d’attente » dans MSDN library à le http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3270">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="d11f7-3271">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3271">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3272">L’exemple de code suivant utilise la classe dérivée <xref:System.Windows.Forms.TextBox> et valide une adresse de messagerie entrée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3272">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="d11f7-3273">Si l’adresse de messagerie n’est pas au format standard (contenant «@" and ". »), la validation échoue, une <xref:System.Windows.Forms.ErrorProvider> icône s’affiche, et l’événement est annulé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3273">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="d11f7-3274">Cet exemple suppose qu’un <xref:System.Windows.Forms.TextBox> et <xref:System.Windows.Forms.ErrorProvider> contrôle ont été créées sur un formulaire.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3274">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3275">Obtient ou définit une valeur indiquant si le contrôle et tous ses contrôles enfants sont affichés.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3275">Gets or sets a value indicating whether the control and all its child controls are displayed.</span></span></summary>
        <value><span data-ttu-id="d11f7-3276"><see langword="true" /> si le contrôle et tous ses contrôles enfants sont affichés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3276"><see langword="true" /> if the control and all its child controls are displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d11f7-3277">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3277">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3278">Notez que même si `Visible` est défini sur `true`, le contrôle ne peut pas être visible par l’utilisateur s’il est masqué derrière les autres contrôles.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3278">Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3279">L’exemple de code suivant utilise les classes dérivées <xref:System.Windows.Forms.VScrollBar> et <xref:System.Windows.Forms.HScrollBar> et définit leur <xref:System.Windows.Forms.Control.Visible%2A> les valeurs de propriété, selon la taille d’un <xref:System.Drawing.Image> qui est affiché dans un <xref:System.Windows.Forms.PictureBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3279">The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their <xref:System.Windows.Forms.Control.Visible%2A> property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control.</span></span> <span data-ttu-id="d11f7-3280">Cet exemple suppose qu’un <xref:System.Windows.Forms.PictureBox> a été créé sur un formulaire et que <xref:System.Windows.Forms.HScrollBar> et <xref:System.Windows.Forms.VScrollBar> contrôles ont été créés sur le <xref:System.Windows.Forms.PictureBox>.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3280">This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>.</span></span> <span data-ttu-id="d11f7-3281">Ce code doit être appelé lorsque l’image est chargée dans la zone d’image et par le <xref:System.Windows.Forms.Control.Resize> événement sous la forme.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3281">This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.</span></span>  
  
 [!code-cpp[Classic Control.Visible Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.Visible Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.Visible Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.Visible Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Visible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.Visible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3282">Se produit lorsque la valeur de la propriété <see cref="P:System.Windows.Forms.Control.Visible" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3282">Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3283">Cet événement est déclenché si le <xref:System.Windows.Forms.Control.Visible%2A> propriété est modifiée par une modification par programme ou une interaction utilisateur.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3283">This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="d11f7-3284">Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3284">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3285">Le code suivant exemple déclenche le <xref:System.Windows.Forms.Control.VisibleChanged> événement lorsque la <xref:System.Windows.Forms.Control.Visible%2A> valeur de propriété de la <xref:System.Windows.Forms.Label> contrôle a changé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3285">The following code example raises the <xref:System.Windows.Forms.Control.VisibleChanged> event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.</span></span>  
  
 [!code-cpp[Control_VisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_VisibleChanged/CPP/control_visiblechanged.cpp#1)]
 [!code-csharp[Control_VisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_VisibleChanged/CS/control_visiblechanged.cs#1)]
 [!code-vb[Control_VisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_VisibleChanged/VB/control_visiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.Control.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3286">Obtient ou définit la largeur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3286">Gets or sets the width of the control.</span></span></summary>
        <value><span data-ttu-id="d11f7-3287">Largeur du contrôle en pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3287">The width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3288">Modifications apportées à la <xref:System.Windows.Forms.Control.Width%2A> et <xref:System.Windows.Forms.Control.Left%2A> cause de valeurs de propriété du <xref:System.Windows.Forms.Control.Right%2A> valeur de la propriété du contrôle à modifier.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3288">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3289">L’exemple de code suivant crée trois <xref:System.Windows.Forms.Button> contrôle sur un formulaire et définit leur taille et l’emplacement à l’aide de différentes propriétés de taille et de l’emplacement.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3289">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="d11f7-3290">Cet exemple nécessite que vous avez un <xref:System.Windows.Forms.Form> qui a une largeur et une hauteur au moins 300 pixels.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3290">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Drawing.Size.Width" />
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWindowTarget WindowTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.WindowTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTarget As IWindowTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWindowTarget ^ WindowTarget { System::Windows::Forms::IWindowTarget ^ get(); void set(System::Windows::Forms::IWindowTarget ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTarget : System.Windows.Forms.IWindowTarget with get, set" Usage="System.Windows.Forms.Control.WindowTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWindowTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d11f7-3291">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3291">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="d11f7-3292">NativeWindow contenu dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3292">The NativeWindow contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3293">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3293">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="control.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="d11f7-3294"><see cref="T:System.Windows.Forms.Message" /> Windows à traiter.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3294">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="d11f7-3295">Traite les messages Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3295">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d11f7-3296">Tous les messages sont envoyés à la <xref:System.Windows.Forms.Control.WndProc%2A> méthode après avoir été filtrés par le biais du <xref:System.Windows.Forms.Control.PreProcessMessage%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3296">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="d11f7-3297">La méthode <xref:System.Windows.Forms.Control.WndProc%2A> correspond exactement à la fonction `WindowProc` de Windows.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3297">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="d11f7-3298">Pour plus d’informations sur le traitement des messages de Windows, consultez le [fonction WindowProc](http://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="d11f7-3298">For more information about processing Windows messages, see the [WindowProc function](http://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d11f7-3299">L’exemple de code suivant illustre la substitution de la <xref:System.Windows.Forms.Control.WndProc%2A> méthode pour gérer les messages du système d’exploitation identifiés dans le <xref:System.Windows.Forms.Message> structure.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3299">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="d11f7-3300">Le[WM_ACTIVATEAPP](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)message de système d’exploitation est géré dans cet exemple pour savoir quand une autre application devient active.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3300">The[WM_ACTIVATEAPP](http://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx)operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="d11f7-3301">Consultez les rubriques suivantes pour comprendre le disponible <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, et <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> valeurs.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3301">See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="d11f7-3302">Vous trouverez les valeurs de constante dans le fichier d’en-tête de Windows.h.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3302">Actual constant values can be found in the Windows.h header file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d11f7-3303">à l’appelant immédiat d’appeler du code non managé.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3303">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="d11f7-3304">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="d11f7-3304">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><span data-ttu-id="d11f7-3305"><para>Les contrôles qui héritent doivent appeler la classe de base <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> méthode pour traiter les messages qu’elles ne gèrent pas.</para></span><span class="sxs-lookup"><span data-stu-id="d11f7-3305"><para>Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>