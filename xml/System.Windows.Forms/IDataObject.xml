<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IDataObject.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c4e7cff63d5b6c5e96d7cef0d617257a97de4598.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4e7cff63d5b6c5e96d7cef0d617257a97de4598</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Provides a format-independent mechanism for transferring data.</source>
          <target state="translated">Fournit un mécanisme indépendant du format destiné au transfert de données.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>The <ph id="ph1">`IDataObject`</ph> interface is used by the <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class and in drag-and-drop operations.</source>
          <target state="translated">Le <ph id="ph1">`IDataObject`</ph> interface est utilisée par la <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> classe et dans les opérations de glisser-déplacer.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>When implemented in a class, the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods allow the user to store data in multiple formats in an instance of the class.</source>
          <target state="translated">En cas d’implémentation dans une classe, le <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> méthodes permettent à l’utilisateur stocker les données dans plusieurs formats dans une instance de la classe.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</source>
          <target state="translated">Le stockage des données dans plusieurs formats augmente le risque qu’une application cible dont vous ne savez pas, les spécifications de format peut récupérer les données stockées.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To store data in an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> method and specify the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Pour stocker les données dans une instance de <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, appelez le <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> (méthode) et spécifiez le format de données dans le <ph id="ph3">`format`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> if you do not want stored data to be converted to another format when it is retrieved.</source>
          <target state="translated">Définir le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph> si vous ne souhaitez pas que les données stockées à convertir en un autre format lorsqu’il est extrait.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Invoke <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> multiple times on one instance of <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> to store data in more than one format.</source>
          <target state="translated">Appeler <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.SetData%2A&gt;</ph> plusieurs fois sur une instance de <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> pour stocker les données dans plusieurs formats.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>You retrieve stored data from an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method and specifying the data format in the <ph id="ph3">`format`</ph> parameter.</source>
          <target state="translated">Récupérer les données stockées dans un <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> en appelant le <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> méthode et en spécifiant les données de format dans le <ph id="ph3">`format`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to retrieve only data that was stored in the specified format.</source>
          <target state="translated">Définir le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph> pour récupérer uniquement les données qui a été enregistrées dans le format spécifié.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To convert the stored data to the specified format, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use <ph id="ph3">`autoConvert`</ph>.</source>
          <target state="translated">Pour convertir les données stockées dans le format spécifié, affectez <ph id="ph1">`autoConvert`</ph> à <ph id="ph2">`true`</ph>, ou n’utilisez pas <ph id="ph3">`autoConvert`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To determine the formats of the data stored in an <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, use the following <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> methods.</source>
          <target state="translated">Pour déterminer les formats des données stockées dans un <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>, utilisez ce qui suit <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> method to retrieve an array of all the formats in which the data is available.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> méthode pour récupérer un tableau de tous les formats dans lesquels les données sont disponibles.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> to get only the formats in which the data is stored.</source>
          <target state="translated">Définir le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph> pour obtenir uniquement les formats dans laquelle les données sont stockées.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>To get all the formats in which the data is available, set <ph id="ph1">`autoConvert`</ph> to <ph id="ph2">`true`</ph>, or do not use this parameter.</source>
          <target state="translated">Pour obtenir tous les formats dans laquelle les données sont disponibles, définissez <ph id="ph1">`autoConvert`</ph> à <ph id="ph2">`true`</ph>, ou n’utilisez pas ce paramètre.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> method to determine whether stored data is available in a certain format.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> méthode pour déterminer si les données stockées sont disponibles dans un format particulier.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>If you do not want stored data to be converted to the specified format, set the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Si vous ne souhaitez pas que les données stockées à convertir au format spécifié, définissez la <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class for an implementation of this interface.</source>
          <target state="translated">Consultez la <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe pour une implémentation de cette interface.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Forms.IDataObject">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> data formats.</source>
          <target state="translated">Consultez le <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe pour prédéfinis <ph id="ph2">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> formats de données.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Récupère les données associées au format de données spécifié.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">Format des données à récupérer.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Retrieves the data associated with the specified data format.</source>
          <target state="translated">Récupère les données associées au format de données spécifié.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Données associées au format spécifié ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Si cette méthode ne peut pas rechercher des données dans le format spécifié, il tente de convertir les données au format.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si les données ne peut pas être converties au format spécifié, cette méthode retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si les données sont associées, ou peuvent être converties en un format, appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour obtenir la liste des formats valides pour les données stockées dans cette instance.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject,`</ph> to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject,`</ph> pour illustrer l’utilisation de la <ph id="ph3">`GetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myDataObject`</ph>, which is associated with the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">La méthode est utilisée pour récupérer les données stockées dans <ph id="ph1">`myDataObject`</ph>, qui est associé le <ph id="ph2">`Text`</ph> format.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">L’exemple part du principe que vous avez déjà créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph> et un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> nommé <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format of the data to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le format des données à récupérer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Retrieves the data associated with the specified class type format.</source>
          <target state="translated">Récupère les données associées au format du type classe spécifié.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Données associées au format spécifié ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Si cette méthode ne peut pas rechercher des données dans le format spécifié, il tente de convertir les données au format.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>If the data cannot be converted to the specified format, this method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si les données ne peut pas être converties au format spécifié, cette méthode retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si les données sont associées, ou peuvent être converties en un format, appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour obtenir la liste des formats valides pour les données stockées dans cette instance.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The method is used to retrieve the data stored in <ph id="ph1">`myObject`</ph>, which is associated with a specific type, <ph id="ph2">`myType`</ph>.</source>
          <target state="translated">La méthode est utilisée pour récupérer les données stockées dans <ph id="ph1">`myObject`</ph>, qui est associé à un type spécifique, <ph id="ph2">`myType`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The type of the retrieved data is displayed in a message box.</source>
          <target state="translated">Le type des données récupérées s’affiche dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.Type)">
          <source>The example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple part du principe que vous avez déjà créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The format of the data to retrieve.</source>
          <target state="translated">Format des données à récupérer.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to convert the data to the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> en cas de conversion des données dans le format spécifié ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</source>
          <target state="translated">Récupère les données associées au format de données spécifié, grâce à une valeur booléenne permettant de déterminer si les données doivent être converties dans le format spécifié.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The data associated with the specified format, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Données associées au format spécifié ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, it attempts to convert the data to the format.</source>
          <target state="translated">Si le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`true`</ph> et que cette méthode ne peut pas trouver de données dans le format spécifié, il essaie de convertir les données au format.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the data cannot be converted to the specified format, or if the data was stored with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`false`</ph>, this method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si les données ne peut pas être converties au format spécifié, ou si les données ont été stockées avec la <ph id="ph1">`autoConvert`</ph> paramètre la valeur <ph id="ph2">`false`</ph>, cette méthode retourne <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>If the <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, this method returns data in the specified format, or <ph id="ph3">`null`</ph> if no data in this format can be found.</source>
          <target state="translated">Si le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`false`</ph>, cette méthode retourne les données dans le format spécifié, ou <ph id="ph3">`null`</ph> si aucune donnée dans ce format ne peut être trouvée.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>To determine whether data is associated with, or can be converted to, a format, call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si les données sont associées, ou peuvent être converties en un format, appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetDataPresent%2A&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for a list of valid formats for the data stored in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour obtenir la liste des formats valides pour les données stockées dans cette instance.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example retrieves the data stored in a <ph id="ph1">`DataObject`</ph>, using the <ph id="ph2">`autoConvert`</ph> parameter to specify whether or not to convert the data format.</source>
          <target state="translated">L’exemple récupère les données stockées dans un <ph id="ph1">`DataObject`</ph>, à l’aide du <ph id="ph2">`autoConvert`</ph> paramètre pour spécifier s’il faut ou non convertir le format de données.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>First, <ph id="ph1">`myDataObject`</ph> is created with text data.</source>
          <target state="translated">Tout d’abord, <ph id="ph1">`myDataObject`</ph> est créé avec les données texte.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>Then the example tries twice to retrieve the data.</source>
          <target state="translated">L’exemple essaie à deux reprises récupérer les données.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the first trial, it specifies its format as a string and sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Lors du premier essai, il spécifie que son format comme une chaîne et attribue le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Cette version d’évaluation échoue et le résultat est affiché dans une boîte de message intitulée « Message #1 ».</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>In the second trial, the example retrieves the same data with the <ph id="ph1">`autoConvert`</ph> parameter set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dans la deuxième version d’évaluation, l’exemple récupère les mêmes données avec le <ph id="ph1">`autoConvert`</ph> paramètre la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Cette version d’évaluation réussit et le résultat est affiché dans une boîte de message intitulée « Message #2 ».</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Determines whether data stored in this instance is associated with the specified format.</source>
          <target state="translated">Détermine si les données stockées dans cette instance sont associées au format spécifié.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The format for which to check.</source>
          <target state="translated">Format à vérifier.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Détermine si les données stockées dans cette instance sont associées au format spécifié ou si elles peuvent être converties dans le format spécifié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données stockées dans cette instance sont associées ou peuvent être converties au format spécifié ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Appelez cette méthode pour déterminer l’existence d’un format dans cette <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour les formats disponibles dans cette instance.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetDataPresent`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>First, it creates a data object using a string and the <ph id="ph1">`Text`</ph> format.</source>
          <target state="translated">Tout d’abord, il crée un objet de données à l’aide d’une chaîne et le <ph id="ph1">`Text`</ph> format.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>Then it verifies that the data is present in the <ph id="ph1">`Text`</ph> format and displays the results in a message box.</source>
          <target state="translated">Ensuite, il vérifie que les données sont présentes dans le <ph id="ph1">`Text`</ph> mettre en forme et affiche les résultats dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format for which to check.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le format à vérifier.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</source>
          <target state="translated">Détermine si les données stockées dans cette instance sont associées au format spécifié ou si elles peuvent être converties dans le format spécifié.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les données stockées dans cette instance sont associées ou peuvent être converties au format spécifié ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Appelez cette méthode pour déterminer l’existence d’un format dans cette <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour les formats disponibles dans cette instance.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetDataPresent`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Tout d’abord, il crée un composant (<ph id="ph1">`myComponent`</ph>) et le stocke dans un objet de données (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>Then it checks whether the specified data is stored in <ph id="ph1">`myDataObject`</ph>.</source>
          <target state="translated">Ensuite, il vérifie si les données spécifiées sont stockées dans <ph id="ph1">`myDataObject`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>If the test evaluates <ph id="ph1">`true`</ph>, it displays the result in a message box and displays the data type in a text box.</source>
          <target state="translated">Si le test a la valeur <ph id="ph1">`true`</ph>, elle affiche le résultat dans une boîte de message et affiche le type de données dans une zone de texte.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)">
          <source>This example assumes that you have already created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph> and a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> named <ph id="ph4">`textBox1`</ph>.</source>
          <target state="translated">Cet exemple suppose que vous avez déjà créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph> et un <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> nommé <ph id="ph4">`textBox1`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The format for which to check.</source>
          <target state="translated">Format à vérifier.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to determine whether data stored in this instance can be converted to the specified format; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to check whether the data is in the specified format.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour déterminer si les données stockées dans cette instance peuvent être converties dans le format spécifié ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour vérifier si les données correspondent au format spécifié.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</source>
          <target state="translated">Détermine si les données stockées dans cette instance sont associées au format spécifié, grâce à une valeur booléenne permettant de déterminer si les données doivent être converties dans le format spécifié.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> en présence de données dans le format spécifié ou en cas de possibilité de conversion des données dans le format spécifié ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call this method to determine whether a format exists in this <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> before calling <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</source>
          <target state="translated">Appelez cette méthode pour déterminer l’existence d’un format dans cette <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> avant d’appeler <ph id="ph2">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> for the formats that are available in this instance.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetFormats%2A&gt;</ph> pour les formats disponibles dans cette instance.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`true`</ph> when:</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">`true`</ph> lorsque :</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and the data is in a format that can be converted to the appropriate format.</source>
          <target state="translated">Le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`true`</ph> et les données sont dans un format qui peut être converti au format approprié.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph> and the data is in the appropriate format.</source>
          <target state="translated">Le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`false`</ph> et les données sont au format approprié.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This method returns <ph id="ph1">`false`</ph> when:</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">`false`</ph> lorsque :</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`true`</ph> and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with <ph id="ph3">`autoConvert`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`true`</ph> et cette méthode ne peut pas trouver de données dans le format spécifié et elle ne peut pas convertir les données au format spécifié, ou les données ont été stockées avec <ph id="ph3">`autoConvert`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The <ph id="ph1">`autoConvert`</ph> parameter is <ph id="ph2">`false`</ph>, and data does not exist in this instance in the specified format.</source>
          <target state="translated">Le <ph id="ph1">`autoConvert`</ph> paramètre est <ph id="ph2">`false`</ph>, et les données n’existent pas dans cette instance au format spécifié.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetDataPresent`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetDataPresent`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Tout d’abord, il crée un objet de données (<ph id="ph1">`myDataObject`</ph>) à l’aide d’une chaîne et le <ph id="ph2">`Text`</ph> format.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>Then it queries the object for data associated with the <ph id="ph1">`Text`</ph> format, with the <ph id="ph2">`autoConvert`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Puis il interroge l’objet pour les données associées à la <ph id="ph1">`Text`</ph> format, avec la <ph id="ph2">`autoConvert`</ph> paramètre la valeur <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial fails, and the result is displayed in a message box labeled "Message #1."</source>
          <target state="translated">Cette version d’évaluation échoue et le résultat est affiché dans une boîte de message intitulée « Message #1 ».</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>In the second trial, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Dans la deuxième version d’évaluation, il définit le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>This trial succeeds, and the result is displayed in a message box labeled "Message #2."</source>
          <target state="translated">Cette version d’évaluation réussit et le résultat est affiché dans une boîte de message intitulée « Message #2 ».</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Retourne la liste de tous les formats auxquels les données stockées dans cette instance sont associées ou dans lesquels ces données peuvent être converties.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</source>
          <target state="translated">Retourne la liste de tous les formats auxquels les données stockées dans cette instance sont associées ou dans lesquels ces données peuvent être converties.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Tableau de noms représentant la liste de tous les formats pris en charge par les données stockées dans cet objet.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Appelez cette méthode pour obtenir les formats de données pris en charge avant d’appeler le <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Consultez la <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe pour les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetFormats`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Tout d’abord, il crée un objet de données (<ph id="ph1">`myDataObject`</ph>) à l’aide d’une chaîne et le <ph id="ph2">`Text`</ph> format.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</source>
          <target state="translated">Puis il récupère tous les formats de données et les formats de conversion de données dans l’objet de données et affiche la liste des résultats dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Cet exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to retrieve all formats that data stored in this instance is associated with or can be converted to; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to retrieve only native data formats.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> en cas de récupération de tous les formats auxquels les données stockées dans cette instance sont associées ou dans lesquels elles peuvent être converties ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> en cas de récupération des formats de données natifs uniquement.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</source>
          <target state="translated">Obtient la liste de tous les formats auxquels les données stockées dans cette instance sont associées ou dans lesquels ces données peuvent être converties, grâce à une valeur booléenne permettant de déterminer si seuls les formats natifs ou si l'ensemble des formats dans lesquels les données peuvent être converties doivent être récupérés.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>An array of the names that represents a list of all formats that are supported by the data stored in this object.</source>
          <target state="translated">Tableau de noms représentant la liste de tous les formats pris en charge par les données stockées dans cet objet.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Call this method to get the supported data formats before calling the <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> method.</source>
          <target state="translated">Appelez cette méthode pour obtenir les formats de données pris en charge avant d’appeler le <ph id="ph1">&lt;xref:System.Windows.Forms.IDataObject.GetData%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> class for the predefined formats.</source>
          <target state="translated">Consultez la <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats&gt;</ph> classe pour les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</source>
          <target state="translated">Données peuvent être converties vers un autre format, si elle a été stockée en spécifiant que la conversion est autorisée, et si le format demandé est compatible avec le format stocké.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For example, data stored as Unicode can be converted to text.</source>
          <target state="translated">Par exemple, les données stockées en tant que Unicode peut être converti en texte.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`GetFormats`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`GetFormats`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) using a string and the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Tout d’abord, il crée un objet de données (<ph id="ph1">`myDataObject`</ph>) à l’aide d’une chaîne et le <ph id="ph2">`UnicodeText`</ph> format.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>Then it makes two queries to get the formats associated with the data.</source>
          <target state="translated">Il effectue ensuite les deux requêtes pour obtenir les formats associés aux données.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the first query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`false`</ph> : in this case, only the native format of the data is returned.</source>
          <target state="translated">Dans la première requête, il définit le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`false`</ph> : dans ce cas, seul le format natif des données est retourné.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In the second query, it sets the <ph id="ph1">`autoConvert`</ph> parameter to <ph id="ph2">`true`</ph>, so that it gets the list of formats, including the formats that the data can be converted to.</source>
          <target state="translated">Dans la deuxième requête, il définit le <ph id="ph1">`autoConvert`</ph> paramètre <ph id="ph2">`true`</ph>, afin qu’il obtient la liste des formats, y compris les formats de données peuvent être converties en.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>In each case, the resulting list is displayed in a message box.</source>
          <target state="translated">Dans chaque cas, la liste résultante est affichée dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Cet exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="T:System.Windows.Forms.IDataObject">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Stocke les données spécifiées et le format associé dans cette instance.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The data to store.</source>
          <target state="translated">Données à stocker.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Stores the specified data in this instance, using the class of the data for the format.</source>
          <target state="translated">Stocke les données spécifiées dans cette instance à l'aide de la classe des données correspondant au format.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The format is derived from the data class.</source>
          <target state="translated">Le format est dérivé de la classe de données.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Les données stockées à l’aide de cette méthode peuvent être converties en un format compatible lorsqu’il est extrait.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`SetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>).</source>
          <target state="translated">Tout d’abord, il crée un composant (<ph id="ph1">`myComponent`</ph>) et le stocke dans un objet de données (<ph id="ph2">`myDataObject`</ph>).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</source>
          <target state="translated">Il vérifie ensuite si les données spécifiées sont stockées dans l’objet de données et affiche le résultat dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">Format associé aux données.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Données à stocker.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Stores the specified data and its associated format in this instance.</source>
          <target state="translated">Stocke les données spécifiées et le format associé dans cette instance.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Si vous ne connaissez pas le format de l’application cible, vous pouvez stocker des données dans plusieurs formats à l’aide de cette méthode.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Les données stockées à l’aide de cette méthode peuvent être converties en un format compatible lorsqu’il est extrait.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`SetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a string in the object specifying the <ph id="ph2">`UnicodeText`</ph> format.</source>
          <target state="translated">Tout d’abord, il crée un objet de données (<ph id="ph1">`myDataObject`</ph>) et stocke une chaîne dans l’objet en spécifiant le <ph id="ph2">`UnicodeText`</ph> format.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>Then it retrieves that data stored in the object specifying the <ph id="ph1">`Text`</ph> format, so that the data is converted to the <ph id="ph2">`Text`</ph> format.</source>
          <target state="translated">Puis il récupère ces données stockées dans l’objet en spécifiant le <ph id="ph1">`Text`</ph> mettre en forme, afin que les données sont converties à le <ph id="ph2">`Text`</ph> format.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>The result is displayed in a message box.</source>
          <target state="translated">Le résultat est affiché dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Cet exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> representing the format associated with the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> représentant le format associé aux données.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Données à stocker.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Stores the specified data and its associated class type in this instance.</source>
          <target state="translated">Stocke les données spécifiées et le type classe associé dans cette instance.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Si vous ne connaissez pas le format de l’application cible, vous pouvez stocker des données dans plusieurs formats à l’aide de cette méthode.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Data stored using this method can be converted to a compatible format when it is retrieved.</source>
          <target state="translated">Les données stockées à l’aide de cette méthode peuvent être converties en un format compatible lorsqu’il est extrait.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`SetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>First, it creates a component (<ph id="ph1">`myComponent`</ph>) and stores it in a data object (<ph id="ph2">`myDataObject`</ph>), using <ph id="ph3">`myType`</ph> to specify the data format.</source>
          <target state="translated">Tout d’abord, il crée un composant (<ph id="ph1">`myComponent`</ph>) et le stocke dans un objet de données (<ph id="ph2">`myDataObject`</ph>), à l’aide <ph id="ph3">`myType`</ph> pour spécifier le format de données.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</source>
          <target state="translated">Il vérifie ensuite si les données du type spécifié sont stockées dans l’objet et affiche le résultat dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)">
          <source>The example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">L’exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The format associated with the data.</source>
          <target state="translated">Format associé aux données.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> for predefined formats.</source>
          <target state="translated">Consultez <ph id="ph1">&lt;see cref="T:System.Windows.Forms.DataFormats" /&gt;</ph> pour obtenir les formats prédéfinis.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to allow the data to be converted to another format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> en cas d'autorisation de conversion des données dans un autre format ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The data to store.</source>
          <target state="translated">Données à stocker.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</source>
          <target state="translated">Stocke dans cette instance les données spécifiées et les formats associés, à l'aide d'une valeur booléenne permettant d'indiquer si les données peuvent être converties dans un autre format.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>If you do not know the format of the target application, you can store data in multiple formats using this method.</source>
          <target state="translated">Si vous ne connaissez pas le format de l’application cible, vous pouvez stocker des données dans plusieurs formats à l’aide de cette méthode.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>For an implementation of this method, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Pour une implémentation de cette méthode, consultez <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> class, which implements <ph id="ph2">`IDataObject`</ph>, to demonstrate the use of the <ph id="ph3">`SetData`</ph> method.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> classe qui implémente <ph id="ph2">`IDataObject`</ph>, pour illustrer l’utilisation de la <ph id="ph3">`SetData`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>First, it creates a data object (<ph id="ph1">`myDataObject`</ph>) and stores a <ph id="ph2">`UnicodeText`</ph> string in it, with the <ph id="ph3">`autoConvert`</ph> parameter set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Tout d’abord, il crée un objet de données (<ph id="ph1">`myDataObject`</ph>) et stocke une <ph id="ph2">`UnicodeText`</ph> de chaîne, avec la <ph id="ph3">`autoConvert`</ph> paramètre la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</source>
          <target state="translated">Ensuite, il récupère les formats associés aux données stockées dans l’objet et affiche le résultat dans une boîte de message.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>The only format associated with the data is the <ph id="ph1">`UnicodeText`</ph> format.</source>
          <target state="translated">Le seul format associé aux données est le <ph id="ph1">`UnicodeText`</ph> format.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
          <source>This example assumes that you have created a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> named <ph id="ph2">`Form1`</ph>.</source>
          <target state="translated">Cet exemple suppose que vous avez créé un <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> nommé <ph id="ph2">`Form1`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>