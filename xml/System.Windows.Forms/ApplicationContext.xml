<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28139d75ef4ecb84227bbc9fb17b9fb2de4017b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36349758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ApplicationContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="17416-101">Spécifie les informations contextuelles sur un thread d'application.</span>
      <span class="sxs-lookup">
        <span data-stu-id="17416-101">Specifies the contextual information about an application thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-102">Vous pouvez utiliser la <xref:System.Windows.Forms.ApplicationContext> classe pour redéfinir les circonstances dans lesquelles une boucle de message quitter.</span><span class="sxs-lookup"><span data-stu-id="17416-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="17416-103">Par défaut, le <xref:System.Windows.Forms.ApplicationContext> écoute le <xref:System.Windows.Forms.Form.Closed> principal de l’événement sur l’application <xref:System.Windows.Forms.Form>, puis quitte la boucle de messages du thread.</span><span class="sxs-lookup"><span data-stu-id="17416-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17416-104">L’exemple de code suivant affiche deux formulaires et quitte l’application lorsque les deux formulaires sont fermés.</span><span class="sxs-lookup"><span data-stu-id="17416-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="17416-105">Lorsque l’application démarre et s’arrête, la position de chaque formulaire est mémorisée.</span><span class="sxs-lookup"><span data-stu-id="17416-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="17416-106">Cet exemple montre comment utiliser un <xref:System.Windows.Forms.ApplicationContext>, avec le `Application.Run(context)` (méthode), pour afficher plusieurs formulaires lorsque l’application démarre.</span><span class="sxs-lookup"><span data-stu-id="17416-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="17416-107">La classe `MyApplicationContext` hérite <xref:System.Windows.Forms.ApplicationContext> et assure le suivi lorsque chaque formulaire est fermé et quitte le thread en cours lorsque les deux sont.</span><span class="sxs-lookup"><span data-stu-id="17416-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="17416-108">La classe stocke les positions de chaque formulaire de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="17416-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="17416-109">Les données de position du formulaire sont stockées dans un fichier intitulé `Appdata.txt` qui est créé à l’emplacement déterminé par <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="17416-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="17416-110">Le `Main` les appels de méthode `Application.Run(context)` pour démarrer l’application, étant donné la <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="17416-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17416-111">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17416-112">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ApplicationContext" /> sans contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ApplicationContext : System.Windows.Forms.Form -&gt; System.Windows.Forms.ApplicationContext" Usage="new System.Windows.Forms.ApplicationContext mainForm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm">
          <span data-ttu-id="17416-113">Principal <see cref="T:System.Windows.Forms.Form" /> de l'application à utiliser pour le contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17416-114">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ApplicationContext" /> avec le <see cref="T:System.Windows.Forms.Form" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-115">Si <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> est ne pas substitué, la boucle de messages du thread s’arrête alors <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> est fermé.</span><span class="sxs-lookup"><span data-stu-id="17416-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="17416-116">Libère les ressources utilisées par le <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17416-117">Libère toutes les ressources utilisées par <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-118">Appelez la méthode <xref:System.Windows.Forms.ApplicationContext.Dispose> une fois que vous avez terminé d'utiliser <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="17416-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="17416-119">La méthode <xref:System.Windows.Forms.ApplicationContext.Dispose> rend le <xref:System.Windows.Forms.ApplicationContext> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="17416-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="17416-120">Après avoir appelé <xref:System.Windows.Forms.ApplicationContext.Dispose>, vous devez libérer toutes les références à la <xref:System.Windows.Forms.ApplicationContext> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Windows.Forms.ApplicationContext> occupée.</span><span class="sxs-lookup"><span data-stu-id="17416-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="17416-121">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="17416-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17416-122">Appelez toujours <xref:System.Windows.Forms.ApplicationContext.Dispose> avant de libérer votre dernière référence à <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="17416-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="17416-123">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Windows.Forms.ApplicationContext> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="17416-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="applicationContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="17416-124">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-124">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17416-125">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.ApplicationContext" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-126">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17416-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="17416-127">`Dispose()` appelle la méthode protégée <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="17416-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="17416-128"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="17416-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="17416-129">Lorsque le `disposing` paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Windows.Forms.ApplicationContext> références.</span><span class="sxs-lookup"><span data-stu-id="17416-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="17416-130">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="17416-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="17416-131">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution de <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) de suppression.  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, voir [nettoyage des Resources](~/docs/standard/garbage-collection/unmanaged.md) non managé et [substitution de la méthode Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-131">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberSignature Language="F#" Value="member this.ExitThread : unit -&gt; unit" Usage="applicationContext.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17416-132">Arrête la boucle de messages du thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-132">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-133">Cette méthode appelle <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="17416-133">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17416-134"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> et <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> faire cause pas réellement le thread se termine.</span><span class="sxs-lookup"><span data-stu-id="17416-134"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="17416-135">Ces méthodes déclenchent le <xref:System.Windows.Forms.Application.ThreadExit> événement auquel le <xref:System.Windows.Forms.Application> est à l’écoute de l’objet.</span><span class="sxs-lookup"><span data-stu-id="17416-135">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="17416-136">Le <xref:System.Windows.Forms.Application> objet puis termine le thread.</span><span class="sxs-lookup"><span data-stu-id="17416-136">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="17416-137">L’exemple de code suivant est un extrait de l’exemple dans le <xref:System.Windows.Forms.ApplicationContext> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="17416-137">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="17416-138">Cet exemple effectue le suivi des formulaires ouverts et quitte le thread en cours lorsque tous les formulaires sont fermés.</span><span class="sxs-lookup"><span data-stu-id="17416-138">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="17416-139">Le `OnFormClosed` méthode est un gestionnaire d’événements pour le <xref:System.Windows.Forms.Form.Closed> événement.</span><span class="sxs-lookup"><span data-stu-id="17416-139">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="17416-140">Lorsque le nombre de formulaires ouverts est égal à 0, thread en cours est terminé en appelant le <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17416-140">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="17416-141">Le nombre de formulaires est suivi en incrémentant la `formCount` variable lorsqu’un formulaire est affiché et en la décrémentant lorsqu’un formulaire est fermé.</span><span class="sxs-lookup"><span data-stu-id="17416-141">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="17416-142">Du code n’est pas indiqué pour les raisons de concision.</span><span class="sxs-lookup"><span data-stu-id="17416-142">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="17416-143">Consultez <xref:System.Windows.Forms.ApplicationContext> pour obtenir la liste de l’ensemble du code.</span><span class="sxs-lookup"><span data-stu-id="17416-143">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberSignature Language="F#" Value="abstract member ExitThreadCore : unit -&gt; unit&#xA;override this.ExitThreadCore : unit -&gt; unit" Usage="applicationContext.ExitThreadCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17416-144">Arrête la boucle de messages du thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-144">Terminates the message loop of the thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-145">Cette méthode est appelée à partir de <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="17416-145">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="17416-146"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> et <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> faire cause pas réellement le thread se termine.</span><span class="sxs-lookup"><span data-stu-id="17416-146"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="17416-147">Ces méthodes déclenchent le <xref:System.Windows.Forms.Application.ThreadExit> événement auquel le <xref:System.Windows.Forms.Application> est à l’écoute de l’objet.</span><span class="sxs-lookup"><span data-stu-id="17416-147">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="17416-148">Le <xref:System.Windows.Forms.Application> objet puis termine le thread.</span><span class="sxs-lookup"><span data-stu-id="17416-148">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="applicationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="17416-149">Tente de libérer les ressources et d'effectuer d'autres opérations de nettoyage avant la récupération du contexte de l'application par le garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-149">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-150">Cette méthode substitue <xref:System.Object.Finalize%2A?displayProperty=nameWithType> et nettoie les ressources en appelant `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="17416-150">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="17416-151">Substitue `Dispose(Boolean)` pour personnaliser le nettoyage.</span><span class="sxs-lookup"><span data-stu-id="17416-151">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="17416-152">Code d’application ne doit pas appeler cette méthode ; d’un objet `Finalize` méthode est appelée automatiquement lors du garbage collection, à moins que la finalisation par le garbage collector a été désactivée par un appel à la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="17416-152">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="17416-153">Pour plus d’informations, consultez [destructeurs et méthodes Finalize](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md), et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="17416-153">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17416-154">Obtient ou définit le <see cref="T:System.Windows.Forms.Form" /> à utiliser comme contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-154">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17416-155">
            <see cref="T:System.Windows.Forms.Form" /> à utiliser comme contexte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-155">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-156">Cette propriété détermine le principal <xref:System.Windows.Forms.Form> pour ce contexte.</span><span class="sxs-lookup"><span data-stu-id="17416-156">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="17416-157">Cette propriété peut changer à tout moment.</span><span class="sxs-lookup"><span data-stu-id="17416-157">This property can change at any time.</span></span> <span data-ttu-id="17416-158">Si <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> est ne pas substituée, la boucle de messages du thread termine lorsque le `mainForm` du paramètre.</span><span class="sxs-lookup"><span data-stu-id="17416-158">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMainFormClosed : obj * EventArgs -&gt; unit&#xA;override this.OnMainFormClosed : obj * EventArgs -&gt; unit" Usage="applicationContext.OnMainFormClosed (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="17416-159">Objet ayant déclenché l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-159">The object that raised the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="17416-160">
            <see cref="T:System.EventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-160">The <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="17416-161">Appelle <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, qui déclenche l'événement <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-161">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-162">L’implémentation par défaut de cette méthode appelle <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="17416-162">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ApplicationContext.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17416-163">Obtient ou définit un objet qui contient des données relatives au contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-163">Gets or sets an object that contains data about the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="17416-164">
            <see cref="T:System.Object" /> qui contient les données relatives au contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-164">An <see cref="T:System.Object" /> that contains data about the control.</span>
          </span>
          <span data-ttu-id="17416-165">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-165">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17416-166">N’importe quel type dérivé de la <xref:System.Object> classe peut être affectée à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="17416-166">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="17416-167">Si la <xref:System.Windows.Forms.ApplicationContext.Tag%2A> est définie via le Concepteur Windows Forms, peut être affecté uniquement du texte.</span><span class="sxs-lookup"><span data-stu-id="17416-167">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="17416-168">Une utilisation courante pour le <xref:System.Windows.Forms.ApplicationContext.Tag%2A> propriété consiste à stocker les données qui sont étroitement associées au contrôle.</span><span class="sxs-lookup"><span data-stu-id="17416-168">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="17416-169">Par exemple, si vous avez un contrôle qui affiche des informations sur un client, vous pouvez stocker un <xref:System.Data.DataSet> qui contient l’historique de commande du client dans ce contrôle <xref:System.Windows.Forms.ApplicationContext.Tag%2A> propriété afin d’accéder rapidement aux données.</span><span class="sxs-lookup"><span data-stu-id="17416-169">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="17416-170">Se produit lorsque la boucle de messages du thread doit s'arrêter, en appelant <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="17416-170">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="17416-171">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="17416-171">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="17416-172">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ApplicationContext.ThreadExit> événement.</span><span class="sxs-lookup"><span data-stu-id="17416-172">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="17416-173">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="17416-173">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="17416-174">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="17416-174">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="17416-175">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ApplicationContext> nommé `ApplicationContext1`.</span><span class="sxs-lookup"><span data-stu-id="17416-175">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="17416-176">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ApplicationContext.ThreadExit> événement.</span><span class="sxs-lookup"><span data-stu-id="17416-176">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>