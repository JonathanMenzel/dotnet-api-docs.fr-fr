<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7677a8abed6de6921dd7137d79eb3ed66213093" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="45e06-101">Fournit des données pour l'événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45e06-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45e06-102">A <xref:System.Windows.Forms.KeyEventArgs>, qui spécifie la clé de l’utilisateur activé et si les touches de modification (MAJ, ALT et CTRL) ont été enfoncées en même temps, est passé avec chaque <xref:System.Windows.Forms.Control.KeyDown> ou <xref:System.Windows.Forms.Control.KeyUp> événement.</span><span class="sxs-lookup"><span data-stu-id="45e06-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="45e06-103">Le <xref:System.Windows.Forms.Control.KeyDown> événement se produit lorsque l’utilisateur appuie sur une touche quelconque.</span><span class="sxs-lookup"><span data-stu-id="45e06-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="45e06-104">Le <xref:System.Windows.Forms.Control.KeyUp> événement se produit lorsque l’utilisateur relâche la clé.</span><span class="sxs-lookup"><span data-stu-id="45e06-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="45e06-105">Dupliquer <xref:System.Windows.Forms.Control.KeyDown> se produisent chaque fois que la clé de manière répétée, si la touche est enfoncée, mais un seul <xref:System.Windows.Forms.Control.KeyUp> événement est généré lorsque l’utilisateur relâche la clé.</span><span class="sxs-lookup"><span data-stu-id="45e06-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="45e06-106">Le <xref:System.Windows.Forms.Control.KeyPress> événement se produit également lorsqu’une touche est enfoncée.</span><span class="sxs-lookup"><span data-stu-id="45e06-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="45e06-107">A <xref:System.Windows.Forms.KeyPressEventArgs> est transmis avec chaque <xref:System.Windows.Forms.Control.KeyPress> événement et spécifie le caractère composé suite à chaque activation de touche.</span><span class="sxs-lookup"><span data-stu-id="45e06-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="45e06-108">Pour plus d’informations sur le modèle d’événement, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="45e06-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45e06-109">Les exemples de code suivants montrent comment détecter l’état d’une touche.</span><span class="sxs-lookup"><span data-stu-id="45e06-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="45e06-110">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="45e06-110">**Example 1**</span></span>  
  
 <span data-ttu-id="45e06-111">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.KeyDown> événement avec la <xref:System.Windows.Forms.Help> classe pour afficher le style contextuel aide à l’utilisateur de l’application.</span><span class="sxs-lookup"><span data-stu-id="45e06-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="45e06-112">L’exemple utilise le <xref:System.Windows.Forms.KeyEventArgs> propriétés transmises à la méthode de gestionnaire d’événements pour filtrer toutes les variantes de la touche F1 avec une touche de modification.</span><span class="sxs-lookup"><span data-stu-id="45e06-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="45e06-113">Lorsque l’utilisateur appuie sur toute variation de la touche F1 incluant une touche de modification, le <xref:System.Windows.Forms.Help> classe affiche une fenêtre contextuelle, semblable à un <xref:System.Windows.Forms.ToolTip>, près du contrôle.</span><span class="sxs-lookup"><span data-stu-id="45e06-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="45e06-114">Si l’utilisateur appuie sur ALT + F2, un autre menu d’aide contextuel s’affiche avec des informations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="45e06-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="45e06-115">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="45e06-115">**Example 2**</span></span>  
  
 <span data-ttu-id="45e06-116">L’exemple suivant détermine si l’utilisateur a appuyé sur ALT + E, et si le pointeur de la souris est sur un <xref:System.Windows.Forms.TreeNode>, permet à l’utilisateur à modifier qui <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="45e06-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="45e06-117">**Exemple 3**</span><span class="sxs-lookup"><span data-stu-id="45e06-117">**Example 3**</span></span>  
  
 <span data-ttu-id="45e06-118">L’exemple suivant détermine si l’utilisateur a appuyé sur une touche non numérique et si tel est le cas, annule la <xref:System.Windows.Forms.Control.KeyPress> événement à l’aide de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="45e06-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData">
          <span data-ttu-id="45e06-119">
            <see cref="T:System.Windows.Forms.Keys" /> correspondant à la touche activée, associée à des indicateurs de touches de modification précisant les touches CTRL, MAJ et ALT sur lesquelles l'utilisateur a appuyé simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span>
          </span>
          <span data-ttu-id="45e06-120">Les valeurs possibles sont obtenues en appliquant l'opérateur de bits OR (|) à des constantes à partir de l'énumération <see cref="T:System.Windows.Forms.Keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45e06-121">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.KeyEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-122">Obtient une valeur indiquant si la touche Alt a été activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-122">Gets a value indicating whether the ALT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-123">
            <see langword="true" /> si la touche ALT était activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-123">
              <see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45e06-124">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="45e06-124">**Example 1**</span></span>  
  
 <span data-ttu-id="45e06-125">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.KeyDown> événement avec la <xref:System.Windows.Forms.Help> classe pour afficher le style contextuel aide à l’utilisateur de l’application.</span><span class="sxs-lookup"><span data-stu-id="45e06-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="45e06-126">L’exemple utilise le <xref:System.Windows.Forms.KeyEventArgs> propriétés transmises à la méthode de gestionnaire d’événements pour filtrer toutes les variantes de la touche F1 avec une touche de modification.</span><span class="sxs-lookup"><span data-stu-id="45e06-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="45e06-127">Lorsque l’utilisateur appuie sur toute variation de la touche F1 incluant une touche de modification, le <xref:System.Windows.Forms.Help> classe affiche une fenêtre contextuelle, semblable à un <xref:System.Windows.Forms.ToolTip>, près du contrôle.</span><span class="sxs-lookup"><span data-stu-id="45e06-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="45e06-128">Si l’utilisateur appuie sur ALT + F2, un autre menu d’aide contextuel s’affiche avec des informations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="45e06-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="45e06-129">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="45e06-129">**Example 2**</span></span>  
  
 <span data-ttu-id="45e06-130">L’exemple suivant détermine si l’utilisateur a appuyé sur ALT + E, et si le pointeur de la souris est sur <xref:System.Windows.Forms.TreeNode>, permet à l’utilisateur à modifier qui <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="45e06-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-131">Obtient une valeur indiquant si la touche Ctrl a été activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-131">Gets a value indicating whether the CTRL key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-132">
            <see langword="true" /> si la touche CTRL était activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-132">
              <see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45e06-133">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.KeyDown> événement avec la <xref:System.Windows.Forms.Help> classe pour afficher le style contextuel aide à l’utilisateur de l’application.</span><span class="sxs-lookup"><span data-stu-id="45e06-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="45e06-134">L’exemple utilise le <xref:System.Windows.Forms.KeyEventArgs> propriétés transmises à la méthode de gestionnaire d’événements pour filtrer toutes les variantes de la touche F1 avec une touche de modification.</span><span class="sxs-lookup"><span data-stu-id="45e06-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="45e06-135">Lorsque l’utilisateur appuie sur toute variation de la touche F1 incluant une touche de modification, le <xref:System.Windows.Forms.Help> classe affiche une fenêtre contextuelle, semblable à un <xref:System.Windows.Forms.ToolTip>, près du contrôle.</span><span class="sxs-lookup"><span data-stu-id="45e06-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="45e06-136">Si l’utilisateur appuie sur ALT + F2, un autre menu d’aide contextuel s’affiche avec des informations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="45e06-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-137">Obtient ou définit une valeur indiquant si l'événement a été géré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-137">Gets or sets a value indicating whether the event was handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-138">
            <see langword="true" /> pour ignorer la gestion par défaut du contrôle ; sinon, <see langword="false" /> pour également passer l'événement au gestionnaire de contrôle par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-138">
              <see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45e06-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> est implémenté différemment par différents contrôles dans les Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="45e06-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="45e06-140">Pour les contrôles tels que <xref:System.Windows.Forms.TextBox> qui sous-classe contrôles Win32 natifs, il est interprété comme signifiant que le message clé ne doit pas être passé au contrôle natif sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="45e06-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="45e06-141">Si vous définissez `Handled` sur true sur un <xref:System.Windows.Forms.TextBox>, qui contrôle passe pas la touche `events` pour le contrôle de zone de texte Win32 sous-jacent, mais il continuera à afficher les caractères entrés par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="45e06-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="45e06-142">Si vous souhaitez empêcher le contrôle actuel de recevoir une touche, utilisez le <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="45e06-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45e06-143">L’exemple suivant détermine si l’utilisateur a appuyé sur une touche non numérique et si tel est le cas, annule la <xref:System.Windows.Forms.Control.KeyPress> événement à l’aide de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="45e06-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-144">Obtient le code de clavier d'un événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-145">Une valeur <see cref="T:System.Windows.Forms.Keys" /> représentant le code de touche pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45e06-146">Les exemples de code suivants montrent comment utiliser le <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> propriété pour déterminer quelle clé a été enfoncée.</span><span class="sxs-lookup"><span data-stu-id="45e06-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="45e06-147">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="45e06-147">**Example 1**</span></span>  
  
 <span data-ttu-id="45e06-148">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.Control.KeyDown> événement avec la <xref:System.Windows.Forms.Help> classe pour afficher le style contextuel aide à l’utilisateur de l’application.</span><span class="sxs-lookup"><span data-stu-id="45e06-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="45e06-149">L’exemple utilise le <xref:System.Windows.Forms.KeyEventArgs> propriétés transmises à la méthode de gestionnaire d’événements pour filtrer toutes les variantes de la touche F1 avec une touche de modification.</span><span class="sxs-lookup"><span data-stu-id="45e06-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="45e06-150">Lorsque l’utilisateur appuie sur toute variation de la touche F1 incluant une touche de modification, le <xref:System.Windows.Forms.Help> classe affiche une fenêtre contextuelle, semblable à un <xref:System.Windows.Forms.ToolTip>, près du contrôle.</span><span class="sxs-lookup"><span data-stu-id="45e06-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="45e06-151">Si l’utilisateur appuie sur ALT + F2, un autre menu d’aide contextuel s’affiche avec des informations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="45e06-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="45e06-152">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="45e06-152">**Example 2**</span></span>  
  
 <span data-ttu-id="45e06-153">L’exemple suivant détermine si l’utilisateur a appuyé sur ALT + E, et si le pointeur de la souris est sur un <xref:System.Windows.Forms.TreeNode>, permet à l’utilisateur à modifier qui <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="45e06-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="45e06-154">**Exemple 3**</span><span class="sxs-lookup"><span data-stu-id="45e06-154">**Example 3**</span></span>  
  
 <span data-ttu-id="45e06-155">L’exemple suivant détermine si l’utilisateur a appuyé sur une touche non numérique et si tel est le cas, annule la <xref:System.Windows.Forms.Control.KeyPress> événement à l’aide de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="45e06-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-156">Obtient les données de touches d'un événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-157">
            <see cref="T:System.Windows.Forms.Keys" /> représentant le code de touche correspondant à la touche activée, associée à des indicateurs de touches de modification précisant les touches CTRL, MAJ et ALT sur lesquelles l'utilisateur a appuyé simultanément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45e06-158">Vous pouvez utiliser les constantes de <xref:System.Windows.Forms.Keys> pour extraire des informations à partir de la <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="45e06-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="45e06-159">Permet de comparer les données retournées par l’opérateur de bits AND <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> en intégrant des constantes <xref:System.Windows.Forms.Keys> pour obtenir des informations sur les clés de l’utilisateur a appuyé.</span><span class="sxs-lookup"><span data-stu-id="45e06-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="45e06-160">Pour déterminer si une touche de modification spécifique a été activée, utilisez le <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, et <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="45e06-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45e06-161">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="45e06-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="45e06-162">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="45e06-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="45e06-163">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="45e06-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="45e06-164">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="45e06-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="45e06-165">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="45e06-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="45e06-166">Puis nommez l’instance `Control1` et vérifier que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="45e06-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-167">Obtient la valeur de clavier d'un événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-168">La représentation sous forme d'entier de la propriété <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45e06-169">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="45e06-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="45e06-170">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="45e06-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="45e06-171">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="45e06-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="45e06-172">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="45e06-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="45e06-173">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance d’un type qui hérite de <xref:System.Windows.Forms.Control>, comme un <xref:System.Windows.Forms.Button> ou <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="45e06-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="45e06-174">Puis nommez l’instance `Control1` et vérifier que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> événement.</span><span class="sxs-lookup"><span data-stu-id="45e06-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-175">Obtient les indicateurs de touches de modification d'un événement <see cref="E:System.Windows.Forms.Control.KeyDown" /> ou <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span>
          </span>
          <span data-ttu-id="45e06-176">Les indicateurs indiquent la combinaison de touches Ctrl, Maj et Alt activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-177">Une valeur <see cref="T:System.Windows.Forms.Keys" /> représentant un ou plusieurs indicateurs de touches de modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45e06-178">Pour déterminer si une touche de modification spécifique a été activée, utilisez le <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, et <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="45e06-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="45e06-179">Indicateurs de modification peuvent être combinées avec OR au niveau du bit.</span><span class="sxs-lookup"><span data-stu-id="45e06-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45e06-180">L’exemple de code suivant montre comment utiliser le <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> propriété pour déterminer les touches de modification ont été enfoncées en même temps que la clé primaire.</span><span class="sxs-lookup"><span data-stu-id="45e06-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-181">Obtient une valeur indiquant si la touche Maj a été activée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-181">Gets a value indicating whether the SHIFT key was pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-182">
            <see langword="true" /> si la touche MAJ était activée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-182">
              <see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="45e06-183">L’exemple suivant détermine si l’utilisateur a appuyé sur la touche MAJ enfoncée avec la touche F1, et si, par conséquent, affiche l’aide.</span><span class="sxs-lookup"><span data-stu-id="45e06-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45e06-184">Obtient ou définit une valeur indiquant si l'événement de touche doit être transmis au contrôle sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45e06-185">
            <see langword="true" /> si l'événement de touche ne doit pas être transmis au contrôle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45e06-185">
              <see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45e06-186">Vous pouvez affecter `true` à cette propriété dans un gestionnaire d’événements comme <xref:System.Windows.Forms.Control.KeyDown> afin d’éviter l’entrée d’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="45e06-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="45e06-187">Paramètre <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> à `true` définit également <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> à `true`.</span><span class="sxs-lookup"><span data-stu-id="45e06-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45e06-188">L’exemple de code suivant empêche des séquences de touches numériques d’atteindre le <xref:System.Windows.Forms.TextBox> contrôle nommé `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="45e06-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>