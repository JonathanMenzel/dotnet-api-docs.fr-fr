<Type Name="ToolStripManager" FullName="System.Windows.Forms.ToolStripManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4922756e5c8ec63d21ee001690976c5f8d6c3414" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39920944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ToolStripManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ToolStripManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolStripManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripManager sealed" />
  <TypeSignature Language="F#" Value="type ToolStripManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contrôle <see cref="T:System.Windows.Forms.ToolStrip" /> le rendu et le rafting et la fusion des objets <see cref="T:System.Windows.Forms.MenuStrip" />, <see cref="T:System.Windows.Forms.ToolStripDropDownMenu" /> et <see cref="T:System.Windows.Forms.ToolStripMenuItem" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStripManager> prend en charge <xref:System.Windows.Forms.ToolStrip>-réalisation des tâches pour des applications entières, telles que les options de fusion, de paramètres et de convertisseur. Surchargées <xref:System.Windows.Forms.ToolStripManager.Merge%2A> méthode combine <xref:System.Windows.Forms.ToolStrip> contrôles avec eux et surchargées <xref:System.Windows.Forms.ToolStripManager.RevertMerge%2A> méthode annule une opération de fusion.  
  
 Utilisez le <xref:System.Windows.Forms.ToolStripRenderer> classe avec la <xref:System.Windows.Forms.ToolStripManager> classe pour obtenir davantage de contrôle et de personnalisation le style de peinture et disposition.  
  
   
  
## Examples  
 L’exemple de code suivant montre tous les scénarios classiques à l’article de fusion de menus.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#1)]  
  
 L’exemple de code suivant illustre un appel à <xref:System.Windows.Forms.ToolStripManager> et quelques-uns de ses membres.  
  
 [!code-cpp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.ToolStrip1#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip1/VB/form1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ToolStripRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripProfessionalRenderer" />
    <altmember cref="T:System.Windows.Forms.ToolStripContainer" />
    <altmember cref="T:System.Windows.Forms.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeIndex" />
    <altmember cref="P:System.Windows.Forms.ToolStripItem.MergeAction" />
    <altmember cref="P:System.Windows.Forms.ToolStrip.AllowMerge" />
  </Docs>
  <Members>
    <Member MemberName="FindToolStrip">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStrip FindToolStrip (string toolStripName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.ToolStrip FindToolStrip(string toolStripName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.FindToolStrip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindToolStrip (toolStripName As String) As ToolStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::ToolStrip ^ FindToolStrip(System::String ^ toolStripName);" />
      <MemberSignature Language="F#" Value="static member FindToolStrip : string -&gt; System.Windows.Forms.ToolStrip" Usage="System.Windows.Forms.ToolStripManager.FindToolStrip toolStripName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStrip</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolStripName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolStripName">Une chaîne qui spécifie le nom du <see cref="T:System.Windows.Forms.ToolStrip" /> ou du type dérivé <see cref="T:System.Windows.Forms.ToolStrip" /> à rechercher.</param>
        <summary>Recherche le <see cref="T:System.Windows.Forms.ToolStrip" /> spécifié ou un type dérivé de <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <returns>
          <see cref="T:System.Windows.Forms.ToolStrip" /> ou un de ses types dérivés tels que spécifiés par le paramètre <paramref name="toolStripName" /> ou <see langword="null" /> si <see cref="T:System.Windows.Forms.ToolStrip" /> est introuvable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A> méthode pour rechercher un <xref:System.Windows.Forms.ToolStrip> ou un objet dérivé <xref:System.Windows.Forms.ToolStrip>. Types dérivés de <xref:System.Windows.Forms.ToolStrip> sont <xref:System.Windows.Forms.StatusStrip>, <xref:System.Windows.Forms.MenuStrip>, <xref:System.Windows.Forms.ToolStripDropDown>, <xref:System.Windows.Forms.ToolStripDropDownMenu>, et <xref:System.Windows.Forms.ContextMenuStrip>. Si l’objet de la recherche n’est pas spécifiquement une <xref:System.Windows.Forms.ToolStrip> mais un de ces types dérivés, effectuer un cast du type de retour en fonction des besoins.  
  
   
  
## Examples  
 L’exemple de code suivant montre une utilisation de la <xref:System.Windows.Forms.ToolStripManager.FindToolStrip%2A> (méthode). Cet exemple fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShortcutDefined">
      <MemberSignature Language="C#" Value="public static bool IsShortcutDefined (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsShortcutDefined(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsShortcutDefined (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsShortcutDefined(System::Windows::Forms::Keys shortcut);" />
      <MemberSignature Language="F#" Value="static member IsShortcutDefined : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.IsShortcutDefined shortcut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">Touche de raccourci à rechercher.</param>
        <summary>Récupère une valeur qui indique si la touche de raccourci spécifiée est utilisée par un des contrôles <see cref="T:System.Windows.Forms.ToolStrip" /> d'un formulaire.</summary>
        <returns>
          <see langword="true" /> si la touche de raccourci est utilisée par un <see cref="T:System.Windows.Forms.ToolStrip" /> sur le formulaire ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidShortcut">
      <MemberSignature Language="C#" Value="public static bool IsValidShortcut (System.Windows.Forms.Keys shortcut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValidShortcut(valuetype System.Windows.Forms.Keys shortcut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.IsValidShortcut(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidShortcut (shortcut As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidShortcut(System::Windows::Forms::Keys shortcut);" />
      <MemberSignature Language="F#" Value="static member IsValidShortcut : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.IsValidShortcut shortcut" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortcut" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="shortcut">Touche de raccourci dont la validité doit être testée.</param>
        <summary>Récupère une valeur qui indique si une touche de raccourci définie par l'utilisateur est valide.</summary>
        <returns>
          <see langword="true" /> si la touche de raccourci est valide ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Touches de raccourci valides sont les touches de fonction F1 à F12 utilisées seules ; touches de fonction avec des modificateurs CTRL, ALT ou MAJ. ; ou d’autres clés avec des modificateurs CTRL, ALT ou MAJ.. CTRL, ALT, ou les touches MAJ et clés autres que les touches de fonction ne sont pas des touches de raccourci valides si utilisé seul.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.IsShortcutDefined(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Charge les paramètres pour un <see cref="T:System.Windows.Forms.Form" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm);" />
      <MemberSignature Language="F#" Value="static member LoadSettings : System.Windows.Forms.Form -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.LoadSettings targetForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="targetForm">
          <see cref="T:System.Windows.Forms.Form" /> dont le nom est également la clé de paramètres.</param>
        <summary>Charge les paramètres pour le <see cref="T:System.Windows.Forms.Form" /> donné à l'aide du nom complet du <see cref="T:System.Windows.Forms.Form" /> comme clé de paramètres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> les contrôles qui ne sont pas sur le formulaire lors de la conception du temps lors du <xref:System.Windows.Forms.ToolStrip> paramètres sont enregistrés sont supprimés de la <xref:System.Windows.Forms.Form> lorsque les paramètres sont chargés. Pour réinitialiser les paramètres, commentez la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> de ligne et de laisser le <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> ligne. Cela ne chargera pas tous les paramètres et persistera le dernier état. Lorsque vous supprimez le commentaire de la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> ligne, ces paramètres seront appliqués.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="targetForm" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadSettings">
      <MemberSignature Language="C#" Value="public static void LoadSettings (System.Windows.Forms.Form targetForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void LoadSettings(class System.Windows.Forms.Form targetForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.LoadSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub LoadSettings (targetForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void LoadSettings(System::Windows::Forms::Form ^ targetForm, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member LoadSettings : System.Windows.Forms.Form * string -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.LoadSettings (targetForm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetForm">
          <see cref="T:System.Windows.Forms.Form" /> pour lequel charger les paramètres.</param>
        <param name="key">
          <see cref="T:System.String" /> représentant la clé des paramètres pour ce <see cref="T:System.Windows.Forms.Form" />.</param>
        <summary>Charge les paramètres pour le <see cref="T:System.Windows.Forms.Form" /> spécifié à l'aide de la clé de paramètres spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> les contrôles qui ne sont pas sur le formulaire lors de la conception du temps lors du <xref:System.Windows.Forms.ToolStrip> paramètres sont enregistrés sont supprimés de la <xref:System.Windows.Forms.Form> lorsque les paramètres sont chargés. Pour réinitialiser les paramètres, commentez la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> de ligne et de laisser le <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> ligne. Cela ne chargera pas tous les paramètres et persistera le dernier état. Lorsque vous supprimez le commentaire de la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> ligne, ces paramètres seront appliqués.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> a la valeur <see langword="null" /> ou est vide.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Combine des contrôles <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="static member Merge : System.Windows.Forms.ToolStrip * string -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.Merge (sourceToolStrip, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> à combiner avec le <see cref="T:System.Windows.Forms.ToolStrip" /> auquel le paramètre <c>targetName</c> fait référence.</param>
        <param name="targetName">Nom du <see cref="T:System.Windows.Forms.ToolStrip" /> qui reçoit le <see cref="T:System.Windows.Forms.ToolStrip" /> auquel le paramètre <c>sourceToolStrip</c> fait référence.</param>
        <summary>Combine deux objets <see cref="T:System.Windows.Forms.ToolStrip" /> du même type.</summary>
        <returns>
          <see langword="true" /> si la fusion est réussie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> méthode combiner <xref:System.Windows.Forms.ToolStrip> objets du même type, tel que <xref:System.Windows.Forms.ToolStrip> objets avec d’autres <xref:System.Windows.Forms.ToolStrip> objets, <xref:System.Windows.Forms.MenuStrip> objets avec d’autres <xref:System.Windows.Forms.MenuStrip> objets et ainsi de suite.  
  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> méthode combiner <xref:System.Windows.Forms.ToolStrip> objets de types différents.  
  
 Le <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> propriété doit être définie sur `true` pour les deux <xref:System.Windows.Forms.ToolStrip> objets et les types source et cible doivent être identiques ou cette méthode retourne `false`.  
  
> [!NOTE]
>  S’il existe deux <xref:System.Windows.Forms.MenuStrip> contrôles sur un formulaire MDI enfant, en définissant <xref:System.Windows.Forms.Form.IsMdiContainer%2A> à `true` pour le parent formulaire fusionne le contenu de seule de la <xref:System.Windows.Forms.MenuStrip> contrôles. Utilisez <xref:System.Windows.Forms.ToolStripManager.Merge%2A> à fusionner le contenu des enfants supplémentaires <xref:System.Windows.Forms.MenuStrip> contrôles sur le formulaire parent MDI.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sourceToolStrip" /> ou <paramref name="targetName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Les paramètres <paramref name="sourceToolStrip" /> ou <paramref name="targetName" /> font référence au même <see cref="T:System.Windows.Forms.ToolStrip" />.</exception>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Merge(class System.Windows.Forms.ToolStrip sourceToolStrip, class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Merge (sourceToolStrip As ToolStrip, targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Merge(System::Windows::Forms::ToolStrip ^ sourceToolStrip, System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberSignature Language="F#" Value="static member Merge : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.Merge (sourceToolStrip, targetToolStrip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> à combiner avec le <see cref="T:System.Windows.Forms.ToolStrip" /> auquel le paramètre <c>targetToolStrip</c> fait référence.</param>
        <param name="targetToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> qui reçoit le <see cref="T:System.Windows.Forms.ToolStrip" /> auquel le paramètre <c>sourceToolStrip</c> fait référence.</param>
        <summary>Combine deux objets <see cref="T:System.Windows.Forms.ToolStrip" /> de types différents.</summary>
        <returns>
          <see langword="true" /> si la fusion est réussie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> méthode combiner <xref:System.Windows.Forms.ToolStrip> objets de types différents.  
  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.Merge%2A?displayProperty=nameWithType> méthode combiner <xref:System.Windows.Forms.ToolStrip> objets du même type, tel que <xref:System.Windows.Forms.ToolStrip> objets avec d’autres <xref:System.Windows.Forms.ToolStrip> objets, <xref:System.Windows.Forms.MenuStrip> objets avec d’autres <xref:System.Windows.Forms.MenuStrip> objets et ainsi de suite.  
  
 Le <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> propriété doit être définie sur `true` pour les deux <xref:System.Windows.Forms.ToolStrip> objets ou cette méthode retourne `false`.  
  
> [!NOTE]
>  S’il existe deux <xref:System.Windows.Forms.MenuStrip> contrôles sur un formulaire MDI enfant, en définissant <xref:System.Windows.Forms.Form.IsMdiContainer%2A> à `true` pour le parent formulaire fusionne le contenu de seule de la <xref:System.Windows.Forms.MenuStrip> contrôles. Utilisez <xref:System.Windows.Forms.ToolStripManager.Merge%2A> à fusionner le contenu des enfants supplémentaires <xref:System.Windows.Forms.MenuStrip> contrôles sur le formulaire parent MDI.  
  
   
  
## Examples  
 L’exemple de code suivant fusionne des éléments de menu en fonction de choix spécifié. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripManager> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="Renderer">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripRenderer Renderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Forms.ToolStripRenderer Renderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.Renderer" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Renderer As ToolStripRenderer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripRenderer ^ Renderer { System::Windows::Forms::ToolStripRenderer ^ get(); void set(System::Windows::Forms::ToolStripRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renderer : System.Windows.Forms.ToolStripRenderer with get, set" Usage="System.Windows.Forms.ToolStripManager.Renderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les styles de peinture par défaut pour le formulaire.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripRenderer" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> propriété est utilisée lorsque le <xref:System.Windows.Forms.ToolStrip.RenderMode%2A> propriété du courant <xref:System.Windows.Forms.ToolStrip> est défini sur <xref:System.Windows.Forms.ToolStripRenderMode.ManagerRenderMode>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appliquer un convertisseur professionnel personnalisé à un individu <xref:System.Windows.Forms.ToolStrip> ou à l’application dans son ensemble.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#70)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#70)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendererChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler RendererChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RendererChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripManager.RendererChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event RendererChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ RendererChanged;" />
      <MemberSignature Language="F#" Value="member this.RendererChanged : EventHandler " Usage="member this.RendererChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" /> change.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur la gestion des événements, voir [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
> [!CAUTION]
>  Pour éviter les fuites de mémoire, désactivez cet événement lorsque votre application est supprimée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements des rapports sur l’occurrence de la <xref:System.Windows.Forms.ToolStripManager.RendererChanged> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un multiligne <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripManager> nommé `ToolStripManager1`. Puis vous assurer que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripManager.RendererChanged> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#603](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#603)]
 [!code-vb[System.Windows.Forms.EventExamples#603](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#603)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ToolStripManagerRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ToolStripManagerRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenderMode As ToolStripManagerRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::ToolStripManagerRenderMode RenderMode { System::Windows::Forms::ToolStripManagerRenderMode get(); void set(System::Windows::Forms::ToolStripManagerRenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.RenderMode : System.Windows.Forms.ToolStripManagerRenderMode with get, set" Usage="System.Windows.Forms.ToolStripManager.RenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ToolStripManagerRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le thème par défaut pour le formulaire.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Windows.Forms.ToolStripManager.RenderMode%2A> propriété à obtenir ou définir si l’application est peinte par le <xref:System.Windows.Forms.ToolStripProfessionalRenderer>, le <xref:System.Windows.Forms.ToolStripSystemRenderer>, ou un texte personnalisé <xref:System.Windows.Forms.ToolStripRenderer>.  
  
   
  
## Examples  
 L’exemple de code suivant montre une utilisation de la <xref:System.Windows.Forms.ToolStripManager.RenderMode%2A> propriété. Cet exemple fait partie d’un exemple plus complet fourni pour le <xref:System.Windows.Forms.ToolStripManager.Renderer%2A> propriété.  
  
 [!code-csharp[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/CS/Program.cs#80)]
 [!code-vb[System.Windows.Forms.ToolStrip.Misc#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStrip.Misc/VB/Program.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur définie n'est pas une valeur <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="T:System.Windows.Forms.ToolStripManagerRenderMode" /> a la valeur <see cref="F:System.Windows.Forms.ToolStripManagerRenderMode.Custom" /> ; utilisez à la place la propriété <see cref="P:System.Windows.Forms.ToolStripManager.Renderer" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RevertMerge">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Annule une fusion de deux objets <see cref="T:System.Windows.Forms.ToolStrip" />.</summary>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : string -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge targetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName">Le nom du <see cref="T:System.Windows.Forms.ToolStripItem" /> pour lequel annuler une opération de fusion.</param>
        <summary>Annule une fusion de deux objets <see cref="T:System.Windows.Forms.ToolStrip" />, en retournant le <see cref="T:System.Windows.Forms.ToolStrip" /> avec le nom spécifié à son état avant la fusion et en annulant toutes les opérations de fusion antérieures.</summary>
        <returns>
          <see langword="true" /> si l'annulation de la fusion est réussie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> propriété doit être définie sur `true` pour les deux <xref:System.Windows.Forms.ToolStrip> objets ou cette méthode retourne `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge targetToolStrip" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">
          <see cref="T:System.Windows.Forms.ToolStripItem" /> pour lequel annuler une opération de fusion.</param>
        <summary>Annule une fusion de deux objets <see cref="T:System.Windows.Forms.ToolStrip" />, en retournant le <see cref="T:System.Windows.Forms.ToolStrip" /> spécifié à son état avant la fusion et en annulant toutes les opérations de fusion antérieures.</summary>
        <returns>
          <see langword="true" /> si l'annulation de la fusion est réussie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> propriété doit être définie sur `true` pour les deux <xref:System.Windows.Forms.ToolStrip> objets ou cette méthode retourne `false`.  
  
   
  
## Examples  
 L’exemple de code suivant annule la fusion d’éléments de menu. Cet exemple fait partie d’un exemple plus complet disponible dans le <xref:System.Windows.Forms.ToolStripManager> vue d’ensemble de la classe.  
  
 [!code-csharp[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.ContextMenuStripMerge#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ContextMenuStripMerge/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripManager.Merge(System.Windows.Forms.ToolStrip,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RevertMerge">
      <MemberSignature Language="C#" Value="public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip, System.Windows.Forms.ToolStrip sourceToolStrip);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RevertMerge(class System.Windows.Forms.ToolStrip targetToolStrip, class System.Windows.Forms.ToolStrip sourceToolStrip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.RevertMerge(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RevertMerge (targetToolStrip As ToolStrip, sourceToolStrip As ToolStrip) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RevertMerge(System::Windows::Forms::ToolStrip ^ targetToolStrip, System::Windows::Forms::ToolStrip ^ sourceToolStrip);" />
      <MemberSignature Language="F#" Value="static member RevertMerge : System.Windows.Forms.ToolStrip * System.Windows.Forms.ToolStrip -&gt; bool" Usage="System.Windows.Forms.ToolStripManager.RevertMerge (targetToolStrip, sourceToolStrip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetToolStrip" Type="System.Windows.Forms.ToolStrip" />
        <Parameter Name="sourceToolStrip" Type="System.Windows.Forms.ToolStrip" />
      </Parameters>
      <Docs>
        <param name="targetToolStrip">Le nom du <see cref="T:System.Windows.Forms.ToolStripItem" /> pour lequel annuler une opération de fusion.</param>
        <param name="sourceToolStrip">
          <see cref="T:System.Windows.Forms.ToolStrip" /> qui a été fusionné avec le <c>targetToolStrip</c>.</param>
        <summary>Annule une fusion de deux objets <see cref="T:System.Windows.Forms.ToolStrip" />, en restaurant les deux contrôles <see cref="T:System.Windows.Forms.ToolStrip" /> à leur état avant la fusion et en annulant toutes les opérations de fusion antérieures.</summary>
        <returns>
          <see langword="true" /> si l'annulation de la fusion est réussie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ToolStrip.AllowMerge%2A?displayProperty=nameWithType> propriété doit être définie sur `true` pour les deux <xref:System.Windows.Forms.ToolStrip> objets ou cette méthode retourne `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceToolStrip" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveSettings">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Enregistre les paramètres pour le <see cref="T:System.Windows.Forms.Form" />spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm);" />
      <MemberSignature Language="F#" Value="static member SaveSettings : System.Windows.Forms.Form -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.SaveSettings sourceForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="sourceForm">
          <see cref="T:System.Windows.Forms.Form" /> dont le nom est également la clé de paramètres.</param>
        <summary>Enregistre les paramètres pour le <see cref="T:System.Windows.Forms.Form" /> donné à l'aide du nom complet du <see cref="T:System.Windows.Forms.Form" /> comme clé de paramètres.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> les contrôles qui ne sont pas sur le formulaire lors de la conception du temps lors du <xref:System.Windows.Forms.ToolStrip> paramètres sont enregistrés sont supprimés de la <xref:System.Windows.Forms.Form> lorsque les paramètres sont chargés. Pour réinitialiser les paramètres, commentez la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> de ligne et de laisser le <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> ligne. Cela ne chargera pas tous les paramètres et persistera le dernier état. Lorsque vous supprimez le commentaire de la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> ligne, ces paramètres seront appliqués.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="sourceForm" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public static void SaveSettings (System.Windows.Forms.Form sourceForm, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SaveSettings(class System.Windows.Forms.Form sourceForm, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripManager.SaveSettings(System.Windows.Forms.Form,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SaveSettings (sourceForm As Form, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SaveSettings(System::Windows::Forms::Form ^ sourceForm, System::String ^ key);" />
      <MemberSignature Language="F#" Value="static member SaveSettings : System.Windows.Forms.Form * string -&gt; unit" Usage="System.Windows.Forms.ToolStripManager.SaveSettings (sourceForm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceForm" Type="System.Windows.Forms.Form" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceForm">
          <see cref="T:System.Windows.Forms.Form" /> pour lequel enregistrer les paramètres.</param>
        <param name="key">
          <see cref="T:System.String" /> représentant la clé des paramètres pour ce <see cref="T:System.Windows.Forms.Form" />.</param>
        <summary>Enregistre les paramètres pour le <see cref="T:System.Windows.Forms.Form" /> spécifié à l'aide de la clé de paramètres spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ToolStrip> les contrôles qui ne sont pas sur le formulaire lors de la conception du temps lors du <xref:System.Windows.Forms.ToolStrip> paramètres sont enregistrés sont supprimés de la <xref:System.Windows.Forms.Form> lorsque les paramètres sont chargés. Pour réinitialiser les paramètres, commentez la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> de ligne et de laisser le <xref:System.Windows.Forms.ToolStripManager.SaveSettings%2A> ligne. Cela ne chargera pas tous les paramètres et persistera le dernier état. Lorsque vous supprimez le commentaire de la <xref:System.Windows.Forms.ToolStripManager.LoadSettings%2A> ligne, ces paramètres seront appliqués.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> a la valeur <see langword="null" /> ou est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="VisualStylesEnabled">
      <MemberSignature Language="C#" Value="public static bool VisualStylesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool VisualStylesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripManager.VisualStylesEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property VisualStylesEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool VisualStylesEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.VisualStylesEnabled : bool with get, set" Usage="System.Windows.Forms.ToolStripManager.VisualStylesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Windows.Forms.ToolStrip" /> est restitué à l'aide d'informations de style visuel appelées thèmes.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStripItem" /> est restitué à l'aide de thèmes; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>