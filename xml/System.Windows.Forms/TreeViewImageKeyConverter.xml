<Type Name="TreeViewImageKeyConverter" FullName="System.Windows.Forms.TreeViewImageKeyConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7709a45e1d830ec08c3dd457d7bc8066a31886e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39991469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeViewImageKeyConverter : System.Windows.Forms.ImageKeyConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeViewImageKeyConverter extends System.Windows.Forms.ImageKeyConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TreeViewImageKeyConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeViewImageKeyConverter&#xA;Inherits ImageKeyConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeViewImageKeyConverter : System::Windows::Forms::ImageKeyConverter" />
  <TypeSignature Language="F#" Value="type TreeViewImageKeyConverter = class&#xA;    inherit ImageKeyConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ImageKeyConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un convertisseur de type pour convertir les données d'une clé d'image vers et à partir d'un autre type de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TreeViewImageKeyConverter> classe est utilisée pour convertir des valeurs de clé d’une image associée à un <xref:System.Windows.Forms.TreeView> contrôle vers et depuis d’autres types de données. Pour plus d’informations sur les convertisseurs de type, consultez la <xref:System.ComponentModel.TypeConverter> classe de base et [Comment : implémenter un convertisseur de Type](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).  
  
> [!NOTE]
>  En règle générale, vous ne créez pas directement une instance d’un <xref:System.Windows.Forms.TreeViewImageKeyConverter>. Au lieu de cela, appelez la méthode <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la classe <xref:System.ComponentModel.TypeDescriptor>. Pour plus d’informations, consultez les exemples dans la <xref:System.ComponentModel.TypeConverter> classe de base.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ImageList" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeViewImageKeyConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeViewImageKeyConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeViewImageKeyConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.TreeViewImageKeyConverter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TreeViewImageKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="treeViewImageKeyConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> fournissant un contexte de format pouvant être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur de type est appelé. Ce paramètre ou les propriétés de ce paramètre peuvent être <see langword="null" />.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> qui fournit des informations sur les paramètres régionaux.</param>
        <param name="value">Objet à convertir, en général une clé d'image.</param>
        <param name="destinationType">Type dans lequel convertir l'objet.</param>
        <summary>Convertit l'objet spécifié en un objet du type spécifié à l'aide des informations de culture et du contexte spécifiés.</summary>
        <returns>
          <see cref="T:System.Object" /> qui représente <paramref name="value" /> converti.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> est <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">La <paramref name="value" /> spécifiée ne peut pas être convertie en <paramref name="destinationType" /> spécifié.</exception>
      </Docs>
    </Member>
  </Members>
</Type>