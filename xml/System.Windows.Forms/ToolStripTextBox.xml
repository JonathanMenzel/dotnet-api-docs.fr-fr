<Type Name="ToolStripTextBox" FullName="System.Windows.Forms.ToolStripTextBox">
  <TypeSignature Language="C#" Value="public class ToolStripTextBox : System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToolStripTextBox extends System.Windows.Forms.ToolStripControlHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ToolStripTextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolStripTextBox&#xA;Inherits ToolStripControlHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolStripTextBox : System::Windows::Forms::ToolStripControlHost" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ToolStripControlHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Forms.Design.ToolStripItemDesignerAvailability(System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.MenuStrip | System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ContextMenuStrip)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e0249-101">Représente une zone de texte dans un <see cref="T:System.Windows.Forms.ToolStrip" /> qui permet à l'utilisateur d'entrer du texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-101">Represents a text box in a <see cref="T:System.Windows.Forms.ToolStrip" /> that allows the user to enter text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-102"><xref:System.Windows.Forms.ToolStripTextBox> est la <xref:System.Windows.Forms.TextBox> optimisé pour l’hébergement dans un <xref:System.Windows.Forms.ToolStrip>.</span><span class="sxs-lookup"><span data-stu-id="e0249-102"><xref:System.Windows.Forms.ToolStripTextBox> is the <xref:System.Windows.Forms.TextBox> optimized for hosting in a <xref:System.Windows.Forms.ToolStrip>.</span></span> <span data-ttu-id="e0249-103">Un sous-ensemble de propriétés et les événements du contrôle hébergé est exposé à la <xref:System.Windows.Forms.ToolStripTextBox> niveau mais sous-jacent <xref:System.Windows.Forms.TextBox> contrôle est accessible via la <xref:System.Windows.Forms.ToolStripTextBox.TextBox%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-103">A subset of the hosted control's properties and events are exposed at the <xref:System.Windows.Forms.ToolStripTextBox> level, but the underlying <xref:System.Windows.Forms.TextBox> control is fully accessible through the <xref:System.Windows.Forms.ToolStripTextBox.TextBox%2A> property.</span></span>  
  
 <span data-ttu-id="e0249-104">Le <xref:System.Windows.Forms.ToolStripTextBox> contrôle permet à l’utilisateur à entrer du texte dans une application.</span><span class="sxs-lookup"><span data-stu-id="e0249-104">The <xref:System.Windows.Forms.ToolStripTextBox> control allows the user to enter text in an application.</span></span> <span data-ttu-id="e0249-105">Ce contrôle comporte des fonctionnalités supplémentaires qui ne se trouve pas dans le contrôle zone de texte Windows standard, y compris les fonctions d’édition multiligne.</span><span class="sxs-lookup"><span data-stu-id="e0249-105">This control has additional functionality that is not found in the standard Windows text box control, including multiline editing.</span></span>  
  
 <span data-ttu-id="e0249-106">En règle générale, un <xref:System.Windows.Forms.ToolStripTextBox> contrôle est utilisé pour afficher une seule ligne de texte ou accepter comme entrée.</span><span class="sxs-lookup"><span data-stu-id="e0249-106">Typically, a <xref:System.Windows.Forms.ToolStripTextBox> control is used to display a single line of text or accept it as input.</span></span> <span data-ttu-id="e0249-107">Vous pouvez utiliser la <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> pour activer plusieurs lignes de texte peuvent être affichées ou entrée.</span><span class="sxs-lookup"><span data-stu-id="e0249-107">You can use the <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> to enable multiple lines of text to be displayed or entered.</span></span> <span data-ttu-id="e0249-108">Définir le <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> et <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> propriétés `true` pour permettre la manipulation de texte dans un élément <xref:System.Windows.Forms.ToolStripTextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-108">Set the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> and <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> properties to `true` to allow greater text manipulation in a multiline <xref:System.Windows.Forms.ToolStripTextBox> control.</span></span>  
  
 <span data-ttu-id="e0249-109">Vous pouvez limiter la quantité de texte entré dans un <xref:System.Windows.Forms.ToolStripTextBox> contrôle en définissant le <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> propriété à un nombre spécifique de caractères.</span><span class="sxs-lookup"><span data-stu-id="e0249-109">You can limit the amount of text entered into a <xref:System.Windows.Forms.ToolStripTextBox> control by setting the <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> property to a specific number of characters.</span></span> <span data-ttu-id="e0249-110">Utilisez le <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> propriété pour autoriser l’utilisateur à taper uniquement des majuscules, des minuscules ou une combinaison de caractères majuscules et minuscules dans le <xref:System.Windows.Forms.ToolStripTextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-110">Use the <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> property to allow the user to type only uppercase, only lowercase, or a combination of uppercase and lowercase characters into the <xref:System.Windows.Forms.ToolStripTextBox> control.</span></span>  
  
 <span data-ttu-id="e0249-111">Pour limiter le texte à partir de l’entrée dans un <xref:System.Windows.Forms.ToolStripTextBox> (contrôle), vous pouvez créer un gestionnaire d’événements pour le <xref:System.Windows.Forms.Control.KeyDown> événement afin de valider chaque caractère entré dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-111">To restrict text from being entered in a <xref:System.Windows.Forms.ToolStripTextBox> control, you can create an event handler for the <xref:System.Windows.Forms.Control.KeyDown> event in order to validate each character entered in the control.</span></span> <span data-ttu-id="e0249-112">Vous pouvez également limiter toute entrée de données dans un <xref:System.Windows.Forms.ToolStripTextBox> contrôle en définissant le <xref:System.Windows.Forms.ToolStripTextBox.ReadOnly%2A> propriété `true`.</span><span class="sxs-lookup"><span data-stu-id="e0249-112">You can also restrict all entry of data in a <xref:System.Windows.Forms.ToolStripTextBox> control by setting the <xref:System.Windows.Forms.ToolStripTextBox.ReadOnly%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-113">L’exemple de code suivant montre un <xref:System.Windows.Forms.ToolStripTextBox> avec différents paramètres de propriété courants, y compris les options de saisie semi-automatique.</span><span class="sxs-lookup"><span data-stu-id="e0249-113">The following code example demonstrates a <xref:System.Windows.Forms.ToolStripTextBox> with various common property settings, including automatic completion options.</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e0249-114">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripTextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-115">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-115">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripTextBox(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e0249-116">Nom du <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-116">The name of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></param>
        <summary><span data-ttu-id="e0249-117">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripTextBox" /> avec le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-117">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolStripTextBox (System.Windows.Forms.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.#ctor(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolStripTextBox(System::Windows::Forms::Control ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="e0249-118">Contrôle à partir duquel dériver <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-118">The control from which to derive the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></param>
        <summary><span data-ttu-id="e0249-119">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ToolStripTextBox" /> dérivée d'un contrôle de base.</span><span class="sxs-lookup"><span data-stu-id="e0249-119">Initializes a new instance of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> class derived from a base control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-120">Obtient ou définit une valeur indiquant si le fait d'appuyer sur la touche ENTRÉE dans un contrôle <see cref="T:System.Windows.Forms.TextBox" /> multiligne entraîne la création d'une nouvelle ligne de texte dans le contrôle ou l'activation du bouton par défaut sur le formulaire.</span><span class="sxs-lookup"><span data-stu-id="e0249-120">Gets or sets a value indicating whether pressing ENTER in a multiline <see cref="T:System.Windows.Forms.TextBox" /> control creates a new line of text in the control or activates the default button for the form.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-121"><see langword="true" /> si la touche ENTRÉE crée une ligne de texte dans un contrôle multiligne, <see langword="false" /> si elle active le bouton par défaut sur le formulaire.</span><span class="sxs-lookup"><span data-stu-id="e0249-121"><see langword="true" /> if the ENTER key creates a new line of text in a multiline version of the control; <see langword="false" /> if the ENTER key activates the default button for the form.</span></span> <span data-ttu-id="e0249-122">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-122">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-123">Si la valeur de cette propriété est `false`, l’utilisateur doit appuyer sur CTRL + ENTRÉE pour créer une nouvelle ligne dans un élément <xref:System.Windows.Forms.ToolStripTextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-123">If the value of this property is `false`, the user must press CTRL+ENTER to create a new line in a multiline <xref:System.Windows.Forms.ToolStripTextBox> control.</span></span> <span data-ttu-id="e0249-124">S’il n’existe pas de bouton par défaut pour le formulaire, la touche ENTRÉE crée toujours une nouvelle ligne de texte dans le contrôle, quelle que soit la valeur de cette propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-124">If there is no default button for the form, then the ENTER key will always create a new line of text in the control, no matter what the value of this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-125">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-125">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsReturn%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-126">Obtient ou définit une valeur indiquant si le fait d'appuyer sur la touche Tab dans un contrôle zone de texte multiligne entraîne l'ajout d'un caractère de tabulation dans le contrôle ou bien le déplacement du focus dans le contrôle suivant selon l'ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="e0249-126">Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-127"><see langword="true" /> s'il est possible d'ajouter des caractères de tabulation dans une zone de texte multiligne à l'aide de la touche TAB ; <see langword="false" /> si l'utilisation de la touche TAB déplace le focus.</span><span class="sxs-lookup"><span data-stu-id="e0249-127"><see langword="true" /> if users can enter tabs in a multiline text box using the TAB key; <see langword="false" /> if pressing the TAB key moves the focus.</span></span> <span data-ttu-id="e0249-128">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-129">Si le <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> est définie sur `true`, l’utilisateur doit appuyer sur CTRL + TAB pour déplacer le focus vers le contrôle suivant dans l’ordre de tabulation.</span><span class="sxs-lookup"><span data-stu-id="e0249-129">If the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> property is set to `true`, the user must press CTRL+TAB to move the focus to the next control in the tab order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-130">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-130">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTab%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AcceptsReturn" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AcceptsTabChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AcceptsTabChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AcceptsTabChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AcceptsTabChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-131">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.AcceptsTab" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-131">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.AcceptsTab" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-132">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-132">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-133">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-133">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-134">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-134">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> event.</span></span> <span data-ttu-id="e0249-135">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-135">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-136">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-136">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-137">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-137">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-138">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-138">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#612](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#612)]
 [!code-vb[System.Windows.Forms.EventExamples#612](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#612)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e0249-139">Texte à ajouter au contenu en cours de <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-139">The text to append to the current contents of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></param>
        <summary><span data-ttu-id="e0249-140">Ajoute du texte au texte en cours de <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-140">Appends text to the current text of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteCustomSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AutoCompleteStringCollection AutoCompleteCustomSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteCustomSource As AutoCompleteStringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteStringCollection ^ AutoCompleteCustomSource { System::Windows::Forms::AutoCompleteStringCollection ^ get(); void set(System::Windows::Forms::AutoCompleteStringCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteStringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-141">Obtient ou définit une collection de chaînes personnalisée à utiliser lorsque la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" /> a la valeur <see langword="CustomSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-141">Gets or sets a custom string collection to use when the <see cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" /> property is set to <see langword="CustomSource" />.</span></span></summary>
        <value><span data-ttu-id="e0249-142"><see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> à utiliser avec <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-142">An <see cref="T:System.Windows.Forms.AutoCompleteStringCollection" /> to use with <see cref="P:System.Windows.Forms.TextBox.AutoCompleteSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-143">Utilisez le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriétés afin de créer un <xref:System.Windows.Forms.ToolStripTextBox> qui complète automatiquement les chaînes d’entrée en comparant le préfixe entré aux préfixes de toutes les chaînes d’une source gérée.</span><span class="sxs-lookup"><span data-stu-id="e0249-143">Use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ToolStripTextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e0249-144">Cela est utile pour <xref:System.Windows.Forms.ToolStripTextBox> les contrôles dans lesquels des URL, des adresses, des noms de fichiers ou commandes seront fréquemment entrés.</span><span class="sxs-lookup"><span data-stu-id="e0249-144">This is useful for <xref:System.Windows.Forms.ToolStripTextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e0249-145">L’utilisation de la <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> propriété est facultative, mais vous devez définir le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriété `CustomSource` pour pouvoir utiliser <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0249-145">The use of the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e0249-146">Vous devez utiliser le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> , ensemble de propriétés.</span><span class="sxs-lookup"><span data-stu-id="e0249-146">You must use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-147">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-147">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteMode AutoCompleteMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteMode AutoCompleteMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteMode As AutoCompleteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteMode AutoCompleteMode { System::Windows::Forms::AutoCompleteMode get(); void set(System::Windows::Forms::AutoCompleteMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-148">Obtient ou définit une option qui contrôle le fonctionnement de la saisie semi-automatique pour <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-148">Gets or sets an option that controls how automatic completion works for the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <value><span data-ttu-id="e0249-149">Une des valeurs de <see cref="T:System.Windows.Forms.AutoCompleteMode" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-149">One of the <see cref="T:System.Windows.Forms.AutoCompleteMode" /> values.</span></span> <span data-ttu-id="e0249-150">La valeur par défaut est <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-150">The default is <see cref="F:System.Windows.Forms.AutoCompleteMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-151">Utilisez le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriétés afin de créer un <xref:System.Windows.Forms.ToolStripTextBox> qui complète automatiquement les chaînes d’entrée en comparant le préfixe entré aux préfixes de toutes les chaînes d’une source gérée.</span><span class="sxs-lookup"><span data-stu-id="e0249-151">Use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ToolStripTextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e0249-152">Cela est utile pour <xref:System.Windows.Forms.ToolStripTextBox> les contrôles dans lesquels des URL, des adresses, des noms de fichiers ou commandes seront fréquemment entrés.</span><span class="sxs-lookup"><span data-stu-id="e0249-152">This is useful for <xref:System.Windows.Forms.ToolStripTextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e0249-153">L’utilisation de la <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> propriété est facultative, mais vous devez définir le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriété `CustomSource` pour pouvoir utiliser <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0249-153">The use of the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e0249-154">Vous devez utiliser le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> , ensemble de propriétés.</span><span class="sxs-lookup"><span data-stu-id="e0249-154">You must use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-155">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-155">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteSource">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AutoCompleteSource AutoCompleteSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AutoCompleteSource AutoCompleteSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoCompleteSource As AutoCompleteSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AutoCompleteSource AutoCompleteSource { System::Windows::Forms::AutoCompleteSource get(); void set(System::Windows::Forms::AutoCompleteSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoCompleteSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-156">Obtient ou définit une valeur qui spécifie la source de chaînes complètes utilisées pour la saisie semi-automatique.</span><span class="sxs-lookup"><span data-stu-id="e0249-156">Gets or sets a value specifying the source of complete strings used for automatic completion.</span></span></summary>
        <value><span data-ttu-id="e0249-157">Une des valeurs de <see cref="T:System.Windows.Forms.AutoCompleteSource" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-157">One of the <see cref="T:System.Windows.Forms.AutoCompleteSource" /> values.</span></span> <span data-ttu-id="e0249-158">La valeur par défaut est <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-158">The default is <see cref="F:System.Windows.Forms.AutoCompleteSource.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-159">Utilisez le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriétés afin de créer un <xref:System.Windows.Forms.ToolStripTextBox> qui complète automatiquement les chaînes d’entrée en comparant le préfixe entré aux préfixes de toutes les chaînes d’une source gérée.</span><span class="sxs-lookup"><span data-stu-id="e0249-159">Use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>, <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A>, and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties to create a <xref:System.Windows.Forms.ToolStripTextBox> that automatically completes input strings by comparing the prefix being entered to the prefixes of all strings in a maintained source.</span></span> <span data-ttu-id="e0249-160">Cela est utile pour <xref:System.Windows.Forms.ToolStripTextBox> les contrôles dans lesquels des URL, des adresses, des noms de fichiers ou commandes seront fréquemment entrés.</span><span class="sxs-lookup"><span data-stu-id="e0249-160">This is useful for <xref:System.Windows.Forms.ToolStripTextBox> controls in which URLs, addresses, file names, or commands will be frequently entered.</span></span>  
  
 <span data-ttu-id="e0249-161">L’utilisation de la <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> propriété est facultative, mais vous devez définir le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriété `CustomSource` pour pouvoir utiliser <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="e0249-161">The use of the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A> property is optional, but you must set the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> property to `CustomSource` in order to use <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource%2A>.</span></span>  
  
 <span data-ttu-id="e0249-162">Vous devez utiliser le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> et <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> , ensemble de propriétés.</span><span class="sxs-lookup"><span data-stu-id="e0249-162">You must use the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode%2A> and <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> properties together.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-163">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-163">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.AutoCompleteSource%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteCustomSource" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.AutoCompleteMode" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-164">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-164">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="e0249-165">Image d'arrière-plan affichée dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-165">The background image displayed in the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-166">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-166">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-167">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-167">This property is not relevant to this class.</span></span></summary>
        <value><span data-ttu-id="e0249-168">Valeur <see cref="T:System.Windows.Forms.ImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-168">An <see cref="T:System.Windows.Forms.ImageLayout" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-169">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-169">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::BorderStyle BorderStyle { System::Windows::Forms::BorderStyle get(); void set(System::Windows::Forms::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-504)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-170">Obtient ou définit le type de bordure du contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-170">Gets or sets the border type of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e0249-171">Une des valeurs de <see cref="T:System.Windows.Forms.BorderStyle" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-171">One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values.</span></span> <span data-ttu-id="e0249-172">La valeur par défaut est <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-172">The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-173">Vous pouvez utiliser le <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> propriété à créer des contrôles sans bordure plat, outre le contrôle en trois dimensions par défaut.</span><span class="sxs-lookup"><span data-stu-id="e0249-173">You can use the <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> property to create borderless and flat style controls, in addition to the default three-dimensional control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-174">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-174">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.BorderStyle%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BorderStyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BorderStyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BorderStyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BorderStyleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-175">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.BorderStyle" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-175">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.BorderStyle" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-176">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-176">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-177">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-177">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-178">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-178">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> event.</span></span> <span data-ttu-id="e0249-179">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-179">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-180">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-180">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-181">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-181">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-182">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-182">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#613](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#613)]
 [!code-vb[System.Windows.Forms.EventExamples#613](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#613)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-183">Obtient une valeur indiquant si l'utilisateur peut annuler l'opération précédente dans un contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-183">Gets a value indicating whether the user can undo the previous operation in a <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-184"><see langword="true" /> s'il est possible d'annuler l'opération précédente effectuée sur le contrôle zone de texte ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-184"><see langword="true" /> if the user can undo the previous operation performed in a text box control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-185">Si cette méthode retourne `true`, vous pouvez appeler la <xref:System.Windows.Forms.ToolStripTextBox.Undo%2A> méthode pour annuler la dernière opération dans un <xref:System.Windows.Forms.ToolStripTextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-185">If this method returns `true`, you can call the <xref:System.Windows.Forms.ToolStripTextBox.Undo%2A> method to undo the last operation in a <xref:System.Windows.Forms.ToolStripTextBox>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CharacterCasing CharacterCasing { System::Windows::Forms::CharacterCasing get(); void set(System::Windows::Forms::CharacterCasing value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-186">Obtient ou définit si le contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" /> modifie la casse des caractères au fur et à mesure de la saisie.</span><span class="sxs-lookup"><span data-stu-id="e0249-186">Gets or sets whether the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control modifies the case of characters as they are typed.</span></span></summary>
        <value><span data-ttu-id="e0249-187">Une des valeurs de <see cref="T:System.Windows.Forms.CharacterCasing" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-187">One of the <see cref="T:System.Windows.Forms.CharacterCasing" /> values.</span></span> <span data-ttu-id="e0249-188">La valeur par défaut est <see cref="F:System.Windows.Forms.CharacterCasing.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-188">The default is <see cref="F:System.Windows.Forms.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-189">Vous pouvez utiliser le <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> propriété à modifier la casse des caractères requis par votre application.</span><span class="sxs-lookup"><span data-stu-id="e0249-189">You can use the <xref:System.Windows.Forms.TextBox.CharacterCasing%2A> property to change the case of characters as required by your application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-190">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-190">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.CharacterCasing%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-191">Efface tout le texte du contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-191">Clears all text from the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.ClearUndo" />
      </Docs>
    </Member>
    <Member MemberName="ClearUndo">
      <MemberSignature Language="C#" Value="public void ClearUndo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearUndo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.ClearUndo" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearUndo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearUndo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-192">Efface les informations sur la dernière opération effectuée à partir de la mémoire tampon d'annulation de <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-192">Clears information about the most recent operation from the undo buffer of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-193">Vous pouvez utiliser cette méthode pour empêcher une opération d’annulation de la répétition, selon l’état de votre application.</span><span class="sxs-lookup"><span data-stu-id="e0249-193">You can use this method to prevent an undo operation from repeating, based on the state of your application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-194">Copie la sélection active dans <see cref="T:System.Windows.Forms.ToolStripTextBox" /> vers le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-194">Copies the current selection in the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> to the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-195">Vous pouvez utiliser cette méthode, au lieu d’utiliser le <xref:System.Windows.Forms.Clipboard> (classe), pour copier du texte dans le <xref:System.Windows.Forms.ToolStripTextBox> et les placer dans le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-195">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the <xref:System.Windows.Forms.ToolStripTextBox> and place it in the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-196">Déplace la sélection active dans <see cref="T:System.Windows.Forms.ToolStripTextBox" /> vers le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-196">Moves the current selection in the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> to the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-197">Cette méthode coupe un texte à partir de la <xref:System.Windows.Forms.ToolStripTextBox> si le texte est sélectionné dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-197">This method will only cut text from the <xref:System.Windows.Forms.ToolStripTextBox> if text is selected in the control.</span></span> <span data-ttu-id="e0249-198">Vous pouvez utiliser cette méthode, au lieu d’utiliser le <xref:System.Windows.Forms.Clipboard> (classe), pour copier du texte dans le <xref:System.Windows.Forms.ToolStripTextBox> et déplacez-le vers le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-198">You can use this method, instead of using the <xref:System.Windows.Forms.Clipboard> class, to copy text in the <xref:System.Windows.Forms.ToolStripTextBox> and move it to the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-199">Obtient l'espacement, en pixels, entre <see cref="T:System.Windows.Forms.ToolStripTextBox" /> et les éléments adjacents.</span><span class="sxs-lookup"><span data-stu-id="e0249-199">Gets the spacing, in pixels, between the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> and adjacent items.</span></span></summary>
        <value><span data-ttu-id="e0249-200">Valeur <see cref="T:System.Windows.Forms.Padding" /> qui représente l'espacement.</span><span class="sxs-lookup"><span data-stu-id="e0249-200">A <see cref="T:System.Windows.Forms.Padding" /> value representing the spacing.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-201">Obtient la taille par défaut de <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-201">Gets the default size of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <value><span data-ttu-id="e0249-202"><see cref="T:System.Drawing.Size" /> par défaut de <see cref="T:System.Windows.Forms.ToolStripTextBox" /> en pixels.</span><span class="sxs-lookup"><span data-stu-id="e0249-202">The default <see cref="T:System.Drawing.Size" /> of the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> in pixels.</span></span> <span data-ttu-id="e0249-203">La taille par défaut est 100 pixels par 25 pixels.</span><span class="sxs-lookup"><span data-stu-id="e0249-203">The default size is 100 pixels by 25 pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e0249-204">Afin de maintenir des performances optimales, vous ne devez pas définir le <xref:System.Drawing.Size> d’un <xref:System.Windows.Forms.ToolStripTextBox> dans son constructeur.</span><span class="sxs-lookup"><span data-stu-id="e0249-204">In order to maintain better performance, you should not set the <xref:System.Drawing.Size> of a <xref:System.Windows.Forms.ToolStripTextBox> in its constructor.</span></span> <span data-ttu-id="e0249-205">La méthode recommandée consiste à remplacer le <xref:System.Windows.Forms.ToolStripTextBox.DefaultSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-205">The preferred method is to override the <xref:System.Windows.Forms.ToolStripTextBox.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-206">Lors de la substitution du <see cref="P:System.Windows.Forms.ToolStripTextBox.DefaultSize" /> propriété dans une classe dérivée, il est préférable de retourner un <see cref="T:System.Drawing.Size" /> de l’objet avec les dimensions voulues, plutôt que de substituer toute l’implémentation.</span><span class="sxs-lookup"><span data-stu-id="e0249-206">When overriding the <see cref="P:System.Windows.Forms.ToolStripTextBox.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> object with the desired dimensions rather than overriding all the implementation.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public void DeselectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeselectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.DeselectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeselectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeselectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-207">Spécifie que la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" /> est zéro afin qu'aucun caractère ne soit sélectionné dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-207">Specifies that the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" /> property is zero so that no characters are selected in the control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharFromPosition">
      <MemberSignature Language="C#" Value="public char GetCharFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetCharFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharFromPosition (pt As Point) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; char GetCharFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e0249-208">Emplacement à partir duquel rechercher le caractère le plus proche.</span><span class="sxs-lookup"><span data-stu-id="e0249-208">The location from which to seek the nearest character.</span></span></param>
        <summary><span data-ttu-id="e0249-209">Récupère le caractère le plus proche de l'emplacement spécifié dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-209">Retrieves the character that is closest to the specified location within the control.</span></span></summary>
        <returns><span data-ttu-id="e0249-210">Caractère situé à l'emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-210">The character at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-211">Si l’emplacement spécifié dans le `pt` paramètre est en dehors de la zone cliente du contrôle, le premier caractère de la chaîne la plus proche du point spécifié dans `pt` est retourné.</span><span class="sxs-lookup"><span data-stu-id="e0249-211">If the location specified in the `pt` parameter is outside the client area of the control, the first character of the string closest to the point specified in `pt` is returned.</span></span> <span data-ttu-id="e0249-212">Vous pouvez utiliser cette méthode pour déterminer quels caractères sont situés près d’un point spécifique dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-212">You can use this method to determine which characters are located near a specific point within the control.</span></span> <span data-ttu-id="e0249-213">Vous pouvez ensuite utiliser cette valeur pour effectuer des opérations sur le texte à cet emplacement.</span><span class="sxs-lookup"><span data-stu-id="e0249-213">You can then use this value to perform operations on the text at that location.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-214">Si l’emplacement spécifié dans le `pt` paramètre se trouve sur le côté droit de la zone cliente du contrôle, le dernier caractère de la chaîne la plus proche du point spécifié dans `pt` est retourné.</span><span class="sxs-lookup"><span data-stu-id="e0249-214">If the specified location in the `pt` parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in `pt` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetCharIndexFromPosition">
      <MemberSignature Language="C#" Value="public int GetCharIndexFromPosition (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharIndexFromPosition(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharIndexFromPosition (pt As Point) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharIndexFromPosition(System::Drawing::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="e0249-215">Emplacement où rechercher.</span><span class="sxs-lookup"><span data-stu-id="e0249-215">The location to search.</span></span></param>
        <summary><span data-ttu-id="e0249-216">Récupère l'index du caractère le plus proche de l'emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-216">Retrieves the index of the character nearest to the specified location.</span></span></summary>
        <returns><span data-ttu-id="e0249-217">Index de base zéro du caractère situé à l'emplacement spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-217">The zero-based character index at the specified location.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-218">Cette méthode retourne l’index de caractère le plus proche de la position spécifiée dans le `pt` paramètre.</span><span class="sxs-lookup"><span data-stu-id="e0249-218">This method returns the character index that is closest to the position specified in the `pt` parameter.</span></span> <span data-ttu-id="e0249-219">L’index de caractère est un index de base zéro du texte dans le contrôle, y compris les espaces.</span><span class="sxs-lookup"><span data-stu-id="e0249-219">The character index is a zero-based index of text in the control, including spaces.</span></span> <span data-ttu-id="e0249-220">Vous pouvez utiliser cette méthode pour déterminer où dans le texte de l’utilisateur dispose de la souris en passant des coordonnées de la souris à cette méthode.</span><span class="sxs-lookup"><span data-stu-id="e0249-220">You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method.</span></span> <span data-ttu-id="e0249-221">Cela peut être utile si vous voulez effectuer des tâches lorsque le pointeur de la souris pointe sur un mot dans le texte du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-221">This can be useful if you want to perform tasks when the mouse pointer hovers over a word in the text of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexFromLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexFromLine (int lineNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexFromLine(int32 lineNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexFromLine (lineNumber As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexFromLine(int lineNumber);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineNumber"><span data-ttu-id="e0249-222">La ligne pour laquelle obtenir l'index de son premier caractère.</span><span class="sxs-lookup"><span data-stu-id="e0249-222">The line for which to get the index of its first character.</span></span></param>
        <summary><span data-ttu-id="e0249-223">Récupère l'index du premier caractère d'une ligne donnée.</span><span class="sxs-lookup"><span data-stu-id="e0249-223">Retrieves the index of the first character of a given line.</span></span></summary>
        <returns><span data-ttu-id="e0249-224">Index de base zéro du caractère situé à la ligne spécifiée.</span><span class="sxs-lookup"><span data-stu-id="e0249-224">The zero-based character index in the specified line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-225">Si le `lineNum` paramètre est négatif, <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> retourne 0.</span><span class="sxs-lookup"><span data-stu-id="e0249-225">If the `lineNum` parameter is negative, <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> returns 0.</span></span> <span data-ttu-id="e0249-226">Si le `lineNum` paramètre dépasse le nombre de lignes dans le contrôle, <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> retourne le premier index de caractère pour la dernière ligne dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-226">If the `lineNum` parameter exceeds the number of lines in the control, <xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> returns the first character index for the last line in the control.</span></span>  
  
 <span data-ttu-id="e0249-227"><xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> Retourne le premier index de caractère d’une ligne physique.</span><span class="sxs-lookup"><span data-stu-id="e0249-227"><xref:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine%2A> returns the first character index of a physical line.</span></span> <span data-ttu-id="e0249-228">La ligne physique est la ligne affichée et non la ligne assignée.</span><span class="sxs-lookup"><span data-stu-id="e0249-228">The physical line is the displayed line, not the assigned line.</span></span> <span data-ttu-id="e0249-229">Le nombre de lignes affichées peut être supérieur au nombre de lignes assignées en raison du retour.</span><span class="sxs-lookup"><span data-stu-id="e0249-229">The number of displayed lines can be greater than the number of assigned lines due to word wrap.</span></span> <span data-ttu-id="e0249-230">Par exemple, si vous assignez deux longues lignes à un <xref:System.Windows.Forms.RichTextBox> contrôler et de définir <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> et <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> à `true`, les deux longues lignes assignées génèrent quatre physiques (ou lignes).</span><span class="sxs-lookup"><span data-stu-id="e0249-230">For example, if you assign two long lines to a <xref:System.Windows.Forms.RichTextBox> control and set <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> and <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> to `true`, the two long assigned lines result in four physical (or displayed lines).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstCharIndexOfCurrentLine">
      <MemberSignature Language="C#" Value="public int GetFirstCharIndexOfCurrentLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstCharIndexOfCurrentLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexOfCurrentLine" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstCharIndexOfCurrentLine () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstCharIndexOfCurrentLine();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-231">Récupère l'index du premier caractère de la ligne active.</span><span class="sxs-lookup"><span data-stu-id="e0249-231">Retrieves the index of the first character of the current line.</span></span></summary>
        <returns><span data-ttu-id="e0249-232">Index de base zéro du caractère dans la ligne active.</span><span class="sxs-lookup"><span data-stu-id="e0249-232">The zero-based character index in the current line.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineFromCharIndex">
      <MemberSignature Language="C#" Value="public int GetLineFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineFromCharIndex (index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e0249-233">Position de l'index de caractère à rechercher.</span><span class="sxs-lookup"><span data-stu-id="e0249-233">The character index position to search.</span></span></param>
        <summary><span data-ttu-id="e0249-234">Récupère le numéro de ligne à partir de la position de caractère spécifiée dans le texte du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-234">Retrieves the line number from the specified character position within the text of the control.</span></span></summary>
        <returns><span data-ttu-id="e0249-235">Numéro (base zéro) de la ligne où se trouve l'index de caractère.</span><span class="sxs-lookup"><span data-stu-id="e0249-235">The zero-based line number in which the character index is located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-236">Cette méthode vous permet de déterminer le numéro de ligne en fonction de l’index de caractère spécifié dans le `index` paramètre de la méthode.</span><span class="sxs-lookup"><span data-stu-id="e0249-236">This method enables you to determine the line number based on the character index specified in the `index` parameter of the method.</span></span> <span data-ttu-id="e0249-237">La première ligne de texte dans le contrôle retourne la valeur zéro.</span><span class="sxs-lookup"><span data-stu-id="e0249-237">The first line of text in the control returns the value zero.</span></span> <span data-ttu-id="e0249-238">Le <xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> méthode retourne le numéro de ligne physique où le caractère indexé se trouve dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-238">The <xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> method returns the physical line number where the indexed character is located within the control.</span></span> <span data-ttu-id="e0249-239">Par exemple, si une partie de la première ligne logique du texte dans le contrôle est renvoyé à la ligne suivante, la <xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> méthode retourne 1 si le caractère situé à l’index de caractère spécifié a renvoyé à la deuxième ligne physique.</span><span class="sxs-lookup"><span data-stu-id="e0249-239">For example, if a portion of the first logical line of text in the control wraps to the next line, the <xref:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex%2A> method returns 1 if the character at the specified character index has wrapped to the second physical line.</span></span> <span data-ttu-id="e0249-240">Si <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> a la valeur `false`, aucune partie de la ligne est renvoyé à l’autre, et la méthode renvoie la valeur 0 pour l’index de caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-240">If <xref:System.Windows.Forms.ToolStripTextBox.WordWrap%2A> is set to `false`, no portion of the line wraps to the next, and the method returns 0 for the specified character index.</span></span> <span data-ttu-id="e0249-241">Vous pouvez utiliser cette méthode pour déterminer la ligne à laquelle un index de caractère spécifique dans.</span><span class="sxs-lookup"><span data-stu-id="e0249-241">You can use this method to determine which line a specific character index is located within.</span></span> <span data-ttu-id="e0249-242">Par exemple, après avoir appelé la <xref:System.Windows.Forms.RichTextBox.Find%2A> méthode pour rechercher du texte, vous pouvez obtenir l’index de caractère où sont trouvent les résultats de recherche.</span><span class="sxs-lookup"><span data-stu-id="e0249-242">For example, after calling the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to search for text, you can obtain the character index to where the search results are found.</span></span> <span data-ttu-id="e0249-243">Vous pouvez appeler cette méthode avec l’index de caractère retourné par la <xref:System.Windows.Forms.RichTextBox.Find%2A> méthode pour déterminer quelle ligne le mot a été trouvé.</span><span class="sxs-lookup"><span data-stu-id="e0249-243">You can call this method with the character index returned by the <xref:System.Windows.Forms.RichTextBox.Find%2A> method to determine which line the word was found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-244">Si l’index de caractère spécifié dans le `index` paramètre est au-delà du nombre de lignes contenues dans le contrôle, le dernier numéro de ligne est retourné.</span><span class="sxs-lookup"><span data-stu-id="e0249-244">If the character index specified in the `index` parameter is beyond the available number of lines contained within the control, the last line number is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionFromCharIndex">
      <MemberSignature Language="C#" Value="public System.Drawing.Point GetPositionFromCharIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point GetPositionFromCharIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetPositionFromCharIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionFromCharIndex (index As Integer) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point GetPositionFromCharIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e0249-245">Index du caractère dont l'emplacement doit être récupéré.</span><span class="sxs-lookup"><span data-stu-id="e0249-245">The index of the character for which to retrieve the location.</span></span></param>
        <summary><span data-ttu-id="e0249-246">Récupère l'emplacement de l'index de caractère spécifié dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-246">Retrieves the location within the control at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="e0249-247">Emplacement du caractère spécifié.</span><span class="sxs-lookup"><span data-stu-id="e0249-247">The location of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-248">Cette méthode vous permet de déterminer où se trouve un index de caractère spécifique dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-248">This method enables you to determine where in the control a specific character index is located.</span></span> <span data-ttu-id="e0249-249">Vous pouvez utiliser cette méthode pour des tâches telles que l’affichage de menu contextuel des éléments ou l’aide des informations d’un mot dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-249">You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control.</span></span> <span data-ttu-id="e0249-250">Par exemple, si vous souhaitez afficher un menu d’options à l’utilisateur de clic avec le bouton droit sur un mot dans le contrôle, vous pouvez utiliser cette méthode pour déterminer la position du mot pour afficher correctement un <xref:System.Windows.Forms.ContextMenuStrip> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-250">For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <xref:System.Windows.Forms.ContextMenuStrip> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharIndexFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetLineFromCharIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetCharFromPosition(System.Drawing.Point)" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.GetFirstCharIndexFromLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size constrainingSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size constrainingSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (constrainingSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size constrainingSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constrainingSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="constrainingSize"><span data-ttu-id="e0249-251">Zone de taille personnalisée pour un contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-251">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="e0249-252">Récupère la taille d'une zone rectangulaire qui peut contenir un contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-252">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="e0249-253">Paire ordonnée de type <see cref="T:System.Drawing.Size" /> représentant la largeur et la hauteur d'un rectangle.</span><span class="sxs-lookup"><span data-stu-id="e0249-253">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.GetPreferredSize(System.Drawing.Size)" />
      </Docs>
    </Member>
    <Member MemberName="HideSelection">
      <MemberSignature Language="C#" Value="public bool HideSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.HideSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property HideSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideSelection { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-254">Obtient ou définit une valeur indiquant si le texte sélectionné dans le contrôle zone de texte reste en surbrillance quand le focus passe à un autre contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-254">Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-255"><see langword="true" /> si le texte sélectionné n'apparaît pas en surbrillance lorsque le contrôle zone de texte perd le focus ; <see langword="false" /> si le texte sélectionné reste en surbrillance lorsque le contrôle zone de texte perd le focus.</span><span class="sxs-lookup"><span data-stu-id="e0249-255"><see langword="true" /> if the selected text does not appear highlighted when the text box control loses focus; <see langword="false" />, if the selected text remains highlighted when the text box control loses focus.</span></span> <span data-ttu-id="e0249-256">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-256">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-257">Vous pouvez utiliser cette propriété pour conserver le texte mis en surbrillance dans un contrôle de zone de texte, alors qu’un autre formulaire ou une boîte de dialogue a le focus, par exemple une boîte de dialogue Vérificateur d’orthographe.</span><span class="sxs-lookup"><span data-stu-id="e0249-257">You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-258">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.HideSelection%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-258">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.HideSelection%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler HideSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HideSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HideSelectionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HideSelectionChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-259">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.HideSelection" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-259">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.HideSelection" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-260">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-260">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-261">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-261">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-262">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-262">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> event.</span></span> <span data-ttu-id="e0249-263">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-263">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-264">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-264">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-265">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-265">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-266">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-266">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#614](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#614)]
 [!code-vb[System.Windows.Forms.EventExamples#614](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#614)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lines">
      <MemberSignature Language="C#" Value="public string[] Lines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Lines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Lines" />
      <MemberSignature Language="VB.NET" Value="Public Property Lines As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Lines { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringArrayEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-267">Obtient ou définit les lignes de texte contenues dans un contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-267">Gets or sets the lines of text in a <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e0249-268">Tableau de chaînes qui contient le texte d'un contrôle zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-268">An array of strings that contains the text in a text box control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-269">Chaque élément du tableau devient une ligne de texte dans le contrôle de zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-269">Each element in the array becomes a line of text in the text box control.</span></span> <span data-ttu-id="e0249-270">Si le <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> du contrôle de zone de texte est définie sur `true` et un caractère de saut de ligne apparaît dans le texte, le texte qui suit le caractère de saut de ligne est ajouté à un nouvel élément dans le tableau et affiché sur une ligne distincte.</span><span class="sxs-lookup"><span data-stu-id="e0249-270">If the <xref:System.Windows.Forms.ToolStripTextBox.Multiline%2A> property of the text box control is set to `true` and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(32767)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-271">Obtient ou définit le nombre maximal de caractères que l'utilisateur peut taper ou coller dans le contrôle TextBox.</span><span class="sxs-lookup"><span data-stu-id="e0249-271">Gets or sets the maximum number of characters the user can type or paste into the text box control.</span></span></summary>
        <value><span data-ttu-id="e0249-272">Nombre maximal de caractères pouvant être entré dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-272">The number of characters that can be entered into the control.</span></span> <span data-ttu-id="e0249-273">La valeur par défaut est 32767 caractères.</span><span class="sxs-lookup"><span data-stu-id="e0249-273">The default is 32767 characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-274">Vous pouvez utiliser cette propriété pour limiter la longueur du texte saisi dans le contrôle pour des valeurs telles que des codes postaux et les numéros de téléphone, ou pour limiter la longueur du texte entré lorsque les données à entrer dans une base de données.</span><span class="sxs-lookup"><span data-stu-id="e0249-274">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database.</span></span> <span data-ttu-id="e0249-275">Vous pouvez limiter le texte entré dans le contrôle à la longueur maximale du champ correspondant dans la base de données.</span><span class="sxs-lookup"><span data-stu-id="e0249-275">You can limit the text entered into the control to the maximum length of the corresponding field in the database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-276">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-276">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.MaxLength%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="public bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Modified" />
      <MemberSignature Language="VB.NET" Value="Public Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-277">Obtient ou définit une valeur qui indique que le contrôle <see cref="T:System.Windows.Forms.ToolStripTextBox" /> a été modifié par l'utilisateur depuis sa création ou la précédente définition de son contenu.</span><span class="sxs-lookup"><span data-stu-id="e0249-277">Gets or sets a value that indicates that the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> control has been modified by the user since the control was created or its contents were last set.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-278"><see langword="true" /> si le contenu du contrôle a été modifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-278"><see langword="true" /> if the control's contents have been modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-279">Vous pouvez utiliser cette propriété pour déterminer si l’utilisateur a modifié le contenu de la <xref:System.Windows.Forms.ToolStripTextBox> contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-279">You can use this property to determine if the user has modified the contents of the <xref:System.Windows.Forms.ToolStripTextBox> control.</span></span> <span data-ttu-id="e0249-280">Vous pouvez également définir cette propriété dans le code pour indiquer que les modifications ont été apportées à la <xref:System.Windows.Forms.ToolStripTextBox> contrôle par l’application.</span><span class="sxs-lookup"><span data-stu-id="e0249-280">You can also set this property in code to indicate that changes were made to the <xref:System.Windows.Forms.ToolStripTextBox> control by the application.</span></span> <span data-ttu-id="e0249-281">Cette propriété peut être utilisée par les méthodes de validation et enregistrement de données pour déterminer si des modifications ont été apportées dans un <xref:System.Windows.Forms.ToolStripTextBox> contrôle afin que le contenu modifié peut être validé ou enregistré.</span><span class="sxs-lookup"><span data-stu-id="e0249-281">This property can be used by validation and data-saving methods to determine if changes were made in a <xref:System.Windows.Forms.ToolStripTextBox> control so the changed contents can be validated or saved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifiedChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModifiedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModifiedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.ModifiedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModifiedChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModifiedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-282">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.Modified" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-282">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.Modified" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-283">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-283">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-284">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-284">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-285">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-285">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> event.</span></span> <span data-ttu-id="e0249-286">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-286">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-287">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-287">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-288">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-288">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-289">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-289">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.ModifiedChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#615](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#615)]
 [!code-vb[System.Windows.Forms.EventExamples#615](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#615)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiline">
      <MemberSignature Language="C#" Value="public bool Multiline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.Multiline" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiline { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-290">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-290">This property is not relevant to this class.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-291"><see langword="true" /> si activé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-291"><see langword="true" /> if enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-292">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-292">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultilineChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MultilineChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MultilineChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.MultilineChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MultilineChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MultilineChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-293">Cet événement ne concerne pas cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-293">This event is not relevant to this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-294">Cet événement ne concerne pas cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-294">This event is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAcceptsTabChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAcceptsTabChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAcceptsTabChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAcceptsTabChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAcceptsTabChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-295"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-295">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-296">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-296">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.AcceptsTabChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-297">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-297">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-298">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-298">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-299">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-299">The <xref:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-300">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-300">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-301">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-301">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnAcceptsTabChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnBorderStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBorderStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBorderStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBorderStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBorderStyleChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-302"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-302">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-303">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-303">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.BorderStyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-304">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-304">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-305">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-305">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-306">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-306">The <xref:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-307">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-307">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-308">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-308">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnBorderStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHideSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHideSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHideSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHideSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHideSelectionChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-309"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-309">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-310">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-310">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.HideSelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-311">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-311">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-312">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-312">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-313">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-313">The <xref:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-314">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-314">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-315">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-315">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnHideSelectionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnModifiedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModifiedChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifiedChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifiedChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifiedChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-316"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-316">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-317">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.ModifiedChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-317">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.ModifiedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-318">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-318">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-319">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-319">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-320">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-320">The <xref:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-321">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-321">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-322">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-322">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnModifiedChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMultilineChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMultilineChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMultilineChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMultilineChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMultilineChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-323"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-323">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-324">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.MultilineChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-324">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.MultilineChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-325">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-325">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-326">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-326">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-327">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-327">The <xref:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-328">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-328">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-329">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-329">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnMultilineChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnReadOnlyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnReadOnlyChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnReadOnlyChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnReadOnlyChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnReadOnlyChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="e0249-330"><see cref="T:System.EventArgs" /> qui contient les données d'événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-330">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e0249-331">Déclenche l'événement <see cref="E:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-331">Raises the <see cref="E:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-332">Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-332">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0249-333">Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-333">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0249-334">La méthode <xref:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué.</span><span class="sxs-lookup"><span data-stu-id="e0249-334">The <xref:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0249-335">Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="e0249-335">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="e0249-336">Lors de la substitution <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-336">When overriding <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Forms.ToolStripTextBox.OnReadOnlyChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnSubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e0249-337">Contrôle à partir duquel abonner les événements.</span><span class="sxs-lookup"><span data-stu-id="e0249-337">The control from which to subscribe events.</span></span></param>
        <summary><span data-ttu-id="e0249-338">Abonne des événements du contrôle hébergé.</span><span class="sxs-lookup"><span data-stu-id="e0249-338">Subscribes events from the hosted control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.OnSubscribeControlEvents(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnsubscribeControlEvents">
      <MemberSignature Language="C#" Value="protected override void OnUnsubscribeControlEvents (System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnsubscribeControlEvents(class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnsubscribeControlEvents(System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="e0249-339">Contrôle à partir duquel annuler l'abonnement des événements.</span><span class="sxs-lookup"><span data-stu-id="e0249-339">The control from which to unsubscribe events.</span></span></param>
        <summary><span data-ttu-id="e0249-340">Annule l'abonnement des événements du contrôle hébergé.</span><span class="sxs-lookup"><span data-stu-id="e0249-340">Unsubscribes events from the hosted control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripControlHost.OnUnsubscribeControlEvents(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-341">Remplace la sélection active de la zone de texte par le contenu du Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-341">Replaces the current selection in the text box with the contents of the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-342">Le <xref:System.Windows.Forms.ToolStripTextBox.Paste%2A> méthode sera coller uniquement de texte dans le contrôle si le texte est stocké dans le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-342">The <xref:System.Windows.Forms.ToolStripTextBox.Paste%2A> method will only paste text into the control if text is currently stored in the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Undo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-343">Obtient ou définit une valeur indiquant si le texte dans <see cref="T:System.Windows.Forms.ToolStripTextBox" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="e0249-343">Gets or sets a value indicating whether text in the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-344"><see langword="true" /> si <see cref="T:System.Windows.Forms.ToolStripTextBox" /> est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-344"><see langword="true" /> if the <see cref="T:System.Windows.Forms.ToolStripTextBox" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e0249-345">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-345">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-346">Lorsque cette propriété a la valeur `true`, le contenu du contrôle ne peut pas être modifié par l’utilisateur lors de l’exécution, mais vous pouvez toujours modifier le contenu du code.</span><span class="sxs-lookup"><span data-stu-id="e0249-346">When this property is set to `true`, the contents of the control cannot be changed by the user at runtime, but you can still change the contents in code.</span></span> <span data-ttu-id="e0249-347">Vous pouvez utiliser cette fonctionnalité au lieu de désactiver le contrôle avec la <xref:System.Windows.Forms.Control.Enabled%2A> propriété pour autoriser le contenu à copier.</span><span class="sxs-lookup"><span data-stu-id="e0249-347">You can use this feature instead of disabling the control with the <xref:System.Windows.Forms.Control.Enabled%2A> property to allow the contents to be copied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ReadOnlyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ReadOnlyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ReadOnlyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ReadOnlyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-348">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.ReadOnly" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-348">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.ReadOnly" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-349">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-349">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-350">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-350">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-351">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-351">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> event.</span></span> <span data-ttu-id="e0249-352">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-352">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-353">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-353">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-354">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-354">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-355">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-355">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.ReadOnlyChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#616](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#616)]
 [!code-vb[System.Windows.Forms.EventExamples#616](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#616)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollToCaret">
      <MemberSignature Language="C#" Value="public void ScrollToCaret ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToCaret() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.ScrollToCaret" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToCaret ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToCaret();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-356">Fait défiler le contenu du contrôle vers la position indiquée par le signe insertion.</span><span class="sxs-lookup"><span data-stu-id="e0249-356">Scrolls the contents of the control to the current caret position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-357">Cette méthode vous permet de faire défiler le contenu du contrôle jusqu'à ce que le point d’insertion se trouve dans la région visible du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-357">This method enables you to scroll the contents of the control until the caret is within the visible region of the control.</span></span> <span data-ttu-id="e0249-358">Si le point d’insertion se trouve sous la région visible du contrôle, la <xref:System.Windows.Forms.ToolStripTextBox.ScrollToCaret%2A> méthode fait défiler le contenu du contrôle jusqu'à ce que le point d’insertion est visible en bas du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-358">If the caret is positioned below the visible region of the control, the <xref:System.Windows.Forms.ToolStripTextBox.ScrollToCaret%2A> method will scroll the contents of the control until the caret is visible at the bottom of the control.</span></span> <span data-ttu-id="e0249-359">Si le point d’insertion est placé au-dessus de la zone visible du contrôle, cette méthode fait défiler le contenu du contrôle jusqu'à ce que le point d’insertion est visible en haut du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-359">If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control.</span></span> <span data-ttu-id="e0249-360">Vous pouvez utiliser cette méthode dans une zone de texte multiligne pour vous assurer que le point d’entrée de texte actuel est dans la zone visible du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-360">You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-361">Cette méthode n’a aucun effet si le contrôle n’a pas le focus ou si le point d’insertion se trouve déjà dans la région visible du contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-361">This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="e0249-362">Position du premier caractère dans la sélection de texte en cours dans la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-362">The position of the first character in the current text selection within the text box.</span></span></param>
        <param name="length"><span data-ttu-id="e0249-363">Nombre de caractères à sélectionner.</span><span class="sxs-lookup"><span data-stu-id="e0249-363">The number of characters to select.</span></span></param>
        <summary><span data-ttu-id="e0249-364">Sélectionne une plage de texte dans la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-364">Selects a range of text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-365">Si vous souhaitez définir la position de départ du premier caractère dans le texte du contrôle, définissez la `start` valeur 0 au paramètre.</span><span class="sxs-lookup"><span data-stu-id="e0249-365">If you want to set the start position to the first character in the control's text, set the `start` parameter to 0.</span></span> <span data-ttu-id="e0249-366">Vous pouvez utiliser cette méthode pour sélectionner une sous-chaîne du texte, par exemple lors de la recherche dans le texte du contrôle et remplacer des informations.</span><span class="sxs-lookup"><span data-stu-id="e0249-366">You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-367">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le `start` paramètre à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le `length` paramètre à une valeur de zéro (0).</span><span class="sxs-lookup"><span data-stu-id="e0249-367">You can programmatically move the caret within the text box by setting the `start` parameter to the position within the text box where you want the caret to move to and set the `length` parameter to a value of zero (0).</span></span> <span data-ttu-id="e0249-368">La zone de texte doit avoir le focus dans l’ordre pour le point d’insertion doit être déplacé.</span><span class="sxs-lookup"><span data-stu-id="e0249-368">The text box must have focus in order for the caret to be moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-369">Sélectionne tout le texte de la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-369">Selects all text in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-370">Cette méthode vous permet de sélectionner tout le texte dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-370">This method enables you to select all text within the control.</span></span> <span data-ttu-id="e0249-371">Vous pouvez utiliser cette méthode avec la <xref:System.Windows.Forms.TextBoxBase.Cut%2A> méthode, qui nécessite du texte à sélectionner dans le contrôle, pour couper la totalité du contenu du contrôle et les coller dans le Presse-papiers.</span><span class="sxs-lookup"><span data-stu-id="e0249-371">You can use this method with the <xref:System.Windows.Forms.TextBoxBase.Cut%2A> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the Clipboard.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-372">Obtient ou définit une valeur indiquant la couleur du texte sélectionné dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-372">Gets or sets a value indicating the currently selected text in the control.</span></span></summary>
        <value><span data-ttu-id="e0249-373">Chaîne représentant le texte actuellement sélectionné dans la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-373">A string that represents the currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-374">Vous pouvez assigner le texte à cette propriété pour modifier le texte actuellement sélectionné dans le <xref:System.Windows.Forms.ToolStripTextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-374">You can assign text to this property to change the text currently selected in the <xref:System.Windows.Forms.ToolStripTextBox>.</span></span> <span data-ttu-id="e0249-375">Si aucun texte n’est actuellement sélectionné dans le <xref:System.Windows.Forms.ToolStripTextBox>, cette propriété retourne une chaîne de longueur nulle.</span><span class="sxs-lookup"><span data-stu-id="e0249-375">If no text is currently selected in the <xref:System.Windows.Forms.ToolStripTextBox>, this property returns a zero-length string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-376">Obtient ou définit le nombre de caractères sélectionnés dans le <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-376">Gets or sets the number of characters selected in the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <value><span data-ttu-id="e0249-377">Le nombre de caractères sélectionnés dans le <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-377">The number of characters selected in the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-378">Vous pouvez utiliser cette propriété pour déterminer si des caractères sont actuellement sélectionnés dans le contrôle de zone de texte avant d’effectuer des opérations sur le texte sélectionné.</span><span class="sxs-lookup"><span data-stu-id="e0249-378">You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text.</span></span> <span data-ttu-id="e0249-379">Lorsque la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> est définie sur une valeur qui est supérieure au nombre de caractères dans le texte du contrôle, la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> est définie sur toute la longueur du texte dans le contrôle moins la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A>propriété (si une valeur est spécifiée pour le <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> propriété).</span><span class="sxs-lookup"><span data-stu-id="e0249-379">When the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property is set to a value that is larger than the number of characters within the text of the control, the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property is set to the entire length of text within the control minus the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> property (if any value is specified for the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-380">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété à une valeur de zéro (0).</span><span class="sxs-lookup"><span data-stu-id="e0249-380">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="e0249-381">La zone de texte doit avoir le focus dans l’ordre pour le point d’insertion doit être déplacé.</span><span class="sxs-lookup"><span data-stu-id="e0249-381">The text box must have focus in order for the caret to be moved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.SelectedText" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-382">Obtient ou définit le point de départ du texte sélectionné dans le <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-382">Gets or sets the starting point of text selected in the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></summary>
        <value><span data-ttu-id="e0249-383">La position de départ du texte sélectionné dans le <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-383">The starting position of text selected in the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-384">Si aucun texte n’est sélectionné dans le contrôle, cette propriété indique le point d’insertion d’un nouveau texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-384">If no text is selected in the control, this property indicates the insertion point for new text.</span></span> <span data-ttu-id="e0249-385">Si vous définissez cette propriété sur un emplacement au-delà de la longueur du texte dans le contrôle, la position de début de la sélection est placée après le dernier caractère.</span><span class="sxs-lookup"><span data-stu-id="e0249-385">If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character.</span></span> <span data-ttu-id="e0249-386">Si du texte est sélectionné dans le contrôle de zone de texte, la modification de cette propriété peut diminuer la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-386">When text is selected in the text box control, changing this property might decrease the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property.</span></span> <span data-ttu-id="e0249-387">Si le reste du texte dans le contrôle après la position indiquée par le <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> propriété est inférieure à la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété, la valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété est automatiquement diminuée.</span><span class="sxs-lookup"><span data-stu-id="e0249-387">If the remaining text in the control after the position indicated by the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> property is less than the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property, the value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property is automatically decreased.</span></span> <span data-ttu-id="e0249-388">La valeur de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> propriété ne provoque jamais une augmentation de la <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-388">The value of the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> property never causes an increase in the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0249-389">Vous pouvez déplacer par programmation le point d’insertion dans la zone de texte en définissant le <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> à la position dans la zone de texte où vous souhaitez le signe insertion pour atteindre et définir le <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> propriété à une valeur de zéro (0).</span><span class="sxs-lookup"><span data-stu-id="e0249-389">You can programmatically move the caret within the text box by setting the <xref:System.Windows.Forms.ToolStripTextBox.SelectionStart%2A> to the position within the text box where you want the caret to move to and set the <xref:System.Windows.Forms.ToolStripTextBox.SelectionLength%2A> property to a value of zero (0).</span></span> <span data-ttu-id="e0249-390">La zone de texte doit avoir le focus dans l’ordre pour le point d’insertion doit être déplacé.</span><span class="sxs-lookup"><span data-stu-id="e0249-390">The text box must have focus in order for the caret to be moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShortcutsEnabled">
      <MemberSignature Language="C#" Value="public bool ShortcutsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShortcutsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ShortcutsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShortcutsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-391">Obtient ou définit une valeur indiquant si les raccourcis définis sont activés.</span><span class="sxs-lookup"><span data-stu-id="e0249-391">Gets or sets a value indicating whether the defined shortcuts are enabled.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-392"><see langword="true" /> pour activer les raccourcis ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-392"><see langword="true" /> to enable the shortcuts; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-393">Utilisez le <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> propriété pour activer ou désactiver les combinaisons de touches de raccourci suivantes :</span><span class="sxs-lookup"><span data-stu-id="e0249-393">Use the <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> property to enable or disable the following shortcut key combinations:</span></span>  
  
|<span data-ttu-id="e0249-394">Touches de raccourci</span><span class="sxs-lookup"><span data-stu-id="e0249-394">Shortcut keys</span></span>|<span data-ttu-id="e0249-395">Touches de raccourci</span><span class="sxs-lookup"><span data-stu-id="e0249-395">Shortcut keys</span></span>|  
|-------------------|-------------------|  
|<span data-ttu-id="e0249-396">CTRL+Z</span><span class="sxs-lookup"><span data-stu-id="e0249-396">CTRL+Z</span></span>|<span data-ttu-id="e0249-397">CTRL+E</span><span class="sxs-lookup"><span data-stu-id="e0249-397">CTRL+E</span></span>|  
|<span data-ttu-id="e0249-398">CTRL+C</span><span class="sxs-lookup"><span data-stu-id="e0249-398">CTRL+C</span></span>|<span data-ttu-id="e0249-399">CTRL+I</span><span class="sxs-lookup"><span data-stu-id="e0249-399">CTRL+I</span></span>|  
|<span data-ttu-id="e0249-400">Ctrl+X</span><span class="sxs-lookup"><span data-stu-id="e0249-400">CTRL+X</span></span>|<span data-ttu-id="e0249-401">CTRL+Y</span><span class="sxs-lookup"><span data-stu-id="e0249-401">CTRL+Y</span></span>|  
|<span data-ttu-id="e0249-402">CTRL+V</span><span class="sxs-lookup"><span data-stu-id="e0249-402">CTRL+V</span></span>|<span data-ttu-id="e0249-403">CTRL+RETOUR ARRIÈRE</span><span class="sxs-lookup"><span data-stu-id="e0249-403">CTRL+BACKSPACE</span></span>|  
|<span data-ttu-id="e0249-404">CTRL+A</span><span class="sxs-lookup"><span data-stu-id="e0249-404">CTRL+A</span></span>|<span data-ttu-id="e0249-405">CTRL+SUPPR</span><span class="sxs-lookup"><span data-stu-id="e0249-405">CTRL+DELETE</span></span>|  
|<span data-ttu-id="e0249-406">CTRL+L</span><span class="sxs-lookup"><span data-stu-id="e0249-406">CTRL+L</span></span>|<span data-ttu-id="e0249-407">MAJ + SUPPR</span><span class="sxs-lookup"><span data-stu-id="e0249-407">SHIFT+DELETE</span></span>|  
|<span data-ttu-id="e0249-408">CTRL+R</span><span class="sxs-lookup"><span data-stu-id="e0249-408">CTRL+R</span></span>|<span data-ttu-id="e0249-409">MAJ + INSER</span><span class="sxs-lookup"><span data-stu-id="e0249-409">SHIFT+INSERT</span></span>|  
  
 <span data-ttu-id="e0249-410">Vous pouvez substituer cette propriété pour spécifier d’autres touches de raccourci.</span><span class="sxs-lookup"><span data-stu-id="e0249-410">You can override this property to specify other shortcut keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-411">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-411">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.ShortcutsEnabled%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBox">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextBox TextBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TextBox TextBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextBox" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextBox As TextBox" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextBox ^ TextBox { System::Windows::Forms::TextBox ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-412">Obtient le contrôle <see cref="T:System.Windows.Forms.TextBox" /> hébergé.</span><span class="sxs-lookup"><span data-stu-id="e0249-412">Gets the hosted <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e0249-413"><see cref="T:System.Windows.Forms.TextBox" /> hébergé.</span><span class="sxs-lookup"><span data-stu-id="e0249-413">The hosted <see cref="T:System.Windows.Forms.TextBox" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxTextAlign">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HorizontalAlignment TextBoxTextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.HorizontalAlignment TextBoxTextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property TextBoxTextAlign As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HorizontalAlignment TextBoxTextAlign { System::Windows::Forms::HorizontalAlignment get(); void set(System::Windows::Forms::HorizontalAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-414">Obtient ou définit la façon dont le texte est aligné dans un contrôle <see cref="T:System.Windows.Forms.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-414">Gets or sets how text is aligned in a <see cref="T:System.Windows.Forms.TextBox" /> control.</span></span></summary>
        <value><span data-ttu-id="e0249-415">Une des valeurs d'énumération <see cref="T:System.Windows.Forms.HorizontalAlignment" /> qui spécifie la façon d'aligner le texte dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-415">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies how text is aligned in the control.</span></span> <span data-ttu-id="e0249-416">La valeur par défaut est <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-416">The default is <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-417">Vous pouvez utiliser cette propriété pour aligner le texte d’un <xref:System.Windows.Forms.TextBox> pour correspondre à la disposition du texte sur votre formulaire.</span><span class="sxs-lookup"><span data-stu-id="e0249-417">You can use this property to align the text within a <xref:System.Windows.Forms.TextBox> to match the layout of text on your form.</span></span> <span data-ttu-id="e0249-418">Par exemple, si vos contrôles se trouvent sur le côté droit du formulaire, vous pouvez définir le <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> propriété <xref:System.Windows.Forms.HorizontalAlignment.Right>, et le texte sera être aligné sur le côté droit du contrôle au lieu de l’alignement à gauche par défaut.</span><span class="sxs-lookup"><span data-stu-id="e0249-418">For example, if your controls are all located on the right side of the form, you can set the <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> property to <xref:System.Windows.Forms.HorizontalAlignment.Right>, and the text will be aligned with the right side of the control instead of the default left alignment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-419">L’exemple de code suivant illustre la syntaxe de définition de divers <xref:System.Windows.Forms.ToolStripTextBox> des paramètres de propriétés communes, y compris le <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="e0249-419">The following code example demonstrates the syntax for setting various <xref:System.Windows.Forms.ToolStripTextBox> common property settings, including the <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign%2A> property .</span></span>  
  
 [!code-csharp[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ToolStripTextBox.CommonProps#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ToolStripTextBox.CommonProps/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxTextAlignChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextBoxTextAlignChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextBoxTextAlignChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextBoxTextAlignChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextBoxTextAlignChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-420">Se produit quand la valeur de la propriété <see cref="P:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign" /> change.</span><span class="sxs-lookup"><span data-stu-id="e0249-420">Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlign" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-421">Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0249-421">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0249-422">L’exemple de code suivant illustre l’utilisation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="e0249-422">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0249-423">Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-423">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> event.</span></span> <span data-ttu-id="e0249-424">Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer.</span><span class="sxs-lookup"><span data-stu-id="e0249-424">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0249-425">Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0249-425">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0249-426">Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.ToolStripTextBox> nommé `ToolStripTextBox1`.</span><span class="sxs-lookup"><span data-stu-id="e0249-426">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ToolStripTextBox> named `ToolStripTextBox1`.</span></span> <span data-ttu-id="e0249-427">Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> événement.</span><span class="sxs-lookup"><span data-stu-id="e0249-427">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ToolStripTextBox.TextBoxTextAlignChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#617](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#617)]
 [!code-vb[System.Windows.Forms.EventExamples#617](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#617)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextLength">
      <MemberSignature Language="C#" Value="public int TextLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.TextLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextLength { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-428">Obtient la longueur du texte dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="e0249-428">Gets the length of text in the control.</span></span></summary>
        <value><span data-ttu-id="e0249-429">Nombre de caractères contenus dans le texte de <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-429">The number of characters contained in the text of the <see cref="T:System.Windows.Forms.ToolStripTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-430">Vous pouvez utiliser le <xref:System.Windows.Forms.ToolStripTextBox.TextLength%2A> propriété pour déterminer le nombre de caractères dans une chaîne pour des tâches telles que la recherche de chaînes spécifiques dans le texte du contrôle, où la base de connaissances du nombre total de caractères est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="e0249-430">You can use the <xref:System.Windows.Forms.ToolStripTextBox.TextLength%2A> property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ToolStripTextBox.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e0249-431">Annule la dernière modification apportée dans la zone de texte.</span><span class="sxs-lookup"><span data-stu-id="e0249-431">Undoes the last edit operation in the text box.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-432">Cette méthode annule la dernière Presse-papiers ou texte changer l’opération effectuée dans le contrôle de zone de texte si la <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> propriété renvoie `true`.</span><span class="sxs-lookup"><span data-stu-id="e0249-432">This method will undo the last clipboard or text change operation performed in the text box control if the <xref:System.Windows.Forms.TextBoxBase.CanUndo%2A> property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Cut" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Copy" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Paste" />
        <altmember cref="P:System.Windows.Forms.ToolStripTextBox.CanUndo" />
        <altmember cref="M:System.Windows.Forms.ToolStripTextBox.Clear" />
      </Docs>
    </Member>
    <Member MemberName="WordWrap">
      <MemberSignature Language="C#" Value="public bool WordWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WordWrap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ToolStripTextBox.WordWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property WordWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WordWrap { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e0249-433">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-433">This property is not relevant to this class.</span></span></summary>
        <value>
          <span data-ttu-id="e0249-434"><see langword="true" /> si activé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e0249-434"><see langword="true" /> if enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0249-435">Cette propriété ne s'applique pas à cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0249-435">This property is not relevant to this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>