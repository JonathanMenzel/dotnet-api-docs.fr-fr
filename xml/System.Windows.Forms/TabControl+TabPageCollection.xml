<Type Name="TabControl+TabPageCollection" FullName="System.Windows.Forms.TabControl+TabPageCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ed0f84a1e17e9a676a1a6073f520c98df02c9b1" /><Meta Name="ms.sourcegitcommit" Value="9802d4c6745a8ae514b26f144fb3969265b224ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/22/2018" /><Meta Name="ms.locfileid" Value="53750242" /></Metadata><TypeSignature Language="C#" Value="public class TabControl.TabPageCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit TabControl/TabPageCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TabControl.TabPageCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class TabControl.TabPageCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TabControl::TabPageCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type TabControl.TabPageCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contient une collection d'objets <see cref="T:System.Windows.Forms.TabPage" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’ordre des pages d’onglets dans cette collection reflète l’ordre des onglets dans les <xref:System.Windows.Forms.TabControl> contrôle. Pour modifier l’ordre des onglets dans le contrôle, vous devez modifier leurs positions dans la collection en supprimant et en les insérant dans les nouveaux index.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.TabControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TabPageCollection (System.Windows.Forms.TabControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.TabControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.#ctor(System.Windows.Forms.TabControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TabControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TabPageCollection(System::Windows::Forms::TabControl ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.TabControl.TabPageCollection : System.Windows.Forms.TabControl -&gt; System.Windows.Forms.TabControl.TabPageCollection" Usage="new System.Windows.Forms.TabControl.TabPageCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.TabControl" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Windows.Forms.TabControl" /> auquel appartient cette collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Windows.Forms.TabControl" /> spécifié a la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.TabControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute une page d'onglets à la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string -&gt; unit" Usage="tabPageCollection.Add text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <summary>Crée une page d'onglets avec le texte spécifié et l'ajoute à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nouvellement créé <xref:System.Windows.Forms.TabPage> est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As TabPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Forms::TabPage ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.TabPage -&gt; unit" Usage="tabPageCollection.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.TabPage" /> à ajouter.</param>
        <summary>Ajoute un <see cref="T:System.Windows.Forms.TabPage" /> à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.TabControl> avec un <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> méthode pour ajouter une page d’onglets unique à la `tabControl1` contrôle onglet. Notez que le <xref:System.Windows.Forms.TabControl.TabPages%2A> propriété est utilisée pour obtenir le `tabControl1` contrôle la collection à laquelle ajouter le `tabPage1` à cette collection.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.Add#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Add/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Add#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Add/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Add#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Add/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <paramref name="value" /> spécifié a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.AddRange(System.Windows.Forms.TabPage[])" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="tabPageCollection.Add (key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <summary>Crée une page d'onglets avec le texte et la clé spécifiés et l'ajoute à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Nouvellement créé <xref:System.Windows.Forms.TabPage> est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, text As String, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string * int -&gt; unit" Usage="tabPageCollection.Add (key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <param name="imageIndex">Index de l'image à afficher sur la page d'onglets.</param>
        <summary>Crée une page d'onglets avec la clé, le texte et l'image spécifiés et l'ajoute à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Le `imageIndex` paramètre fait référence à une image dans le <xref:System.Windows.Forms.TabControl.ImageList%2A> propriété de la <xref:System.Windows.Forms.TabControl>.  
  
 Nouvellement créé <xref:System.Windows.Forms.TabPage> est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, text As String, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string * string -&gt; unit" Usage="tabPageCollection.Add (key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <param name="imageKey">Clé de l'image à afficher sur la page d'onglets.</param>
        <summary>Crée une page d'onglets avec la clé, le texte et l'image spécifiés et l'ajoute à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Le `imageKey` paramètre fait référence à une image dans le <xref:System.Windows.Forms.TabControl.ImageList%2A> propriété de la <xref:System.Windows.Forms.TabControl>.  
  
 Nouvellement créé <xref:System.Windows.Forms.TabPage> est ajouté à la fin de la collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.TabPage[] pages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.TabPage[] pages) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.AddRange(System.Windows.Forms.TabPage[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (pages As TabPage())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::TabPage ^&gt; ^ pages);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.TabPage[] -&gt; unit" Usage="tabPageCollection.AddRange pages" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pages" Type="System.Windows.Forms.TabPage[]" />
      </Parameters>
      <Docs>
        <param name="pages">Tableau de type <see cref="T:System.Windows.Forms.TabPage" /> qui contient les pages d'onglets à ajouter.</param>
        <summary>Ajoute un ensemble de pages d'onglets à la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> méthode pour ajouter un tableau de pages d’onglets à la `tabControl1` contrôle onglet. Notez que le <xref:System.Windows.Forms.TabControl.TabPages%2A> property get le `tabControl1` collection de contrôles afin d’ajouter le tableau de pages d’onglets à cette collection.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cette collection.  
  
 [!code-cpp[TabPageCollection.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.AddRange/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.AddRange/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.AddRange/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur des pages est égale à <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.TabPage" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tabPageCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les pages d'onglets de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée initialement un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.Clear%2A> méthode pour effacer tous les contrôles dans le `tabControl1` collection à une instance de contrôle. Ensuite, l’exemple ajoute `tabPage2` à la collection. Notez que le <xref:System.Windows.Forms.TabControl.TabPages%2A> propriété est utilisée pour obtenir le `tabControl1` collection pour supprimer (et ajouter) des pages d’onglets de cette collection de contrôles.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.Clear#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Clear/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Clear#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Clear/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Clear/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Contains(System.Windows.Forms.TabPage)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (page As TabPage) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::TabPage ^ page);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.TabPage -&gt; bool" Usage="tabPageCollection.Contains page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Windows.Forms.TabPage" /> à rechercher dans la collection.</param>
        <summary>Détermine si une page d'onglets spécifiée se trouve dans la collection.</summary>
        <returns><see langword="true" /> si le <see cref="T:System.Windows.Forms.TabPage" /> spécifié figure dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée initialement un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage> objets. Les première deux pages d’onglets sont ajoutés directement à `tabControl1` par le <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode). Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Contains%2A> méthode détermine `tabPage3` fait partie de la `tabControl1` collection de contrôles. Étant donné que `tabPage3` n’a été trouvé dans cette collection, il a été ajouté par le <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode).  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.Contains#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Contains/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Contains#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Contains/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Contains/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="page" /> est <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator" />
        <altmember cref="T:System.Windows.Forms.TabPage" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="tabPageCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets à rechercher.</param>
        <summary>Détermine si la collection contient une page d'onglets avec la clé spécifiée.</summary>
        <returns><see langword="true" /> pour indiquer qu'une page d'onglets avec la clé spécifiée a été trouvé dans la collection; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.TabControl.TabPageCollection.ContainsKey%2A> retourne `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.TabControl.TabPageCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de pages d'onglets dans la collection.</summary>
        <value>Nombre de pages d'onglets dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage>. Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Count%2A> propriété obtient le nombre de <xref:System.Windows.Forms.TabPage> des objets dans le `tabControl1` collection de contrôles.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.Count#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Count/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Count#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Count/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Count#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Count/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="tabPageCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une énumération de toutes les pages d'onglets de la collection.</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> pour <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un énumérateur qui contient un instantané de la collection. Vous pouvez modifier la collection en modifiant l’énumérateur ; Toutefois, plusieurs énumérateurs peuvent accéder simultanément la même collection. Modification de la collection (directement ou via un autre énumérateur) peut donc provoquer <xref:System.Collections.IEnumerator.Current%2A> ou <xref:System.Collections.IEnumerator.MoveNext%2A> pour lever une exception.  
  
 Deux énumérateurs sont créés à partir de la même collection en même temps peuvent contenir différents instantanés.  
  
 Suppression d’objets l’énumérateur également les supprime de la collection.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.IEnumerator.Current" />
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.TabPage page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.TabPage page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (page As TabPage) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::TabPage ^ page);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.TabPage -&gt; int" Usage="tabPageCollection.IndexOf page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Windows.Forms.TabPage" /> à rechercher dans la collection.</param>
        <summary>Retourne l'index de la page d'onglets spécifiée dans la collection.</summary>
        <returns>Index de base zéro de la page d'onglets : -1 si elle est introuvable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.TabControl> avec un <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOf%2A> méthode pour récupérer le `tabPage1` valeur d’index. Une info-bulle est utilisée pour afficher cette valeur.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IndexOf/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IndexOf/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de <paramref name="page" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Contains(System.Windows.Forms.TabPage)" />
        <altmember cref="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : string -&gt; int&#xA;override this.IndexOfKey : string -&gt; int" Usage="tabPageCollection.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets à rechercher dans cette collection.</param>
        <summary>Retourne l'index de la première occurrence de <see cref="T:System.Windows.Forms.TabPage" /> avec la clé spécifiée.</summary>
        <returns>Index de base zéro de la première occurrence de la page d'onglets avec la clé spécifiée, si elle existe ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> est appelé plusieurs fois, la dernière retournée index est une correspondance de clés d’abord vérifiée, et si aucune correspondance n’est, la recherche commence au début de la collection.  
  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>. La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.TabControl.TabPageCollection.IndexOfKey%2A> retourne -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Insère une page d'onglets dans la collection au niveau de l'index spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; unit" Usage="tabPageCollection.Insert (index, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro dans lequel la page d'onglets est insérée.</param>
        <param name="text">Texte à afficher dans la page d'onglets.</param>
        <summary>Crée une nouvelle page d'onglets avec le texte spécifié et l'insère dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> méthode vous permet de créer une nouvelle page d’onglets et insérez-le dans un emplacement spécifié. Pour ajouter une page d’onglets sans spécifier une position particulière dans la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.TabPage tabPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.TabPage tabPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.Windows.Forms.TabPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::TabPage ^ tabPage);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.TabPage -&gt; unit" Usage="tabPageCollection.Insert (index, tabPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="tabPage" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro dans lequel la page d'onglets est insérée.</param>
        <param name="tabPage"><see cref="T:System.Windows.Forms.TabPage" /> à insérer dans la collection.</param>
        <summary>Insère une page d'onglets existante dans la collection au niveau de l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> méthode vous permet d’insérer une page d’onglets à un emplacement spécifié. Pour ajouter une page d’onglets sans spécifier une position particulière dans la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string -&gt; unit" Usage="tabPageCollection.Insert (index, key, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro dans lequel la page d'onglets est insérée.</param>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <summary>Crée une nouvelle page d'onglets avec la clé et le texte spécifiés et l'insère dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> méthode vous permet de créer et insérer une page d’onglets à un emplacement spécifié. Pour ajouter une page d’onglets sans spécifier une position particulière dans la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, int imageIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, int32 imageIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, imageIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, int imageIndex);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * int -&gt; unit" Usage="tabPageCollection.Insert (index, key, text, imageIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro dans lequel la page d'onglets est insérée.</param>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <param name="imageIndex">Index de base zéro de l'image à afficher sur la page d'onglets.</param>
        <summary>Crée une nouvelle page d'onglets avec la clé, le texte et l'image spécifiés, et l'insère dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> méthode vous permet de créer et insérer une page d’onglets à un emplacement spécifié. Pour ajouter une page d’onglets sans spécifier une position particulière dans la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode).  
  
 Le `imageIndex` paramètre fait référence à une image dans le <xref:System.Windows.Forms.TabControl.ImageList%2A> propriété de la <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, string key, string text, string imageKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, string key, string text, string imageKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Insert(System.Int32,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, key As String, text As String, imageKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::String ^ key, System::String ^ text, System::String ^ imageKey);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * string * string -&gt; unit" Usage="tabPageCollection.Insert (index, key, text, imageKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="imageKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">Emplacement de l'index de base zéro dans lequel la page d'onglets est insérée.</param>
        <param name="key">Nom de la page d'onglets.</param>
        <param name="text">Texte à afficher sur la page d'onglets.</param>
        <param name="imageKey">Clé de l'image à afficher sur la page d'onglets.</param>
        <summary>Crée une page d'onglets avec la clé, le texte et l'image spécifiés, et l'insère dans la collection à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 Le <xref:System.Windows.Forms.TabControl.TabPageCollection.Insert%2A> méthode vous permet de créer et insérer une page d’onglets à un emplacement spécifié. Pour ajouter une page d’onglets sans spécifier une position particulière dans la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.Add%2A> (méthode). Si vous souhaitez ajouter un tableau d’éléments à la collection, utilisez la <xref:System.Windows.Forms.TabControl.TabPageCollection.AddRange%2A> (méthode).  
  
 Le `imageKey` paramètre fait référence à une image dans le <xref:System.Windows.Forms.TabControl.ImageList%2A> propriété de la <xref:System.Windows.Forms.TabControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
        <value>Cette propriété retourne toujours <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Windows.Forms.TabControl> avec deux <xref:System.Windows.Forms.TabPage>. Cet exemple obtient le `tabControl1` collection de contrôles et détermine s’il est en lecture seule à l’aide du <xref:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly%2A> propriété.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.IsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.IsReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient ou définit une page d'onglets dans la collection.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As TabPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TabPage ^ default[int] { System::Windows::Forms::TabPage ^ get(int index); void set(int index, System::Windows::Forms::TabPage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.TabPage with get, set" Usage="System.Windows.Forms.TabControl.TabPageCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de la page d'onglets à obtenir ou définir.</param>
        <summary>Obtient ou définit un objet <see cref="T:System.Windows.Forms.TabPage" /> de la collection.</summary>
        <value>Objet <see cref="T:System.Windows.Forms.TabPage" /> à l'index spécifié.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à zéro ou supérieur à l'index disponible le plus élevé.</exception>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Contains(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.TabPage this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.TabPage Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As TabPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::TabPage ^ default[System::String ^] { System::Windows::Forms::TabPage ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.TabPage" Usage="System.Windows.Forms.TabControl.TabPageCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TabPage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets à récupérer.</param>
        <summary>Obtient une page d'onglets avec la clé spécifiée de la collection.</summary>
        <value><see cref="T:System.Windows.Forms.TabPage" /> avec la clé spécifiée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 La comparaison de clé ne respecte pas la casse. Si le `key` paramètre est `null` ou une chaîne vide, <xref:System.Windows.Forms.TabControl.TabPageCollection.Item%2A> retourne `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.TabPage value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.TabPage value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As TabPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::TabPage ^ value);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.TabPage -&gt; unit" Usage="tabPageCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.TabPage" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.TabPage" /> à supprimer.</param>
        <summary>Supprime <see cref="T:System.Windows.Forms.TabPage" /> de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée initialement un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.Remove%2A> méthode pour supprimer une page d’onglets unique, en particulier `tabPage2` à partir de la `tabControl1` collection de contrôles. Notez que le <xref:System.Windows.Forms.TabControl.TabPages%2A> property get le `tabControl1` collection pour ajouter et supprimer des pages d’onglets de cette collection de contrôles.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms avec cet exemple.  
  
 [!code-cpp[TabPageCollection.Remove#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.Remove/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.Remove#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.Remove/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.Remove#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.Remove/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="tabPageCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro du <see cref="T:System.Windows.Forms.TabPage" /> à supprimer.</param>
        <summary>Supprime de la collection la page d'onglets située à l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée initialement un <xref:System.Windows.Forms.TabControl> avec trois <xref:System.Windows.Forms.TabPage>. Cet exemple utilise le <xref:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt%2A> méthode pour supprimer `tabPage1`, qui est spécifiée par son index, à partir de la `tabControl1` collection de contrôles. Notez que le <xref:System.Windows.Forms.TabControl.TabPages%2A> property get le `tabControl1` collection pour ajouter et supprimer des pages d’onglets de cette collection de contrôles.  
  
 Utilisez le <xref:System.Drawing> et <xref:System.Windows.Forms> espaces de noms pour cet exemple.  
  
 [!code-cpp[TabPageCollection.RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CPP/form1.cpp#1)]
 [!code-csharp[TabPageCollection.RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/TabPageCollection.RemoveAt/CS/form1.cs#1)]
 [!code-vb[TabPageCollection.RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/TabPageCollection.RemoveAt/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Clear" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.IndexOf(System.Windows.Forms.TabPage)" />
        <altmember cref="M:System.Windows.Forms.TabControl.TabPageCollection.Remove(System.Windows.Forms.TabPage)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveByKey : string -&gt; unit&#xA;override this.RemoveByKey : string -&gt; unit" Usage="tabPageCollection.RemoveByKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de la page d'onglets à supprimer.</param>
        <summary>Supprime la page d'onglets avec la clé spécifiée de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.Control.Name%2A> propriété correspond à la clé pour un <xref:System.Windows.Forms.TabPage> dans le <xref:System.Windows.Forms.TabControl.TabPageCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la collection. Ce tableau doit avoir une indexation de base zéro.</param>
        <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
        <summary>Copie les éléments de la collection au niveau de l'index spécifié dans le tableau spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dest" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à zéro.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dest" /> est multidimensionnel.  
  
ou 
Le nombre d'éléments dans <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> est supérieur à la quantité d'espace disponible entre l'index et la fin de <paramref name="dest" />.</exception>
        <exception cref="T:System.InvalidCastException">Le cast automatique des éléments de <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> en type <paramref name="dest" /> est impossible.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'accès à <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> est synchronisé (thread-safe).</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <value>Objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.Windows.Forms.TabPage" /> à ajouter à la collection.</param>
        <summary>Ajoute un contrôle <see cref="T:System.Windows.Forms.TabPage" /> à la collection.</summary>
        <returns>Position à laquelle <see cref="T:System.Windows.Forms.TabPage" /> a été inséré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> n'est pas un <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (page As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ page) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page">Objet à localiser dans la collection.</param>
        <summary>Détermine si le contrôle spécifié <see cref="T:System.Windows.Forms.TabPage" /> est dans <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</summary>
        <returns><see langword="true" /> si l'objet spécifié est <see cref="T:System.Windows.Forms.TabPage" /> dans la collection ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object page);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (page As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ page) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Windows.Forms.TabPage" /> à rechercher dans la collection.</param>
        <summary>Retourne l'index du contrôle <see cref="T:System.Windows.Forms.TabPage" /> spécifié dans la collection.</summary>
        <returns>Index de base zéro si la page est <see cref="T:System.Windows.Forms.TabPage" /> dans la collection ; sinon, -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object tabPage);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object tabPage) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, tabPage As Object) Implements IList.Insert" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ tabPage) = System::Collections::IList::Insert;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="tabPage" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro auquel <see cref="T:System.Windows.Forms.TabPage" /> doit être inséré.</param>
        <param name="tabPage"><see cref="T:System.Windows.Forms.TabPage" /> à insérer dans le <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</param>
        <param name="value"><see cref="T:System.Windows.Forms.TabPage" /> à insérer dans le <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" />.</param>
        <summary>Insère une <see cref="T:System.Windows.Forms.TabPage" /> dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <exception cref="T:System.ArgumentException"><paramref name="tabPage" /> n'est pas un <see cref="T:System.Windows.Forms.TabPage" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> est inférieur à 0 ou l'index est supérieur ou égal à <see cref="P:System.Windows.Forms.TabControl.TabPageCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.TabControl.TabPageCollection" /> est de taille fixe.</summary>
        <value><see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir.</param>
        <summary>Obtient ou définit un objet <see cref="T:System.Windows.Forms.TabPage" /> de la collection.</summary>
        <value>Objet <see cref="T:System.Windows.Forms.TabPage" /> à l'index spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur n'est pas <see cref="T:System.Windows.Forms.TabPage" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TabControl.TabPageCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Windows.Forms.TabPage" /> à supprimer.</param>
        <summary>Supprime <see cref="T:System.Windows.Forms.TabPage" /> de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Windows.Forms.TabControl.TabPageCollection> est castée en interface <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>