<Type Name="IDataGridViewEditingControl" FullName="System.Windows.Forms.IDataGridViewEditingControl">
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataGridViewEditingControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataGridViewEditingControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataGridViewEditingControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataGridViewEditingControl" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c678f-101">Définit les fonctionnalités courantes pour les contrôles hébergés dans les cellules d'un <see cref="T:System.Windows.Forms.DataGridView" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-101">Defines common functionality for controls that are hosted within cells of a <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-102">Cette interface est implémentée par les contrôles, tels que <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> et <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, qui sont hébergés par correspondant <xref:System.Windows.Forms.DataGridView> de cellules, telles que <xref:System.Windows.Forms.DataGridViewComboBoxCell> et <xref:System.Windows.Forms.DataGridViewTextBoxCell>, lorsqu’ils sont en mode édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-102">This interface is implemented by controls, such as <xref:System.Windows.Forms.DataGridViewComboBoxEditingControl> and <xref:System.Windows.Forms.DataGridViewTextBoxEditingControl>, that are hosted by corresponding <xref:System.Windows.Forms.DataGridView> cells, such as <xref:System.Windows.Forms.DataGridViewComboBoxCell> and <xref:System.Windows.Forms.DataGridViewTextBoxCell>, when they are in edit mode.</span></span>  
  
 <span data-ttu-id="c678f-103">Types de cellules qui peuvent héberger de jeu de contrôles d’édition leurs <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> propriété un <xref:System.Type> qui représente la modification de type de contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-103">Cell types that can host editing controls set their <xref:System.Windows.Forms.DataGridViewCell.EditType%2A> property to a <xref:System.Type> representing the editing control type.</span></span> <span data-ttu-id="c678f-104">Lorsque la cellule passe en mode édition, les étapes suivantes sont effectuées :</span><span class="sxs-lookup"><span data-stu-id="c678f-104">When the cell enters edit mode, the following steps are performed:</span></span>  
  
1.  <span data-ttu-id="c678f-105">Le <xref:System.Windows.Forms.DataGridView> contrôle crée une instance du type de contrôle de modification.</span><span class="sxs-lookup"><span data-stu-id="c678f-105">The <xref:System.Windows.Forms.DataGridView> control creates an instance of the editing control type.</span></span>  
  
2.  <span data-ttu-id="c678f-106">Le <xref:System.Windows.Forms.DataGridView> contrôle appelle la cellule <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c678f-106">The <xref:System.Windows.Forms.DataGridView> control calls the cell <xref:System.Windows.Forms.DataGridViewCell.InitializeEditingControl%2A> method.</span></span> <span data-ttu-id="c678f-107">Vous pouvez substituer cette méthode pour transférer la valeur de cellule pour le contrôle d’édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-107">You can override this method to transfer the cell value to the editing control.</span></span>  
  
3.  <span data-ttu-id="c678f-108">Le <xref:System.Windows.Forms.DataGridView> contrôle appelle le contrôle d’édition <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> méthode et passe le style de cellule en cours.</span><span class="sxs-lookup"><span data-stu-id="c678f-108">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl%2A> method and passes in the cell's current style.</span></span> <span data-ttu-id="c678f-109">Vous pouvez implémenter cette méthode pour initialiser l’apparence du contrôle d’édition afin qu’elle corresponde à l’apparence de la cellule.</span><span class="sxs-lookup"><span data-stu-id="c678f-109">You can implement this method to initialize the appearance of the editing control so that it matches the appearance of the cell.</span></span>  
  
4.  <span data-ttu-id="c678f-110">Le <xref:System.Windows.Forms.DataGridView> contrôle appelle le contrôle d’édition <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c678f-110">The <xref:System.Windows.Forms.DataGridView> control calls the editing control <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> method.</span></span> <span data-ttu-id="c678f-111">Vous pouvez implémenter cette méthode pour effectuer des ajustements finales pour le contrôle d’édition, telles que la sélection de la valeur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-111">You can implement this method to make final adjustments to the editing control, such as selecting the control value.</span></span>  
  
 <span data-ttu-id="c678f-112">Pour plus d’informations sur l’implémentation de <xref:System.Windows.Forms.IDataGridViewEditingControl>, consultez [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-112">For more information about implementing <xref:System.Windows.Forms.IDataGridViewEditingControl>, see [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 <span data-ttu-id="c678f-113">Types, tels que la cellule <xref:System.Windows.Forms.DataGridViewCheckBoxCell> qui fournissent une interface utilisateur (IU) pour spécifier des valeurs sans héberger un contrôle d’édition implémentent la <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span><span class="sxs-lookup"><span data-stu-id="c678f-113">Cell types such as <xref:System.Windows.Forms.DataGridViewCheckBoxCell> that provide a user interface (UI) for specifying values without hosting an editing control implement the <xref:System.Windows.Forms.IDataGridViewEditingCell> interface.</span></span> <span data-ttu-id="c678f-114">L’interface utilisateur figure dans ce cas, quelle que soit la cellule soit en mode édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-114">The UI in this case is displayed regardless of whether the cell is in edit mode.</span></span>  
  
 <span data-ttu-id="c678f-115">Autres types de cellules, telles que <xref:System.Windows.Forms.DataGridViewButtonCell>, fournissent une interface utilisateur, mais ne stockent pas les valeurs spécifiées par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c678f-115">Other cell types, such as <xref:System.Windows.Forms.DataGridViewButtonCell>, provide a UI but do not store user-specified values.</span></span> <span data-ttu-id="c678f-116">Dans ce cas, le type de cellule n’implémente pas <xref:System.Windows.Forms.IDataGridViewEditingCell> ou héberger un contrôle d’édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-116">In this case, the cell type does not implement <xref:System.Windows.Forms.IDataGridViewEditingCell> or host an editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c678f-117">L’exemple de code suivant fournit une implémentation de cette interface dérive <xref:System.Windows.Forms.DateTimePicker>.</span><span class="sxs-lookup"><span data-stu-id="c678f-117">The following code example provides an implementation of this interface that derives from <xref:System.Windows.Forms.DateTimePicker>.</span></span> <span data-ttu-id="c678f-118">Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-118">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#300)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#300](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#300)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="T:System.Windows.Forms.DataGridViewCell" />
    <altmember cref="T:System.Windows.Forms.IDataGridViewEditingCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxCell" />
    <altmember cref="T:System.Windows.Forms.DataGridViewComboBoxEditingControl" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />
    <altmember cref="P:System.Windows.Forms.DataGridViewCell.EditType" />
    <altmember cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" />
  </Docs>
  <Members>
    <Member MemberName="ApplyCellStyleToEditingControl">
      <MemberSignature Language="C#" Value="public void ApplyCellStyleToEditingControl (System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyCellStyleToEditingControl(class System.Windows.Forms.DataGridViewCellStyle dataGridViewCellStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyCellStyleToEditingControl(System::Windows::Forms::DataGridViewCellStyle ^ dataGridViewCellStyle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataGridViewCellStyle" Type="System.Windows.Forms.DataGridViewCellStyle" />
      </Parameters>
      <Docs>
        <param name="dataGridViewCellStyle"><span data-ttu-id="c678f-119"><see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> à utiliser comme modèle pour l'interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="c678f-119">The <see cref="T:System.Windows.Forms.DataGridViewCellStyle" /> to use as the model for the UI.</span></span></param>
        <summary><span data-ttu-id="c678f-120">Modifie l'interface utilisateur du contrôle pour être qu'elle soit cohérente avec le style de cellule spécifié.</span><span class="sxs-lookup"><span data-stu-id="c678f-120">Changes the control's user interface (UI) to be consistent with the specified cell style.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-121">En règle générale, une implémentation de cette méthode définit les propriétés de l’interface utilisateur pour le contrôle d’édition, telles que la police, couleur d’arrière-plan et la couleur de premier plan, les valeurs des propriétés correspondantes dans le `dataGridViewCellStyle`, qui est le style utilisé pour l’hébergement de cellule la contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-121">Typically, an implementation of this method will set UI properties for the editing control, such as font, background color, and foreground color, to the values of corresponding properties in the `dataGridViewCellStyle`, which is the style used for the cell hosting the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c678f-122">L’exemple de code suivant fournit une implémentation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="c678f-122">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="c678f-123">Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-123">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#303)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#303](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#303)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewCellStyle" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlDataGridView">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridView EditingControlDataGridView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataGridView EditingControlDataGridView" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlDataGridView As DataGridView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridView ^ EditingControlDataGridView { System::Windows::Forms::DataGridView ^ get(); void set(System::Windows::Forms::DataGridView ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-124">Obtient ou définit le <see cref="T:System.Windows.Forms.DataGridView" /> qui contient la cellule.</span><span class="sxs-lookup"><span data-stu-id="c678f-124">Gets or sets the <see cref="T:System.Windows.Forms.DataGridView" /> that contains the cell.</span></span></summary>
        <value><span data-ttu-id="c678f-125"><see cref="T:System.Windows.Forms.DataGridView" /> qui contient le <see cref="T:System.Windows.Forms.DataGridViewCell" /> qui est en cours de modification ; <see langword="null" /> s'il n'y a aucun <see cref="T:System.Windows.Forms.DataGridView" /> associé.</span><span class="sxs-lookup"><span data-stu-id="c678f-125">The <see cref="T:System.Windows.Forms.DataGridView" /> that contains the <see cref="T:System.Windows.Forms.DataGridViewCell" /> that is being edited; <see langword="null" /> if there is no associated <see cref="T:System.Windows.Forms.DataGridView" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingControlFormattedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object EditingControlFormattedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlFormattedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ EditingControlFormattedValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-126">Obtient ou définit la valeur mise en forme de la cellule en cours de modification par l'éditeur.</span><span class="sxs-lookup"><span data-stu-id="c678f-126">Gets or sets the formatted value of the cell being modified by the editor.</span></span></summary>
        <value><span data-ttu-id="c678f-127"><see cref="T:System.Object" /> qui représente la valeur mise en forme de la cellule.</span><span class="sxs-lookup"><span data-stu-id="c678f-127">An <see cref="T:System.Object" /> that represents the formatted value of the cell.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-128">La valeur mise en forme représente la valeur tel qu’il est affiché dans l’interface utilisateur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-128">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="c678f-129">La valeur mise en forme peut être différente en valeur absolue et en type de données à partir de la valeur réelle contenue dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-129">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c678f-130">L’exemple de code suivant fournit une implémentation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="c678f-130">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="c678f-131">Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-131">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#301)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#301](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#301)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlRowIndex">
      <MemberSignature Language="C#" Value="public int EditingControlRowIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditingControlRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlRowIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlRowIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EditingControlRowIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-132">Obtient ou définit l'index de la ligne parente de la cellule d'hébergement.</span><span class="sxs-lookup"><span data-stu-id="c678f-132">Gets or sets the index of the hosting cell's parent row.</span></span></summary>
        <value><span data-ttu-id="c678f-133">Index de la ligne qui contient la cellule, ou -1 s'il n'y a aucune ligne parente.</span><span class="sxs-lookup"><span data-stu-id="c678f-133">The index of the row that contains the cell, or –1 if there is no parent row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-134">Le <xref:System.Windows.Forms.IDataGridViewEditingControl> interface ne définit pas correspondante `ColumnIndex` propriété.</span><span class="sxs-lookup"><span data-stu-id="c678f-134">The <xref:System.Windows.Forms.IDataGridViewEditingControl> interface does not define a corresponding `ColumnIndex` property.</span></span> <span data-ttu-id="c678f-135">Vous pouvez utiliser la <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> propriété à récupérer le parent <xref:System.Windows.Forms.DataGridView> contrôler et utiliser le <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> propriété pour déterminer l’index de ligne et colonne de la cellule active.</span><span class="sxs-lookup"><span data-stu-id="c678f-135">You can use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlDataGridView%2A> property to retrieve the parent <xref:System.Windows.Forms.DataGridView> control and use the <xref:System.Windows.Forms.DataGridView.CurrentCellAddress%2A?displayProperty=nameWithType> property to determine the row and column indexes of the active cell.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.DataGridViewRow" />
        <altmember cref="P:System.Windows.Forms.DataGridViewCell.RowIndex" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingControlValueChanged { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EditingControlValueChanged" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingControlValueChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EditingControlValueChanged { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-136">Obtient ou définit une valeur indiquant si la valeur du contrôle d'édition diffère de la valeur de la cellule d'hébergement.</span><span class="sxs-lookup"><span data-stu-id="c678f-136">Gets or sets a value indicating whether the value of the editing control differs from the value of the hosting cell.</span></span></summary>
        <value>
          <span data-ttu-id="c678f-137"><see langword="true" /> si la valeur du contrôle diffère de la valeur de la cellule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-137"><see langword="true" /> if the value of the control differs from the cell value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-138">Le <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> est définie sur `true` pour indiquer qu’état de la cellule d’hébergement a changé et son interface utilisateur (IU) doit être mis à jour pour refléter ce changement de valeur.</span><span class="sxs-lookup"><span data-stu-id="c678f-138">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged%2A> property is set to `true` to indicate that the hosting cell's state has changed and its user interface (UI) needs to be updated to reflect this change in value.</span></span> <span data-ttu-id="c678f-139">Réinitialise la cellule ou la table propriétaire de cette propriété pour `false` après une mise à jour.</span><span class="sxs-lookup"><span data-stu-id="c678f-139">The owning cell or table will reset this property to `false` after an update.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c678f-140">Retour de <see langword="true" /> dans votre implémentation de cette propriété ne change pas automatiquement la valeur affichée.</span><span class="sxs-lookup"><span data-stu-id="c678f-140">Returning <see langword="true" /> in your implementation of this property does not automatically change the displayed value.</span></span> <span data-ttu-id="c678f-141">Lorsque la valeur change dans le contrôle d’édition, vous devez informer les <see cref="T:System.Windows.Forms.DataGridView" /> de la modification en passant <see langword="true" /> à la <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c678f-141">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      </Docs>
    </Member>
    <Member MemberName="EditingControlWantsInputKey">
      <MemberSignature Language="C#" Value="public bool EditingControlWantsInputKey (System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EditingControlWantsInputKey(valuetype System.Windows.Forms.Keys keyData, bool dataGridViewWantsInputKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditingControlWantsInputKey (keyData As Keys, dataGridViewWantsInputKey As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EditingControlWantsInputKey(System::Windows::Forms::Keys keyData, bool dataGridViewWantsInputKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="dataGridViewWantsInputKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="c678f-142"><see cref="T:System.Windows.Forms.Keys" /> qui représente la touche enfoncée.</span><span class="sxs-lookup"><span data-stu-id="c678f-142">A <see cref="T:System.Windows.Forms.Keys" /> that represents the key that was pressed.</span></span></param>
        <param name="dataGridViewWantsInputKey">
          <span data-ttu-id="c678f-143"><see langword="true" /> quand le <see cref="T:System.Windows.Forms.DataGridView" /> souhaite traiter le <see cref="T:System.Windows.Forms.Keys" /> dans <c>keyData</c> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-143"><see langword="true" /> when the <see cref="T:System.Windows.Forms.DataGridView" /> wants to process the <see cref="T:System.Windows.Forms.Keys" /> in <c>keyData</c>; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c678f-144">Détermine si la touche spécifiée est une touche de saisie normale que le contrôle d'édition doit traiter ou une touche spéciale que le <see cref="T:System.Windows.Forms.DataGridView" /> doit traiter.</span><span class="sxs-lookup"><span data-stu-id="c678f-144">Determines whether the specified key is a regular input key that the editing control should process or a special key that the <see cref="T:System.Windows.Forms.DataGridView" /> should process.</span></span></summary>
        <returns>
          <span data-ttu-id="c678f-145"><see langword="true" /> si la touche spécifiée est une touche de saisie normale qui doit être gérée par le contrôle d'édition ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-145"><see langword="true" /> if the specified key is a regular input key that should be handled by the editing control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-146">Un contrôle d’édition implémente cette méthode pour déterminer les touches d’entrée doivent être traitées par le contrôle, et qui doit être traité par le <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="c678f-146">An editing control implements this method to determine which input keys should be processed by the control, and which input keys should be processed by the <xref:System.Windows.Forms.DataGridView>.</span></span>  
  
 <span data-ttu-id="c678f-147">Le <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> méthode est appelée par le <xref:System.Windows.Forms.DataGridView>.</span><span class="sxs-lookup"><span data-stu-id="c678f-147">The <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> method is called by the <xref:System.Windows.Forms.DataGridView>.</span></span> <span data-ttu-id="c678f-148">Le <xref:System.Windows.Forms.DataGridView> passera dans `true` pour `dataGridViewWantsInputKey` lorsqu’il peut traiter le `keyData`.</span><span class="sxs-lookup"><span data-stu-id="c678f-148">The <xref:System.Windows.Forms.DataGridView> will pass in `true` for `dataGridViewWantsInputKey` when it can process the `keyData`.</span></span> <span data-ttu-id="c678f-149">Si le contrôle d’édition permet à la <xref:System.Windows.Forms.DataGridView> gérer le `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> doit retourner `false` lorsque `dataGridViewWantsInputKey` est `true`.</span><span class="sxs-lookup"><span data-stu-id="c678f-149">If the editing control can let the <xref:System.Windows.Forms.DataGridView> handle the `keyData`, <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> should return `false` when `dataGridViewWantsInputKey` is `true`.</span></span> <span data-ttu-id="c678f-150">D’autres implémentations de <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> peut ignorer un `dataGridViewWantsInputKey` valeur `true` et gérer le `keyData` dans le contrôle d’édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-150">Other implementations of <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlWantsInputKey%2A> may ignore a `dataGridViewWantsInputKey` value of `true` and handle the `keyData` in the editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c678f-151">L’exemple de code suivant fournit une implémentation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="c678f-151">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="c678f-152">Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-152">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#305)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#305](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#305)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="EditingPanelCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Cursor EditingPanelCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor EditingPanelCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditingPanelCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Cursor ^ EditingPanelCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-153">Obtient le curseur utilisé lorsque le pointeur de la souris se trouve sur <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> mais pas sur le contrôle d'édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-153">Gets the cursor used when the mouse pointer is over the <see cref="P:System.Windows.Forms.DataGridView.EditingPanel" /> but not over the editing control.</span></span></summary>
        <value><span data-ttu-id="c678f-154"><see cref="T:System.Windows.Forms.Cursor" /> qui représente le pointeur de la souris utilisé pour le panneau d'édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-154">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the mouse pointer used for the editing panel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-155">Le panneau d’édition est la <xref:System.Windows.Forms.Panel> que héberge le contrôle d’édition lorsque la <xref:System.Windows.Forms.DataGridView> contrôle est en mode édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-155">The editing panel is the <xref:System.Windows.Forms.Panel> that hosts the editing control when the <xref:System.Windows.Forms.DataGridView> control is in edit mode.</span></span> <span data-ttu-id="c678f-156">Le contrôle d’édition réel ne peut pas couvrir la zone entière du panneau d’édition.</span><span class="sxs-lookup"><span data-stu-id="c678f-156">The actual editing control may not cover the entire area of the editing panel.</span></span> <span data-ttu-id="c678f-157">Dans ce cas, le <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implémentation doit retourner le curseur à utiliser lorsque le pointeur de la souris est sur le panneau de configuration, mais pas sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-157">In this case, the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingPanelCursor%2A> implementation should return the cursor to use when the mouse pointer is over the panel but not over the control.</span></span> <span data-ttu-id="c678f-158">En règle générale, vous devez retourner le même curseur que le contrôle utilise.</span><span class="sxs-lookup"><span data-stu-id="c678f-158">Typically, you will want to return the same cursor that the control uses.</span></span> <span data-ttu-id="c678f-159">Si vous souhaitez modifier le curseur qui s’affiche lorsque le pointeur est sur le contrôle, vous devez définir le <xref:System.Windows.Forms.Control.Cursor%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c678f-159">If you want to change the cursor that appears when the pointer is over the control, you must set the <xref:System.Windows.Forms.Control.Cursor%2A> property.</span></span> <span data-ttu-id="c678f-160">Vous pouvez définir cette option dans le constructeur de la <xref:System.Windows.Forms.IDataGridViewEditingControl> mise en œuvre, ou vous pouvez la définir le <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implémentation.</span><span class="sxs-lookup"><span data-stu-id="c678f-160">You can set this in the constructor of the <xref:System.Windows.Forms.IDataGridViewEditingControl> implementation, or you can set it in the <xref:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit%2A> implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c678f-161">L’exemple de code suivant fournit une implémentation de ce membre.</span><span class="sxs-lookup"><span data-stu-id="c678f-161">The following code example provides an implementation of this member.</span></span> <span data-ttu-id="c678f-162">Cet exemple fait partie d’un exemple plus complet disponible dans [Comment : héberger des contrôles dans les cellules DataGridView Windows Forms](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span><span class="sxs-lookup"><span data-stu-id="c678f-162">This example is part of a larger example available in [How to: Host Controls in Windows Forms DataGridView Cells](~/docs/framework/winforms/controls/how-to-host-controls-in-windows-forms-datagridview-cells.md).</span></span>  
  
 [!code-csharp[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/CS/datagridviewcalendarcolumn.cs#311)]
 [!code-vb[System.Windows.Forms.DataGridViewCalendarColumn#311](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewCalendarColumn/VB/datagridviewcalendarcolumn.vb#311)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="T:System.Windows.Forms.Panel" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetEditingControlFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingControlFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditingControlFormattedValue(valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditingControlFormattedValue (context As DataGridViewDataErrorContexts) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditingControlFormattedValue(System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c678f-163">Une combinaison d'opérations de bits de valeurs <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> qui spécifie le contexte dans lequel les données sont exigées.</span><span class="sxs-lookup"><span data-stu-id="c678f-163">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</span></span></param>
        <summary><span data-ttu-id="c678f-164">Récupère la valeur mise en forme de la cellule.</span><span class="sxs-lookup"><span data-stu-id="c678f-164">Retrieves the formatted value of the cell.</span></span></summary>
        <returns><span data-ttu-id="c678f-165"><see cref="T:System.Object" /> qui représente la version mise en forme du contenu de la cellule.</span><span class="sxs-lookup"><span data-stu-id="c678f-165">An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-166">La valeur mise en forme représente la valeur tel qu’il est affiché dans l’interface utilisateur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-166">The formatted value represents the value as it is displayed in the control's user interface.</span></span> <span data-ttu-id="c678f-167">La valeur mise en forme peut être différente en valeur absolue et en type de données à partir de la valeur réelle contenue dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="c678f-167">The formatted value may be different in absolute value and even data type from the actual value contained in the control.</span></span>  
  
 <span data-ttu-id="c678f-168">Pour définir la valeur mise en forme du contrôle, utilisez le <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c678f-168">To set the formatted value of the control, use the <xref:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="c678f-169">Modification de la valeur de retour dans votre implémentation de cette méthode ne change pas automatiquement la valeur affichée.</span><span class="sxs-lookup"><span data-stu-id="c678f-169">Changing the return value in your implementation of this method does not automatically change the displayed value.</span></span> <span data-ttu-id="c678f-170">Lorsque la valeur change dans le contrôle d’édition, vous devez informer les <see cref="T:System.Windows.Forms.DataGridView" /> de la modification en passant <see langword="true" /> à la <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c678f-170">When the value changes in the editing control, you must notify the <see cref="T:System.Windows.Forms.DataGridView" /> of the change by passing <see langword="true" /> to the <see cref="M:System.Windows.Forms.DataGridView.NotifyCurrentCellDirty(System.Boolean)" /> method.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlFormattedValue" />
        <altmember cref="P:System.Windows.Forms.IDataGridViewEditingControl.EditingControlValueChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareEditingControlForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingControlForEdit (bool selectAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareEditingControlForEdit(bool selectAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataGridViewEditingControl.PrepareEditingControlForEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrepareEditingControlForEdit (selectAll As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrepareEditingControlForEdit(bool selectAll);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selectAll">
          <span data-ttu-id="c678f-171"><see langword="true" /> pour sélectionner tout le contenu de la cellule ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-171"><see langword="true" /> to select all of the cell's content; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c678f-172">Prépare la cellule actuellement sélectionnée pour la modification.</span><span class="sxs-lookup"><span data-stu-id="c678f-172">Prepares the currently selected cell for editing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-173">L’objectif de cette méthode est de préparer le contrôle et son contenu pour la modification.</span><span class="sxs-lookup"><span data-stu-id="c678f-173">The purpose of this method is to prepare the control and its contents for editing.</span></span> <span data-ttu-id="c678f-174">Par exemple, vous souhaiterez placer le point d’insertion à la fin du contenu, ou modifier la façon dont le contenu est aligné.</span><span class="sxs-lookup"><span data-stu-id="c678f-174">For example, you might want to put the insertion point at the end of the contents, or change how the contents are aligned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
    <Member MemberName="RepositionEditingControlOnValueChange">
      <MemberSignature Language="C#" Value="public bool RepositionEditingControlOnValueChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepositionEditingControlOnValueChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IDataGridViewEditingControl.RepositionEditingControlOnValueChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RepositionEditingControlOnValueChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepositionEditingControlOnValueChange { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c678f-175">Obtient ou définit une valeur indiquant si le contenu de la cellule doit être repositionné à chaque fois que la valeur change.</span><span class="sxs-lookup"><span data-stu-id="c678f-175">Gets or sets a value indicating whether the cell contents need to be repositioned whenever the value changes.</span></span></summary>
        <value>
          <span data-ttu-id="c678f-176"><see langword="true" /> si le contenu doit être repositionné ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c678f-176"><see langword="true" /> if the contents need to be repositioned; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c678f-177">Certaines situations nécessitent que le contenu de la cellule repositionner lorsque la valeur change.</span><span class="sxs-lookup"><span data-stu-id="c678f-177">Some situations require that cell contents reposition when the value changes.</span></span> <span data-ttu-id="c678f-178">Par exemple, le contenu de cellule devrez repositionner lorsqu’une cellule encapsule le texte et le contenu est développé.</span><span class="sxs-lookup"><span data-stu-id="c678f-178">For example, cell contents may need to reposition when a cell wraps text and the contents become larger.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
      </Docs>
    </Member>
  </Members>
</Type>