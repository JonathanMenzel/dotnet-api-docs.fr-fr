<Type Name="ListView+CheckedIndexCollection" FullName="System.Windows.Forms.ListView+CheckedIndexCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0728386e8e81ade5bf28be5875246a24e7260018" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52203374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView.CheckedIndexCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListView/CheckedIndexCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListView.CheckedIndexCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView.CheckedIndexCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListView::CheckedIndexCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListView.CheckedIndexCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente la collection contenant les index des éléments activés dans un contrôle list view.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Windows.Forms.ListView.CheckedIndexCollection> stocke les index des éléments activés dans un <xref:System.Windows.Forms.ListView> contrôle. Éléments peuvent être activés uniquement si le <xref:System.Windows.Forms.ListView.CheckBoxes%2A> propriété de la <xref:System.Windows.Forms.ListView> contrôle est défini sur `true`. Les index stockés dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection> sont des positions d’index dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>. Le <xref:System.Windows.Forms.ListView.ListViewItemCollection> stocke tous les éléments affichés dans le <xref:System.Windows.Forms.ListView> contrôle.  
  
 Le tableau suivant est un exemple montrant comment les <xref:System.Windows.Forms.ListView.ListViewItemCollection> stocke les éléments de la <xref:System.Windows.Forms.ListView> , ainsi que leur état activé dans un exemple <xref:System.Windows.Forms.ListView> contrôle.  
  
|Index|Élément|État activé dans le ListView|  
|-----------|----------|-----------------------------------|  
|0|Item1|Elle est désactivée|  
|1|Item2|Activé|  
|2|Item3|Elle est désactivée|  
|3|Item4|Activé|  
|4|Item5|Activé|  
  
 Selon le <xref:System.Windows.Forms.ListView.ListViewItemCollection> dans le tableau précédent, le tableau suivant illustre comment la <xref:System.Windows.Forms.ListView.CheckedIndexCollection> apparaîtrait.  
  
|Index|Index de l’élément activé dans ListViewItemCollection|  
|-----------|-----------------------------------------------------|  
|0|1|  
|1|3|  
|2|4|  
  
 Vous pouvez utiliser les propriétés et méthodes de cette classe pour effectuer diverses tâches avec la collection. Le <xref:System.Windows.Forms.ListView.CheckedIndexCollection.Contains%2A> méthode vous permet de déterminer si une position d’index de la <xref:System.Windows.Forms.ListView.ListViewItemCollection> est un des index stockés dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>. Une fois que vous savez que l’élément est dans la collection, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf%2A> méthode pour déterminer la position de l’index dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView.ListViewItemCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckedIndexCollection (System.Windows.Forms.ListView owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListView owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.#ctor(System.Windows.Forms.ListView)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckedIndexCollection(System::Windows::Forms::ListView ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ListView.CheckedIndexCollection : System.Windows.Forms.ListView -&gt; System.Windows.Forms.ListView.CheckedIndexCollection" Usage="new System.Windows.Forms.ListView.CheckedIndexCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListView" />
      </Parameters>
      <Docs>
        <param name="owner">Contrôle <see cref="T:System.Windows.Forms.ListView" /> auquel appartient la collection.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Impossible de créer une instance de cette classe sans l’associer avec un <xref:System.Windows.Forms.ListView> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (int checkedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(int32 checkedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.Contains(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (checkedIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(int checkedIndex);" />
      <MemberSignature Language="F#" Value="member this.Contains : int -&gt; bool" Usage="checkedIndexCollection.Contains checkedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="checkedIndex">Index à localiser dans la collection.</param>
        <summary>Détermine si l'index spécifié se trouve dans la collection.</summary>
        <returns>
          <see langword="true" /> si l'index spécifié de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> pour <see cref="T:System.Windows.Forms.ListView" /> est un élément de la collection ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.ListView.CheckedIndexCollection.Contains%2A> méthode vous permet de déterminer si une position d’index de la <xref:System.Windows.Forms.ListView.ListViewItemCollection> est un des index activés stockés dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>. Une fois que vous savez qu’un élément est dans la collection d’index activés, vous pouvez utiliser la <xref:System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf%2A> méthode pour déterminer la position de l’index dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListView.CheckedIndexCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre d’éléments de la collection.</summary>
        <value>Nombre d’éléments dans la collection</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de déterminer le nombre d’éléments activés dans le <xref:System.Windows.Forms.ListView>. Vous pouvez ensuite utiliser cette valeur lorsque vous en boucle les valeurs de la collection et que vous devez fournir un nombre d’itérations pour exécuter la boucle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="checkedIndexCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection d'index activés.</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerator" /> représentant la collection d'index activés.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (int checkedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(int32 checkedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (checkedIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(int checkedIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : int -&gt; int" Usage="checkedIndexCollection.IndexOf checkedIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="checkedIndex">Index de base zéro de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> à localiser dans la collection.</param>
        <summary>Retourne l'index dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> de l'index spécifié du <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> du contrôle list view.</summary>
        <returns>Index de base zéro figurant dans la collection dans laquelle se trouve l'index spécifié de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> au sein de la collection <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> ; sinon, -1 si l'index ne se trouve pas dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois que vous savez qu’un élément est dans la collection d’index activés (à l’aide de la <xref:System.Windows.Forms.ListView.CheckedIndexCollection.Contains%2A> méthode), vous pouvez utiliser la <xref:System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf%2A> méthode pour déterminer la position de l’index dans le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListView.CheckedIndexCollection.Contains(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Forms.ListView.CheckedIndexCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la collection est en lecture seule.</summary>
        <value>
          <see langword="true" /> si la collection est en lecture seule ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est toujours `true` pour cette collection. Les éléments dans la collection peuvent uniquement être modifiés par le <xref:System.Windows.Forms.ListView> contrôle.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int default[int] { int get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : int" Usage="System.Windows.Forms.ListView.CheckedIndexCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de l’élément à récupérer dans la collection.</param>
        <summary>Obtient la valeur d'index à l'index spécifié dans la collection.</summary>
        <value>Valeur d'index de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> qui est stockée à l'emplacement spécifié.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet indexeur permet d’obtenir un index spécifique de la <xref:System.Windows.Forms.ListView.CheckedIndexCollection>. L’index stocké dans la collection est un index dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection> de la <xref:System.Windows.Forms.ListView> qui représente un élément activé dans le <xref:System.Windows.Forms.ListView>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="index" /> est inférieur à 0 ou supérieur ou égal à la valeur de la propriété <see cref="P:System.Windows.Forms.ListView.CheckedIndexCollection.Count" /> de <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Tableau de type <see cref="T:System.Int32" />.</param>
        <param name="index">Index de base zéro dans le tableau au niveau duquel commencer la copie.</param>
        <summary>Copie la collection d'index d'élément sélectionné dans un tableau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau doit contenir des entiers signés 32 bits, ou il doit être un <xref:System.Object> tableau.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Le type de tableau ne peut pas être casté vers un <see cref="T:System.Int32" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l’accès à la collection est synchronisé (thread-safe).</summary>
        <value>
          <see langword="false" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui peut être utilisé pour synchroniser l'accès à la collection de contrôles.</summary>
        <value>Objet utilisé pour synchroniser la collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet à ajouter à <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</param>
        <summary>Ajoute un élément à la collection.</summary>
        <returns>Index de base zéro où est stocké <paramref name="value" /> dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> classe directement. Pour ajouter un élément à la <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>, utilisez le <xref:System.Windows.Forms.ListViewItem.Checked%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime tous les éléments de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.ListView.CheckedIndexCollection> classe directement. Pour effacer le <xref:System.Windows.Forms.ListView.CheckedIndexCollection>, définissez le <xref:System.Windows.Forms.ListViewItem.Checked%2A> propriété `false` pour chaque <xref:System.Windows.Forms.ListViewItem> dans le <xref:System.Windows.Forms.ListView.ListViewItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object checkedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object checkedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (checkedIndex As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ checkedIndex) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="checkedIndex">Index à trouver dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</param>
        <summary>Vérifie si l'index correspondant au <see cref="T:System.Windows.Forms.ListViewItem" /> est contrôlé.</summary>
        <returns>
          <see langword="true" /> si l'index se trouve dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object checkedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object checkedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (checkedIndex As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ checkedIndex) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkedIndex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="checkedIndex">Index de base zéro de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> à localiser dans la collection.</param>
        <summary>Retourne l'index de l'objet spécifié dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</summary>
        <returns>Index de base zéro dans la collection dans laquelle se trouve l'index spécifié de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> s'il est situé dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> ; sinon, -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Index auquel <paramref name="value" /> doit être inséré.</param>
        <param name="value">Objet à ajouter à <see cref="T:System.Windows.Forms.ListView.SelectedIndexCollection" />.</param>
        <summary>Insère un élément dans la collection à un index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.ListView.CheckedIndexCollection> classe directement. Pour ajouter un élément à la <xref:System.Windows.Forms.ListView.CheckedIndexCollection>, utilisez le <xref:System.Windows.Forms.ListViewItem.Checked%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" /> est de taille fixe.</summary>
        <value>
          <see langword="true" /> dans tous les cas.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à obtenir ou à définir.</param>
        <summary>Obtient ou définit un objet figurant dans <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</summary>
        <value>Valeur de l'objet de <see cref="T:System.Windows.Forms.ListView.ListViewItemCollection" /> qui est stockée à l'emplacement spécifié.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet à supprimer du <see cref="T:System.Windows.Forms.ListView.CheckedIndexCollection" />.</param>
        <summary>Supprime la première occurrence d'un élément dans la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.ListView.CheckedIndexCollection> classe directement. Pour supprimer un élément de la <xref:System.Windows.Forms.ListView.CheckedIndexCollection>, utilisez le <xref:System.Windows.Forms.ListViewItem.Checked%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListView.CheckedIndexCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à supprimer.</param>
        <summary>Supprime un élément de la collection au niveau de l'index spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas modifier la <xref:System.Windows.Forms.ListView.CheckedIndexCollection> classe directement. Pour supprimer un élément de la <xref:System.Windows.Forms.ListView.CheckedIndexCollection>, utilisez le <xref:System.Windows.Forms.ListViewItem.Checked%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
      </Docs>
    </Member>
  </Members>
</Type>