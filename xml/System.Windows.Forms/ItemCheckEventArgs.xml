<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ab1e5ad7c9eff7cf80076556900ea87cbe4a6be" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519697" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ItemCheckEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit les données pour l'événement <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> des contrôles <see cref="T:System.Windows.Forms.CheckedListBox" /> et <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Windows.Forms.CheckedListBox.ItemCheck> événement se produit lorsque l’état d’activation d’un élément dans une zone de liste de cases change. La <xref:System.Windows.Forms.ItemCheckEventArgs> classe spécifie l’index de l’élément à modifier, la valeur actuelle de la case à cocher pour l’élément et la nouvelle valeur à définir pour la case à cocher.  
  
 Pour plus d’informations sur la gestion des événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre un <xref:System.Windows.Forms.ListView> contrôle qui gère la <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType> événement. La méthode utilise le <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> et <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propriétés de la <xref:System.Windows.Forms.ItemCheckEventArgs> objet pour récupérer et calculer le prix des éléments de menu sélectionné. Pour exécuter cet exemple collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListView> nommé `ListView1` et un <xref:System.Windows.Forms.TextBox> nommé `Textbox1`. Appelez le `InititalizeListView` méthode à partir du constructeur du formulaire ou `Load` (méthode). Assurez-vous que tous les événements sont associés à leurs méthodes de gestion des événements.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ItemCheckEventArgs : int * System.Windows.Forms.CheckState * System.Windows.Forms.CheckState -&gt; System.Windows.Forms.ItemCheckEventArgs" Usage="new System.Windows.Forms.ItemCheckEventArgs (index, newCheckValue, currentValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Index de base zéro de l'élément à modifier.</param>
        <param name="newCheckValue">Une des valeurs <see cref="T:System.Windows.Forms.CheckState" /> qui indique si la case à cocher associée à l'élément doit passer à l'état activé, désactivé ou indéterminé.</param>
        <param name="currentValue">Une des valeurs <see cref="T:System.Windows.Forms.CheckState" /> qui indique si la case à cocher associée à l'élément est actuellement activée, désactivée ou dans un état indéterminé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : System.Windows.Forms.CheckState" Usage="System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique l'état actuel de la case à cocher de l'élément.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de déterminer l’état d’activation de l’élément spécifié dans le <xref:System.Windows.Forms.CheckedListBox> avant la vérification de changement d’état à appliquer est effectuée.  
  
   
  
## Examples  
 L’exemple de code suivant montre un <xref:System.Windows.Forms.ListView> contrôle qui gère la <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> événement. La méthode utilise le <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> et <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propriétés de la <xref:System.Windows.Forms.ItemCheckEventArgs> objet pour récupérer et calculer le prix des éléments de menu sélectionné. Pour exécuter cet exemple collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListView> nommé `ListView1` et un <xref:System.Windows.Forms.TextBox> nommé `Textbox1`. Appelez le `InititalizeListView` méthode à partir du constructeur du formulaire ou `Load` (méthode). Assurez-vous que tous les événements sont associés à leurs méthodes de gestion des événements.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'index de base zéro de l'élément à modifier.</summary>
        <value>Index de base zéro de l'élément à modifier.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour déterminer la case à cocher de l’élément dans le <xref:System.Windows.Forms.CheckedListBox> est en cours de modification.  
  
   
  
## Examples  
 L’exemple de code suivant montre un <xref:System.Windows.Forms.ListView> contrôle qui gère la <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> événement. La méthode utilise le <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> et <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> propriétés de la <xref:System.Windows.Forms.ItemCheckEventArgs> objet pour récupérer et calculer le prix des éléments de menu sélectionné. Pour exécuter cet exemple collez le code suivant dans un formulaire contenant un <xref:System.Windows.Forms.ListView> nommé `ListView1` et un <xref:System.Windows.Forms.TextBox> nommé `Textbox1`. Appelez le `InititalizeListView` méthode à partir du constructeur du formulaire ou `Load` (méthode). Assurez-vous que tous les événements sont associés à leurs méthodes de gestion des événements.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : System.Windows.Forms.CheckState with get, set" Usage="System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la case à cocher de l'élément doit être définie avec l'état activé, désactivé ou indéterminé.</summary>
        <value>Une des valeurs de <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet de déterminer le nouvel état de la vérification de l’élément spécifié avant la modification de l’état d’activation par le <xref:System.Windows.Forms.CheckedListBox> contrôle. En plus de la détermination de l’état d’activation, vous pouvez utiliser cette propriété dans un gestionnaire d’événements pour le <xref:System.Windows.Forms.CheckedListBox.ItemCheck> événement pour modifier l’état à un état d’activation différent de celui spécifié. Par exemple, si l’utilisateur a placé une case à cocher en regard d’un élément dans le <xref:System.Windows.Forms.CheckedListBox> que vous avez déterminé ne doit pas être archivé en fonction de l’état de votre application, vous pouvez remplacer la modification de l’état de la case à cocher en définissant cette propriété à sa valeur précédente ou à t o un état d’activation différent.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de ce membre. Dans l’exemple, un gestionnaire d’événements indique l’occurrence de le <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> événement. Ce rapport vous aide à savoir quand l’événement se produit et peut vous aider à déboguer. Pour générer un rapport sur plusieurs événements ou sur les événements qui se produisent fréquemment, envisagez de remplacer <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> avec <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> ou ajouter le message à un élément <xref:System.Windows.Forms.TextBox>.  
  
 Pour exécuter l’exemple de code, collez-le dans un projet qui contient une instance du type <xref:System.Windows.Forms.CheckedListBox> nommé `CheckedListBox1`. Vérifiez que le Gestionnaire d’événements est associé à la <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> événement.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>