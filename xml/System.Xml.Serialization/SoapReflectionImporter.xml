<Type Name="SoapReflectionImporter" FullName="System.Xml.Serialization.SoapReflectionImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c3c9ab82bd53401777216d2e2499a7274f36a2e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720543" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapReflectionImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapReflectionImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapReflectionImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapReflectionImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapReflectionImporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Génère des mappages aux messages encodés selon le protocole SOAP d'informations de types .NET Framework ou de méthodes de service Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Xml.Serialization.SoapReflectionImporter> classe fournit les mappages de types aux parties de message SOAP codé, tel que défini dans un document Web Services Description Language (WSDL). Il est utilisé uniquement lorsqu’un service Web ou le client spécifie l’encodage SOAP, comme décrit dans la Section 5 de la spécification SOAP 1.1.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Group`. La sérialisation de le `GroupName` et `IgnoreThis` champs et les membres de le `GroupType` énumération sont remplacées. Dans le `CreateOverrideSerializer` (méthode), un <xref:System.Xml.Serialization.SoapAttributeOverrides> est créé et pour chaque membre ou énumération substitué, un <xref:System.Xml.Serialization.SoapAttributes> est créée avec la propriété appropriée et ajoutées à la <xref:System.Xml.Serialization.SoapAttributeOverrides>. Un <xref:System.Xml.Serialization.XmlTypeMapping> est créé à l’aide de la <xref:System.Xml.Serialization.SoapAttributeOverrides>et qui <xref:System.Xml.Serialization.XmlTypeMapping> est utilisé pour créer le <xref:System.Xml.Serialization.XmlSerializer> qui substitue la sérialisation par défaut.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapReflectionImporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapReflectionImporter(System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant un espace de noms XML par défaut pour les mappages de types importés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (System.Xml.Serialization.SoapAttributeOverrides attributeOverrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.SoapAttributeOverrides attributeOverrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As SoapAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapReflectionImporter(System::Xml::Serialization::SoapAttributeOverrides ^ attributeOverrides);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.SoapAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions pour la sérialisation XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapReflectionImporter (System.Xml.Serialization.SoapAttributeOverrides attributeOverrides, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.SoapAttributeOverrides attributeOverrides, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributeOverrides As SoapAttributeOverrides, defaultNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapReflectionImporter(System::Xml::Serialization::SoapAttributeOverrides ^ attributeOverrides, System::String ^ defaultNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributeOverrides" Type="System.Xml.Serialization.SoapAttributeOverrides" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeOverrides">Objet <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> qui substitue la façon dont la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise des types mappés à l'aide de l'encodage SOAP.</param>
        <param name="defaultNamespace">Espace de noms XML par défaut à utiliser pour les mappages de types importés.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapReflectionImporter" />, en spécifiant des substitutions de sérialisation XML et un espace de noms XML par défaut.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportMembersMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember()) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
        <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
        <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> méthode est appelée lors de l’initialisation d’un service Web ou un client, ou en reflétant un service Web. Vous n’avez pas besoin d’appeler directement.  
  
 La liste suivante décrit les valeurs possibles pour le `members` paramètre :  
  
-   Paramètres d’entrée du méthode de service Web.  
  
-   Paramètres de sortie de méthode de service Web, ainsi que le type de retour, si différent de void, à l’index zéro.  
  
-   En-têtes SOAP d’entrée.  
  
-   En-têtes SOAP de sortie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, writeAccessors As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool writeAccessors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
        <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
        <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> méthode est appelée lors de l’initialisation d’un service Web ou un client, ou en reflétant un service Web. Vous n’avez pas besoin d’appeler directement.  
  
 La liste suivante décrit les valeurs possibles pour le `members` paramètre :  
  
-   Paramètres d’entrée du méthode de service Web.  
  
-   Paramètres de sortie de méthode de service Web, ainsi que le type de retour, si différent de void, à l’index zéro.  
  
-   En-têtes SOAP d’entrée.  
  
-   En-têtes SOAP de sortie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, writeAccessors As Boolean, validate As Boolean) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool writeAccessors, bool validate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
        <Parameter Name="validate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
        <param name="validate">
          <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <c>hasWrapperElement</c> est <see langword="true" />.</param>
        <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
        <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> méthode est appelée lors de l’initialisation d’un service Web ou un client, ou en reflétant un service Web. Vous n’avez pas besoin d’appeler directement.  
  
 La liste suivante décrit les valeurs possibles pour le `members` paramètre :  
  
-   Paramètres d’entrée du méthode de service Web.  
  
-   Paramètres de sortie de méthode de service Web, ainsi que le type de retour, si différent de void, à l’index zéro.  
  
-   En-têtes SOAP d’entrée.  
  
-   En-têtes SOAP de sortie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportMembersMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlMembersMapping ImportMembersMapping (string elementName, string ns, System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate, System.Xml.Serialization.XmlMappingAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlMembersMapping ImportMembersMapping(string elementName, string ns, class System.Xml.Serialization.XmlReflectionMember[] members, bool hasWrapperElement, bool writeAccessors, bool validate, valuetype System.Xml.Serialization.XmlMappingAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportMembersMapping (elementName As String, ns As String, members As XmlReflectionMember(), hasWrapperElement As Boolean, writeAccessors As Boolean, validate As Boolean, access As XmlMappingAccess) As XmlMembersMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlMembersMapping ^ ImportMembersMapping(System::String ^ elementName, System::String ^ ns, cli::array &lt;System::Xml::Serialization::XmlReflectionMember ^&gt; ^ members, bool hasWrapperElement, bool writeAccessors, bool validate, System::Xml::Serialization::XmlMappingAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlMembersMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="members" Type="System.Xml.Serialization.XmlReflectionMember[]" />
        <Parameter Name="hasWrapperElement" Type="System.Boolean" />
        <Parameter Name="writeAccessors" Type="System.Boolean" />
        <Parameter Name="validate" Type="System.Boolean" />
        <Parameter Name="access" Type="System.Xml.Serialization.XmlMappingAccess" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="ns">Espace de noms d'élément XML produit à partir de la méthode de service Web.</param>
        <param name="members">Tableau des entités de code .NET Framework qui appartiennent à une méthode de service Web.</param>
        <param name="hasWrapperElement">
          <see langword="true" /> pour indiquer que les éléments qui correspondent aux parties du message WSDL doivent être joints dans un élément wrapper supplémentaire dans un message SOAP ; sinon, <see langword="false" />.</param>
        <param name="writeAccessors">
          <see langword="true" /> pour indiquer une liaison de service Web de style RPC ; <see langword="false" /> pour indiquer une liaison de service Web de style document ou un en-tête SOAP.</param>
        <param name="validate">
          <see langword="true" /> pour indiquer qu'un désérialiseur généré doit vérifier le nom qualifié attendu de l'élément wrapper ; sinon, <see langword="false" />. La valeur de ce paramètre est pertinente uniquement si la valeur du paramètre <c>hasWrapperElement</c> est <see langword="true" />.</param>
        <param name="access">Une des valeurs de <see cref="T:System.Xml.Serialization.XmlMappingAccess" />.</param>
        <summary>Génère des mappages de types internes pour les informations qui sont rassemblées à partir d'une méthode de service Web.</summary>
        <returns>Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping%2A> méthode est appelée lors de l’initialisation d’un service Web ou un client, ou en reflétant un service Web. Vous n’avez pas besoin d’appeler directement.  
  
 La liste suivante décrit les valeurs possibles pour le `members` paramètre :  
  
-   Paramètres d’entrée du méthode de service Web.  
  
-   Paramètres de sortie de méthode de service Web, ainsi que le type de retour, si différent de void, à l’index zéro.  
  
-   En-têtes SOAP d’entrée.  
  
-   En-têtes SOAP de sortie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportTypeMapping">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un objet qui est utilisé pour le mappage à partir d'un type à une représentation XML à l'aide du type spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
        <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
        <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’élément de schéma XML est sérialisé à l’aide de l’encodage SOAP.  
  
 Vous n’avez pas besoin d’appeler le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> directement la méthode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportTypeMapping">
      <MemberSignature Language="C#" Value="public System.Xml.Serialization.XmlTypeMapping ImportTypeMapping (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Serialization.XmlTypeMapping ImportTypeMapping(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Serialization::XmlTypeMapping ^ ImportTypeMapping(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type .NET Framework pour lequel générer un mappage.</param>
        <param name="defaultNamespace">Espace de noms XML par défaut à utiliser.</param>
        <summary>Génère un mappage à un élément de schéma XML pour un type .NET Framework.</summary>
        <returns>Mappage .NET Framework interne d'un type vers un élément de schéma XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’élément de schéma XML est sérialisé à l’aide de l’encodage SOAP.  
  
 Vous n’avez pas besoin d’appeler le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> directement la méthode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeType">
      <MemberSignature Language="C#" Value="public void IncludeType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type .NET Framework pour lequel des informations de mappage de type doivent être enregistrées.</param>
        <summary>Place des mappages pour un type dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous n’avez pas besoin d’appeler le <xref:System.Xml.Serialization.SoapReflectionImporter.IncludeType%2A> directement la méthode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeTypes">
      <MemberSignature Language="C#" Value="public void IncludeTypes (System.Reflection.ICustomAttributeProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncludeTypes(class System.Reflection.ICustomAttributeProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IncludeTypes (provider As ICustomAttributeProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncludeTypes(System::Reflection::ICustomAttributeProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Reflection.ICustomAttributeProvider" />
      </Parameters>
      <Docs>
        <param name="provider">Objet de réflexion <see cref="T:System.Reflection.ICustomAttributeProvider" /> qui contient des attributs personnalisés qui sont dérivés de l'attribut <see cref="T:System.Xml.Serialization.SoapIncludeAttribute" />.</param>
        <summary>Place des mappages pour des types dérivés dans le contexte de l'instance de <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> pour une utilisation ultérieure lorsque les méthodes d'importation sont appelées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>