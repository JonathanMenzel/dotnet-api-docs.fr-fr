<Type Name="XmlSerializer" FullName="System.Xml.Serialization.XmlSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6107e3449448a9657d930c6e7be7dc347aa048ba" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51881426" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializer" />
  <TypeSignature Language="F#" Value="type XmlSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sérialise et désérialise des objets vers et depuis des documents XML. <see cref="T:System.Xml.Serialization.XmlSerializer" /> permet de contrôler le mode d'encodage des objets en langage XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La sérialisation XML est le processus qui consiste à convertir des propriétés et champs publics d'un objet dans un format série (dans ce cas, XML) à des fins de stockage et de transport. La désérialisation recrée l’objet dans son état d’origine à partir de la sortie XML. Vous pouvez considérer de sérialisation comme un moyen d’enregistrer l’état d’un objet dans un flux ou de la mémoire tampon. Par exemple, ASP.NET utilise le <xref:System.Xml.Serialization.XmlSerializer> classe pour encoder les messages de service Web XML.  
  
 Les données de vos objets sont décrites à l'aide des constructions d'un langage de programmation, telles que les classes, les champs, les propriétés, les types primitifs, les tableaux voire du code XML incorporé sous forme d'objets <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlAttribute>. Vous avez la possibilité de créer vos propres classes, annotées avec des attributs ou à l’aide de la [outil XML Schema Definition (Xsd.exe)](~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md) pour générer les classes basées sur un document XML Schema definition (XSD). Si vous avez un schéma XML, vous pouvez exécuter Xsd.exe pour produire un ensemble de classes fortement typées sur le schéma et annotées avec des attributs à se conformer au schéma lorsqu’il est sérialisé.  
  
 Pour transférer des données entre les objets et XML requiert un mappage dans les constructions de langage de programmation pour le schéma XML et à partir du schéma XML pour les constructions de langage de programmation. Le <xref:System.Xml.Serialization.XmlSerializer> et outils associés, tels que Xsd.exe, proposent une passerelle entre ces deux technologies au moment du design et de runtime. Au moment du design, utilisez Xsd.exe pour produire un document de schéma XML (.xsd) à partir de vos classes personnalisées ou pour générer des classes à partir d’un schéma donné. Dans les deux cas, les classes sont annotées avec des attributs personnalisés pour indiquer à le <xref:System.Xml.Serialization.XmlSerializer> le mappage entre le système de schéma XML et le common language runtime. Lors de l’exécution, les instances des classes peuvent être sérialisées en documents XML qui suivent le schéma donné. De même, ces documents XML peuvent être désérialisés en objets d’exécution. Notez que le schéma XML est facultatif et non requises au moment du design ou de runtime.  
  
## <a name="controlling-generated-xml"></a>Contrôle de code XML généré  
 Pour contrôler le code XML généré, vous pouvez appliquer des attributs spéciaux aux classes et membres. Par exemple, pour spécifier un autre nom d’élément XML, appliquer un <xref:System.Xml.Serialization.XmlElementAttribute> à un champ public ou une propriété et un ensemble la <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propriété. Pour obtenir une liste complète des attributs similaires, consultez [attributs qui contrôlent la sérialisation XML](https://msdn.microsoft.com/library/414b820f-a696-4206-b576-2711d85490c7). Vous pouvez également implémenter le <xref:System.Xml.Serialization.IXmlSerializable> interface pour contrôler la sortie XML.  
  
 Si le code XML généré doit se conformer à la section 5 du document World Wide Consortium (www.w3.org), « Simple Object Access Protocol (SOAP) 1.1 », vous devez construire le <xref:System.Xml.Serialization.XmlSerializer> avec un <xref:System.Xml.Serialization.XmlTypeMapping>. Pour mieux contrôler le code XML SOAP encodé, utilisez les attributs répertoriés dans [attributs qui contrôlent la sérialisation codée en SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Avec le <xref:System.Xml.Serialization.XmlSerializer> vous pouvez tirer parti de l’utilisation des classes fortement typées et ont toujours la flexibilité du XML. À l’aide des champs ou des propriétés de type <xref:System.Xml.XmlElement>, <xref:System.Xml.XmlAttribute> ou <xref:System.Xml.XmlNode> dans vos classes fortement typées, vous pouvez lire les parties du document XML directement dans des objets XML.  
  
 Si vous travaillez avec des schémas XML extensibles, vous pouvez également utiliser le <xref:System.Xml.Serialization.XmlAnyElementAttribute> et <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> attributs pour sérialiser et désérialiser des éléments ou attributs qui ne figurent pas dans le schéma d’origine. Pour utiliser les objets, appliquer un <xref:System.Xml.Serialization.XmlAnyElementAttribute> à un champ qui retourne un tableau de <xref:System.Xml.XmlElement> objets, ou appliquer une <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> à un champ qui retourne un tableau de <xref:System.Xml.XmlAttribute> objets.  
  
 Si une propriété ou un champ retourne un objet complexe (tel qu'un tableau ou une instance de classe), <xref:System.Xml.Serialization.XmlSerializer> le convertit en élément imbriqué dans le document XML principal. Par exemple, la première classe dans le code suivant retourne une instance de la deuxième classe.  
  
```vb  
Public Class MyClass  
    Public MyObjectProperty As MyObject  
End Class  
  
Public Class MyObject  
    Public ObjectName As String  
End Class  
```  
  
```csharp  
public class MyClass  
{  
    public MyObject MyObjectProperty;  
}  
public class MyObject  
{  
    public string ObjectName;  
}  
```  
  
 La sérialisation, sortie XML ressemble à ceci :  
  
```  
<MyClass>  
  <MyObjectProperty>  
  <ObjectName>My String</ObjectName>  
  </MyObjectProperty>  
</MyClass>  
```  
  
 Si un schéma inclut un élément qui est facultatif (minOccurs = '0'), ou si le schéma inclut une valeur par défaut, vous avez deux options. Une option consiste à utiliser <xref:System.ComponentModel.DefaultValueAttribute?displayProperty=nameWithType> pour spécifier la valeur par défaut, comme indiqué dans le code suivant.  
  
```vb  
Public Class PurchaseOrder  
    <System.ComponentModel.DefaultValueAttribute ("2002")> _  
    Public Year As String  
End Class  
```  
  
```csharp  
public class PurchaseOrder  
{  
    [System.ComponentModel.DefaultValueAttribute ("2002")]  
    public string Year;  
}  
```  
  
 Une autre option consiste à utiliser un modèle particulier pour créer un champ booléen reconnu par le <xref:System.Xml.Serialization.XmlSerializer>et pour appliquer le <xref:System.Xml.Serialization.XmlIgnoreAttribute> au champ. Le modèle est créé sous la forme de `propertyNameSpecified`. Par exemple, si un champ n’est nommé « MyFirstName », vous allez également créer un champ « MyFirstNameSpecified » qui indique à la <xref:System.Xml.Serialization.XmlSerializer> s’il faut générer l’élément XML nommé « MyFirstName ». L'exemple suivant le démontre.  
  
```vb  
Public Class OptionalOrder  
    ' This field's value should not be serialized   
    ' if it is uninitialized.  
    Public FirstOrder As String  
  
    ' Use the XmlIgnoreAttribute to ignore the   
    ' special field named "FirstOrderSpecified".  
    <System.Xml.Serialization.XmlIgnoreAttribute> _  
    Public FirstOrderSpecified As Boolean  
End Class  
```  
  
```csharp  
public class OptionalOrder  
{  
    // This field should not be serialized   
    // if it is uninitialized.  
    public string FirstOrder;  
  
    // Use the XmlIgnoreAttribute to ignore the   
    // special field named "FirstOrderSpecified".  
    [System.Xml.Serialization.XmlIgnoreAttribute]  
    public bool FirstOrderSpecified;  
}  
```  
  
## <a name="overriding-default-serialization"></a>Substitution de sérialisation par défaut  
 Vous pouvez également substituer la sérialisation de n’importe quel jeu d’objets et leurs champs et les propriétés par la création de l’un des attributs appropriés et en l’ajoutant à une instance de la <xref:System.Xml.Serialization.XmlAttributes> classe. Substituer la sérialisation de cette manière a deux utilisations : tout d’abord, vous pouvez contrôler et augmenter la sérialisation d’objets trouvés dans une DLL, même si vous n’avez pas d’accès à la source ; Ensuite, vous pouvez créer un ensemble de classes sérialisables, mais sérialiser les objets de plusieurs façons. Pour plus d’informations, consultez le <xref:System.Xml.Serialization.XmlAttributeOverrides> classe et [Comment : contrôle la sérialisation de Classes dérivées](https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84).  
  
 Pour sérialiser un objet, appelez le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> (méthode). Pour désérialiser un objet, appelez le <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (méthode).  
  
 Pour ajouter des espaces de noms XML à un document XML, consultez <xref:System.Xml.Serialization.XmlSerializerNamespaces>.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> offre un traitement spécial aux classes qui implémentent <xref:System.Collections.IEnumerable> ou <xref:System.Collections.ICollection>. Une classe qui implémente <xref:System.Collections.IEnumerable> doit implémenter une méthode `Add` publique n'acceptant qu'un paramètre. Le `Add` paramètre de la méthode doit être du même type que celui retourné par la `Current` propriété sur la valeur retournée par `GetEnumerator`, ou l’une des bases de ce type. Une classe qui implémente <xref:System.Collections.ICollection> (tel que <xref:System.Collections.CollectionBase>) en plus de <xref:System.Collections.IEnumerable> doit avoir un public `Item` propriété indexée (indexeur en c#) qui prend un entier, et il doit avoir un public `Count` propriété de type entier. Le paramètre à la `Add` méthode doit être du même type que celui retourné par la `Item` propriété ou l’une des bases de ce type. Pour les classes qui implémentent <xref:System.Collections.ICollection>, les valeurs à sérialiser sont récupérées à partir de la liste indexée `Item` propriété, ne pas en appelant `GetEnumerator`.  
  
 Vous devez être autorisé à écrire dans le répertoire temporaire (comme défini par la variable d’environnement TEMP) désérialiser un objet.  
  
## <a name="dynamically-generated-assemblies"></a>Assemblys générés dynamiquement  
 Pour améliorer les performances, l’infrastructure de sérialisation XML génère dynamiquement des assemblys pour sérialiser et désérialiser des types spécifiés. L’infrastructure recherche et réutilise ces assemblys. Ce comportement se produit uniquement lorsque vous utilisez les constructeurs suivants :  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%29?displayProperty=nameWithType>  
  
 <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>  
  
 Si vous utilisez un des autres constructeurs, plusieurs versions du même assembly sont générées et jamais déchargées, ce qui aboutit à une fuite de mémoire et les performances médiocres. La solution la plus simple consiste à utiliser un des deux constructeurs mentionnées précédemment. Sinon, vous devez mettre en cache les assemblys dans un <xref:System.Collections.Hashtable>, comme illustré dans l’exemple suivant.  
  
```csharp  
Hashtable serializers = new Hashtable();  
  
// Use the constructor that takes a type and XmlRootAttribute.  
XmlSerializer s = new XmlSerializer(typeof(MyClass), myRoot);  
  
// Implement a method named GenerateKey that creates unique keys   
// for each instance of the XmlSerializer. The code should take   
// into account all parameters passed to the XmlSerializer   
// constructor.  
object key = GenerateKey(typeof(MyClass), myRoot);  
  
// Check the local cache for a matching serializer.  
XmlSerializer ser = (XmlSerializer)serializers[key];  
if (ser == null)   
{  
    ser = new XmlSerializer(typeof(MyClass), myRoot);  
    // Cache the serializer.  
    serializers[key] = ser;  
}  
else  
{  
    // Use the serializer to serialize, or deserialize.  
}  
```  
  
```vb  
Dim serializers As New Hashtable()  
  
' Use the constructor that takes a type and XmlRootAttribute.  
Dim s As New XmlSerializer(GetType([MyClass]), myRoot)  
  
' Implement a method named GenerateKey that creates unique keys   
' for each instance of the XmlSerializer. The code should take   
' into account all parameters passed to the XmlSerializer   
' constructor.  
Dim key As Object = GenerateKey(GetType([MyClass]), myRoot)  
  
' Check the local cache for a matching serializer.  
Dim ser As XmlSerializer = CType(serializers(key), XmlSerializer)  
  
If ser Is Nothing Then  
    ser = New XmlSerializer(GetType([MyClass]), myRoot)  
    ' Cache the serializer.  
    serializers(key) = ser  
Else   
    ' Use the serializer to serialize, or deserialize.  
End If  
```  
  
## <a name="serialization-of-arraylist-and-generic-list"></a>Sérialisation d’ArrayList et List générique  
 Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser ou désérialiser les éléments suivants :  
  
-   Tableaux de <xref:System.Collections.ArrayList>  
  
-   Tableaux de <xref:System.Collections.Generic.List%601>  
  
## <a name="serialization-of-enumerations-of-unsigned-long"></a>Sérialisation d’énumérations d’Unsigned Long  
 Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas être instancié pour sérialiser une énumération si les conditions suivantes sont remplies : l’énumération est de type long non signé (`ulong` en c#) et l’énumération contient des membres ayant une valeur supérieure à 9,223,372,036,854,775,807. Par exemple, ce qui suit ne peut pas être sérialisé.  
  
```  
public enum LargeNumbers: ulong  
{  
    a = 9223372036854775808  
}  
// At runtime, the following code will fail.  
xmlSerializer mySerializer=new XmlSerializer(typeof(LargeNumbers));  
```  
  
## <a name="objects-marked-with-the-obsolete-attribute-no-longer-serialized"></a>Objets marqués avec l’attribut Obsolete sérialisé n’est plus  
 Dans le [!INCLUDE[netfx35_short](~/includes/netfx35-short-md.md)] le <xref:System.Xml.Serialization.XmlSerializer> classe ne sérialise plus les objets qui sont marqués comme `[Obsolete]`.  
  
   
  
## Examples  
 L’exemple suivant contient deux classes principales : `PurchaseOrder` et `Test`. Le `PurchaseOrder` classe contient des informations sur une seule commande. Le `Test` classe contient les méthodes qui créent le bon de commande et lisent le bon de commande créé.  
  
 [!code-cpp[Classic XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ce type est thread-safe.</threadsafe>
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlText" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/caa92596-9e15-4d91-acbe-56911ef47a84">Comment : contrôler la sérialisation de classes dérivées</related>
    <related type="Article" href="https://msdn.microsoft.com/library/90fda55c-7730-41e9-bc4b-6423a4b920af">&lt;dateTimeSerialization&gt;élément</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d129d10c-3eb7-45d9-8098-5fa853825e47">Élément &lt;xmlSerializer&gt;</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Généralement, une application définit plusieurs classes qui le <xref:System.Xml.Serialization.XmlSerializer> convertit en un seul document d’instance XML. Toutefois, le <xref:System.Xml.Serialization.XmlSerializer> doivent savoir qu’un seul type, celui de la classe qui représente l’élément racine XML. Le <xref:System.Xml.Serialization.XmlSerializer> sérialise automatiquement toutes les instances de classe subordonnée. De même, seul le type de l’élément racine XML est requis pour la désérialisation.  
  
   
  
## Examples  
 L’exemple suivant construit un <xref:System.Xml.Serialization.XmlSerializer> qui sérialise un objet nommé `Widget`. L’exemple définit différentes propriétés de l’objet avant d’appeler le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> (méthode).  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer6 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer6 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : System.Xml.Serialization.XmlTypeMapping -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer xmlTypeMapping" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">
          <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
        <summary>Initialise une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à l'aide d'un objet qui établit une correspondance entre les types.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est utilisé pour créer un <xref:System.Xml.Serialization.XmlSerializer> lorsque vous sérialisez un objet dans un message SOAP. Pour contrôler les messages SOAP générés, utilisez les attributs spéciaux (commençant par le mot « Soap ») figurant dans le <xref:System.Xml.Serialization> espace de noms.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Group`. La sérialisation de le `GroupName`, `IgnoreThis` champs et les membres de la `GroupType` énumération sont remplacées. Dans le `CreateOverrideSerializer` (méthode), un <xref:System.Xml.Serialization.SoapAttributeOverrides> objet est créé et pour chaque membre substitué ou d’une énumération, un <xref:System.Xml.Serialization.SoapAttributes> objet est créé avec la propriété appropriée défini et ajouté à la <xref:System.Xml.Serialization.SoapAttributeOverrides> objet. Un <xref:System.Xml.Serialization.XmlMapping> objet est créé à l’aide de la <xref:System.Xml.Serialization.SoapAttributeOverrides> objet et qui <xref:System.Xml.Serialization.XmlMapping> objet est utilisé pour créer le <xref:System.Xml.Serialization.XmlSerializer> qui substitue la sérialisation par défaut.  
  
 [!code-cpp[SoapAttributesOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapAttributesOverrides/CPP/soapover.cpp#1)]
 [!code-csharp[SoapAttributesOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapAttributesOverrides/CS/soapover.cs#1)]
 [!code-vb[SoapAttributesOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapAttributesOverrides/VB/SoapOver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="defaultNamespace">Espace de noms par défaut à utiliser pour tous les éléments XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie l'espace de noms par défaut de tous les éléments XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant construit un <xref:System.Xml.Serialization.XmlSerializer> qui sérialise un objet nommé `Widget`. L’exemple définit différentes propriétés de l’objet avant d’appeler le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> (méthode).  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, Type[] extraTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Type[] extraTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, cli::array &lt;Type ^&gt; ^ extraTypes);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * Type[] -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, extraTypes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Si une propriété ou un champ retourne un tableau, le paramètre <paramref name="extraTypes" /> spécifie les objets pouvant être insérés dans ce tableau.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, si une propriété publique ou un champ retourne un objet, ou un tableau d’objets, les types d’objet sont automatiquement sérialisés. Toutefois, si une classe contient un champ ou une propriété qui retourne un tableau de type <xref:System.Object>, n’importe quel objet peut être inséré dans le tableau. Dans ce cas, le <xref:System.Xml.Serialization.XmlSerializer> doit être invité à accepter tous les types d’objet possibles sont insérées dans la <xref:System.Object> tableau. Pour ce faire, utilisez le `extraTypes` paramètre pour spécifier les types d’objets supplémentaires à sérialiser ou désérialiser.  
  
 Vous pouvez également utiliser le `extraTypes` paramètre pour spécifier les types dérivés d’une classe de base. Par exemple, une classe de base nommée `Phone` existe et une classe nommée `InternationalPhone` en dérive. Utilisez le `extraTypes` paramètre pour spécifier le type dérivé.  
  
   
  
## Examples  
 L’exemple suivant sérialise une instance d’une classe qui contient un champ public qui retourne un tableau d’objets. Le `extraTypes` paramètre de la <xref:System.Xml.Serialization.XmlSerializer> constructeur spécifie les types d’objets qui peuvent être sérialisés dans le tableau.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet à sérialiser.</param>
        <param name="overrides">Élément <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `overrides` paramètre peut être utilisé pour contrôler la manière dont les champs et propriétés sont encodées dans XML. Ces paramètres remplacent tous les attributs qui existent déjà sur les objets. Cela peut être utile lorsque le code source ne peut pas être modifié ou plusieurs encodages sont requis pour les mêmes classes.  
  
   
  
## Examples  
 L’exemple suivant sérialise une instance d’une classe qui est défini dans une DLL et à le faire, se substitue aux membres publics trouvés dans la DLL.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlRootAttribute root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlRootAttribute ^ root);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlRootAttribute -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, root)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="root">
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui représente l'élément racine XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Spécifie également la classe à utiliser en tant qu'élément racine XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’élément racine d’un document XML englobe tous les autres éléments. Par défaut, l’objet spécifié par le `type` paramètre est sérialisé comme élément racine. Propriétés, telles que le nom d’élément XML de l’élément racine, sont extraites de la `type` objet. Toutefois, le `root` paramètre vous permet de remplacer les informations de l’objet par défaut en spécifiant un <xref:System.Xml.Serialization.XmlRootAttribute>; l’objet vous permet de définir un autre espace de noms, nom de l’élément et ainsi de suite.  
  
   
  
## Examples  
 L’exemple suivant construit un <xref:System.Xml.Serialization.XmlSerializer> qui utilise un <xref:System.Xml.Serialization.XmlRootAttribute> qui contient différentes propriétés de l’élément racine XML, telles que son nom d’espace de noms et d’élément.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <c>type</c>.</param>
        <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
        <param name="root">
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
        <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `overrides` paramètre permet la création d’un [constructeur de XmlSerializer (, XmlAttributeOverrides, de Type\<xref:System.Xml.Serialization.XmlSerializer > qui sérialise une classe qui étend ou substitue le comportement d’un classe de base. Par exemple, étant donné une DLL, il est possible de créer une classe qui hérite ou étend une classe contenue dans la DLL. Pour sérialiser une telle classe, vous devez utiliser une instance de la [constructeur de XmlSerializer (Type Type, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlAttributeOverrides > classe lors de la construction de le [constructeur de XmlSerializer ( Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer >. Pour plus d’informations, consultez [constructeur de XmlSerializer (Type Type, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlAttributeOverrides >.  
  
 Par défaut, si une propriété publique ou un champ retourne un objet, ou un tableau d’objets, les types d’objet sont automatiquement sérialisés. Toutefois, si une classe contient un champ ou une propriété qui retourne un tableau de type [constructeur de XmlSerializer (Type Type, XmlAttributeOverrides,\<XRef : System.Object >, n’importe quel objet peut être inséré dans le tableau. Dans ce cas, le [constructeur de XmlSerializer (Type Type, XmlAttributeOverrides,\<xref:System.Xml.Serialization.XmlSerializer > doit être invité à accepter tous les types d’objet possibles sont insérées dans le [XmlSerializer Constructeur (Type Type, XmlAttributeOverrides,\<XRef : System.Object > tableau. Pour ce faire, utilisez le `extraTypes` paramètre pour spécifier les types d’objets supplémentaires à sérialiser ou désérialiser.  
  
 L’élément racine d’un document XML englobe tous les autres éléments. Par défaut, l’objet spécifié par le `type` paramètre est sérialisé comme élément racine. Propriétés, telles que le nom d’élément XML de l’élément racine sont extraites de la `type` objet. Toutefois, le `root` paramètre vous permet de remplacer les informations de l’objet par défaut en spécifiant un [constructeur de XmlSerializer (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlRootAttribute > ; le objet vous permet de définir un autre espace de noms, nom de l’élément et ainsi de suite.  
  
 Utilisez le `defaultName` paramètre pour spécifier l’espace de noms par défaut de tous les éléments XML générés par le [constructeur de XmlSerializer (Type, XmlAttributeOverrides, Type\<xref:System.Xml.Serialization.XmlSerializer >.  
  
   
  
## Examples  
 L’exemple suivant sérialise une instance d’une classe qui est défini dans une DLL et à le faire, remplace les membres publics que se trouvés dans la classe. L’exemple spécifie également un tableau de types supplémentaires, l’espace de noms par défaut pour tous les éléments XML et à utiliser la classe qui fournit les informations sur l’élément racine XML. L’exemple suppose que le code au début a été compilé dans une DLL nommée `HighSchool`.  
  
 [!code-cpp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.XmlSerializer Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.XmlSerializer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <c>type</c>.</param>
        <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
        <param name="root">
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
        <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
        <param name="location">Emplacement des types.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type <see cref="T:System.Object" /> en documents XML et désérialiser, les documents XML en objets du type <see cref="T:System.Object" />. Chaque objet à sérialiser peut lui-même contenir des instances de classes auxquelles cette surcharge peut substituer d'autres classes. Cette surcharge spécifie également l'espace de noms par défaut de tous les éléments XML ainsi que la classe à utiliser en tant qu'élément racine XML.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, class System.Xml.Serialization.XmlAttributeOverrides overrides, class System.Type[] extraTypes, class System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializer(Type ^ type, System::Xml::Serialization::XmlAttributeOverrides ^ overrides, cli::array &lt;Type ^&gt; ^ extraTypes, System::Xml::Serialization::XmlRootAttribute ^ root, System::String ^ defaultNamespace, System::String ^ location, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlSerializer : Type * System.Xml.Serialization.XmlAttributeOverrides * Type[] * System.Xml.Serialization.XmlRootAttribute * string * string * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer" Usage="new System.Xml.Serialization.XmlSerializer (type, overrides, extraTypes, root, defaultNamespace, location, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="overrides" Type="System.Xml.Serialization.XmlAttributeOverrides" />
        <Parameter Name="extraTypes" Type="System.Type[]" />
        <Parameter Name="root" Type="System.Xml.Serialization.XmlRootAttribute" />
        <Parameter Name="defaultNamespace" Type="System.String" />
        <Parameter Name="location" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="type">Type de l'objet que <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut sérialiser.</param>
        <param name="overrides">
          <see cref="T:System.Xml.Serialization.XmlAttributeOverrides" /> qui étend ou substitue le comportement de la classe spécifiée par le paramètre <c>type</c>.</param>
        <param name="extraTypes">Tableau <see cref="T:System.Type" /> de types d'objets supplémentaires à sérialiser.</param>
        <param name="root">
          <see cref="T:System.Xml.Serialization.XmlRootAttribute" /> qui définit les propriétés de l'élément racine XML.</param>
        <param name="defaultNamespace">Espace de noms par défaut de tous les éléments XML dans le document XML.</param>
        <param name="location">Emplacement des types.</param>
        <param name="evidence">Instance de la classe <see cref="T:System.Security.Policy.Evidence" /> qui contient des informations d'identification pour accéder aux types.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> qui peut sérialiser les objets du type spécifié en documents XML et désérialiser les documents XML en objets du type spécifié. Cette surcharge vous permet de fournir d'autres types qui peuvent être rencontrés pendant une sérialisation ou une désérialisation, ainsi qu'un espace de noms par défaut pour tous les éléments XML, la classe à utiliser comme élément racine XML, son emplacement et les informations d'identification requises pour y accéder.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permet un contrôle plus précis sur l’accès à un répertoire temporaire et empêche l’exploitation et l’injection de code. Pour utiliser cette méthode, spécifiez un emplacement et restreindre l’accès à des utilisateurs spécifiques. Les administrateurs peuvent définir des stratégies avec des listes de preuve qui correspondent aux autorisations.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeserialize">
      <MemberSignature Language="C#" Value="public virtual bool CanDeserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDeserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDeserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="abstract member CanDeserialize : System.Xml.XmlReader -&gt; bool&#xA;override this.CanDeserialize : System.Xml.XmlReader -&gt; bool" Usage="xmlSerializer.CanDeserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> qui pointe vers le document à désérialiser.</param>
        <summary>Obtient une valeur qui indique si <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser un document XML spécifié.</summary>
        <returns>
          <see langword="true" /> si ce <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut désérialiser l'objet vers lequel <see cref="T:System.Xml.XmlReader" /> pointe ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant appelle la <xref:System.Xml.Serialization.XmlSerializer.CanDeserialize%2A> méthode permettant de vérifier si un document XML peut être désérialisé.  
  
 [!code-cpp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.CanDeserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.CanDeserialize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="CreateReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationReader CreateReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationReader CreateReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateReader () As XmlSerializationReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationReader ^ CreateReader();" />
      <MemberSignature Language="F#" Value="abstract member CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader&#xA;override this.CreateReader : unit -&gt; System.Xml.Serialization.XmlSerializationReader" Usage="xmlSerializer.CreateReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un objet utilisé pour lire le document XML à sérialiser.</summary>
        <returns>
          <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> utilisé pour lire le document XML.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializationWriter CreateWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializationWriter CreateWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWriter () As XmlSerializationWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializationWriter ^ CreateWriter();" />
      <MemberSignature Language="F#" Value="abstract member CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter&#xA;override this.CreateWriter : unit -&gt; System.Xml.Serialization.XmlSerializationWriter" Usage="xmlSerializer.CreateWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializationWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, retourne un writer utilisé pour sérialiser l'objet.</summary>
        <returns>Instance qui implémente la classe <see cref="T:System.Xml.Serialization.XmlSerializationWriter" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Désérialise un document XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="xmlSerializer.Deserialize stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> qui contient le document XML à désérialiser.</param>
        <summary>Désérialise le document XML qui figure dans le <see cref="T:System.IO.Stream" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Object" /> en cours de désérialisation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La désérialisation est le processus de lecture d’un document XML et la construction d’un objet fortement typé pour le schéma XML (XSD) du document.  
  
 Avant la désérialisation, un <xref:System.Xml.Serialization.XmlSerializer> doit être construit en utilisant le type de l’objet qui est désérialisé.  
  
 Utilisez le `stream` paramètre pour spécifier un objet qui dérive de la <xref:System.IO.Stream> (classe), qui est conçu pour écrire dans des flux. Les classes qui dérivent de la <xref:System.IO.Stream> classe incluent :  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas désérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant désérialise un objet en utilisant un <xref:System.IO.Stream> objet.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.TextReader -&gt; obj" Usage="xmlSerializer.Deserialize textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">
          <see cref="T:System.IO.TextReader" /> qui contient le document XML à désérialiser.</param>
        <summary>Désérialise le document XML qui figure dans le <see cref="T:System.IO.TextReader" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Object" /> en cours de désérialisation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La désérialisation est le processus de lecture d’une instance d’un document XML et de construire un objet fortement typé pour le schéma XML (XSD) du document.  
  
 Avant la désérialisation, un <xref:System.Xml.Serialization.XmlSerializer> doit être construit en utilisant le type de l’objet qui est désérialisé.  
  
 Les classes qui héritent de <xref:System.IO.TextReader> incluent <xref:System.IO.StringReader> et <xref:System.IO.StreamReader>. Si vous utilisez un <xref:System.IO.StreamReader> pour désérialiser un objet, vous devez construire le <xref:System.IO.StreamReader> avec un bon <xref:System.Text.Encoding>. L’encodage spécifié par le document XML est ignoré.  
  
> [!NOTE]
>  Pour utiliser l’encodage spécifié par le document XML, utilisez la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> surcharge qui accepte un <xref:System.Xml.XmlReader> à la place. Le <xref:System.Xml.XmlReader> détecte automatiquement et utilise l’encodage spécifié par le document XML.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas désérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant désérialise un objet en utilisant un <xref:System.IO.TextReader> objet.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="protected virtual object Deserialize (System.Xml.Serialization.XmlSerializationReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Deserialize(class System.Xml.Serialization.XmlSerializationReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Deserialize (reader As XmlSerializationReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Deserialize(System::Xml::Serialization::XmlSerializationReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj&#xA;override this.Deserialize : System.Xml.Serialization.XmlSerializationReader -&gt; obj" Usage="xmlSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.Serialization.XmlSerializationReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> qui contient le document XML à désérialiser.</param>
        <summary>Désérialise le document XML qui figure dans le <see cref="T:System.Xml.Serialization.XmlSerializationReader" /> spécifié.</summary>
        <returns>L'objet désérialisé.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="xmlSerializer.Deserialize xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
        <summary>Désérialise le document XML qui figure dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Object" /> en cours de désérialisation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La désérialisation est le processus de lecture d’une instance d’un document XML et de construire un objet fortement typé pour le schéma XML (XSD) du document.  
  
 Avant la désérialisation, un <xref:System.Xml.Serialization.XmlSerializer> doit être construit en utilisant le type de l’objet qui est désérialisé.  
  
 Le <xref:System.Xml.XmlReader> détecte automatiquement et utilise l’encodage spécifié par le document XML.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas désérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant désérialise un objet en utilisant un <xref:System.Xml.XmlReader>.  
  
 [!code-cpp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Deserialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Deserialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> qui contient le document XML à désérialiser.</param>
        <param name="encodingStyle">Style d'encodage du XML sérialisé.</param>
        <summary>Désérialise le document XML figurant dans le <see cref="T:System.Xml.XmlReader" /> spécifié et le style d'encodage.</summary>
        <returns>L'objet désérialisé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La désérialisation est le processus de lecture d’une instance d’un document XML et de construire un objet fortement typé pour le schéma XML (XSD) du document.  
  
 Avant la désérialisation, un <xref:System.Xml.Serialization.XmlSerializer> doit être construit en utilisant le type de l’objet qui est désérialisé.  
  
 Définir le `encodingStyle` paramètre pour «http://schemas.xmlsoap.org/soap/encoding/ » pour l’encodage SOAP version 1.1 ; Sinon, affectez-lui la valeur «http://www.w3.org/2001/12/soap-encoding» pour l’encodage SOAP version 1.2.  
  
 **Remarque** le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas désérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la désérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader">
          <see cref="T:System.Xml.XmlReader" /> qui contient le document à désérialiser.</param>
        <param name="events">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
        <summary>Désérialise un document XML contenu par le <see cref="T:System.Xml.XmlReader" /> spécifié et autorise la substitution des événements qui se produisent pendant désérialisation.</summary>
        <returns>
          <see cref="T:System.Object" /> en cours de désérialisation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Objet en cours de désérialisation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader xmlReader, string encodingStyle, System.Xml.Serialization.XmlDeserializationEvents events);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader xmlReader, string encodingStyle, valuetype System.Xml.Serialization.XmlDeserializationEvents events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ xmlReader, System::String ^ encodingStyle, System::Xml::Serialization::XmlDeserializationEvents events);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader * string * System.Xml.Serialization.XmlDeserializationEvents -&gt; obj" Usage="xmlSerializer.Deserialize (xmlReader, encodingStyle, events)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="events" Type="System.Xml.Serialization.XmlDeserializationEvents" />
      </Parameters>
      <Docs>
        <param name="xmlReader">Instance de la classe <see cref="T:System.Xml.XmlReader" /> utilisée pour lire le document.</param>
        <param name="encodingStyle">Encodage utilisé.</param>
        <param name="events">Instance de la classe <see cref="T:System.Xml.Serialization.XmlDeserializationEvents" />.</param>
        <summary>Désérialise l'objet à l'aide des données contenues dans le <see cref="T:System.Xml.XmlReader" /> spécifié.</summary>
        <returns>Objet en cours de désérialisation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est requise pour la désérialisation d’en-têtes inconnus pour les scénarios de Service Web uniquement. Cette méthode vous permet d’éviter la synchronisation d’événement dans les méthodes de Service Web.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromMappings">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à partir des mappages spécifiés.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMappings (mappings As XmlMapping()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings mappings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="mappings">Tableau de <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> qui établit une correspondance entre les types.</param>
        <summary>Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau d'objets <see cref="T:System.Xml.Serialization.XmlTypeMapping" />.</summary>
        <returns>Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * System.Security.Policy.Evidence -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="mappings">Tableau des objets <see cref="T:System.Xml.Serialization.XmlMapping" /> utilisés pour mapper un type à un autre.</param>
        <param name="evidence">Instance de la classe <see cref="T:System.Security.Policy.Evidence" /> qui contient l'hôte et les données d'assembly présentés au système de la stratégie du Common Language Runtime.</param>
        <summary>Retourne une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> créée à partir de mappages d'un type XML à un autre.</summary>
        <returns>Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMappings">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromMappings (System.Xml.Serialization.XmlMapping[] mappings, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromMappings(class System.Xml.Serialization.XmlMapping[] mappings, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromMappings(cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member FromMappings : System.Xml.Serialization.XmlMapping[] * Type -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromMappings (mappings, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mappings">Tableau d'objets <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
        <param name="type">
          <see cref="T:System.Type" /> de l'objet désérialisé.</param>
        <summary>Retourne une instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" /> à partir des mappages spécifiés.</summary>
        <returns>Instance de la classe <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromTypes">
      <MemberSignature Language="C#" Value="public static System.Xml.Serialization.XmlSerializer[] FromTypes (Type[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Serialization.XmlSerializer[] FromTypes(class System.Type[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTypes (types As Type()) As XmlSerializer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Xml::Serialization::XmlSerializer ^&gt; ^ FromTypes(cli::array &lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="static member FromTypes : Type[] -&gt; System.Xml.Serialization.XmlSerializer[]" Usage="System.Xml.Serialization.XmlSerializer.FromTypes types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="types">Tableau d'objets <see cref="T:System.Type" />.</param>
        <summary>Retourne un tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" /> créés à partir d'un tableau de types.</summary>
        <returns>Tableau d'objets <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> méthode vous permet de créer efficacement un tableau de <xref:System.Xml.Serialization.XmlSerializer> objets pour le traitement d’un tableau de <xref:System.Type> objets.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Xml.Serialization.XmlSerializer.FromTypes%2A> méthode pour retourner un tableau de <xref:System.Xml.Serialization.XmlSerializer> objets. Le code comporte trois définitions de classe qui sont utilisées pour créer un tableau de <xref:System.Type> objets.  
  
 [!code-cpp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.FromTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.FromTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateSerializer">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un assembly qui contient des sérialiseurs typés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [outil XML Serializer Generator (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crée un assembly de sérialisation XML pour les types dans un assembly spécifié afin d’améliorer les performances au moment de l’exécution d’un <xref:System.Xml.Serialization.XmlSerializer> lorsqu’il sérialise ou désérialise des objets de la types spécifiés. Utilisez le <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> pour retourner le nom d’un tel assembly.  
  
 Si vous distribuez un tel assembly comme partie d’une application cliente qui appelle un service Web, vous pouvez appliquer le <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> pour le type de client pour spécifier l’emplacement et le nom de l’assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
      </Parameters>
      <Docs>
        <param name="types">Collection de types.</param>
        <param name="mappings">Collection des objets <see cref="T:System.Xml.Serialization.XmlMapping" /> utilisés pour convertir un type en un autre.</param>
        <summary>Retourne un assembly qui contient des sérialiseurs faits sur commande et utilisés pour sérialiser ou désérialiser le ou les types spécifiés, à l'aide des mappages indiqués.</summary>
        <returns>Objet <see cref="T:System.Reflection.Assembly" /> qui contient des sérialiseurs pour les types et mappages fournis.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializer">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GenerateSerializer (Type[] types, System.Xml.Serialization.XmlMapping[] mappings, System.CodeDom.Compiler.CompilerParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GenerateSerializer(class System.Type[] types, class System.Xml.Serialization.XmlMapping[] mappings, class System.CodeDom.Compiler.CompilerParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateSerializer (types As Type(), mappings As XmlMapping(), parameters As CompilerParameters) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GenerateSerializer(cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Xml::Serialization::XmlMapping ^&gt; ^ mappings, System::CodeDom::Compiler::CompilerParameters ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GenerateSerializer : Type[] * System.Xml.Serialization.XmlMapping[] * System.CodeDom.Compiler.CompilerParameters -&gt; System.Reflection.Assembly" Usage="System.Xml.Serialization.XmlSerializer.GenerateSerializer (types, mappings, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Xml.Serialization.XmlMapping[]" />
        <Parameter Name="parameters" Type="System.CodeDom.Compiler.CompilerParameters" />
      </Parameters>
      <Docs>
        <param name="types">Tableau de type <see cref="T:System.Type" /> qui contient les objets utilisés pour sérialiser et désérialiser les données.</param>
        <param name="mappings">Tableau de type <see cref="T:System.Xml.Serialization.XmlMapping" /> qui mappe les données XML avec les données du type.</param>
        <param name="parameters">Instance de la classe <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> qui représente les paramètres utilisés pour appeler un compilateur.</param>
        <summary>Retourne un assembly qui contient des sérialiseurs faits sur commande et utilisés pour sérialiser ou désérialiser le ou les types spécifiés, à l'aide des mappages et des paramètres et options de compilateur spécifiés.</summary>
        <returns>
          <see cref="T:System.Reflection.Assembly" /> qui contient des versions spéciales de <see cref="T:System.Xml.Serialization.XmlSerializer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlSerializerAssemblyName">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne le nom de l'assembly qui contient une ou plusieurs versions du <see cref="T:System.Xml.Serialization.XmlSerializer" /> créé spécialement pour sérialiser ou désérialiser des types spécifiques.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [outil XML Serializer Generator (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crée un assembly de sérialisation XML pour les types dans un assembly spécifié afin d’améliorer les performances au moment de l’exécution d’un <xref:System.Xml.Serialization.XmlSerializer> lorsqu’il sérialise ou désérialise des objets de la types spécifiés. Utilisez le <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> pour retourner le nom d’un tel assembly.  
  
 Si vous distribuez un tel assembly comme partie d’une application cliente qui appelle un service Web, vous pouvez appliquer le <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> pour le type de client pour spécifier l’emplacement et le nom de l’assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> que vous désérialisez.</param>
        <summary>Retourne le nom de l'assembly qui contient une ou plusieurs versions du <see cref="T:System.Xml.Serialization.XmlSerializer" /> créé spécialement pour sérialiser ou désérialiser le type spécifié.</summary>
        <returns>Le nom de l'assembly qui contient un <see cref="T:System.Xml.Serialization.XmlSerializer" /> pour le type.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [outil XML Serializer Generator (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crée un assembly de sérialisation XML pour les types dans un assembly spécifié afin d’améliorer les performances au moment de l’exécution d’un <xref:System.Xml.Serialization.XmlSerializer> lorsqu’il sérialise ou désérialise des objets de la types spécifiés. Utilisez le <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> pour retourner le nom d’un tel assembly.  
  
 Si vous distribuez un tel assembly comme partie d’une application cliente qui appelle un service Web, vous pouvez appliquer le <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> pour le type de client pour spécifier l’emplacement et le nom de l’assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlSerializerAssemblyName">
      <MemberSignature Language="C#" Value="public static string GetXmlSerializerAssemblyName (Type type, string defaultNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlSerializerAssemblyName(class System.Type type, string defaultNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlSerializerAssemblyName(Type ^ type, System::String ^ defaultNamespace);" />
      <MemberSignature Language="F#" Value="static member GetXmlSerializerAssemblyName : Type * string -&gt; string" Usage="System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName (type, defaultNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> qui vous intéresse.</param>
        <param name="defaultNamespace">Espace de noms du type.</param>
        <summary>Retourne le nom de l'assembly qui contient le sérialiseur pour le type spécifié dans l'espace de noms indiqué.</summary>
        <returns>Nom de l'assembly qui contient des sérialiseurs spécialement créés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [outil XML Serializer Generator (Sgen.exe)](~/docs/standard/serialization/xml-serializer-generator-tool-sgen-exe.md) crée un assembly de sérialisation XML pour les types dans un assembly spécifié afin d’améliorer les performances au moment de l’exécution d’un <xref:System.Xml.Serialization.XmlSerializer> lorsqu’il sérialise ou désérialise des objets de la types spécifiés. Utilisez le <xref:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName%2A> pour retourner le nom d’un tel assembly.  
  
 Si vous distribuez un tel assembly comme partie d’une application cliente qui appelle un service Web, vous pouvez appliquer le <xref:System.Xml.Serialization.XmlSerializerAssemblyAttribute> pour le type de client pour spécifier l’emplacement et le nom de l’assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sérialise un objet en document XML.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="xmlSerializer.Serialize (stream, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode convertit les champs publics et les propriétés de lecture/écriture d’un objet en XML. Il ne convertit pas les méthodes, des indexeurs, des champs privés ou des propriétés en lecture seule. Pour sérialiser tous les champs et les propriétés d’un objet, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Dans le `stream` paramètre, spécifiez un objet qui dérive de la classe abstraite <xref:System.IO.Stream> classe. Les classes qui dérivent de <xref:System.IO.Stream> incluent :  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet en utilisant un <xref:System.IO.Stream> objet.  
  
 [!code-cpp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize2 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize2 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode convertit les champs publics et les propriétés de lecture/écriture d’un objet en XML. Il ne convertit pas les méthodes, des indexeurs, des champs privés ou des propriétés en lecture seule. Pour sérialiser des champs et les propriétés de tous les un objet, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Dans le `textWriter` paramètre, spécifiez un objet qui dérive de la classe abstraite <xref:System.IO.TextWriter> classe. Les classes qui dérivent de <xref:System.IO.TextWriter> incluent :  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet en utilisant un <xref:System.IO.TextWriter>.  
  
 [!code-cpp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="protected virtual void Serialize (object o, System.Xml.Serialization.XmlSerializationWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Serialize(object o, class System.Xml.Serialization.XmlSerializationWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Serialize (o As Object, writer As XmlSerializationWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Serialize(System::Object ^ o, System::Xml::Serialization::XmlSerializationWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit&#xA;override this.Serialize : obj * System.Xml.Serialization.XmlSerializationWriter -&gt; unit" Usage="xmlSerializer.Serialize (o, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="writer" Type="System.Xml.Serialization.XmlSerializationWriter" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <param name="writer">
          <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> qui permet d'écrire le document XML.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.Serialization.XmlSerializationWriter" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Toutes les tentatives possibles sont effectuées pour accéder à la méthode si celle-ci n'est pas substituée dans une classe descendante.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode convertit les champs publics et les propriétés de lecture/écriture d’un objet en XML. Il ne convertit pas les méthodes, des indexeurs, des champs privés ou des propriétés en lecture seule. Pour sérialiser des champs et les propriétés de tous les un objet, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Dans le `xmlWriter` paramètre, spécifiez un objet qui dérive de la classe abstraite <xref:System.Xml.XmlWriter> classe. Le <xref:System.Xml.XmlTextWriter> dérive le <xref:System.Xml.XmlWriter>.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet en utilisant un <xref:System.Xml.XmlWriter>.  
  
 [!code-cpp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize4 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize4 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream stream, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream stream, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ stream, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (stream, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="stream">
          <see cref="T:System.IO.Stream" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <param name="namespaces">
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
        <summary>Sérialise l’objet <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l’aide du <see cref="T:System.IO.Stream" /> spécifié qui référence les espaces de noms spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode est appelée, les champs publics et les propriétés de lecture/écriture d’un objet sont converties en XML. Méthodes, les indexeurs, les champs privés et les propriétés en lecture seule ne sont pas sérialisées. Pour sérialiser tous les champs et propriétés, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilisez le `stream` paramètre pour spécifier un objet qui dérive de la classe abstraite <xref:System.IO.Stream> (classe), qui est conçu pour écrire dans des flux. Les classes qui dérivent de la <xref:System.IO.Stream> classe incluent :  
  
-   <xref:System.IO.BufferedStream>  
  
-   <xref:System.IO.FileStream>  
  
-   <xref:System.IO.MemoryStream>  
  
-   <xref:System.Net.Sockets.NetworkStream>  
  
-   <xref:System.Security.Cryptography.CryptoStream>  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet avec un <xref:System.IO.Stream> objet. L’exemple crée également un <xref:System.Xml.Serialization.XmlSerializerNamespaces> et ajoute les deux espaces de noms à l’objet. La classe qui définit l’objet sérialisé est également dotée de <xref:System.Xml.Serialization.XmlElementAttribute> attributs pour spécifier l’espace de noms pour chaque élément.  
  
 [!code-cpp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.TextWriter textWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.TextWriter textWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::TextWriter ^ textWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.TextWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (textWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="textWriter">
          <see cref="T:System.IO.TextWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <param name="namespaces">
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> qui contient les espaces de noms du document XML généré.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.IO.TextWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode est appelée les champs publics et les propriétés de lecture/écriture d’un objet sont converties en XML. Méthodes, les indexeurs, les champs privés et les propriétés en lecture seule ne sont pas sérialisées. Pour sérialiser tous les champs et propriétés, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilisez le `textWriter` paramètre pour spécifier un objet qui dérive de la classe abstraite <xref:System.IO.TextWriter> classe. Les classes qui dérivent de <xref:System.IO.TextWriter> classe incluent :  
  
-   <xref:System.IO.StreamWriter>  
  
-   <xref:System.IO.StringWriter>  
  
-   <xref:System.CodeDom.Compiler.IndentedTextWriter>  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet avec un <xref:System.IO.TextWriter>. L’exemple crée également un <xref:System.Xml.Serialization.XmlSerializerNamespaces> de l’objet et ajoute les deux espaces de noms à l’objet. La classe qui définit l’objet sérialisé est également dotée de <xref:System.Xml.Serialization.XmlElementAttribute> attributs pour spécifier l’espace de noms pour chaque élément.  
  
 [!code-cpp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize1 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize1 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">
          <see cref="T:System.Object" /> à sérialiser.</param>
        <param name="namespaces">
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" /> spécifié qui référence les espaces de noms spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode est appelée, les champs publics et les propriétés de lecture/écriture d’un objet sont converties en XML. Méthodes, les indexeurs, les champs privés et les propriétés en lecture seule ne sont pas sérialisées. Pour sérialiser tous les champs et propriétés, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilisez le `xmlWriter` paramètre pour spécifier un objet qui dérive de la classe abstraite <xref:System.Xml.XmlWriter> (classe), qui est conçu pour écrire des documents XML. Le <xref:System.Xml.XmlTextWriter> dérive le <xref:System.Xml.XmlWriter>.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
   
  
## Examples  
 L’exemple suivant sérialise un objet avec un <xref:System.Xml.XmlWriter>. L’exemple crée également un <xref:System.Xml.Serialization.XmlSerializerNamespaces> et ajoute les deux espaces de noms à l’objet. Plusieurs instances de la <xref:System.Xml.Serialization.XmlElementAttribute> classe sont appliqués aux membres de classe pour spécifier l’espace de noms pour chaque élément.  
  
 [!code-cpp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/VB/source.vb#1)]
 [!code-xml[Classic XmlSerializer.Serialize5 Example#1](~/samples/snippets/common/VS_Snippets_Remoting/Classic XmlSerializer.Serialize5 Example/Common/simple.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">L'objet à sérialiser.</param>
        <param name="namespaces">
          <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> référencé par l'objet.</param>
        <param name="encodingStyle">Style d'encodage du XML sérialisé.</param>
        <summary>Sérialise l'objet spécifié et écrit le document XML dans un fichier à l'aide du  <see cref="T:System.Xml.XmlWriter" /> et référence les espaces de noms spécifiés et le style d'encodage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A> méthode est appelée, les champs publics et les propriétés de lecture/écriture d’un objet sont converties en XML. Méthodes, les indexeurs, les champs privés et les propriétés en lecture seule ne sont pas sérialisées. Pour sérialiser tous les champs et propriétés, publics et privés, utilisez le <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.  
  
 Utilisez le `xmlWriter` paramètre pour spécifier un objet qui dérive de la classe abstraite <xref:System.Xml.XmlWriter> (classe), qui est conçu pour écrire des documents XML. Le <xref:System.Xml.XmlTextWriter> dérive le <xref:System.Xml.XmlWriter>.  
  
 Définir le `encodingStyle` paramètre pour «http://schemas.xmlsoap.org/soap/encoding/« pour l’encodage SOAP version 1.1 ; sinon, affectez-lui la valeur »http://www.w3.org/2001/12/soap-encoding» pour l’encodage SOAP version 1.2.  
  
> [!NOTE]
>  Le <xref:System.Xml.Serialization.XmlSerializer> ne peut pas sérialiser les éléments suivants : tableaux de <xref:System.Collections.ArrayList> et les tableaux de <xref:System.Collections.Generic.List%601>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la sérialisation. L'exception d'origine est disponible via l'utilisation de la propriété <see cref="P:System.Exception.InnerException" />.</exception>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter xmlWriter, object o, System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter xmlWriter, object o, class System.Xml.Serialization.XmlSerializerNamespaces namespaces, string encodingStyle, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ xmlWriter, System::Object ^ o, System::Xml::Serialization::XmlSerializerNamespaces ^ namespaces, System::String ^ encodingStyle, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj * System.Xml.Serialization.XmlSerializerNamespaces * string * string -&gt; unit" Usage="xmlSerializer.Serialize (xmlWriter, o, namespaces, encodingStyle, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlWriter" Type="System.Xml.XmlWriter" />
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="namespaces" Type="System.Xml.Serialization.XmlSerializerNamespaces" />
        <Parameter Name="encodingStyle" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlWriter">
          <see cref="T:System.Xml.XmlWriter" /> qui permet d'écrire le document XML.</param>
        <param name="o">L'objet à sérialiser.</param>
        <param name="namespaces">Instance du <see langword="XmlSerializaerNamespaces" /> qui contient les espaces de noms et les préfixes à utiliser.</param>
        <param name="encodingStyle">Encodage utilisé dans le document.</param>
        <param name="id">Pour les messages encodés par SOAP, la base utilisée pour générer des attributs d'id.</param>
        <summary>Sérialise le <see cref="T:System.Object" /> spécifié et écrit le document XML dans un fichier à l'aide du <see cref="T:System.Xml.XmlWriter" />, des espaces de noms et de l'encodage spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le *id* paramètre fournit la chaîne de base utilisée pour créer des ID SOAP. Par défaut, il s’agit de « id1 », « id2 » et ainsi de suite. Mais si le paramètre est défini sur « myBase » les valeurs générées est « myBaseid1 », « myBaseid2 », et ainsi de suite. Cette fonctionnalité est utilisée pour créer des valeurs d’id uniques sur la totalité du message SOAP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownAttribute">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlAttributeEventHandler UnknownAttribute" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownAttribute As XmlAttributeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlAttributeEventHandler ^ UnknownAttribute;" />
      <MemberSignature Language="F#" Value="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " Usage="member this.UnknownAttribute : System.Xml.Serialization.XmlAttributeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlAttributeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un attribut XML de type inconnu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, après avoir appelé la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (méthode), le <xref:System.Xml.Serialization.XmlSerializer> ignore les attributs XML de types inconnus. Toutefois, vous pouvez utiliser cet événement pour gérer ces types de nœud.  
  
 Si l’instance de la classe en cours de désérialisation contient un champ qui retourne un tableau de <xref:System.Xml.XmlAttribute> objets et un <xref:System.Xml.Serialization.XmlAnyAttributeAttribute> a été appliqué au champ, la <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> événement ne se produit pas. Au lieu de cela, tous les attributs XML inconnus sont collectés dans le tableau.  
  
   
  
## Examples  
 L’exemple suivant imprime des informations sur les attributs inconnus rencontrés lors de la désérialisation d’un document XML.  
  
 [!code-cpp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnknownElement">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlElementEventHandler UnknownElement;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlElementEventHandler UnknownElement" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownElement As XmlElementEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlElementEventHandler ^ UnknownElement;" />
      <MemberSignature Language="F#" Value="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " Usage="member this.UnknownElement : System.Xml.Serialization.XmlElementEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlElementEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un élément XML de type inconnu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, après avoir appelé la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (méthode), le <xref:System.Xml.Serialization.XmlSerializer> ignore les attributs XML de types inconnus. Toutefois, vous pouvez utiliser cet événement pour gérer ces types de nœud.  
  
> [!NOTE]
>  Si le <xref:System.Xml.Serialization.XmlAnyElementAttribute> est appliqué à un champ qui retourne un tableau de <xref:System.Xml.XmlElement> objets, tous les éléments inconnus sont collectés dans le tableau. Dans ce cas, le <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> événement ne se produit pas.  
  
   
  
## Examples  
 L’exemple suivant désérialise une classe nommée `Group` à partir d’un fichier nommé UnknownElements.xml. Chaque fois qu’un élément est trouvé dans le fichier qui n’a aucun membre correspondant dans la classe, le <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> événement se produit. Pour tester l’exemple, collez le code XML suivant dans un fichier nommé UnknownElements.xml.  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <GroupName>MyGroup</GroupName>  
  <GroupSize>Large</GroupSize>  
  <GroupNumber>444</GroupNumber>  
  <GroupBase>West</GroupBase>  
</Group>  
```  
  
 [!code-cpp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CPP/unknownelement.cpp#1)]
 [!code-csharp[XmlSerializer.UnknownElement Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/CS/unknownelement.cs#1)]
 [!code-vb[XmlSerializer.UnknownElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlSerializer.UnknownElement Example/VB/unknownelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnknownNode">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.XmlNodeEventHandler UnknownNode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.XmlNodeEventHandler UnknownNode" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnknownNode As XmlNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::XmlNodeEventHandler ^ UnknownNode;" />
      <MemberSignature Language="F#" Value="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " Usage="member this.UnknownNode : System.Xml.Serialization.XmlNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque, pendant la désérialisation, <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un nœud XML de type inconnu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, après avoir appelé la <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> (méthode), le <xref:System.Xml.Serialization.XmlSerializer> ignore les nœuds XML de types inconnus. Toutefois, vous pouvez utiliser cet événement pour gérer ces types de nœud.  
  
   
  
## Examples  
 L’exemple suivant imprime le type de n’importe quel nœud inconnu rencontré.  
  
 [!code-cpp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/CS/source.cs#1)]
 [!code-vb[Classic XmlSerializer.UnknownNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlSerializer.UnknownNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
    <Member MemberName="UnreferencedObject">
      <MemberSignature Language="C#" Value="public event System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Serialization.UnreferencedObjectEventHandler UnreferencedObject" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnreferencedObject As UnreferencedObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Serialization::UnreferencedObjectEventHandler ^ UnreferencedObject;" />
      <MemberSignature Language="F#" Value="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " Usage="member this.UnreferencedObject : System.Xml.Serialization.UnreferencedObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.UnreferencedObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lors de la désérialisation d'un flux XML encodé à l'aide de SOAP, lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> rencontre un type reconnu mais non utilisé ou non référencé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> événement se produit uniquement lorsque la <xref:System.Xml.Serialization.XmlSerializer> est utilisée pour désérialiser un document XML qui contient un message SOAP qui est conforme à la section 5 du document World Wide Web Consortium (www.w3.org), « Simple Object Access Protocol (SOAP) 1.1 ».  
  
 Documents conformes à la section 5 sont dans un format spécial. Au minimum, un tel document inclut le corps principal du message SOAP. Toutefois, plutôt que définir tous les types en ligne dans le document, certaines définitions de types peuvent être encodées en tant que références aux éléments de niveau supérieur dans le document. Par conséquent, pour chaque élément figurant dans le corps principal qui est une référence, doit être un élément correspondant qui contient la définition de type. Pour mettre en corrélation l’élément de référence et la définition de type, la définition de type a un `id` attribut défini sur un ID de chaîne unique et l’élément de référence a un `href` attribut qui référence le même ID.  
  
```  
<Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" GroupNumber="ZDI=" CreationDate="2002-05-02" xmlns:n1="http:'www.cpandl.com">  
    <PosInt xsi:type="xsd:nonNegativeInteger">10000</PosInt>  
    <GroupVehicle href="#id2" />  
  </Group>  
  <Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
```  
  
 Le <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> événements se produisent lorsqu’il existe une définition de type trouvée dans le document, mais pas de paramètre dans le corps principal y fait référence. Lorsque l’événement se produit, vous pouvez récupérer le type XML de l’objet non référencé en examinant la <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject%2A> propriété de la <xref:System.Xml.Serialization.UnreferencedObjectEventArgs> classe. L’ID XML de l’objet est retourné par la <xref:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId%2A> propriété.  
  
 Le <xref:System.Xml.Serialization.XmlSerializer.UnreferencedObject> événement ne doit pas être confondu avec le <xref:System.Xml.Serialization.XmlSerializer.UnknownElement> et <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> les événements qui se produisent lorsqu’aucun membre de classe qui correspond au type de nœud ou élément XML.  
  
   
  
## Examples  
 L’exemple suivant ajoute un <xref:System.Xml.Serialization.UnreferencedObjectEventHandler> à un <xref:System.Xml.Serialization.XmlSerializer>. L’événement est géré par le `Serializer``_``UnreferencedObject` (méthode). Pour exécuter l’exemple, coupez et collez le code XML suivant dans un fichier nommé « UnrefObj.xml ».  
  
```  
<wrapper>  
  <Group xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="id1" n1:GroupName=".NET" xmlns:n1="http://www.cpandl.com">  
   </Group>  
<Vehicle id="id2" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">ABCD</licenseNumber>  
  </Vehicle>  
<Vehicle id="id3" n1:type="Vehicle" xmlns:n1="http://www.w3.org/2001/XMLSchema-instance">  
    <licenseNumber xmlns:q1="http://www.w3.org/2001/XMLSchema" n1:type="q1:string">1234</licenseNumber>  
  </Vehicle>  
</wrapper>  
```  
  
 [!code-cpp[UnreferencedObject Event Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/UnreferencedObject Event Example/CPP/unrefobj.cpp#1)]
 [!code-csharp[UnreferencedObject Event Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/UnreferencedObject Event Example/CS/unrefobj.cs#1)]
 [!code-vb[UnreferencedObject Event Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/UnreferencedObject Event Example/VB/unrefobj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
        <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
        <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
        <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
        <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
      </Docs>
    </Member>
  </Members>
</Type>