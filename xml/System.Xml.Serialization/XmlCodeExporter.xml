<Type Name="XmlCodeExporter" FullName="System.Xml.Serialization.XmlCodeExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="504dab9818522be4141ef883e91378ca3b6bf59c" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52736175" /></Metadata><TypeSignature Language="C#" Value="public class XmlCodeExporter : System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlCodeExporter extends System.Xml.Serialization.CodeExporter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlCodeExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlCodeExporter&#xA;Inherits CodeExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCodeExporter : System::Xml::Serialization::CodeExporter" />
  <TypeSignature Language="F#" Value="type XmlCodeExporter = class&#xA;    inherit CodeExporter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Serialization.CodeExporter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Génère des types et des déclarations d'attribut à partir d'informations de mappage de type interne pour les déclarations d'élément de schéma XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlCodeExporter> classe génère des types .NET Framework ou des déclarations d’attribut à partir de mappages internes aux types .NET Framework. Ces mappages internes sont générés par le <xref:System.Xml.Serialization.XmlSchemaImporter> classe pour les éléments définis dans un document XSD, ou en tant que parties dans un document Web Services Description Language (WSDL). <xref:System.Xml.Serialization.XmlCodeExporter> n’est pas utilisé directement ; Il est utilisé avec l’outil Web Services Description Language (Wsdl.exe) ou l’outil XML Schema Definition (Xsd.exe).  
  
 WSDL.exe utilise les types ou les déclarations d’attribut qui sont générées par <xref:System.Xml.Serialization.XmlCodeExporter> et les mappages internes générés par le <xref:System.Xml.Serialization.XmlSchemaImporter> classe pour générer des classes de proxy client ou des classes du serveur abstrait à partir d’un document WSDL. WSDL.exe utilise <xref:System.Xml.Serialization.XmlCodeExporter> et <xref:System.Web.Services.Description.ServiceDescriptionImporter> classe lorsqu’un document WSDL spécifie :  
  
-   Utilisation littérale, indiquant que le contenu des paramètres de message SOAP et des valeurs de retour (ou documents de demande et de réponse) est spécifié littéralement avec les définitions de schéma XML.  
  
-   Implémentations non-SOAP de services Web en utilisant les opérations HTTP-GET et HTTP-POST.  
  
-   XSD.exe utilise <xref:System.Xml.Serialization.XmlCodeExporter> pour générer des classes à partir de documents de définition de schéma XML (XSD).  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Xml.Serialization.CodeGenerationOptions" />
    <altmember cref="T:System.Xml.Serialization.XmlSchemaImporter" />
    <altmember cref="T:System.Xml.Serialization.SoapCodeExporter" />
    <altmember cref="T:System.Web.Services.Description.ServiceDescriptionImporter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter codeNamespace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms des types à générer.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> avec l'espace de noms spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au lieu de créer une instance de la <xref:System.Xml.Serialization.XmlCodeExporter> classe directement, utilisez l’outil Web Services Description Language (Wsdl.exe) ou l’outil XML Schema Definition (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms des types à générer.</param>
        <param name="codeCompileUnit">Conteneur graphique CodeDOM auquel les références d'assembly utilisées sont ajoutées automatiquement.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> avec l'espace de noms et l'unité de compilation de code spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au lieu de créer une instance de la <xref:System.Xml.Serialization.XmlCodeExporter> classe directement, utilisez l’outil Web Services Description Language (Wsdl.exe) ou l’outil XML Schema Definition (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms des types à générer.</param>
        <param name="codeCompileUnit">Conteneur graphique de programme <see cref="T:System.CodeDom.CodeCompileUnit" /> auquel les références d'assembly utilisées sont ajoutées automatiquement.</param>
        <param name="options">Valeur d'énumération qui fournit des options pour générer des types .NET Framework à partir de types de données personnalisés de schéma XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> avec l'espace de noms, l'unité de compilation de code et les options de génération du code spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au lieu de créer une instance de la <xref:System.Xml.Serialization.XmlCodeExporter> classe directement, utilisez l’outil Web Services Description Language (Wsdl.exe) ou l’outil XML Schema Definition (Xsd.exe).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms des types à générer.</param>
        <param name="codeCompileUnit">Conteneur graphique de programme <see cref="T:System.CodeDom.CodeCompileUnit" /> auquel les références d'assembly utilisées sont ajoutées automatiquement.</param>
        <param name="options">Valeur d'énumération qui fournit des options pour générer des types .NET Framework à partir de types de données personnalisés de schéma XML.</param>
        <param name="mappings">Collection <see cref="T:System.Collections.Hashtable" /> qui contient des objets <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> avec l'espace de noms .NET Framework spécifié, l'unité de compilation de code contenant le graphique des objets, un objet représentant les options de génération du code et une collection d'objets de mappage.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlCodeExporter (System.CodeDom.CodeNamespace codeNamespace, System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.Compiler.CodeDomProvider codeProvider, System.Xml.Serialization.CodeGenerationOptions options, System.Collections.Hashtable mappings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeNamespace codeNamespace, class System.CodeDom.CodeCompileUnit codeCompileUnit, class System.CodeDom.Compiler.CodeDomProvider codeProvider, valuetype System.Xml.Serialization.CodeGenerationOptions options, class System.Collections.Hashtable mappings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlCodeExporter(System::CodeDom::CodeNamespace ^ codeNamespace, System::CodeDom::CodeCompileUnit ^ codeCompileUnit, System::CodeDom::Compiler::CodeDomProvider ^ codeProvider, System::Xml::Serialization::CodeGenerationOptions options, System::Collections::Hashtable ^ mappings);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlCodeExporter : System.CodeDom.CodeNamespace * System.CodeDom.CodeCompileUnit * System.CodeDom.Compiler.CodeDomProvider * System.Xml.Serialization.CodeGenerationOptions * System.Collections.Hashtable -&gt; System.Xml.Serialization.XmlCodeExporter" Usage="new System.Xml.Serialization.XmlCodeExporter (codeNamespace, codeCompileUnit, codeProvider, options, mappings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeNamespace" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="codeCompileUnit" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="codeProvider" Type="System.CodeDom.Compiler.CodeDomProvider" />
        <Parameter Name="options" Type="System.Xml.Serialization.CodeGenerationOptions" />
        <Parameter Name="mappings" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="codeNamespace">Espace de noms des types à générer.</param>
        <param name="codeCompileUnit">Conteneur graphique de programme <see cref="T:System.CodeDom.CodeCompileUnit" /> auquel les références d'assembly utilisées sont ajoutées automatiquement.</param>
        <param name="codeProvider">Valeur d'énumération qui fournit des options pour générer des types .NET Framework à partir de types de données personnalisés de schéma XML.</param>
        <param name="options"><see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> qui contient des instructions spéciales pour la création de code.</param>
        <param name="mappings">Collection <see cref="T:System.Collections.Hashtable" /> qui contient des objets <see cref="T:System.Xml.Serialization.XmlMapping" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> avec l'espace de noms .NET Framework spécifié, l'unité de compilation de code contenant le graphique des objets, une énumération spécifiant les options de code et une collection d'objets de mappage.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddMappingMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ajoute une déclaration <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à un paramètre de méthode ou une valeur de retour qui correspond à un élément <see langword="&amp;lt;part&amp;gt;" /> d'une définition de message SOAP dans un document WSDL.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">Collection d'objets <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> pour le type généré auquel la méthode ajoute une déclaration d'attribut.</param>
        <param name="member">Mappage du type .NET Framework interne pour un seul élément d'une définition de message WSDL.</param>
        <param name="ns">Espace de noms XML de la partie de message SOAP pour lequel les informations de mappage de type dans le paramètre membre ont été générées.</param>
        <summary>Ajoute une déclaration <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à un paramètre de méthode ou une valeur de retour qui correspond à un élément <see langword="&lt;part&gt;" /> d'une définition de message SOAP dans un document WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée par l’outil Web Services Description Language (Wsdl.exe) lorsqu’un document WSDL spécifie une utilisation littérale, indiquant que le contenu des paramètres de message SOAP et des valeurs de retour (ou documents de demande et de réponse) est spécifié littéralement avec XML définitions de schéma.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlTypeMapping mapping, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlTypeMapping mapping, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, mapping As XmlTypeMapping, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlTypeMapping ^ mapping, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlTypeMapping * string -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, mapping, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="mapping" Type="System.Xml.Serialization.XmlTypeMapping" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="metadata">Collection d'objets <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> pour le type généré auquel la méthode ajoute une déclaration d'attribut.</param>
        <param name="mapping">Informations de mappage de type .NET Framework interne pour un élément de schéma XML.</param>
        <param name="ns">Espace de noms XML de la partie de message SOAP pour lequel les informations de mappage de type dans le paramètre membre ont été générées.</param>
        <summary>Ajoute une déclaration <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à une valeur de retour de méthode qui correspond à un élément <see langword="&lt;part&gt;" /> d'une définition de message non-SOAP dans un document WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’outil Web Services Description Language (Wsdl.exe) utilise cette méthode lorsqu’un document WSDL spécifie les implémentations .NET Framework non-SOAP de services Web en utilisant les opérations HTTP-GET et HTTP-POST.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddMappingMetadata">
      <MemberSignature Language="C#" Value="public void AddMappingMetadata (System.CodeDom.CodeAttributeDeclarationCollection metadata, System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingMetadata(class System.CodeDom.CodeAttributeDeclarationCollection metadata, class System.Xml.Serialization.XmlMemberMapping member, string ns, bool forceUseMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingMetadata (metadata As CodeAttributeDeclarationCollection, member As XmlMemberMapping, ns As String, forceUseMemberName As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingMetadata(System::CodeDom::CodeAttributeDeclarationCollection ^ metadata, System::Xml::Serialization::XmlMemberMapping ^ member, System::String ^ ns, bool forceUseMemberName);" />
      <MemberSignature Language="F#" Value="member this.AddMappingMetadata : System.CodeDom.CodeAttributeDeclarationCollection * System.Xml.Serialization.XmlMemberMapping * string * bool -&gt; unit" Usage="xmlCodeExporter.AddMappingMetadata (metadata, member, ns, forceUseMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.CodeDom.CodeAttributeDeclarationCollection" />
        <Parameter Name="member" Type="System.Xml.Serialization.XmlMemberMapping" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="forceUseMemberName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">Collection d'objets <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> pour le type généré auquel la méthode ajoute une déclaration d'attribut.</param>
        <param name="member">Mappage du type .NET Framework interne pour un seul élément d'une définition de message WSDL.</param>
        <param name="ns">Espace de noms XML de la partie de message SOAP pour lequel les informations de mappage de type dans le paramètre membre ont été générées.</param>
        <param name="forceUseMemberName">Indicateur qui permet de déterminer s'il est nécessaire d'ajouter un argument initial qui contient le nom d'élément XML pour la déclaration d'attribut qui est générée.</param>
        <summary>Ajoute une déclaration <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> à un paramètre de méthode ou une valeur de retour qui correspond à un élément <see langword="&lt;part&gt;" /> d'une définition de message SOAP dans un document WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’outil Web Services Description Language (Wsdl.exe) utilise cette méthode lorsqu’un document WSDL spécifie une utilisation littérale, indiquant que le contenu des paramètres de message SOAP et valeurs de retour (ou documents de demande et de réponse) sont spécifiés littéralement avec XML définitions de schéma.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportMembersMapping">
      <MemberSignature Language="C#" Value="public void ExportMembersMapping (System.Xml.Serialization.XmlMembersMapping xmlMembersMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportMembersMapping(class System.Xml.Serialization.XmlMembersMapping xmlMembersMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportMembersMapping(System::Xml::Serialization::XmlMembersMapping ^ xmlMembersMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportMembersMapping : System.Xml.Serialization.XmlMembersMapping -&gt; unit" Usage="xmlCodeExporter.ExportMembersMapping xmlMembersMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlMembersMapping" Type="System.Xml.Serialization.XmlMembersMapping" />
      </Parameters>
      <Docs>
        <param name="xmlMembersMapping">Mappages de types .NET Framework internes pour les éléments d'une définition de message WSDL.</param>
        <summary>Génère un type .NET Framework, ainsi que des déclarations d'attribut, pour chacune des parties qui appartiennent à une définition de message SOAP dans un document WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’outil Web Services Description Language (Wsdl.exe) utilise cette méthode lorsqu’un document WSDL spécifie une utilisation littérale, indiquant que le contenu des paramètres de message SOAP et valeurs de retour (ou documents de demande et de réponse) sont spécifiés littéralement avec XML définitions de schéma.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExportTypeMapping">
      <MemberSignature Language="C#" Value="public void ExportTypeMapping (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportTypeMapping(class System.Xml.Serialization.XmlTypeMapping xmlTypeMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportTypeMapping(System::Xml::Serialization::XmlTypeMapping ^ xmlTypeMapping);" />
      <MemberSignature Language="F#" Value="member this.ExportTypeMapping : System.Xml.Serialization.XmlTypeMapping -&gt; unit" Usage="xmlCodeExporter.ExportTypeMapping xmlTypeMapping" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlTypeMapping" Type="System.Xml.Serialization.XmlTypeMapping" />
      </Parameters>
      <Docs>
        <param name="xmlTypeMapping">Informations de mappage de type .NET Framework interne pour un élément de schéma XML.</param>
        <summary>Génère un type .NET Framework, ainsi que des déclarations d'attribut, pour un élément de schéma XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’outil Web Services Description Language (Wsdl.exe) utilise cette méthode pour générer les en-têtes de message SOAP et types de retour lorsqu’un document Web Services Description Language (WSDL) spécifie les implémentations non-SOAP de services Web à l’aide de l’HTTP-GET et HTTP-POST opérations. L’outil XML Schema Definition (Xsd.exe) utilise cette méthode pour générer chacune des déclarations d’élément de schéma XML dans un document de définition de schéma XML (XSD).  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IncludeMetadata">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection IncludeMetadata" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeMetadata As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ IncludeMetadata { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeMetadata : System.CodeDom.CodeAttributeDeclarationCollection" Usage="System.Xml.Serialization.XmlCodeExporter.IncludeMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>