<Type Name="XmlEnumAttribute" FullName="System.Xml.Serialization.XmlEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="68f2076e128e9a77ad9313388aff29afaa07ff04" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36439319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlEnumAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlEnumAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlEnumAttribute> appartient à une famille d’attributs qui contrôle la façon dont le <xref:System.Xml.Serialization.XmlSerializer> sérialise ou désérialise un objet. Pour obtenir une liste complète des attributs similaires, consultez [attributs qui contrôlent la sérialisation XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Utilisez le <xref:System.Xml.Serialization.XmlEnumAttribute> pour changer l’énumération qui la <xref:System.Xml.Serialization.XmlSerializer> génère ou reconnaît (quand il sérialise ou désérialise une classe, respectivement). Par exemple, si une énumération contient un membre nommé `One`, mais que vous préférez que la sortie XML nommé `Single`, appliquer la <xref:System.Xml.Serialization.XmlEnumAttribute> au membre de l’énumération et affectez le <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> propriété « Unique ».  
  
 Vous pouvez remplacer le <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> valeur de propriété d’un <xref:System.Xml.Serialization.XmlEnumAttribute> en créant une instance de la <xref:System.Xml.Serialization.XmlEnumAttribute> classe et en l’assignant à la <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> propriété d’un <xref:System.Xml.Serialization.XmlAttributes> objet. Pour plus d’informations, consultez la <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.XmlEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant applique le <xref:System.Xml.Serialization.XmlEnumAttribute> aux membres d’une énumération. Lorsque le <xref:System.Xml.Serialization.XmlSerializer> génère des données XML pour cette énumération, les données sont conformes aux valeurs de la <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> propriétés.  
  
 [!code-cpp[Classic XmlEnumAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute Example/VB/source.vb#1)]  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.XmlEnumAttribute>.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
    <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Xml.Serialization.XmlEnumAttribute.%23ctor%2A> pour substituer une énumération existante.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.XmlEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant sérialise deux classes nommées `Food` et `FoodType`. Le `FoodType` classe contient deux énumérations qui sont substituées et, pour chaque énumération, l’exemple crée un <xref:System.Xml.Serialization.XmlEnumAttribute> objet assigné à la <xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A> propriété d’un <xref:System.Xml.Serialization.XmlAttributes> objet. L’exemple ajoute ensuite le <xref:System.Xml.Serialization.XmlAttributes> de l’objet à un <xref:System.Xml.Serialization.XmlAttributeOverrides> objet, qui est utilisé pour créer un <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.XmlEnumAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.XmlEnumAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlEnumAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlEnumAttribute : string -&gt; System.Xml.Serialization.XmlEnumAttribute" Usage="new System.Xml.Serialization.XmlEnumAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de substitution pour le membre de l'énumération.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlEnumAttribute" /> et spécifie la valeur XML que <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère ou reconnaît (selon qu'il sérialise ou désérialise l'énumération, respectivement).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.XmlEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant applique le <xref:System.Xml.Serialization.XmlEnumAttribute> aux membres d’une énumération. Lorsque le <xref:System.Xml.Serialization.XmlSerializer> génère des données XML pour cette énumération, les données sont conformes aux valeurs de la <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> propriétés.  
  
 [!code-cpp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlEnumAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre de l'énumération.</summary>
        <value>Valeur générée dans une instance de document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spécifiez le <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> lorsque vous souhaitez que les données XML générées soit différent de l’identificateur d’énumération.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.XmlEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant applique le <xref:System.Xml.Serialization.XmlEnumAttribute> attribut aux membres d’une énumération. Les données XML générées est conforme aux valeurs définies pour le <xref:System.Xml.Serialization.XmlEnumAttribute.Name%2A> propriété.  
  
 [!code-cpp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/CS/source.cs#1)]
 [!code-vb[Classic XmlEnumAttribute.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlEnumAttribute.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <altmember cref="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
      </Docs>
    </Member>
  </Members>
</Type>