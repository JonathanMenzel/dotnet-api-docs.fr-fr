<Type Name="SoapEnumAttribute" FullName="System.Xml.Serialization.SoapEnumAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc852a3e3433f0b0c83ff9f6a51450aaae1069f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30719983" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapEnumAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapEnumAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.SoapEnumAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapEnumAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapEnumAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contrôle la manière dont <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise un membre de l'énumération.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.SoapEnumAttribute> classe appartient à une famille d’attributs qui contrôle la façon dont le <xref:System.Xml.Serialization.XmlSerializer> sérialise ou désérialise un objet comme XML SOAP encodé. Le XML résultant est conforme à la section 5 du document du World Wide Web Consortium (www.w3.org) document, « Simple Object Access Protocol (SOAP) 1.1 ». Pour obtenir une liste complète des attributs similaires, consultez [attributs qui contrôlent la sérialisation codée en SOAP](~/docs/standard/serialization/attributes-that-control-encoded-soap-serialization.md).  
  
 Pour sérialiser un objet sous forme de message SOAP encodé, vous devez construire le <xref:System.Xml.Serialization.XmlSerializer> à l’aide un <xref:System.Xml.Serialization.XmlTypeMapping> créé avec le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> méthode de la <xref:System.Xml.Serialization.SoapReflectionImporter> classe.  
  
 Utilisez le <xref:System.Xml.Serialization.SoapEnumAttribute> pour changer l’énumération qui la <xref:System.Xml.Serialization.XmlSerializer> génère ou reconnaît (quand il sérialise ou désérialise une classe, respectivement). Par exemple, si une énumération contient un membre nommé `One`, mais que vous préférez que la sortie XML nommé `Single`, appliquer la <xref:System.Xml.Serialization.SoapEnumAttribute> au membre de l’énumération et affectez le <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> propriété « Unique ».  
  
 Vous pouvez remplacer le <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> valeur de propriété d’un <xref:System.Xml.Serialization.SoapEnumAttribute> en créant une instance de la <xref:System.Xml.Serialization.SoapEnumAttribute> classe et en l’affectant à la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes>. Pour plus d’informations, consultez le <xref:System.Xml.Serialization.SoapAttributeOverrides> vue d’ensemble de la classe.  
  
 Pour sérialiser un objet sous forme de message SOAP encodé, vous devez construire le <xref:System.Xml.Serialization.XmlSerializer> à l’aide un <xref:System.Xml.Serialization.XmlTypeMapping> créé avec le <xref:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping%2A> méthode de la <xref:System.Xml.Serialization.SoapReflectionImporter> classe.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `SoapEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Xml.Serialization.XmlSerializer> pour sérialiser une classe nommée `Food` qui inclut une énumération nommée `FoodType`. Le `FoodType` énumération est substituée en créant un <xref:System.Xml.Serialization.SoapEnumAttribute> pour chaque énumération et le paramètre de la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes> à la <xref:System.Xml.Serialization.SoapEnumAttribute>. Le <xref:System.Xml.Serialization.SoapAttributes> est ajouté à un <xref:System.Xml.Serialization.SoapAttributeOverrides> qui est utilisée pour créer un <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.SoapEnumAttribute.%23ctor%2A> pour substituer une énumération existante. Créer un nouveau <xref:System.Xml.Serialization.SoapEnumAttribute>, définissez ses propriétés et assignez l’objet à la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes>. Pour chaque membre de l’énumération, vous devez créer un nouveau <xref:System.Xml.Serialization.SoapAttributes> et ajoutez-la à la <xref:System.Xml.Serialization.SoapAttributeOverrides>. Pour plus d’informations, consultez le <xref:System.Xml.Serialization.SoapAttributeOverrides> vue d’ensemble de la classe.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `SoapEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Xml.Serialization.XmlSerializer> pour sérialiser une classe nommée `Food` qui inclut une énumération nommée `FoodType`. Le `FoodType` énumération est substituée en créant un <xref:System.Xml.Serialization.SoapEnumAttribute> pour chaque énumération et le paramètre de la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes> à la <xref:System.Xml.Serialization.SoapEnumAttribute>. Le <xref:System.Xml.Serialization.SoapAttributes> est ajouté à un <xref:System.Xml.Serialization.SoapAttributeOverrides> qui est utilisée pour créer un <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapEnumAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapEnumAttribute(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Le nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.SoapEnumAttribute" /> en utilisant le nom d'élément spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spécifiez le <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> lorsque vous souhaitez que l’énumérateur XML généré soit différent de l’énumérateur figurant dans l’énumération.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `SoapEnum` dans votre code au lieu du plus long <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Xml.Serialization.XmlSerializer> pour sérialiser une classe nommée `Food` qui inclut une énumération nommée `FoodType`. Le `FoodType` énumération est substituée en créant un <xref:System.Xml.Serialization.SoapEnumAttribute> pour chaque énumération et le paramètre de la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes> à la <xref:System.Xml.Serialization.SoapEnumAttribute>. Le <xref:System.Xml.Serialization.SoapAttributes> est ajouté à un <xref:System.Xml.Serialization.SoapAttributeOverrides> qui est utilisée pour créer un <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise une énumération ou la valeur reconnue lors de la désérialisation du membre d'énumération.</summary>
        <value>Valeur générée dans un document XML lorsque <see cref="T:System.Xml.Serialization.XmlSerializer" /> sérialise l'énumération ou valeur reconnue lors de la désérialisation du membre de l'énumération.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spécifiez le <xref:System.Xml.Serialization.SoapEnumAttribute.Name%2A> lorsque vous souhaitez que l’énumérateur XML généré soit différent de l’énumérateur figurant dans l’énumération.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `SoapEnum` au lieu du plus long <xref:System.Xml.Serialization.SoapEnumAttribute>.  
  
   
  
## Examples  
 L’exemple suivant utilise le <xref:System.Xml.Serialization.XmlSerializer> pour sérialiser une classe nommée `Food` qui inclut une énumération nommée `FoodType`. Le `FoodType` énumération est substituée en créant un <xref:System.Xml.Serialization.SoapEnumAttribute> pour chaque énumération et le paramètre de la <xref:System.Xml.Serialization.SoapAttributes.SoapEnum%2A> propriété d’un <xref:System.Xml.Serialization.SoapAttributes> à la <xref:System.Xml.Serialization.SoapEnumAttribute>. Le <xref:System.Xml.Serialization.SoapAttributes> est ajouté à un <xref:System.Xml.Serialization.SoapAttributeOverrides> qui est utilisée pour créer un <xref:System.Xml.Serialization.XmlSerializer>.  
  
 [!code-cpp[SoapEnumOverrides#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapEnumOverrides/CPP/soapenumoverrides.cpp#1)]
 [!code-csharp[SoapEnumOverrides#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapEnumOverrides/CS/soapenumoverrides.cs#1)]
 [!code-vb[SoapEnumOverrides#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapEnumOverrides/VB/soapenumoverrides.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>