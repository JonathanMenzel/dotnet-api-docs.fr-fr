<Type Name="XmlArrayItemAttribute" FullName="System.Xml.Serialization.XmlArrayItemAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="166f6e2271a2bed5ed82f31b2df1df184a330f38" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56357014" /></Metadata><TypeSignature Language="C#" Value="public class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlArrayItemAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlArrayItemAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlArrayItemAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlArrayItemAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlArrayItemAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente un attribut qui spécifie les types dérivés que le <see cref="T:System.Xml.Serialization.XmlSerializer" /> peut placer dans un tableau sérialisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlArrayItemAttribute> appartient à une famille d’attributs qui contrôle la façon dont le <xref:System.Xml.Serialization.XmlSerializer> sérialise ou désérialise un objet. Pour obtenir une liste complète des attributs similaires, consultez [attributs qui contrôlent la sérialisation XML](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).  
  
 Vous pouvez appliquer le <xref:System.Xml.Serialization.XmlArrayItemAttribute> à n’importe quel membre en lecture/écriture publique qui retourne un tableau, ou fournit l’accès à un. Par exemple, un champ qui retourne un tableau d’objets, une collection, un <xref:System.Collections.ArrayList>, ou toute classe qui implémente le <xref:System.Collections.IEnumerable> interface.  
  
 Le <xref:System.Xml.Serialization.XmlArrayItemAttribute> prend en charge le polymorphisme--en d’autres termes, il permet la <xref:System.Xml.Serialization.XmlSerializer> pour ajouter des objets dérivés à un tableau. Par exemple, une classe nommée `Mammal` est dérivé d’une classe de base nommée `Animal`. Supposons qu’une classe nommée `MyAnimals` contient un champ qui retourne un tableau de `Animal` objets. Pour permettre la <xref:System.Xml.Serialization.XmlSerializer> pour sérialiser les deux le `Animal` et `Mammal` , appliquez le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ à deux reprises, en spécifiant chaque fois un des deux types acceptables.  
  
> [!NOTE]
>  Vous pouvez appliquer plusieurs instances de la <xref:System.Xml.Serialization.XmlArrayItemAttribute> ou <xref:System.Xml.Serialization.XmlElementAttribute> pour spécifier les types d’objets qui peuvent être insérés dans le tableau.  
  
> [!NOTE]
>  La sérialisation d’un champ ou une propriété qui retourne une interface ou un tableau d’interfaces n’est pas pris en charge.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlArrayItem` dans votre code au lieu de la plus longue <xref:System.Xml.Serialization.XmlArrayItemAttribute>.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Group` qui contient un champ nommé `Employees` qui retourne un tableau de `Employee` objets. L’exemple applique le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ, indiquant ainsi la <xref:System.Xml.Serialization.XmlSerializer> qu’il peut insérer des objets à la fois la classe de base (`Employee`) type et le type de classe dérivée (`Manager`) dans le tableau sérialisé.  
  
 [!code-cpp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md">Introduction à la sérialisation XML</related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md">Comment : spécifier un nom d'élément différent pour un flux XML</related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md">Contrôle de la sérialisation XML à l'aide d'attributs</related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md">Exemples de sérialisation XML</related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md">Outil XML Schema Definition (Xsd.exe)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Transportation` qui contient un champ nommé `MyVehicles` qui retourne un tableau de `Vehicle` objets. L’exemple applique le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ, ce qui permet la <xref:System.Xml.Serialization.XmlSerializer> pour insérer des instances de la `Car` (classe), qui est dérivée de la `Vehicle` (classe), dans le tableau.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom de l'élément XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge affecte le <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> propriété.  
  
 Utilisez cette surcharge si vous souhaitez que le nom de l’élément XML généré soit différent de l’identificateur du membre.  
  
 Un document XML qui inclut des espaces de noms peut contenir plusieurs versions d’un nom d’élément. Pour plus d'informations, consultez la propriété <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Transportation` qui contient un champ nommé `MyVehicles` qui retourne un tableau de `Vehicle` objets. L’exemple applique le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ, ce qui permet la <xref:System.Xml.Serialization.XmlSerializer> pour insérer des instances de la `Car` (classe), qui est dérivée de la `Vehicle` (classe), dans le tableau. Tout en appliquant l’attribut, l’exemple définit le <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> à l’aide de la propriété du `elementName` paramètre.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><see cref="T:System.Type" /> de l'objet à sérialiser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le <see cref="T:System.Type" /> qui peut être inséré dans le tableau sérialisé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Transportation` qui contient un champ nommé `MyVehicles` qui retourne un tableau de `Vehicle` objets. L’exemple applique le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ, ce qui permet la <xref:System.Xml.Serialization.XmlSerializer> pour insérer des instances de la `Car` (classe), qui est dérivée de la `Vehicle` (classe), dans le tableau. Tout en appliquant l’attribut, l’exemple définit le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> à l’aide de la propriété du `type` paramètre.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlArrayItemAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlArrayItemAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlArrayItemAttribute : string * Type -&gt; System.Xml.Serialization.XmlArrayItemAttribute" Usage="new System.Xml.Serialization.XmlArrayItemAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName">Nom de l'élément XML.</param>
        <param name="type"><see cref="T:System.Type" /> de l'objet à sérialiser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" /> et spécifie le nom de l'élément XML généré dans le document XML et le <see cref="T:System.Type" /> qui peut être inséré dans le document XML généré.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge affecte le <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> et <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> propriétés.  
  
 Utilisez cette surcharge si vous souhaitez que le nom de l’élément XML généré soit différent de l’identificateur du membre.  
  
 Un document XML qui inclut des espaces de noms peut contenir plusieurs versions d’un nom d’élément. Pour plus d'informations, consultez la propriété <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A>.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Transportation` qui contient un champ nommé `MyVehicles` qui retourne un tableau de `Vehicle` objets. L’exemple applique le <xref:System.Xml.Serialization.XmlArrayItemAttribute> au champ, ce qui permet la <xref:System.Xml.Serialization.XmlSerializer> pour insérer des instances de la `Car` (classe), qui est dérivée de la `Vehicle` (classe), dans le tableau. Tout en appliquant l’attribut, l’exemple définit le <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> à l’aide de la propriété le `elementName` paramètre et le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> à l’aide de la propriété du `type` paramètre.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.XmlArrayItemAttribute3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type de données XML de l'élément XML généré.</summary>
        <value>Type de données XSD (XML Schema Definition), défini par le document du World Wide Web Consortium (www.w3.org) intitulé « XML Schema Part 2: Datatypes ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant répertorie les types de données simples de schéma XML avec leurs équivalents .NET.  
  
 Pour le schéma XML `base64Binary` et `hexBinary` des types de données, utilisez un tableau de <xref:System.Byte> objets et appliquer un <xref:System.Xml.Serialization.XmlArrayItemAttribute> avec le <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> propriété définie sur « base64Binary » ou « hexBinary », selon le cas. Pour le schéma XML `time` et `date` des types de données, utilisez le <xref:System.DateTime> tapez et appliquez le <xref:System.Xml.Serialization.XmlArrayItemAttribute> avec le <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> défini sur « date » ou « time ».  
  
 Pour chaque type de schéma XML qui est mappé à une chaîne, appliquez le <xref:System.Xml.Serialization.XmlArrayItemAttribute> avec son <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> propriété définie sur le type de schéma XML. Toutefois, cela ne modifie pas le format de sérialisation, seul le schéma pour le membre.  
  
> [!NOTE]
>  La propriété respecte la casse, vous devez le définir exactement à un des types de données de schéma XML.  
  
> [!NOTE]
>  Élément en passant des données binaires comme un document XML est plus efficace en lui passant comme un attribut XML.  
  
 Pour plus d’informations sur les types de données de schéma XML, consultez le document du World Wide Web Consortium (www.w3.org) « XML Schema Part 2 : Les types de données. »  
  
|Type de données XSD|Type de données .NET|  
|-------------------|--------------------|  
|anyURI|<xref:System.String>|  
|base64Binary|Tableau de <xref:System.Byte> objets|  
|boolean|<xref:System.Boolean>|  
|byte|<xref:System.SByte>|  
|date|<xref:System.DateTime>|  
|dateTime|<xref:System.DateTime>|  
|decimal|<xref:System.Decimal>|  
|double|<xref:System.Double>|  
|ENTITY|<xref:System.String>|  
|ENTITÉS|<xref:System.String>|  
|float|<xref:System.Single>|  
|gDay|<xref:System.String>|  
|gMonth|<xref:System.String>|  
|gMonthDay|<xref:System.String>|  
|gYear|<xref:System.String>|  
|gYearMonth|<xref:System.String>|  
|hexBinary|Tableau de <xref:System.Byte> objets|  
|Id|<xref:System.String>|  
|IDREF|<xref:System.String>|  
|IDREFS|<xref:System.String>|  
|int|<xref:System.Int32>|  
|entiers|<xref:System.String>|  
|language|<xref:System.String>|  
|long|<xref:System.Int64>|  
|Name|<xref:System.String>|  
|NCName|<xref:System.String>|  
|negativeInteger|<xref:System.String>|  
|NMTOKEN|<xref:System.String>|  
|NMTOKENS|<xref:System.String>|  
|normalizedString|<xref:System.String>|  
|nonNegativeInteger|<xref:System.String>|  
|nonPositiveInteger|<xref:System.String>|  
|NOTATION|<xref:System.String>|  
|positiveInteger|<xref:System.String>|  
|QName|<xref:System.Xml.XmlQualifiedName>|  
|duration|<xref:System.String>|  
|string|<xref:System.String>|  
|short|<xref:System.Int16>|  
|heure|<xref:System.DateTime>|  
|token|<xref:System.String>|  
|unsignedByte|<xref:System.Byte>|  
|unsignedInt|<xref:System.UInt32>|  
|unsignedLong|<xref:System.UInt64>|  
|unsignedShort|<xref:System.UInt16>|  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `PurchaseOrder`. Plusieurs instances de la <xref:System.Xml.Serialization.XmlArrayItemAttribute> classe sont appliquées à trois membres et le <xref:System.Xml.Serialization.XmlArrayItemAttribute.DataType%2A> propriété pour chaque instance est définie sur un type autorisé dans le tableau.  
  
 [!code-cpp[XmlArrayItemAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CPP/arrayitem.cpp#1)]
 [!code-csharp[XmlArrayItemAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlArrayItemAttribute Example/CS/arrayitem.cs#1)]
 [!code-vb[XmlArrayItemAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlArrayItemAttribute Example/VB/arrayitem.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'élément XML généré.</summary>
        <value>Nom de l'élément XML généré. Par défaut, il s'agit de l'identificateur du membre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spécifiez un <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> si vous souhaitez que le nom de l’élément XML généré soit différent de l’identificateur du membre.  
  
 Vous pouvez définir les mêmes <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> valeur à plusieurs membres de classe si le document XML généré utilise des espaces de noms XML pour distinguer de façon identique entre les membres nommés. Pour plus d’informations sur l’utilisation des espaces de noms et des noms préfixés dans le document XML, consultez la <xref:System.Xml.Serialization.XmlSerializerNamespaces> classe.  
  
   
  
## Examples  
 L’exemple suivant définit la <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> propriété pour le `Vehicle` et `Car` classe--et ainsi modifier les noms des éléments XML qui le <xref:System.Xml.Serialization.XmlSerializer> génère pour ces classes.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le nom de l'élément XML généré est qualifié.</summary>
        <value>Une des valeurs de <see cref="T:System.Xml.Schema.XmlSchemaForm" />. La valeur par défaut est <see langword="XmlSchemaForm.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> propriété détermine si un nom d’élément XML est qualifié, selon la spécification du World Wide Web Consortium (www.w3.org) « Namespaces in XML ».  
  
 Si le <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> propriété est définie sur n’importe quelle valeur, tentez de définir la <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> propriété `XmlSchemaForm.Unqualified` lève une exception.  
  
 La valeur par défaut, `XmlSchemaForm.None`, indique le <xref:System.Xml.Serialization.XmlSerializer> de vérifier le schéma pour le document XML déterminer si l’espace de noms est qualifié. Pour les éléments, le <xref:System.Xml.Serialization.XmlSerializer> vérifie la valeur de l’attribut d’élément de schéma `elementFormDefault`. Pour les attributs, il vérifie la valeur de l’attribut d’élément de schéma `attributeFormDefault`. Par exemple, le schéma XML suivant indique que le `Name` élément est qualifié, tandis que le `Number` élément est « unqualified ».  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified">  
   <element name="Name"/>  
   <attribute name="Number"/>  
</schema>  
```  
  
   
  
## Examples  
 L’exemple suivant définit la <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> propriété pour le `Vehicle` classe `XmlSchemaForm.Unqualified`et le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Form%2A> propriété pour le `Car` classe pour `XmlSchemaForm.Qualified`.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">La propriété <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" /> est définie avec la valeur <see langword="XmlSchemaForm.Unqualified" /> et une valeur <see cref="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" /> est spécifiée.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Xml.Serialization.XmlSerializer" /> doit sérialiser un membre comme balise XML vide lorsque l'attribut <see langword="xsi:nil" /> a la valeur <see langword="true" />.</summary>
        <value><see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> génère l'attribut <see langword="xsi:nil" /> ; sinon, <see langword="false" /> et aucune instance n'est générée. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La spécification de schéma XML pour les structures permet à un document XML à signaler de manière explicite que le contenu d’un élément est manquant. Un tel élément contient l’attribut `xsi:nil` défini sur `true`. Pour plus d’informations, consultez la spécification du World Wide Web Consortium (www.w3.org) intitulée « XML Schema Part 1 : Structures. »  
  
 Si le <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> propriété est `true`, le `xsi:nil` attribut est généré pour les membres de classe qui ont été définis sur `null`. Par exemple, si vous définissez un champ nommé `MyStringArray` à `null`, le <xref:System.Xml.Serialization.XmlSerializer> génère le code XML suivant.  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 Si le <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> propriété est `false`, aucun élément XML est généré.  
  
> [!NOTE]
>  Vous ne pouvez pas appliquer le <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> propriété à un membre de type valeur, car un type valeur ne peut pas contenir `null`.  
  
   
  
## Examples  
 L’exemple suivant sérialise une classe nommée `Group`, qui contient un champ nommé `Employees` qui retourne un tableau de `Employee` objets. Une deuxième classe nommée `Manager` dérive `Employee`. Un <xref:System.Xml.Serialization.XmlArrayItemAttribute> Spécifie que le <xref:System.Xml.Serialization.XmlSerializer> peut insérer des `Employee` et `Manager` objets dans le tableau. L’exemple définit le <xref:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable%2A> propriété, indiquant ainsi la <xref:System.Xml.Serialization.XmlSerializer> ne pas pour générer le `xsi:nil` objets attribut dans le tableau `null`.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace de noms de l'élément XML généré.</summary>
        <value>Espace de noms de l'élément XML généré.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> propriété est conforme à la spécification du World Wide Web Consortium (www.w3.org) « Namespaces in XML ».  
  
 Pour créer des espaces de noms à utiliser dans le document XML et les préfixes associés, vous devez créer un <xref:System.Xml.Serialization.XmlSerializerNamespaces> qui contient toutes les paires préfixe / espace de noms. L’espace de noms que vous définissez pour chaque <xref:System.Xml.Serialization.XmlArrayAttribute> doit figurer dans le <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Lorsque le <xref:System.Xml.Serialization.XmlSerializer> génère le document, il fait précéder le nom d’élément pour chaque élément du tableau.  
  
   
  
## Examples  
 L’exemple suivant applique un <xref:System.Xml.Serialization.XmlArrayItemAttribute> et définit le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> propriété.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Namespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Namespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NestingLevel">
      <MemberSignature Language="C#" Value="public int NestingLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NestingLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property NestingLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NestingLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NestingLevel : int with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le niveau dans une hiérarchie d'éléments XML affectés par <see cref="T:System.Xml.Serialization.XmlArrayItemAttribute" />.</summary>
        <value>Index de base zéro d'un ensemble d'index dans un tableau de tableaux.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un document XML peut contenir des hiérarchies d’éléments XML. Pour représenter une hiérarchie de ce type, un tableau de tableaux est utilisé. Dans un tel tableau, chaque index représente un niveau dans la hiérarchie. Par conséquent, le <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> propriété est utilisée uniquement lorsque vous appliquez un <xref:System.Xml.Serialization.XmlArrayItemAttribute> à un champ qui retourne un tableau de tableaux.  
  
 Lorsque vous appliquez l’attribut, pour spécifier le niveau de hiérarchie que l’attribut affecte en définissant le <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A>. Le premier index a toujours la valeur 0 ; Par conséquent, il est facultatif pour définir son <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> --une <xref:System.Xml.Serialization.XmlArrayItemAttribute> sans un <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> valeur est appliquée au premier index de tableau. Le suivantes <xref:System.Xml.Serialization.XmlArrayItemAttribute> objets nécessitent <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> valeurs spécifiées (1, 2, 3 et ainsi de suite).  
  
   
  
## Examples  
 L’exemple suivant applique trois <xref:System.Xml.Serialization.XmlArrayItemAttribute> des attributs à un tableau de tableaux. Pour spécifier quel tableau chaque attribut s’applique, le <xref:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel%2A> propriété est définie à l’index des tableaux.  
  
 [!code-cpp[NestingLevel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NestingLevel/cpp/nestinglevel.cpp#1)]
 [!code-csharp[NestingLevel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NestingLevel/CS/nestinglevel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type autorisé dans un tableau.</summary>
        <value><see cref="T:System.Type" /> autorisé dans le tableau.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriété pour spécifier un type substitué pour un champ public ou une valeur de propriété en lecture/écriture publique.  
  
 Si un champ ou une propriété retourne un tableau de type <xref:System.Object>, appliquer plusieurs instances de la <xref:System.Xml.Serialization.XmlArrayItemAttribute> pour le champ ou la propriété. Pour chaque instance, définir le <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propriété à un type d’objet qui peut être inséré dans le tableau.  
  
 Si un tableau contient uniquement des types primitifs, vous n’avez pas besoin d’appliquer le <xref:System.Xml.Serialization.XmlArrayItemAttribute>. Par défaut, le <xref:System.Xml.Serialization.XmlSerializer> génère une série d’éléments, chacun ayant le même nom d’élément, pour chaque valeur, mais le type de chaque élément est défini sur le type de données de schéma XML. Par exemple, le code suivant :  
  
```  
' Visual Basic code  
Public Class Arrays  
   Public XSDTypes ()As Object= New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class MyArray{  
   // No XmlArrayItemAttribute is applied.  
   public object[] XSDTypes= new object[]{"one", 2, 3.2};  
}  
```  
  
 résultats dans ce document XML :  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <XSDTypes>  
    <Object xsi:type="xsd:string">one</Object>  
    <Object xsi:type="xsd:int">2</Object>  
    <Object xsi:type="xsd:double">3</Object>  
  </XSDTypes>  
</Arrays>  
```  
  
 Toutefois, si vous spécifiez le <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> propriété pour chaque type primitif, le nom d’élément pour chaque valeur est générée en utilisant le nom de type .NET. Par exemple, ce code :  
  
```  
' Visual Basic code  
Public Class Arrays  
   <XmlArrayItem(GetType(String)), _  
   XmlArrayItem(GetType(Integer)), _  
   XmlArrayItem(GetType(Double))> _  
   Public PrimitiveTypes () As Object = New Object(){"one", 2, 3.0}  
End Class  
// C# code  
public class Arrays{  
   [XmlArrayItem(typeof(string))]  
   [XmlArrayItem(typeof(int))]  
   [XmlArrayItem(typeof(double))]  
   public object [] PrimitiveTypes = new object[]{"one", 2, 3.0};  
}  
```  
  
 résultats dans ce document XML :  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
<Arrays xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">  
  <PrimitiveTypes>  
    <string>one</string>  
    <int>2</int>  
    <double>3</double>  
  </PrimitiveTypes>  
</Arrays>  
```  
  
   
  
## Examples  
 L’exemple suivant sérialise un tableau d’objets. Le champ qui retourne le tableau comporte deux <xref:System.Xml.Serialization.XmlArrayItemAttribute> instances. Chaque instance indique la <xref:System.Xml.Serialization.XmlSerializer> pour accepter spécifié <xref:System.Xml.Serialization.XmlArrayItemAttribute.Type%2A> dans le tableau.  
  
 [!code-cpp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlArrayItemAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlArrayItemAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>