<Type Name="XmlAnyElementAttribute" FullName="System.Xml.Serialization.XmlAnyElementAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e45c354e581b108710e7a2aae71b2b59a4142539" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37732438" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlAnyElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlAnyElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlAnyElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlAnyElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlAnyElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Spécifie que le membre (un champ retournant un tableau d'objets <see cref="T:System.Xml.XmlElement" /> ou <see cref="T:System.Xml.XmlNode" />) contient des objets représentant tout élément XML n'ayant pas de membre correspondant dans l'objet en cours de sérialisation ou de désérialisation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
>  Lorsque vous travaillez dans une bibliothèque de classes portable, comme dans Silverlight, Windows Phone ou projet d’application de Store Windows et que vous utilisez le Kit de développement .NET Framework 4.0.3 et ultérieur, utilisez <xref:System.Xml.Linq.XElement> ou <xref:System.Xml.Linq.XNode> à la place de <xref:System.Xml.XmlElement> et <xref:System.Xml.XmlNode>.  
  
 Utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute> pour contenir des données arbitraires (en tant qu’éléments XML) qui peuvent être envoyées en tant que partie d’un document XML, tels que les métadonnées envoyées en tant que partie du document.  
  
 Appliquer le <xref:System.Xml.Serialization.XmlAnyElementAttribute> à un champ qui retourne un tableau de <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets. Ce champ peut être utilisé de deux manières, selon si un objet est en cours sérialisée ou désérialisée. Lorsqu’elle est sérialisée, l’objet est généré en tant qu’éléments XML ou des nœuds, même s’ils ne possèdent aucun membre correspondant (ou les membres) dans l’objet en cours de sérialisation. Si vous spécifiez un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> la valeur de propriété lors de l’application de l’attribut, tous les <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets insérés dans le tableau doivent avoir le même élément par défaut et le nom d’espace de noms, ou une exception est levée. Si vous définissez la <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur de propriété, vous devez définir le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propriété et le <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets doivent avoir également les mêmes valeurs de nom et espace de noms. Si aucun <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur est spécifiée, le <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets peuvent avoir n’importe quel nom d’élément.  
  
 Lorsque vous appelez le <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> méthode de la <xref:System.Xml.Serialization.XmlSerializer> (classe), tous les éléments qui n’ont pas de membre correspondant dans l’objet en cours de désérialisation sont collectés dans le tableau. Après la désérialisation, boucler dans la collection de <xref:System.Xml.XmlElement> éléments à traiter les données. Si vous spécifiez un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur, le tableau contienne uniquement des éléments XML portant ce nom. Si vous ne spécifiez pas un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur, le tableau contient tous les éléments qui n’ont aucun membre correspondant dans la classe. Si une classe contient plusieurs champs auxquels l’attribut est appliqué, utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, ou <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> et <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriétés faire la distinction entre le contenu des tableaux. Si une telle classe (avec plusieurs champs) contient également un champ dont aucune valeur de propriété de différenciation est définie (en d’autres termes, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> et <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) pendant la désérialisation, ce tableau contient tous les éléments XML inconnus qui ne sont pas déjà inclus dans d’autres tableaux. Si une classe contient plusieurs champs qui n’a pas de différenciation <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A>, ou <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> et <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur définie, le comportement pendant la désérialisation n’est pas spécifié.  
  
 Vous pouvez également appliquer le <xref:System.Xml.Serialization.XmlAnyElementAttribute> à un champ qui retourne un seul <xref:System.Xml.XmlElement> objet. Si vous procédez ainsi, vous devez utiliser les propriétés et méthodes de la <xref:System.Xml.XmlElement> classe de manière récursive itérer les éléments inconnus.  
  
 Vous pouvez appliquer plusieurs instances de la <xref:System.Xml.Serialization.XmlAnyElementAttribute> à une classe membre, mais chaque instance doit avoir un distinctes <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur de propriété. Ou, si le même <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propriété est définie pour chaque instance, distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur de propriété doit être définie pour chaque instance.  
  
 Le <xref:System.Xml.Serialization.XmlSerializer.UnknownNode> et <xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute> événements de la <xref:System.Xml.Serialization.XmlSerializer> ne se produisent pas si vous appliquez le <xref:System.Xml.Serialization.XmlAnyElementAttribute> à un membre d’une classe.  
  
> [!NOTE]
>  Vous pouvez utiliser le mot `XmlAnyElement` dans votre code au lieu de la plus longue <xref:System.Xml.Serialization.XmlAnyElementAttribute>.  
  
 Pour plus d’informations sur l’utilisation d’attributs, consultez [attributs](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 L’exemple suivant applique le <xref:System.Xml.Serialization.XmlAnyElementAttribute> à un champ nommé `AllElements` qui retourne un tableau de <xref:System.Xml.XmlElement> objets.  
  
 [!code-cpp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlAnyElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructeur lorsque vous substituez la sérialisation d’un champ. Pour plus d’informations sur la substitution de la sérialisation, consultez la <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructeur lorsque vous substituez la sérialisation d’un champ. Pour plus d’informations sur la substitution de la sérialisation, consultez la <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlAnyElementAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlAnyElementAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlAnyElementAttribute : string * string -&gt; System.Xml.Serialization.XmlAnyElementAttribute" Usage="new System.Xml.Serialization.XmlAnyElementAttribute (name, ns)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'élément XML généré par <see cref="T:System.Xml.Serialization.XmlSerializer" />.</param>
        <param name="ns">Espace de noms XML de l'élément XML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Xml.Serialization.XmlAnyElementAttribute" /> et spécifie le nom d'élément XML généré dans le document XML, ainsi que son espace de noms XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute> constructeur lorsque vous substituez la sérialisation d’un champ. Pour plus d’informations sur la substitution de la sérialisation, consultez la <xref:System.Xml.Serialization.XmlAttributeOverrides> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'élément XML.</summary>
        <value>Nom de l'élément XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous spécifiez un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> la valeur de propriété lors de l’application de l’attribut, tous les <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets insérés dans le tableau doivent avoir le même élément par défaut et le nom d’espace de noms, ou une exception est levée. Si vous définissez la <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur de propriété, vous devez définir le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propriété et le <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets doivent avoir également les mêmes valeurs de nom et espace de noms. Si aucun <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur est spécifiée, le <xref:System.Xml.XmlElement> ou <xref:System.Xml.XmlNode> objets peuvent avoir n’importe quel nom d’élément.  
  
 Lorsque vous appelez le <xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A> méthode de la <xref:System.Xml.Serialization.XmlSerializer> (classe), tous les attributs qui n’ont pas de membre correspondant dans l’objet en cours de désérialisation sont collectés dans le tableau. Si vous spécifiez un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur, le tableau contienne uniquement des éléments XML portant ce nom. Si vous ne spécifiez pas un <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur, le tableau contient tous les éléments qui n’ont aucun membre correspondant dans la classe. Si une classe contient plusieurs champs auxquels l’attribut est appliqué, utilisez le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> et <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriétés faire la distinction entre le contenu des tableaux. Si une telle classe (avec plusieurs champs) contient également un champ dont aucune valeur de propriété de différenciation est définie (autrement dit, <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> et <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A>) pendant la désérialisation, le tableau contient tous les éléments XML qui ne sont pas déjà inclus dans l’autre tableaux. Si vous ajoutez plusieurs champs qui n’a pas de différenciation <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> ou <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur définie, le dernier champ de la classe contienne tous les éléments inconnus qui ne sont pas déjà inclus dans les autres tableaux, et tous les autres champs sont définies sur `null`.  
  
 Vous pouvez appliquer plusieurs instances de la <xref:System.Xml.Serialization.XmlAnyElementAttribute> à une classe membre, mais chaque instance doit avoir un distinctes <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> valeur de propriété. Ou, si le même <xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A> propriété est définie pour chaque instance, distinct <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> valeur de propriété doit être définie pour chaque instance.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le nom d'élément d'un membre du tableau ne correspond pas au nom d'élément spécifié par la propriété <see cref="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace de noms XML généré dans le document XML.</summary>
        <value>Espace de noms XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriété vous permet de définir un nom unique pour l’attribut XML. Le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriété conforme aux règles pour la création d’un espace de noms XML tel que figurant dans le document du World Wide Web Consortium (www.w3.org), « Namespaces in XML ».  
  
 Pour définir le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriété un nom avec préfixe, créez un <xref:System.Xml.Serialization.XmlSerializerNamespaces> qui contient les espaces de noms et les préfixes utilisés dans le document XML. Définir le <xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A> propriété à un des espaces de noms dans le <xref:System.Xml.Serialization.XmlSerializerNamespaces>. Lorsque le code XML est généré, le nom d’attribut est correctement préfixé avec le préfixe associé à l’espace de noms spécifié.  
  
   
  
## Examples  
 [!code-cpp[XmlAnyElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CPP/anyelement.cpp#1)]
 [!code-csharp[XmlAnyElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlAnyElementAttribute Example/CS/anyelement.cs#1)]
 [!code-vb[XmlAnyElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlAnyElementAttribute Example/VB/anyelement.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</summary>
        <value>Ordre de la génération du code.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> énumération pour indiquer à le <xref:System.Web.Services.Description.ServiceDescriptionImporter> pour générer le code qui définit le <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propriété.  
  
> [!IMPORTANT]
>  Une fois le <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propriété a été utilisée sur une propriété publique ou le champ dans un type, il doit être appliquée à toutes les propriétés et champs publics pour ce type et de tous les types hérités.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>