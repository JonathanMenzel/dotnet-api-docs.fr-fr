<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlElementAttribute.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac543848081dc33d6961ce9a4aca16c8940293a9226.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43848081dc33d6961ce9a4aca16c8940293a9226</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Indicates that a public field or property represents an XML element when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes or deserializes the object that contains it.</source>
          <target state="translated">Indique qu'un champ public ou une propriété publique représente un élément XML lorsque <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> sérialise ou désérialise l'objet qui le contient.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes or deserializes an object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> appartient à une famille d’attributs qui contrôle la façon dont le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> sérialise ou désérialise un objet.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
          <target state="translated">Pour obtenir une liste complète des attributs similaires, consultez <bpt id="p1">[</bpt>attributs qui contrôlent la sérialisation XML<ept id="p1">](~/docs/standard/serialization/attributes-that-control-xml-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</source>
          <target state="translated">Un document XML contient généralement des éléments XML, dont chacun se compose de trois parties : une balise d’ouverture avec éventuellement des attributs, une balise de fermeture et les données entre les balises.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>XML tags can be nested--that is, the data between tags can also be XML elements.</source>
          <target state="translated">Balises XML peuvent être imbriquées, les données entre les balises peuvent également être des éléments XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This capacity of one element to enclose another allows the document to contain hierarchies of data.</source>
          <target state="translated">Cette capacité d’un seul élément à placer une autre permet le document de contenir des hiérarchies de données.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>An XML element can also include attributes.</source>
          <target state="translated">Un élément XML peut également inclure des attributs.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</source>
          <target state="translated">Appliquer le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à des champs publics ou des propriétés en lecture/écriture publique pour contrôler les caractéristiques des éléments tels que le nom de l’élément et l’espace de noms XML.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> can be applied multiple times to a field that returns an array of objects.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> peut être appliqué plusieurs fois à un champ qui retourne un tableau d’objets.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The purpose of this is to specify (through the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property) different types that can be inserted into the array.</source>
          <target state="translated">L’objectif de ce consiste à spécifier (via la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété) des types différents qui peuvent être insérées dans le tableau.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For example, the array in the following C# code accepts both strings and integers.</source>
          <target state="translated">Par exemple, le tableau dans le code c# suivant accepte les chaînes et les entiers.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>This results in XML that might resemble the following.</source>
          <target state="translated">Cela entraîne le XML qui peut se présenter comme suit.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Note that when you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> multiple times without specifying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property value, the elements are named after the type of the acceptable objects.</source>
          <target state="translated">Notez que lorsque vous appliquez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> plusieurs fois sans spécifier un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> valeur de propriété, les éléments sont nommés d’après le type des objets admissibles.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</source>
          <target state="translated">Si vous appliquez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à un champ ou une propriété qui retourne un tableau, les éléments du tableau sont encodés comme une séquence d’éléments XML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In contrast if an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</source>
          <target state="translated">En revanche si un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> n’est pas appliqué à un champ ou une propriété, les éléments du tableau sont encodés comme une séquence d’éléments imbriqués sous un élément nommé d’après le champ ou la propriété.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>(Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> attributes to control how an array is serialized.)</source>
          <target state="translated">(Utilisez la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> et <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> attributs pour contrôler la sérialisation d’un tableau.)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Vous pouvez définir le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété pour spécifier un type qui est dérivé du type du champ ou de propriété d’origine qui est, le champ ou une propriété à laquelle vous avez appliqué le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Si un champ ou une propriété retourne un <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, vous pouvez appliquer plusieurs instances de la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> au membre.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Pour chaque instance, affectez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété à un type d’objet qui peut être inséré dans le tableau.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation d’attributs, consultez <bpt id="p1">[</bpt>attributs<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>You can use the word <ph id="ph1">`XmlElement`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">Vous pouvez utiliser le mot <ph id="ph1">`XmlElement`</ph> dans votre code au lieu du plus long <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> and applies the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to several of its members.</source>
          <target state="translated">L’exemple suivant sérialise une classe nommée <ph id="ph1">`Group`</ph> et applique le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à plusieurs de ses membres.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>The field named <ph id="ph1">`Employees`</ph> returns an array of <ph id="ph2">`Employee`</ph> objects.</source>
          <target state="translated">Le champ nommé <ph id="ph1">`Employees`</ph> retourne un tableau de <ph id="ph2">`Employee`</ph> objets.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> Spécifie que le code XML résultant ne doit pas être imbriqué (qui est le comportement par défaut d’éléments dans un tableau).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="T:System.Xml.Serialization.XmlElementAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <source>The following example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a class.</source>
          <target state="translated">L’exemple suivant applique le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à une classe.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The XML element name of the serialized member.</source>
          <target state="translated">Nom de l'élément XML du membre sérialisé.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies the name of the XML element.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> et spécifie le nom de l'élément XML.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utilise le nom du membre comme nom d’élément XML lors de la sérialisation d’une instance de classe.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Par exemple, un champ nommé <ph id="ph1">`Vehicle`</ph> génère un élément XML nommé <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>However if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Toutefois si vous avez besoin un élément différent, tel que <ph id="ph1">`Cars`</ph>, passez-la dans la <ph id="ph2">`elementName`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The following example shows a simple class that contains a single field named <ph id="ph1">`Vehicles`</ph>.</source>
          <target state="translated">L’exemple suivant montre une classe simple qui contient un champ unique nommé <ph id="ph1">`Vehicles`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and includes the <ph id="ph2">`elementName`</ph> parameter, thereby instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate XML elements named "Cars" rather than "Vehicles".</source>
          <target state="translated">L’exemple applique les <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> au champ et inclut le <ph id="ph2">`elementName`</ph> paramètre, indiquant ainsi la <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> pour générer des éléments XML nommés « Voitures » plutôt que « Véhicules ».</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> d'un objet dérivé du type du membre.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> class and specifies a type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> et spécifie un type pour le membre auquel <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> est appliqué.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>This type is used by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> when serializing or deserializing object that contains it.</source>
          <target state="translated">Ce type est utilisé par <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> lors de la sérialisation ou la désérialisation de l'objet qui le contient.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Utilisez le <ph id="ph1">`type`</ph> pour spécifier un type qui est dérivé d’une classe de base.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Par exemple, une propriété nommée <ph id="ph1">`MyAnimal`</ph> retourne un <ph id="ph2">`Animal`</ph> objet.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Vous souhaitez améliorer l’objet, afin de créer une nouvelle classe nommée <ph id="ph1">`Mammal`</ph> qui hérite de la <ph id="ph2">`Animal`</ph> classe.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Pour indiquer à le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> pour accepter le <ph id="ph2">`Mammal`</ph> classe lorsqu’il sérialise le <ph id="ph3">`MyAnimal`</ph> propriété, passez le <ph id="ph4">&lt;xref:System.Type&gt;</ph> de la <ph id="ph5">`Mammal`</ph> classe au constructeur.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">L’exemple suivant sérialise une classe nommée <ph id="ph1">`Orchestra`</ph> qui contient un champ unique nommé <ph id="ph2">`Instruments`</ph>, qui retourne un tableau de <ph id="ph3">`Instrument`</ph> objets.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Une deuxième classe nommée <ph id="ph1">`Brass`</ph> hérite la <ph id="ph2">`Instrument`</ph> classe.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">L’exemple applique les <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à la <ph id="ph2">`Instruments`</ph> champ et spécifie le <ph id="ph3">`Brass`</ph> type, permettant du <ph id="ph4">`Instruments`</ph> champ pour accepter <ph id="ph5">`Brass`</ph> objets.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple spécifie également le nom de l’élément XML en définissant le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The XML element name of the serialized member.</source>
          <target state="translated">Nom de l'élément XML du membre sérialisé.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of an object derived from the member's type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> d'un objet dérivé du type du membre.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> and specifies the name of the XML element and a derived type for the member to which the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> is applied.</source>
          <target state="translated">Initialise une nouvelle instance de <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> et spécifie le nom de l'élément XML et un type dérivé pour le membre auquel <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlElementAttribute" /&gt;</ph> est appliqué.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>This member type is used when the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> serializes the object that contains it.</source>
          <target state="translated">Ce type de membre est utilisé lorsque <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> sérialise l'objet qui le contient.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the member name as the XML element name when serializing a class instance.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utilise le nom du membre comme nom d’élément XML lors de la sérialisation d’une instance de classe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, a field named <ph id="ph1">`Vehicle`</ph> generates an XML element named <ph id="ph2">`Vehicle`</ph>.</source>
          <target state="translated">Par exemple, un champ nommé <ph id="ph1">`Vehicle`</ph> génère un élément XML nommé <ph id="ph2">`Vehicle`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>However, if you need a different element, such as <ph id="ph1">`Cars`</ph>, pass it in the <ph id="ph2">`elementName`</ph> parameter.</source>
          <target state="translated">Toutefois, si vous avez besoin un élément différent, tel que <ph id="ph1">`Cars`</ph>, passez-la dans la <ph id="ph2">`elementName`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>Use the <ph id="ph1">`type`</ph> parameter to specify a type that is derived from a base class.</source>
          <target state="translated">Utilisez le <ph id="ph1">`type`</ph> pour spécifier un type qui est dérivé d’une classe de base.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>For example, suppose a property named <ph id="ph1">`MyAnimal`</ph> returns an <ph id="ph2">`Animal`</ph> object.</source>
          <target state="translated">Par exemple, une propriété nommée <ph id="ph1">`MyAnimal`</ph> retourne un <ph id="ph2">`Animal`</ph> objet.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>You want to enhance the object, so you create a new class named <ph id="ph1">`Mammal`</ph> that inherits from the <ph id="ph2">`Animal`</ph> class.</source>
          <target state="translated">Vous souhaitez améliorer l’objet, afin de créer une nouvelle classe nommée <ph id="ph1">`Mammal`</ph> qui hérite de la <ph id="ph2">`Animal`</ph> classe.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>To instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to accept the <ph id="ph2">`Mammal`</ph> class when it serializes the <ph id="ph3">`MyAnimal`</ph> property, pass the <ph id="ph4">&lt;xref:System.Type&gt;</ph> of the <ph id="ph5">`Mammal`</ph> class to the constructor.</source>
          <target state="translated">Pour indiquer à le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> pour accepter le <ph id="ph2">`Mammal`</ph> classe lorsqu’il sérialise le <ph id="ph3">`MyAnimal`</ph> propriété, passez le <ph id="ph4">&lt;xref:System.Type&gt;</ph> de la <ph id="ph5">`Mammal`</ph> classe au constructeur.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The following example serializes a class named <ph id="ph1">`Orchestra`</ph> that contains a single field named <ph id="ph2">`Instruments`</ph>, which returns an array of <ph id="ph3">`Instrument`</ph> objects.</source>
          <target state="translated">L’exemple suivant sérialise une classe nommée <ph id="ph1">`Orchestra`</ph> qui contient un champ unique nommé <ph id="ph2">`Instruments`</ph>, qui retourne un tableau de <ph id="ph3">`Instrument`</ph> objets.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>A second class named <ph id="ph1">`Brass`</ph> inherits from the <ph id="ph2">`Instrument`</ph> class.</source>
          <target state="translated">Une deuxième classe nommée <ph id="ph1">`Brass`</ph> hérite la <ph id="ph2">`Instrument`</ph> classe.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example applies the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the <ph id="ph2">`Instruments`</ph> field, and specifies the <ph id="ph3">`Brass`</ph> type, allowing the <ph id="ph4">`Instruments`</ph> field to accept <ph id="ph5">`Brass`</ph> objects.</source>
          <target state="translated">L’exemple applique les <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à la <ph id="ph2">`Instruments`</ph> champ et spécifie le <ph id="ph3">`Brass`</ph> type, permettant du <ph id="ph4">`Instruments`</ph> champ pour accepter <ph id="ph5">`Brass`</ph> objets.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
          <source>The example also specifies the name of the XML element by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple spécifie également le nom de l’élément XML en définissant le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le type de données XSD (XML Schema Definition) de l'élément XML généré par <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Type de données de schéma XML, tel que défini par le document du W3C (www.w3.org ) intitulé « XML Schema Part 2: Datatypes ».</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following table lists the XML Schema simple data types with their.NET equivalents.</source>
          <target state="translated">Le tableau suivant répertorie les types de données simples de schéma XML.NET correspondants.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`base64Binary`</ph> and <ph id="ph2">`hexBinary`</ph> data types, use an array of <ph id="ph3">&lt;xref:System.Byte&gt;</ph> structures, and apply a <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "base64Binary" or "hexBinary", as appropriate.</source>
          <target state="translated">Pour le schéma XML <ph id="ph1">`base64Binary`</ph> et <ph id="ph2">`hexBinary`</ph> des types de données, utilisez un tableau de <ph id="ph3">&lt;xref:System.Byte&gt;</ph> structures et appliquer un <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> avec le <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> défini sur « base64Binary » ou « hexBinary », selon le cas.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For the XML Schema <ph id="ph1">`time`</ph> and <ph id="ph2">`date`</ph> data types, use the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type and apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> set to "date" or "time".</source>
          <target state="translated">Pour le schéma XML <ph id="ph1">`time`</ph> et <ph id="ph2">`date`</ph> des types de données, utilisez la <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type et appliquez le <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> avec le <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> défini sur « date » ou « time ».</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For every XML Schema type that is mapped to a string, apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> with its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> property set to the XML Schema type.</source>
          <target state="translated">Pour chaque type de schéma XML qui est mappé à une chaîne, appliquez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> avec son <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> propriété définie sur le type de schéma XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>It is possible that this can change the serialization format, not only the schema for the member.</source>
          <target state="translated">Il est possible que ce qui peut modifier le format de sérialisation, non seulement le schéma pour le membre.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</source>
          <target state="translated">La propriété respecte la casse, vous devez la définir exactement à un des types de données de schéma XML.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</source>
          <target state="translated">Élément en passant des données binaires comme un document XML est plus efficace que lui passant comme un attribut de schéma XML.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
          <target state="translated">Pour plus d’informations sur les types de données XML, consultez le document du World Wide Web Consortium (www.w3.org) nommé « XML Schema Part 2 : Datatypes ».</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>XSD data type</source>
          <target state="translated">Type de données XSD</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>.NET data type</source>
          <target state="translated">Type de données .NET</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>anyURI</source>
          <target state="translated">anyURI</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>base64Binary</source>
          <target state="translated">base64Binary</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Tableau de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objets</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>boolean</source>
          <target state="translated">boolean</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>byte</source>
          <target state="translated">byte</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>date</source>
          <target state="translated">date</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>dateTime</source>
          <target state="translated">dateTime</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>decimal</source>
          <target state="translated">decimal</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>double</source>
          <target state="translated">double</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITY</source>
          <target state="translated">ENTITY</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ENTITIES</source>
          <target state="translated">ENTITÉS</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>float</source>
          <target state="translated">float</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gDay</source>
          <target state="translated">gDay</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonth</source>
          <target state="translated">gMonth</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gMonthDay</source>
          <target state="translated">gMonthDay</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYear</source>
          <target state="translated">gYear</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>gYearMonth</source>
          <target state="translated">gYearMonth</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>hexBinary</source>
          <target state="translated">hexBinary</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
          <target state="translated">Tableau de <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objets</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>ID</source>
          <target state="translated">Id</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREF</source>
          <target state="translated">IDREF</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>IDREFS</source>
          <target state="translated">IDREFS</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>int</source>
          <target state="translated">int</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>integer</source>
          <target state="translated">entiers</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>language</source>
          <target state="translated">language</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>long</source>
          <target state="translated">long</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Name</source>
          <target state="translated">Name</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NCName</source>
          <target state="translated">NCName</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>negativeInteger</source>
          <target state="translated">negativeInteger</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKEN</source>
          <target state="translated">NMTOKEN</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NMTOKENS</source>
          <target state="translated">NMTOKENS</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>normalizedString</source>
          <target state="translated">normalizedString</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonNegativeInteger</source>
          <target state="translated">nonNegativeInteger</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>nonPositiveInteger</source>
          <target state="translated">nonPositiveInteger</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>NOTATION</source>
          <target state="translated">NOTATION</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>positiveInteger</source>
          <target state="translated">positiveInteger</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>QName</source>
          <target state="translated">QName</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>duration</source>
          <target state="translated">duration</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>string</source>
          <target state="translated">chaîne</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>short</source>
          <target state="translated">short</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>time</source>
          <target state="translated">heure</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>token</source>
          <target state="translated">token</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedByte</source>
          <target state="translated">unsignedByte</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedInt</source>
          <target state="translated">unsignedInt</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedLong</source>
          <target state="translated">unsignedLong</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>unsignedShort</source>
          <target state="translated">unsignedShort</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The following example serializes a class named <ph id="ph1">`Group`</ph> that contains a field named <ph id="ph2">`ExtraInfo`</ph>, which returns an <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">L’exemple suivant sérialise une classe nommée <ph id="ph1">`Group`</ph> qui contient un champ nommé <ph id="ph2">`ExtraInfo`</ph>, qui retourne un <ph id="ph3">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The example applies two instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the field and specifies different <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> values for each instance.</source>
          <target state="translated">L’exemple applique deux instances de la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> au champ et spécifie différents <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A&gt;</ph> valeurs pour chaque instance.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>Each instance enables the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the specified types inserted into the array.</source>
          <target state="translated">Chaque instance permet le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> pour sérialiser les types spécifiés insérés dans le tableau.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.DataType">
          <source>The XML Schema data type you have specified cannot be mapped to the.NET data type.</source>
          <target state="translated">Le type de données de schéma XML que vous avez spécifié ne peut pas être mappé au type de données .NET.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Gets or sets the name of the generated XML element.</source>
          <target state="translated">Obtient ou définit le nom de l'élément XML généré.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The name of the generated XML element.</source>
          <target state="translated">Nom de l'élément XML généré.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The default is the member identifier.</source>
          <target state="translated">Par défaut, il s'agit de l'identificateur du membre.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>Specify an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> if you want the name of the generated XML element to differ from the member's identifier.</source>
          <target state="translated">Spécifiez un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A&gt;</ph> si vous souhaitez que le nom de l’élément XML généré soit différent de l’identificateur du membre.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>You can set the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</source>
          <target state="translated">Vous pouvez définir les mêmes <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> valeur à plusieurs membres de classe si le document XML généré utilise des espaces de noms XML pour faire la distinction entre les membres portant le même nommés.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>For details on how to use namespaces and prefixed names in the XML document, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> class.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation des espaces de noms et des noms préfixés dans le document XML, consultez la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a new value.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> une nouvelle valeur.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>Gets or sets a value that indicates whether the element is qualified.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si l'élément est qualifié.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph> values.</source>
          <target state="translated">Une des valeurs de <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaForm" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="F:System.Xml.Schema.XmlSchemaForm.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property determines whether an XML element is qualified or unqualified.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> propriété détermine si un élément XML est qualifié ou non.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> propriété est conforme à la spécification du World Wide Web Consortium (www.w3.org) 1999, « Namespaces in XML ».</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> property is set to any value, attempting to set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> throws an exception.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A&gt;</ph> est définie sur n’importe quelle valeur, tentez de définir la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> propriété <ph id="ph3">`XmlSchemaForm.Unqualified`</ph> lève une exception.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The default setting, <ph id="ph1">`XmlSchemaForm.None`</ph>, instructs the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to check the schema for the XML document to determine whether the namespace is qualified.</source>
          <target state="translated">Le paramètre par défaut, <ph id="ph1">`XmlSchemaForm.None`</ph>, fait en sorte que le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> de vérifier le schéma pour le document XML déterminer si l’espace de noms est qualifié.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>If the schema does not specify a value for an individual element or attribute, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the <ph id="ph2">`elementFormDefault`</ph> and <ph id="ph3">`attributeFormDefault`</ph> values to determine whether an element or attribute is qualified.</source>
          <target state="translated">Si le schéma ne spécifie pas une valeur pour un élément individuel ou un attribut, le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> utilise le <ph id="ph2">`elementFormDefault`</ph> et <ph id="ph3">`attributeFormDefault`</ph> valeurs pour déterminer si un élément ou un attribut est qualifié.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following XML code shows a schema:</source>
          <target state="translated">Le code XML suivant montre un schéma :</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> reads the schema, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> value for both the <ph id="ph3">`Name`</ph> and <ph id="ph4">`Number`</ph> is <ph id="ph5">`XmlSchemaForm.None`</ph>, but the <ph id="ph6">`Name`</ph> element is qualified, while the <ph id="ph7">`Number`</ph> element is unqualified.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> lit le schéma, le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A&gt;</ph> valeur pour les deux le <ph id="ph3">`Name`</ph> et <ph id="ph4">`Number`</ph> est <ph id="ph5">`XmlSchemaForm.None`</ph>, mais la <ph id="ph6">`Name`</ph> élément est qualifié, alors que le <ph id="ph7">`Number`</ph> élément n’est pas qualifié.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Form">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> property to <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</source>
          <target state="translated">L’exemple suivant définit la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Form%2A&gt;</ph> propriété <ph id="ph2">`XmlSchemaForm.Unqualified`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> must serialize a member that is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph> as an empty tag with the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute set to <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si <ph id="ph1">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> doit sérialiser un membre dont la valeur est <ph id="ph2">&lt;see langword="null" /&gt;</ph> comme balise vide avec l'attribut <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> ayant la valeur <ph id="ph4">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> generates the <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> attribute; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Xml.Serialization.XmlSerializer" /&gt;</ph> génère l'attribut <ph id="ph3">&lt;see langword="xsi:nil" /&gt;</ph> ; <ph id="ph4">&lt;see langword="false" /&gt;</ph> sinon.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</source>
          <target state="translated">La spécification de schéma XML pour les structures permet à un document XML à signaler de manière explicite que le contenu d’un élément est manquant.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Such an element contains the attribute <ph id="ph1">`xsi:nil`</ph> set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Un tel élément contient l’attribut <ph id="ph1">`xsi:nil`</ph> la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</source>
          <target state="translated">Pour plus d’informations, consultez la spécification du World Wide Web Consortium (www.w3.org), « XML Schema Part 1 : Structures ».</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">`xsi:nil`</ph> attribute is generated for class members that have been set to <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> est définie sur <ph id="ph2">`true`</ph>, le <ph id="ph3">`xsi:nil`</ph> attribut est généré pour les membres de classe qui ont été définis sur <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>For example if you set a field named <ph id="ph1">`MyStringArray`</ph> to <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> generates the following XML code.</source>
          <target state="translated">Par exemple, si vous définissez un champ nommé <ph id="ph1">`MyStringArray`</ph> à <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> génère le code XML suivant.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, no XML element is generated for class members that have been set to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propriété <ph id="ph2">`false`</ph>, aucun élément XML n’est généré pour les membres de classe qui ont été définis sur <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>You cannot apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property to a member typed as a value type because a value type cannot contain <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Vous ne pouvez pas appliquer le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propriété à un membre de type valeur, car un type valeur ne peut pas contenir <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>Additionally, you cannot set this property to <ph id="ph1">`false`</ph> for nullable value types.</source>
          <target state="translated">En outre, vous ne pouvez pas définir cette propriété <ph id="ph1">`false`</ph> pour les types valeur nullable.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>When such types are <ph id="ph1">`null`</ph>, they will be serialized by setting <ph id="ph2">`xsi:nil`</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Lorsque ces types sont <ph id="ph1">`null`</ph>, ils sont sérialisés en définissant <ph id="ph2">`xsi:nil`</ph> à <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
          <source>The following example shows a field with the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> applied to it, and the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">L’exemple suivant montre un champ avec le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> appliqué et le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A&gt;</ph> propriété <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</source>
          <target state="translated">Obtient ou définit l'espace de noms assigné à l'élément XML obtenu lorsque la classe est sérialisée.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The namespace of the XML element.</source>
          <target state="translated">Espace de noms de l'élément XML.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A&gt;</ph> propriété est conforme à la spécification du World Wide Web Consortium (www.w3.org), « Namespaces in XML ».</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>To create namespaces that are associated with a prefix, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> that contains the namespaces and prefixes used in the XML document.</source>
          <target state="translated">Pour créer des espaces de noms qui sont associés à un préfixe, vous devez créer un <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> qui contient les espaces de noms et les préfixes utilisés dans le document XML.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>As you set the namespace for each <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, it must match one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
          <target state="translated">Lorsque vous définissez l’espace de noms de chaque <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph>, il doit correspondre à un des espaces de noms dans le <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
          <source>When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</source>
          <target state="translated">Lorsque le code XML est généré, chaque tableau est correctement ajouté avec le préfixe associé à l’espace de noms spécifié.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
          <target state="translated">Obtient ou définit l'ordre explicite dans lequel les éléments sont sérialisés ou désérialisés.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>The order of the code generation.</source>
          <target state="translated">Ordre de la génération du code.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> énumération pour indiquer à le <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> pour générer le code qui définit le <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Order">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
          <target state="translated">Une fois le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> propriété a été utilisée sur une propriété publique ou un champ dans un type, il doit être appliqué à toutes les propriétés et champs publics pour ce type et de tous les types hérités.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Gets or sets the object type used to represent the XML element.</source>
          <target state="translated">Obtient ou définit le type d'objet utilisé pour représenter l'élément XML.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> du membre.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived type for a field or property.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété pour spécifier un type dérivé pour un champ ou une propriété.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>If a field or property returns an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, you can apply multiple instances of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to the member.</source>
          <target state="translated">Si un champ ou une propriété retourne un <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, vous pouvez appliquer plusieurs instances de la <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> au membre.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>For each instance, set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to a type of object that can be inserted into the array.</source>
          <target state="translated">Pour chaque instance, affectez le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété à un type d’objet qui peut être inséré dans le tableau.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> property to specify a derived object for an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Type%2A&gt;</ph> propriété pour spécifier un objet dérivé pour un <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>The example also applies three instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to a field that returns an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
          <target state="translated">L’exemple applique également trois instances de la <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> à un champ qui retourne un <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Serialization.XmlElementAttribute.Type">
          <source>Each instance specifies a type allowed in the field.</source>
          <target state="translated">Chaque instance spécifie un type autorisé dans le champ.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>