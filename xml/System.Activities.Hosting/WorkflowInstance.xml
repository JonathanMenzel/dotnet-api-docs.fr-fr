<Type Name="WorkflowInstance" FullName="System.Activities.Hosting.WorkflowInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5c11958c52a0255dd1e5186879480a827cf27ae" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36654264" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract WorkflowInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowInstance abstract" />
  <TypeSignature Language="F#" Value="type WorkflowInstance = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9a8cd-101">
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> est un runtime léger par instance permettant l'exécution d'un programme de flux de travail.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a8cd-101">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is a lightweight, per-instance runtime for executing a workflow program.</span>
      </span>
      <span data-ttu-id="9a8cd-102">Il peut être construit pour créer une instance de flux de travail entièrement nouvelle ou créer une instance à partir de l'état d'une instance existante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a8cd-102">It can be constructed to create a new workflow instance or from existing instance state.</span>
      </span>
      <span data-ttu-id="9a8cd-103">Les API exposées par <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> constituent le jeu minimal de contrôles runtime à partir duquel des opérations de niveau supérieur peuvent être implémentées.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a8cd-103">The APIs that <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</span>
      </span>
      <span data-ttu-id="9a8cd-104">Ce jeu d'API représente l'éventail complet de fonctionnalités du runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a8cd-104">This API set represents the entire breadth of functionality of the runtime.</span>
      </span>
      <span data-ttu-id="9a8cd-105">
        <see cref="T:System.Activities.Hosting.WorkflowInstance" /> est une classe abstraite qui repose sur l'implémentation par un hôte de ses méthodes abstraites pour fournir des fonctionnalités hôtes telles que la synchronisation, la persistance, le suivi et les extensions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9a8cd-105">
          <see cref="T:System.Activities.Hosting.WorkflowInstance" /> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-106"><xref:System.Activities.Hosting.WorkflowInstance> est monothread et suppose que l'hôte synchronise tout accès à celui-ci.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-106"><xref:System.Activities.Hosting.WorkflowInstance> is single threaded and assumes that the host synchronizes all access to it.</span></span> <span data-ttu-id="9a8cd-107">Toute tentative d'appel simultané de plusieurs API lève une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-107">An attempt to call multiple APIs simultaneously will result in an <xref:System.InvalidOperationException> being thrown.</span></span>  
  
 <span data-ttu-id="9a8cd-108">En interne, un <xref:System.Activities.Hosting.WorkflowInstance> a deux états : En cours d'exécution (Running) et Suspendu (Paused).</span><span class="sxs-lookup"><span data-stu-id="9a8cd-108">Internally, a <xref:System.Activities.Hosting.WorkflowInstance> has two states: Running and Paused.</span></span> <span data-ttu-id="9a8cd-109">Le seul moyen de faire passer le runtime de l'état Suspendu à l'état En cours d'exécution est d'appeler <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-109">The only way to cause the runtime to transition from paused to running is to call <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span> <span data-ttu-id="9a8cd-110">Toutes les actions (sauf Suspendre) ne peuvent être réalisées que lorsque le runtime présente l'état Suspendu.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-110">All actions (except Pause) can only be taken while the runtime is Paused.</span></span> <span data-ttu-id="9a8cd-111">Le runtime sera spontanément suspendu dans les situations suivantes :</span><span class="sxs-lookup"><span data-stu-id="9a8cd-111">The runtime will become spontaneously Paused in the following situations:</span></span>  
  
-   <span data-ttu-id="9a8cd-112">Une erreur fatale s'est produite dans le runtime.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-112">An error fatal to the runtime has occurred.</span></span> <span data-ttu-id="9a8cd-113">L'hôte sera signalé via <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (lequel ne signale pas une transition à l'état Suspendu), puis notifié via <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-113">The host will be signaled through <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> (which does not signal a transition to Paused) and then notified through <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span></span>  
  
-   <span data-ttu-id="9a8cd-114">Une exception dans le flux de travail n'a pas été interceptée et a placé la racine dans une séquence d’échappement.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-114">An exception in the workflow was uncaught and escaped the root.</span></span> <span data-ttu-id="9a8cd-115">L'hôte sera notifié via la méthode <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-115">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A> method.</span></span>  
  
-   <span data-ttu-id="9a8cd-116">Le planificateur n'a plus d'élément de travail et est maintenant <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-116">The scheduler has run out of work items and is now <xref:System.Activities.Hosting.WorkflowInstanceState.Idle>.</span></span> <span data-ttu-id="9a8cd-117">L'hôte sera notifié via la méthode <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-117">The host will be notified through the <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> method.</span></span> <span data-ttu-id="9a8cd-118">Notez que le planificateur peut ne plus avoir d'élément de travail car l'instance est inactive ou terminée.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-118">Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</span></span> <span data-ttu-id="9a8cd-119">La valeur <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> de la propriété <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> peut être utilisée pour différencier ces deux causes.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-119">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to differentiate between the two.</span></span>  
  
 <span data-ttu-id="9a8cd-120">L'hôte peut demander le passage de l'état En cours d'exécution à l'état Suspendu en appelant les méthodes <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> ou <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> de l'instance <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> retournée par la propriété <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-120">The host can request a change from Running to Paused by calling the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> or <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> methods of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property.</span></span> <span data-ttu-id="9a8cd-121">La réponse à cette demande ne doit pas être considérée comme signifiant que l'hôte ne doit pas essayer de mettre en corrélation OnNotify \* ou <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> avec un appel de suspension spécifique.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-121">This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify\* or <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> with a specific call to pause.</span></span> <span data-ttu-id="9a8cd-122">En réponse à une demande de suspension, le runtime peut passer à l'état Suspendu et appeler <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> alors que le planificateur a encore des éléments de travail en attente.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-122">In response to a pause request, the runtime may transition to Paused and call <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> while the scheduler still has pending work items.</span></span> <span data-ttu-id="9a8cd-123">La valeur <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> de la propriété <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> peut être utilisée pour déterminer si le planificateur n'a plus de travail ou s'il a été interrompu par une demande de suspension.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-123">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A> value of the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</span></span>  
  
 <span data-ttu-id="9a8cd-124">La méthode <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> de l'instance <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> retournée par la propriété <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> est la seule méthode qui peut être appelée lorsque <xref:System.Activities.Hosting.WorkflowInstance> se trouve dans l'état En cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-124">The <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> method of the <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> instance returned by the <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> property is the only method which can be called while the <xref:System.Activities.Hosting.WorkflowInstance> is in the Running state.</span></span> <span data-ttu-id="9a8cd-125">Toutes les autres méthodes lèveront une <xref:System.InvalidOperationException>. En prenant en considération les règles déterminant la manière dont <xref:System.Activities.Hosting.WorkflowInstance> passe d'un état à un autre, les états En cours d'exécution et Suspendu peuvent être définis de la manière suivante :</span><span class="sxs-lookup"><span data-stu-id="9a8cd-125">All other methods will throw an <xref:System.InvalidOperationException> if called.Given the rules for how <xref:System.Activities.Hosting.WorkflowInstance> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</span></span>  
  
-   <span data-ttu-id="9a8cd-126">En cours d'exécution - État entre un appel à <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> et le WorkflowInstance.OnNotify suivant.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-126">Running – The state between a call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> and the next WorkflowInstance.OnNotify\*.</span></span>  
  
-   <span data-ttu-id="9a8cd-127">Suspendu - État entre le dernier WorkflowInstance.OnNotify et le prochain appel à <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-127">Paused – The state between the last WorkflowInstance.OnNotify\* and the next call to <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-128">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-128">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance workflowDefinition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="9a8cd-129">Activité qui définit le flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-129">The activity that defines the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-130">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Hosting.WorkflowInstance" /> avec la définition de flux de travail spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-130">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowInstance(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberSignature Language="F#" Value="new System.Activities.Hosting.WorkflowInstance : System.Activities.Activity * System.Activities.WorkflowIdentity -&gt; System.Activities.Hosting.WorkflowInstance" Usage="new System.Activities.Hosting.WorkflowInstance (workflowDefinition, definitionIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="9a8cd-131">Activité qui définit le flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-131">The activity that defines the workflow.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="9a8cd-132">Identité de définition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-132">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-133">Initialise une instance de la classe <see cref="T:System.Activities.Hosting.WorkflowInstance" /> avec la définition de flux de travail et l'identité de définition spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-133">Initializes a new instance of the <see cref="T:System.Activities.Hosting.WorkflowInstance" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginFlushTrackingRecords(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginFlushTrackingRecords (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginFlushTrackingRecords(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginFlushTrackingRecords : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.BeginFlushTrackingRecords (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="9a8cd-134">Période après laquelle la tentative doit être abandonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-134">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="9a8cd-135">Méthode à appeler lorsque l'opération de suivi est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-135">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9a8cd-136">Informations sur l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-136">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-137">Appelée par l'exécution du flux de travail pour commencer à envoyer de façon asynchrone des enregistrements de suivi en attente aux participants de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-137">Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-138">État de l'opération de suivi actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-138">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Activities.Hosting.WorkflowInstance/WorkflowInstanceControl Controller" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Controller As WorkflowInstance.WorkflowInstanceControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl Controller { System::Activities::Hosting::WorkflowInstance::WorkflowInstanceControl get(); };" />
      <MemberSignature Language="F#" Value="member this.Controller : System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" Usage="System.Activities.Hosting.WorkflowInstance.Controller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-139">Obtient l'instance <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> de ce <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-139">Gets the <see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /> instance for this <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-140">Instance de contrôleur de cette instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-140">The controller instance for this workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinitionIdentity">
      <MemberSignature Language="C#" Value="public System.Activities.WorkflowIdentity DefinitionIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.WorkflowIdentity DefinitionIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefinitionIdentity As WorkflowIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::WorkflowIdentity ^ DefinitionIdentity { System::Activities::WorkflowIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinitionIdentity : System.Activities.WorkflowIdentity" Usage="System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-141">Obtient ou définit l'identité de la définition de l'<see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-141">Gets or sets the definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-142">Identité de la définition de <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-142">The definition identity of <see cref="T:System.Activities.Hosting.WorkflowInstance" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeExtensions">
      <MemberSignature Language="C#" Value="protected void DisposeExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisposeExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisposeExtensions ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisposeExtensions();" />
      <MemberSignature Language="F#" Value="member this.DisposeExtensions : unit -&gt; unit" Usage="workflowInstance.DisposeExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-143">Appelle la méthode <see cref="M:System.Disposable.Dispose" /> sur toutes les extensions qui implémentent <see cref="T:System.IDisposable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-143">Calls <see cref="M:System.Disposable.Dispose" /> on all extensions that implement <see cref="T:System.IDisposable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void EndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.EndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9a8cd-144">État de l'opération de suivi asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-144">The status of the asynchronous track operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-145">Appelée par l'exécution du flux de travail pour terminer l'opération de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-145">Called by the workflow runtime to end the track operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected void FlushTrackingRecords (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void FlushTrackingRecords(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub FlushTrackingRecords (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void FlushTrackingRecords(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.FlushTrackingRecords : TimeSpan -&gt; unit" Usage="workflowInstance.FlushTrackingRecords timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="9a8cd-146">Période après laquelle la tentative doit être abandonnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-146">The time period after which to abort the attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-147">Appelée par l'exécution du flux de travail pour envoyer les enregistrements de suivi en attente aux participants de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-147">Called by the workflow runtime to send pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActivitiesBlockingUpdate">
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Collections.Generic.IList`1&lt;class System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt; GetActivitiesBlockingUpdate(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetActivitiesBlockingUpdate (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap) As IList(Of ActivityBlockingUpdate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Collections::Generic::IList&lt;System::Activities::DynamicUpdate::ActivityBlockingUpdate ^&gt; ^ GetActivitiesBlockingUpdate(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="static member GetActivitiesBlockingUpdate : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;" Usage="System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Activities.DynamicUpdate.ActivityBlockingUpdate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="9a8cd-148">État d'exécution désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-148">The deserialized runtime state.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="9a8cd-149">Carte de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-149">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-150">Récupère la liste d'activité qui bloque la mise à jour du flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-150">Retrieves the list of activity that is blocking the update of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-151">Liste d'activité qui bloque la mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-151">The list of activity that is blocking the update.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal T GetExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance !!T GetExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtension(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetExtension();" />
      <MemberSignature Language="F#" Value="member this.GetExtension : unit -&gt; 'T (requires 'T : null)" Usage="workflowInstance.GetExtension " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="9a8cd-152">Type de l’extension à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-152">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="9a8cd-153">Retourne une extension du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-153">Returns an extension of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-154">Extension du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-154">An extension of the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected internal System.Collections.Generic.IEnumerable&lt;T&gt; GetExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; seq&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="workflowInstance.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="9a8cd-155">Type de l’extension à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-155">The type of the extension to find.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="9a8cd-156">Retourne toutes les extensions trouvées pour le type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-156">Returns all extensions found for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-157">Toutes les extensions trouvées pour le type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-157">All extensions found for the specified type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostEnvironment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment HostEnvironment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberSignature Language="VB.NET" Value="Public Property HostEnvironment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ HostEnvironment { System::Activities::LocationReferenceEnvironment ^ get(); void set(System::Activities::LocationReferenceEnvironment ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostEnvironment : System.Activities.LocationReferenceEnvironment with get, set" Usage="System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-158">Obtient ou définit l’environnement racine pour les arguments et les variables de l’instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-158">Gets or sets the root environment for the workflow instance’s arguments and variables.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-159">Environnement racine pour les arguments et les variables de l’instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-159">The root environment for the workflow instance’s arguments and variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-160">Si cette propriété est définie après l’initialisation de l’instance de workflow et <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> retourne `true`, un <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-160">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public abstract Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.Activities.Hosting.WorkflowInstance.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-161">Obtient l'identificateur unique de l'instance de workflow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-161">Gets the unique identifier for the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-162">Identificateur unique de l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-162">The unique identifier for the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-163">Appelée par l'hôte pour initialiser l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-163">Called by the host to initialize the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj -&gt; unit" Usage="workflowInstance.Initialize deserializedRuntimeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="9a8cd-164">État à l'exécution utilisé pour exécuter le flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-164">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-165">Appelée par l'hôte pour initialiser l'instance de flux de travail avec l'état à l'exécution du flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-165">Called by the host to initialize the workflow instance with the workflow run-time state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.Collections.Generic.IDictionary&lt;string,object&gt; workflowArgumentValues, System.Collections.Generic.IList&lt;System.Activities.Handle&gt; workflowExecutionProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; workflowArgumentValues, class System.Collections.Generic.IList`1&lt;class System.Activities.Handle&gt; workflowExecutionProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (workflowArgumentValues As IDictionary(Of String, Object), workflowExecutionProperties As IList(Of Handle))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ workflowArgumentValues, System::Collections::Generic::IList&lt;System::Activities::Handle ^&gt; ^ workflowExecutionProperties);" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Collections.Generic.IList&lt;System.Activities.Handle&gt; -&gt; unit" Usage="workflowInstance.Initialize (workflowArgumentValues, workflowExecutionProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowArgumentValues" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="workflowExecutionProperties" Type="System.Collections.Generic.IList&lt;System.Activities.Handle&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowArgumentValues">
          <span data-ttu-id="9a8cd-166">Les paramètres d’entrée du flux de travail, indexés par nom d’argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-166">The input parameters to the workflow, keyed by argument name.</span>
          </span>
        </param>
        <param name="workflowExecutionProperties">
          <span data-ttu-id="9a8cd-167">Liste des propriétés d'exécution du flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-167">The list of workflow execution properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-168">Appelée par l’hôte pour initialiser l’instance de flux de travail avec les valeurs d’argument et les propriétés d’exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-168">Called by the host to initialize the workflow instance with the argument values and execution properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(object deserializedRuntimeState, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (deserializedRuntimeState As Object, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::Object ^ deserializedRuntimeState, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberSignature Language="F#" Value="member this.Initialize : obj * System.Activities.DynamicUpdate.DynamicUpdateMap -&gt; unit" Usage="workflowInstance.Initialize (deserializedRuntimeState, updateMap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deserializedRuntimeState" Type="System.Object" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="deserializedRuntimeState">
          <span data-ttu-id="9a8cd-169">État à l'exécution utilisé pour exécuter le flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-169">The run-time state used to execute the workflow.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="9a8cd-170">Carte de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-170">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-171">Appelée par l'hôte pour initialiser l'instance de flux de travail avec l'état à l'exécution et la carte de mise à jour.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-171">Called by the host to initialize the workflow instance with the workflow run-time state and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="protected bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Hosting.WorkflowInstance.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-172">Obtient une valeur qui indique si l'instance de flux de travail a été initialisée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-172">Gets a value that indicates whether the workflow instance has been initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-173">
            <see langword="true" /> si l'instance de flux de travail a été initialisée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-173">
              <see langword="true" /> if the workflow instance has been initialized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginAssociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginAssociateKeys (keys, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="9a8cd-174">Clés d'instance à associer à cette instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-174">The instance keys to associate with this workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="9a8cd-175">Méthode à appeler lorsque l'opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-175">The method to be called when the operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9a8cd-176">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-176">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-177">Appelée par l'exécution du flux de travail pour notifier l'hôte que les nouvelles clés d'instance doivent être associées à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-177">Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-178">Référence à l'opération d'association de clés asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-178">A reference to the asynchronous associate keys operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginFlushTrackingRecords(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginFlushTrackingRecords (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginFlushTrackingRecords(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginFlushTrackingRecords : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginFlushTrackingRecords (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="9a8cd-179">Méthode à appeler lorsque l'opération de suivi est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-179">The method to be called when the track operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9a8cd-180">Informations sur l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-180">The information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-181">Appel asynchrone pour demander à l'hôte de vider les enregistrements de suivi vers les participants de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-181">Asynchronous call to ask host to flush pending tracking records to tracking participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-182">État de l'opération de suivi actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-182">The status of the current track operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginPersist : AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginPersist (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="9a8cd-183">Méthode à appeler lorsque l'opération de persistance est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-183">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9a8cd-184">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-184">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-185">Appel asynchrone pour demander à l'hôte de rendre le flux de travail persistant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-185">Asynchronous call to ask the host to persist the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-186">Référence à l'opération de persistance actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-186">A reference to the current persist operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginResumeBookmark : System.Activities.Bookmark * obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="workflowInstance.OnBeginResumeBookmark (bookmark, value, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="9a8cd-187">Signet à reprendre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-187">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9a8cd-188">Données à passer à l'activité ayant créé <see cref="T:System.Activities.Bookmark" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-188">The data to be passed to the activity that created the <see cref="T:System.Activities.Bookmark" />.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="9a8cd-189">Intervalle dans lequel l'opération de reprise doit être réalisée avant que l'opération ne soit annulée et qu'une <see cref="T:System.TimeoutException" /> ne soit levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-189">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="9a8cd-190">Méthode à appeler lorsque l'opération de reprise est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-190">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="9a8cd-191">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-191">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-192">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de reprise de signet commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-192">Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-193">Référence à l'opération de reprise asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-193">A reference to the asynchronous resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member OnDisassociateKeys : System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; -&gt; unit" Usage="workflowInstance.OnDisassociateKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="9a8cd-194">Liste de clés à dissocier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-194">The list of keys to disassociate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-195">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'un certain jeu de clés d'instance ne doit plus être associé à cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-195">Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndAssociateKeys : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndAssociateKeys result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9a8cd-196">Référence à l'opération d'association de clés asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-196">The reference to the asynchronous associate keys operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-197">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération d'association de clés est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-197">Called by the workflow runtime to notify the host that an associate keys operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndFlushTrackingRecords">
      <MemberSignature Language="C#" Value="protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndFlushTrackingRecords(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndFlushTrackingRecords (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndFlushTrackingRecords(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndFlushTrackingRecords : IAsyncResult -&gt; unit&#xA;override this.OnEndFlushTrackingRecords : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndFlushTrackingRecords result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9a8cd-198">État de l'opération asynchrone de vidage des enregistrements de suivi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-198">The status of the asynchronous flush tracking records operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-199">Appelée par l'exécution du flux de travail pour notifier l'hôte lorsque l'opération de vidage des enregistrements de suivi est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-199">Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEndPersist(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndPersist : IAsyncResult -&gt; unit" Usage="workflowInstance.OnEndPersist result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9a8cd-200">Référence à l'opération de persistance asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-200">The reference to the asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-201">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de persistance est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-201">Called by the workflow runtime to notify the host that a persist operation is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndResumeBookmark : IAsyncResult -&gt; System.Activities.BookmarkResumptionResult" Usage="workflowInstance.OnEndResumeBookmark result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9a8cd-202">Référence à l'opération de reprise de signet asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-202">The reference to the asynchronous resume bookmark operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-203">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de reprise de signet est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-203">Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9a8cd-204">L'une des valeurs d'énumération qui indique le résultat d'une opération de reprise de <see cref="T:System.Activities.Bookmark" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-204">One of the enumeration values that indicates the result of a <see cref="T:System.Activities.Bookmark" /> resume operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyPaused();" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyPaused : unit -&gt; unit" Usage="workflowInstance.OnNotifyPaused " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-205">Appelée par l'exécution du flux de travail pour notifier l'hôte que l'instance de flux de travail est passée de l'état En cours d'exécution à l'état Suspendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-205">Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity source, string sourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ source, System::String ^ sourceInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyUnhandledException : Exception * System.Activities.Activity * string -&gt; unit" Usage="workflowInstance.OnNotifyUnhandledException (exception, source, sourceInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="source" Type="System.Activities.Activity" />
        <Parameter Name="sourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="9a8cd-206">Exception non gérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-206">The unhandled exception.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="9a8cd-207">Activité ayant levé l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-207">The activity that threw the exception.</span>
          </span>
        </param>
        <param name="sourceInstanceId">
          <span data-ttu-id="9a8cd-208">Identificateur unique de l'<see cref="T:System.Activities.ActivityInstance" /> représentant l'activité ayant levé l'exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-208">The unique identifier of the <see cref="T:System.Activities.ActivityInstance" /> representing the activity that threw the exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-209">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une exception non gérée s'est produite dans l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-209">Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal abstract void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnRequestAbort(Exception ^ reason);" />
      <MemberSignature Language="F#" Value="abstract member OnRequestAbort : Exception -&gt; unit" Usage="workflowInstance.OnRequestAbort reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="9a8cd-210">Raison de l'abandon de l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-210">The reason for aborting the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-211">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération d'abandon a été demandée pour l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-211">Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-212">Une fois la méthode <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> appelée, la plupart des API <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>, à l'exception de <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>, lèvent une <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-212">Once <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called, most <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> APIs except <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="9a8cd-213">Il est attendu qu'après l'appel à <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>, un hôte se dirige vers un état dans lequel il peut satisfaire l'abandon.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-213">It is expected that after <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> is called a host will trend toward a state in which it can satisfy the abort.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterExtensionManager">
      <MemberSignature Language="C#" Value="protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RegisterExtensionManager(class System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RegisterExtensionManager (extensionManager As WorkflowInstanceExtensionManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RegisterExtensionManager(System::Activities::Hosting::WorkflowInstanceExtensionManager ^ extensionManager);" />
      <MemberSignature Language="F#" Value="member this.RegisterExtensionManager : System.Activities.Hosting.WorkflowInstanceExtensionManager -&gt; unit" Usage="workflowInstance.RegisterExtensionManager extensionManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionManager" Type="System.Activities.Hosting.WorkflowInstanceExtensionManager" />
      </Parameters>
      <Docs>
        <param name="extensionManager">
          <span data-ttu-id="9a8cd-214">Gestionnaire d’extensions à inscrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-214">The extension manager to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9a8cd-215">Appelée par l’hôte pour inscrire le gestionnaire d’extensions spécifié, vérifier que toutes les extensions obligatoires sont présentes et initialiser la collection d’extensions à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-215">Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-216">Les extensions sont indexées par type, et une extension fournie par un hôte est toujours utilisée si elle est fournie.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-216">Extensions are keyed by type, and a host provided extension will always be used if provided.</span></span> <span data-ttu-id="9a8cd-217">Les extensions ajoutées via <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> utilisent le type de runtime de l'objet comme clé de type.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-217">Extensions added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the runtime type of the object as the type key.</span></span> <span data-ttu-id="9a8cd-218">Fournisseurs d’extensions ajoutés via <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> utilisent le type T déclaré de Func\<T > comme clé de type.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-218">Extensions providers added through <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> use the decared type T of the Func\<T> as the type key.</span></span> <span data-ttu-id="9a8cd-219">Les fournisseurs d’extensions fournis par les activités via les différentes méthodes \*ActivityMetadata.AddDefaultExtensionProvider sont supprimés si une extension hôte existe pour le type déclaré ou s’il existe un type plus général fourni via AddDefaultExtensionProvider (par exemple,</span><span class="sxs-lookup"><span data-stu-id="9a8cd-219">Extension providers contributed by activities through the various \*ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</span></span> <span data-ttu-id="9a8cd-220">Si la fonction\<StreamWriter > est fournie et Func\<TextWriter > est fourni, seul Func\<StreamWriter > seront conservés).</span><span class="sxs-lookup"><span data-stu-id="9a8cd-220">if Func\<StreamWriter> is provided and Func\<TextWriter> is provided, only Func\<StreamWriter> will be kept).</span></span> <span data-ttu-id="9a8cd-221">Si une extension n'existe pas dans la collection requise par une activité (exprimée en appelant \* ActivityMetadata.RequireExtension), une <xref:System.Activities.ValidationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-221">If an extension does not exist in the collection that is required by an activity (expressed by calling \*ActivityMetadata.RequireExtension) a <xref:System.Activities.ValidationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal abstract bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property bool SupportsInstanceKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInstanceKeys : bool" Usage="System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-222">Obtient une valeur qui indique si l'hôte prend en charge l'association de <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> avec une instance à l'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-222">Gets a value that indicates whether the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a run-time instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-223">
            <see langword="true" /> si l'hôte prend en charge l'association de <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> avec une instance de flux de travail ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-223">
              <see langword="true" /> if the host supports the association of <see cref="P:System.Runtime.DurableInstancing.InstanceView.InstanceKeys" /> with a workflow instance; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-224">Obtient ou définit le <see cref="T:System.Threading.SynchronizationContext" /> utilisé pour planifier l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-224">Gets or sets the <see cref="T:System.Threading.SynchronizationContext" /> used for scheduling the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-225">Contexte de synchronisation utilisé pour la planification de l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-225">The synchronization context used for scheduling the workflow instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-226">Si cette propriété est définie après l’initialisation de l’instance de workflow et <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> retourne `true`, un <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-226">If this property is set after the workflow instance is initialized and <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfReadOnly">
      <MemberSignature Language="C#" Value="protected void ThrowIfReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfReadOnly ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfReadOnly();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfReadOnly : unit -&gt; unit" Usage="workflowInstance.ThrowIfReadOnly " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-227">Lève une <see cref="T:System.InvalidOperationException" /> si l'instance de flux de travail a été initialisée, comme déterminé par <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-227">Throws an <see cref="T:System.InvalidOperationException" /> if the workflow instance has been initialized, as determined by <see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a8cd-228">Si <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> retourne `true`, alors un <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="9a8cd-228">If <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A> returns `true`, then an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowDefinition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity WorkflowDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity WorkflowDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowDefinition As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity ^ WorkflowDefinition { System::Activities::Activity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowDefinition : System.Activities.Activity" Usage="System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Activity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9a8cd-229">Obtient la définition de flux de travail de l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-229">Gets the workflow definition of the workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9a8cd-230">Définition de flux de travail de l'instance de flux de travail.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9a8cd-230">The workflow definition of the workflow instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>