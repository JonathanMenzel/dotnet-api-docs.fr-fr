<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowInstance.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58d6a7b9b8156534bc27bc0b13ae178961d5c41c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d6a7b9b8156534bc27bc0b13ae178961d5c41c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is a lightweight, per-instance runtime for executing a workflow program.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> est un runtime léger par instance permettant l'exécution d'un programme de flux de travail.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>It can be constructed to create a new workflow instance or from existing instance state.</source>
          <target state="translated">Il peut être construit pour créer une instance de flux de travail entièrement nouvelle ou créer une instance à partir de l'état d'une instance existante.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The APIs that <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> exposes are the minimal set of runtime controls from which higher level operations can be implemented.</source>
          <target state="translated">Les API exposées par <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> constituent le jeu minimal de contrôles runtime à partir duquel des opérations de niveau supérieur peuvent être implémentées.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This API set represents the entire breadth of functionality of the runtime.</source>
          <target state="translated">Ce jeu d'API représente l'éventail complet de fonctionnalités du runtime.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> is an abstract class and relies on a host’s implementation of its abstract methods in order to provide host functionality such as synchronization, persistence, tracking, and extensions.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> est une classe abstraite qui repose sur l'implémentation par un hôte de ses méthodes abstraites pour fournir des fonctionnalités hôtes telles que la synchronisation, la persistance, le suivi et les extensions.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is single threaded and assumes that the host synchronizes all access to it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> est monothread et suppose que l'hôte synchronise tout accès à celui-ci.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An attempt to call multiple APIs simultaneously will result in an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> being thrown.</source>
          <target state="translated">Toute tentative d'appel simultané de plusieurs API lève une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Internally, a <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> has two states: Running and Paused.</source>
          <target state="translated">En interne, un <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> a deux états : En cours d'exécution (Running) et Suspendu (Paused).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The only way to cause the runtime to transition from paused to running is to call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">Le seul moyen de faire passer le runtime de l'état Suspendu à l'état En cours d'exécution est d'appeler <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All actions (except Pause) can only be taken while the runtime is Paused.</source>
          <target state="translated">Toutes les actions (sauf Suspendre) ne peuvent être réalisées que lorsque le runtime présente l'état Suspendu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The runtime will become spontaneously Paused in the following situations:</source>
          <target state="translated">Le runtime sera spontanément suspendu dans les situations suivantes :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An error fatal to the runtime has occurred.</source>
          <target state="translated">Une erreur fatale s'est produite dans le runtime.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be signaled through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (which does not signal a transition to Paused) and then notified through <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</source>
          <target state="translated">L'hôte sera signalé via <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> (lequel ne signale pas une transition à l'état Suspendu), puis notifié via <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>An exception in the workflow was uncaught and escaped the root.</source>
          <target state="translated">Une exception dans le flux de travail n'a pas été interceptée et a placé la racine dans une séquence d’échappement.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph> method.</source>
          <target state="translated">L'hôte sera notifié via la méthode <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The scheduler has run out of work items and is now <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</source>
          <target state="translated">Le planificateur n'a plus d'élément de travail et est maintenant <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceState.Idle&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host will be notified through the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> method.</source>
          <target state="translated">L'hôte sera notifié via la méthode <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Note that the scheduler could have run out of work items because the instance is idle or because the instance is complete.</source>
          <target state="translated">Notez que le planificateur peut ne plus avoir d'élément de travail car l'instance est inactive ou terminée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to differentiate between the two.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> de la propriété <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> peut être utilisée pour différencier ces deux causes.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The host can request a change from Running to Paused by calling the <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property.</source>
          <target state="translated">L'hôte peut demander le passage de l'état En cours d'exécution à l'état Suspendu en appelant les méthodes <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A&gt;</ph> de l'instance <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> retournée par la propriété <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>This request should not be considered to have a specific response meaning that the host should not attempt to correlate an OnNotify* or <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> with a specific call to pause.</source>
          <target state="translated">La réponse à cette demande ne doit pas être considérée comme signifiant que l'hôte ne doit pas essayer de mettre en corrélation OnNotify * ou <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> avec un appel de suspension spécifique.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>In response to a pause request, the runtime may transition to Paused and call <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> while the scheduler still has pending work items.</source>
          <target state="translated">En réponse à une demande de suspension, le runtime peut passer à l'état Suspendu et appeler <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A&gt;</ph> alors que le planificateur a encore des éléments de travail en attente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> value of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property can be used to determine whether the scheduler has no more work or was interrupted by a request to pause.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A&gt;</ph> de la propriété <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> peut être utilisée pour déterminer si le planificateur n'a plus de travail ou s'il a été interrompu par une demande de suspension.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>The <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> instance returned by the <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> property is the only method which can be called while the <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> is in the Running state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A&gt;</ph> de l'instance <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> retournée par la propriété <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.Controller%2A&gt;</ph> est la seule méthode qui peut être appelée lorsque <ph id="ph4">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> se trouve dans l'état En cours d'exécution.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>All other methods will throw an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if called.Given the rules for how <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> transitions from one state to another, the public notion of Running and Paused can be defined as follows:</source>
          <target state="translated">Toutes les autres méthodes lèveront une <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>. En prenant en considération les règles déterminant la manière dont <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance&gt;</ph> passe d'un état à un autre, les états En cours d'exécution et Suspendu peuvent être définis de la manière suivante :</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Running – The state between a call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> and the next WorkflowInstance.OnNotify*.</source>
          <target state="translated">En cours d'exécution - État entre un appel à <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph> et le WorkflowInstance.OnNotify suivant.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Paused – The state between the last WorkflowInstance.OnNotify* and the next call to <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</source>
          <target state="translated">Suspendu - État entre le dernier WorkflowInstance.OnNotify et le prochain appel à <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Activité qui définit le flux de travail.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> avec la définition de flux de travail spécifiée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The activity that defines the workflow.</source>
          <target state="translated">Activité qui définit le flux de travail.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identité de définition.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">Initialise une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph> avec la définition de flux de travail et l'identité de définition spécifiées.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Période après laquelle la tentative doit être abandonnée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de suivi est terminée.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to begin sending pending tracking records to tracking participants asynchronously.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour commencer à envoyer de façon asynchrone des enregistrements de suivi en attente aux participants de suivi.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">État de l'opération de suivi actuelle.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> instance for this <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Obtient l'instance <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl" /&gt;</ph> de ce <ph id="ph2">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Controller">
          <source>The controller instance for this workflow instance.</source>
          <target state="translated">Instance de contrôleur de cette instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>Gets or sets the definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'identité de la définition de l'<ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity">
          <source>The definition identity of <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</source>
          <target state="translated">Identité de la définition de <ph id="ph1">&lt;see cref="T:System.Activities.Hosting.WorkflowInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.DisposeExtensions">
          <source>Calls <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> on all extensions that implement <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</source>
          <target state="translated">Appelle la méthode <ph id="ph1">&lt;see cref="M:System.Disposable.Dispose" /&gt;</ph> sur toutes les extensions qui implémentent <ph id="ph2">&lt;see cref="T:System.IDisposable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous track operation.</source>
          <target state="translated">État de l'opération de suivi asynchrone.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to end the track operation.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour terminer l'opération de suivi.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>The time period after which to abort the attempt.</source>
          <target state="translated">Période après laquelle la tentative doit être abandonnée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)">
          <source>Called by the workflow runtime to send pending tracking records to tracking participants.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour envoyer les enregistrements de suivi en attente aux participants de suivi.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The deserialized runtime state.</source>
          <target state="translated">État d'exécution désérialisé.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Retrieves the list of activity that is blocking the update of the workflow.</source>
          <target state="translated">Récupère la liste d'activité qui bloque la mise à jour du flux de travail.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The list of activity that is blocking the update.</source>
          <target state="translated">Liste d'activité qui bloque la mise à jour.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Type de l’extension à rechercher.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>Returns an extension of the specified type.</source>
          <target state="translated">Retourne une extension du type spécifié.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtension``1">
          <source>An extension of the specified type.</source>
          <target state="translated">Extension du type spécifié.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>The type of the extension to find.</source>
          <target state="translated">Type de l’extension à rechercher.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>Returns all extensions found for the specified type.</source>
          <target state="translated">Retourne toutes les extensions trouvées pour le type spécifié.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.GetExtensions``1">
          <source>All extensions found for the specified type.</source>
          <target state="translated">Toutes les extensions trouvées pour le type spécifié.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>Gets or sets the root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Obtient ou définit l’environnement racine pour les arguments et les variables de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>The root environment for the workflow instance’s arguments and variables.</source>
          <target state="translated">Environnement racine pour les arguments et les variables de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si cette propriété est définie après l’initialisation de l’instance de workflow et <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> retourne <ph id="ph2">`true`</ph>, un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>Gets the unique identifier for the workflow instance.</source>
          <target state="translated">Obtient l'identificateur unique de l'instance de workflow.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.Id">
          <source>The unique identifier for the workflow instance.</source>
          <target state="translated">Identificateur unique de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Activities.Hosting.WorkflowInstance">
          <source>Called by the host to initialize the workflow instance.</source>
          <target state="translated">Appelée par l'hôte pour initialiser l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">État à l'exécution utilisé pour exécuter le flux de travail.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state.</source>
          <target state="translated">Appelée par l'hôte pour initialiser l'instance de flux de travail avec l'état à l'exécution du flux de travail.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The input parameters to the workflow, keyed by argument name.</source>
          <target state="translated">Les paramètres d’entrée du flux de travail, indexés par nom d’argument.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>The list of workflow execution properties.</source>
          <target state="translated">Liste des propriétés d'exécution du flux de travail.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})">
          <source>Called by the host to initialize the workflow instance with the argument values and execution properties.</source>
          <target state="translated">Appelée par l’hôte pour initialiser l’instance de flux de travail avec les valeurs d’argument et les propriétés d’exécution.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The run-time state used to execute the workflow.</source>
          <target state="translated">État à l'exécution utilisé pour exécuter le flux de travail.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Called by the host to initialize the workflow instance with the workflow run-time state and update map.</source>
          <target state="translated">Appelée par l'hôte pour initialiser l'instance de flux de travail avec l'état à l'exécution et la carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source>Gets a value that indicates whether the workflow instance has been initialized.</source>
          <target state="translated">Obtient une valeur qui indique si l'instance de flux de travail a été initialisée.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance has been initialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instance de flux de travail a été initialisée ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The instance keys to associate with this workflow instance.</source>
          <target state="translated">Clés d'instance à associer à cette instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation completes.</source>
          <target state="translated">Méthode à appeler lorsque l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that new instance keys should be associated with this instance.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte que les nouvelles clés d'instance doivent être associées à cette instance.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous associate keys operation.</source>
          <target state="translated">Référence à l'opération d'association de clés asynchrone.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The method to be called when the track operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de suivi est terminée.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The information about the asynchronous operation.</source>
          <target state="translated">Informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask host to flush pending tracking records to tracking participants.</source>
          <target state="translated">Appel asynchrone pour demander à l'hôte de vider les enregistrements de suivi vers les participants de suivi.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)">
          <source>The status of the current track operation.</source>
          <target state="translated">État de l'opération de suivi actuelle.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de persistance est terminée.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>Asynchronous call to ask the host to persist the workflow.</source>
          <target state="translated">Appel asynchrone pour demander à l'hôte de rendre le flux de travail persistant.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the current persist operation.</source>
          <target state="translated">Référence à l'opération de persistance actuelle.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Signet à reprendre.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The data to be passed to the activity that created the <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</source>
          <target state="translated">Données à passer à l'activité ayant créé <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de reprise doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de reprise est terminée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is beginning.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de reprise de signet commence.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous resume operation.</source>
          <target state="translated">Référence à l'opération de reprise asynchrone.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>The list of keys to disassociate.</source>
          <target state="translated">Liste de clés à dissocier.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})">
          <source>Called by the workflow runtime to notify the host that a certain set of instance keys should no longer be associated with this instance.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'un certain jeu de clés d'instance ne doit plus être associé à cette instance.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>The reference to the asynchronous associate keys operation.</source>
          <target state="translated">Référence à l'opération d'association de clés asynchrone.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that an associate keys operation is complete.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération d'association de clés est terminée.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>The status of the asynchronous flush tracking records operation.</source>
          <target state="translated">État de l'opération asynchrone de vidage des enregistrements de suivi.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host when the flush tracking records operation is complete.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte lorsque l'opération de vidage des enregistrements de suivi est terminée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>The reference to the asynchronous persist operation.</source>
          <target state="translated">Référence à l'opération de persistance asynchrone.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a persist operation is complete.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de persistance est terminée.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>The reference to the asynchronous resume bookmark operation.</source>
          <target state="translated">Référence à l'opération de reprise de signet asynchrone.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>Called by the workflow runtime to notify the host that a resume bookmark operation is complete.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération de reprise de signet est terminée.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the result of a <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph> resume operation.</source>
          <target state="translated">L'une des valeurs d'énumération qui indique le résultat d'une opération de reprise de <ph id="ph1">&lt;see cref="T:System.Activities.Bookmark" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused">
          <source>Called by the workflow runtime to notify the host that the workflow instance has transitioned from the running state to the paused state.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte que l'instance de flux de travail est passée de l'état En cours d'exécution à l'état Suspendu.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unhandled exception.</source>
          <target state="translated">Exception non gérée.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The activity that threw the exception.</source>
          <target state="translated">Activité ayant levé l'exception.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>The unique identifier of the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> representing the activity that threw the exception.</source>
          <target state="translated">Identificateur unique de l'<ph id="ph1">&lt;see cref="T:System.Activities.ActivityInstance" /&gt;</ph> représentant l'activité ayant levé l'exception.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)">
          <source>Called by the workflow runtime to notify the host an unhandled exception has occurred in the workflow instance.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une exception non gérée s'est produite dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>The reason for aborting the workflow instance.</source>
          <target state="translated">Raison de l'abandon de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Called by the workflow runtime to notify the host that an abort operation has been requested for the workflow instance.</source>
          <target state="translated">Appelée par l'exécution du flux de travail pour notifier l'hôte qu'une opération d'abandon a été demandée pour l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>Once <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called, most <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph> APIs except <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph> will throw an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Une fois la méthode <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> appelée, la plupart des API <ph id="ph2">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl&gt;</ph>, à l'exception de <ph id="ph3">&lt;xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A&gt;</ph>, lèvent une <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)">
          <source>It is expected that after <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph> is called a host will trend toward a state in which it can satisfy the abort.</source>
          <target state="translated">Il est attendu qu'après l'appel à <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A&gt;</ph>, un hôte se dirige vers un état dans lequel il peut satisfaire l'abandon.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>The extension manager to register.</source>
          <target state="translated">Gestionnaire d’extensions à inscrire.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Called by the host to register the specified extension manager, validate that all required extensions are present, and to initialize the collection of extensions to be used.</source>
          <target state="translated">Appelée par l’hôte pour inscrire le gestionnaire d’extensions spécifié, vérifier que toutes les extensions obligatoires sont présentes et initialiser la collection d’extensions à utiliser.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions are keyed by type, and a host provided extension will always be used if provided.</source>
          <target state="translated">Les extensions sont indexées par type, et une extension fournie par un hôte est toujours utilisée si elle est fournie.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the runtime type of the object as the type key.</source>
          <target state="translated">Les extensions ajoutées via <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> utilisent le type de runtime de l'objet comme clé de type.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extensions providers added through <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> use the decared type T of the Func<ph id="ph2">\&lt;</ph>T&gt; as the type key.</source>
          <target state="translated">Fournisseurs d’extensions ajoutés via <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A&gt;</ph> utilisent le type T déclaré de Func<ph id="ph2">\&lt;</ph>T &gt; comme clé de type.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>Extension providers contributed by activities through the various *ActivityMetadata.AddDefaultExtensionProvider methods are dropped if a host extension exists for the declared type or if there is a broader type provided through AddDefaultExtensionProvider (ex.</source>
          <target state="translated">Les fournisseurs d’extensions fournis par les activités via les différentes méthodes *ActivityMetadata.AddDefaultExtensionProvider sont supprimés si une extension hôte existe pour le type déclaré ou s’il existe un type plus général fourni via AddDefaultExtensionProvider (par exemple,</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>if Func<ph id="ph1">\&lt;</ph>StreamWriter&gt; is provided and Func<ph id="ph2">\&lt;</ph>TextWriter&gt; is provided, only Func<ph id="ph3">\&lt;</ph>StreamWriter&gt; will be kept).</source>
          <target state="translated">Si la fonction<ph id="ph1">\&lt;</ph>StreamWriter &gt; est fournie et Func<ph id="ph2">\&lt;</ph>TextWriter &gt; est fourni, seul Func<ph id="ph3">\&lt;</ph>StreamWriter &gt; seront conservés).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)">
          <source>If an extension does not exist in the collection that is required by an activity (expressed by calling *ActivityMetadata.RequireExtension) a <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> is thrown.</source>
          <target state="translated">Si une extension n'existe pas dans la collection requise par une activité (exprimée en appelant * ActivityMetadata.RequireExtension), une <ph id="ph1">&lt;xref:System.Activities.ValidationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source>Gets a value that indicates whether the host supports the association of <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a run-time instance.</source>
          <target state="translated">Obtient une valeur qui indique si l'hôte prend en charge l'association de <ph id="ph1">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> avec une instance à l'exécution.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the host supports the association of <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> with a workflow instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'hôte prend en charge l'association de <ph id="ph2">&lt;see cref="P:System.Runtime.Persistence.InstanceView.InstanceKeys" /&gt;</ph> avec une instance de flux de travail ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> used for scheduling the workflow instance.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.Threading.SynchronizationContext" /&gt;</ph> utilisé pour planifier l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>The synchronization context used for scheduling the workflow instance.</source>
          <target state="translated">Contexte de synchronisation utilisé pour la planification de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext">
          <source>If this property is set after the workflow instance is initialized and <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si cette propriété est définie après l’initialisation de l’instance de workflow et <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> retourne <ph id="ph2">`true`</ph>, un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>Throws an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> if the workflow instance has been initialized, as determined by <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</source>
          <target state="translated">Lève une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> si l'instance de flux de travail a été initialisée, comme déterminé par <ph id="ph2">&lt;see cref="P:System.Activities.Hosting.WorkflowInstance.IsReadOnly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly">
          <source>If <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, then an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si <ph id="ph1">&lt;xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A&gt;</ph> retourne <ph id="ph2">`true`</ph>, alors un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>Gets the workflow definition of the workflow instance.</source>
          <target state="translated">Obtient la définition de flux de travail de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition">
          <source>The workflow definition of the workflow instance.</source>
          <target state="translated">Définition de flux de travail de l'instance de flux de travail.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>