<Type Name="OdbcCommand" FullName="System.Data.Odbc.OdbcCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a32b600318bf52a50113d6d84e46df94ff49822a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30390493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommand extends System.Data.Common.DbCommand implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommand" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommand&#xA;Inherits DbCommand&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommand sealed : System::Data::Common::DbCommand, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommand</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RecordsAffected")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une instruction SQL ou une procédure stockée à exécuter par rapport à une source de données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Data.Odbc.OdbcCommand> classe fournit les méthodes suivantes pour exécuter des commandes sur une source de données :  
  
|Élément|Description |  
|----------|-----------------|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>|Exécute les commandes qui retournent des lignes.|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>|Exécute des commandes telles que les instructions SQL INSERT, DELETE, UPDATE et ensemble.|  
|<xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>|Récupère une valeur unique, par exemple, une valeur d’agrégation, à partir d’une base de données.|  
  
 Vous pouvez réinitialiser le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété et la réutilisation du <xref:System.Data.Odbc.OdbcCommand> objet. Toutefois, vous devez fermer le <xref:System.Data.Odbc.OdbcDataReader> avant de pouvoir exécuter une commande nouvelle ou précédente.  
  
 Si l’exécution de la commande provoque une erreur fatale <xref:System.Data.Odbc.OdbcException> comme un niveau de gravité SQL Server de 20 ou plus, <xref:System.Data.Odbc.OdbcConnection> peut se fermer. L'utilisateur peut toutefois rouvrir la connexion et continuer.  
  
   
  
## Examples  
 L’exemple suivant utilise <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  
  
 [!code-csharp[Classic WebData OdbcCommand#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcCommand#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommand/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
    <altmember cref="T:System.Data.Odbc.OdbcConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur de base Initialise tous les champs à leurs valeurs par défaut. Le tableau suivant montre les valeurs initiales des propriétés d’une instance de <xref:System.Data.Odbc.OdbcCommand>.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|Une chaîne vide (« »)|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcDataAdapter" />
        <altmember cref="T:System.Data.Odbc.OdbcConnection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cmdText">Texte de la requête.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcCommand" /> avec le texte de la requête.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="cmdText">Texte de la requête.</param>
        <param name="connection">Objet <see cref="T:System.Data.Odbc.OdbcConnection" /> qui représente la connexion à une source de données.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcCommand" /> avec le texte de la requête et un objet <see cref="T:System.Data.Odbc.OdbcConnection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string cmdText, class System.Data.Odbc.OdbcConnection connection, class System.Data.Odbc.OdbcTransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cmdText As String, connection As OdbcConnection, transaction As OdbcTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommand(System::String ^ cmdText, System::Data::Odbc::OdbcConnection ^ connection, System::Data::Odbc::OdbcTransaction ^ transaction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cmdText" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
        <Parameter Name="transaction" Type="System.Data.Odbc.OdbcTransaction" />
      </Parameters>
      <Docs>
        <param name="cmdText">Texte de la requête.</param>
        <param name="connection">Objet <see cref="T:System.Data.Odbc.OdbcConnection" /> qui représente la connexion à une source de données.</param>
        <param name="transaction">Transaction dans laquelle la <see cref="T:System.Data.Odbc.OdbcCommand" /> s’exécute.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Odbc.OdbcCommand" /> avec le texte de la requête, un objet <see cref="T:System.Data.Odbc.OdbcConnection" /> et la <see cref="P:System.Data.Odbc.OdbcCommand.Transaction" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés d’une instance de cette implémentation de la <xref:System.Data.Odbc.OdbcCommand>.  
  
|Propriétés|Valeur initiale|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcCommand.CommandText%2A>|`cmdText`|  
|<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|30|  
|<xref:System.Data.Odbc.OdbcCommand.CommandType%2A>|`Text`|  
|<xref:System.Data.Odbc.OdbcCommand.Connection%2A>|Un nouveau <xref:System.Data.Odbc.OdbcConnection> qui est la valeur pour le `connection` paramètre.|  
  
 Vous pouvez modifier la valeur de l’un de ces paramètres en définissant la propriété associée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public override void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tente d'annuler l'exécution de <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sans effet s'il n'y a rien à annuler. Toutefois, si une commande est en cours et que la tentative d’annulation échoue, aucune exception n’est générée.  
  
 Pour annuler une requête sur un thread, <xref:System.Data.Odbc.OdbcCommand.Cancel%2A> doit être appelée à partir d’un autre thread. Étant donné que vous ne pouvez pas exécuter des commandes asynchrone avec <xref:System.Data.Odbc.OdbcCommand>, pour annuler une commande à partir d’un autre thread, un thread doit s’exécuter de façon synchrone. Cela signifie que le <xref:System.Data.Odbc.OdbcCommand> objet doit être accessible à partir de deux threads.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public override string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcCommandTextEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la instruction SQL ou procédure stockée à exécuter par rapport à la source de données.</summary>
        <value>Instruction SQL ou procédure stockée à exécuter. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.IDbCommand.CommandType%2A> est définie sur `StoredProcedure`, le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété doit être définie à l’aide de séquences d’échappement des procédures stockées ODBC standard. Définition de la <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> pour le nom de la procédure stockée ne fonctionne pas comme il le fait pour d’autres fournisseurs de données .NET Framework.  
  
 Plusieurs fonctionnalités de langage, comme les jointures externes et des appels de fonction scalaire, sont généralement implémentées par des sources de données. Même la syntaxe de ces fonctionnalités est généralement spécifique à la source de données. Par conséquent, ODBC définit des séquences d’échappement qui contiennent la syntaxe standard pour les fonctionnalités de langage suivantes :  
  
-   Littéraux de date, time, timestamp et datetime l’intervalle  
  
-   Fonctions scalaires, par exemple, numérique, chaîne et fonctions de conversion de type de données  
  
-   COMME caractère d’échappement de prédicat  
  
-   Jointures externes  
  
-   Appels de procédure  
  
 La séquence d’échappement utilisée par ODBC est la suivante :  
  
```  
{extension}  
```  
  
 Cette séquence d’échappement est reconnue et analysée par les pilotes ODBC. Ensuite, elles remplacent les séquences d’échappement avec grammaire spécifique à la source de données.  
  
 Une procédure est un objet exécutable stocké dans la source de données. Il n’est généralement une ou plusieurs instructions SQL qui ont été précompilées. La séquence d’échappement pour appeler une procédure est  
  
```  
{[?=]call procedure-name[([parameter][,[parameter]]...)]}  
```  
  
 où `procedure-name` Spécifie le nom d’une procédure et `parameter` spécifie un paramètre de procédure.  
  
 La commande exécute cette procédure stockée lorsque vous appelez une des méthodes Execute (par exemple, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> ou <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).  
  
 Vous ne pouvez pas définir le <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> et <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriétés si la connexion en cours effectue une opération d’exécution ou d’extraction.  
  
 Le fournisseur.NET ne prend pas en charge les paramètres nommés pour passer des paramètres à une instruction SQL ou une procédure stockée appelée par une <xref:System.Data.Odbc.OdbcCommand> lorsque <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> a la valeur `Text`. Dans ce cas, l’espace réservé de point d’interrogation ( ?) doit être utilisé. Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 Par conséquent, l’ordre dans lequel <xref:System.Data.Odbc.OdbcParameter> objets sont ajoutés à la <xref:System.Data.Odbc.OdbcParameterCollection> doit directement correspondre à la position de l’espace réservé de point d’interrogation pour le paramètre.  
  
 Si un paramètre contient une valeur null, le fournisseur de données .NET Framework pour ODBC toujours lie ce paramètre, mais utilise un paramètre par défaut, s’il a été défini à l’aide de SQL_DEFAULT_PARAM, au lieu de la valeur null. Par exemple, le <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, null, 2}  
```  
  
 passé dans le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété :  
  
```  
{call sp(?, ?, ?)}  
```  
  
 provoque le fournisseur de données .NET Framework pour ODBC lie le premier paramètre de la valeur 1, le troisième paramètre à la valeur 2 et le deuxième paramètre en tant que SQL_DEFAULT_PARAM. Toutefois, ce comportement dépend du pilote. Si le pilote ne prend pas en charge cette fonctionnalité, simplement ne passez pas une valeur pour le paramètre. Par exemple, utiliser le <xref:System.Data.Odbc.OdbcParameterCollection>:  
  
```  
{1, 2}  
```  
  
 et définissez la <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> suivante à la propriété :  
  
```  
{call sp(?, null, ?)}  
```  
  
> [!NOTE]
>  Si un paramètre est omis, la virgule qui le sépare des autres paramètres doit encore apparaître. Si un paramètre d’entrée ou d’entrée/sortie est omis, la procédure utilise la valeur par défaut du paramètre. Une autre façon de spécifier que la valeur par défaut d’un paramètre d’entrée ou d’entrée/sortie est la valeur de la mémoire tampon de longueur / d’indicateur lié au paramètre à SQL_DEFAULT_PARAM.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.Connection" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public override int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée d'attente qui précède le moment où il est mis fin à une tentative d'exécution d'une commande et où une erreur est générée.</summary>
        <value>Durée en secondes d'attente de l'exécution de la commande. La valeur par défaut est 30 secondes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une valeur de zéro (0) n’indique aucune limite au délai d’attente, au lieu d’aucun temps d’attente et doit donc être évitée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public override System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique la manière dont la propriété <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> est interprétée.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.CommandType" />. La valeur par défaut est <see langword="Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> est définie sur `StoredProcedure`, vous devez définir le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété à la syntaxe d’appel ODBC complète. La commande exécute cette procédure stockée lorsque vous appelez l’une des méthodes Execute (par exemple, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> ou <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).  
  
 Le <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> et <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriétés ne peut pas être définies si la connexion en cours effectue une opération d’exécution ou d’extraction.  
  
 Le fournisseur de données .NET Framework pour ODBC ne prend pas en charge le passage nommé paramètres d’une instruction SQL ou une procédure stockée appelée par un <xref:System.Data.Odbc.OdbcCommand>. Dans les deux cas, utilisez l’espace réservé de point d’interrogation ( ?). Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 L’ordre dans lequel <xref:System.Data.Odbc.OdbcParameter> objets sont ajoutés à la <xref:System.Data.Odbc.OdbcParameterCollection> doit directement correspondre à la position de l’espace réservé de point d’interrogation pour le paramètre.  
  
> [!NOTE]
>  Le fournisseur de données .NET Framework pour ODBC ne prend pas en charge la <xref:System.Data.CommandType> paramètre `TableDirect`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur n’est pas un <see cref="T:System.Data.CommandType" /> valide.</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As OdbcConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcConnection ^ Connection { System::Data::Odbc::OdbcConnection ^ get(); void set(System::Data::Odbc::OdbcConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DbConnectionEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Data.Odbc.OdbcConnection" /> utilisé par cette instance du <see cref="T:System.Data.Odbc.OdbcCommand" />.</summary>
        <value>Connexion à une source de données. La valeur par défaut est une valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas définir le <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, et <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriétés si la connexion en cours effectue une opération d’exécution ou d’extraction.  
  
 Si vous définissez <xref:System.Data.Odbc.OdbcCommand.Connection%2A> alors qu'une transaction est en cours et que la propriété <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> n'a pas la valeur null, un objet <xref:System.InvalidOperationException> est généré. Si vous définissez <xref:System.Data.Odbc.OdbcCommand.Connection%2A> une fois que la transaction a été validée ou restaurée et le <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> propriété n’est pas null, le <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> est ensuite définie sur une valeur null.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> a été modifiée alors qu'une transaction était en cours.</exception>
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandText" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />
        <altmember cref="P:System.Data.Odbc.OdbcCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CreateDbParameter">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameter CreateDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbParameter CreateDbParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateDbParameter" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbParameter () As DbParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbParameter ^ CreateDbParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As OdbcParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une nouvelle instance d’un objet <see cref="T:System.Data.Odbc.OdbcParameter" />.</summary>
        <returns>Objet <see cref="T:System.Data.Odbc.OdbcParameter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Odbc.OdbcCommand.CreateParameter%2A> méthode est une version fortement typée de <xref:System.Data.IDbCommand.CreateParameter%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbConnection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbConnection DbConnection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbConnection DbConnection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbConnection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbConnection As DbConnection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbConnection ^ DbConnection { System::Data::Common::DbConnection ^ get(); void set(System::Data::Common::DbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbParameterCollection">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbParameterCollection DbParameterCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbParameterCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DbParameterCollection As DbParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbParameterCollection ^ DbParameterCollection { System::Data::Common::DbParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction DbTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbTransaction DbTransaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DbTransaction" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Property DbTransaction As DbTransaction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Data::Common::DbTransaction ^ DbTransaction { System::Data::Common::DbTransaction ^ get(); void set(System::Data::Common::DbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeVisible">
      <MemberSignature Language="C#" Value="public override bool DesignTimeVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeVisible" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.DesignTimeVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DesignTimeVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignOnly(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'objet Command doit être visible dans un contrôle d'interface personnalisé.</summary>
        <value>**true**, si l’objet command doit être visible dans un contrôle ; sinon **false**. La valeur par défaut est **true**.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDbDataReader">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbDataReader ExecuteDbDataReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDbDataReader (behavior As CommandBehavior) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbDataReader ^ ExecuteDbDataReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public override int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute une instruction SQL sur <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> et retourne le nombre de lignes affectées.</summary>
        <returns>Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande. Pour tous les autres types d'instructions, la valeur de retour est -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> pour effectuer des opérations de catalogue (par exemple, interrogation de la structure d’une base de données ou création d’objets de base de données tels que des tables) ou pour modifier les données dans une base de données, sans utiliser un <xref:System.Data.DataSet>, à l’exécution de mise à jour, insérer, ou supprimer instructions.  
  
 Vous pouvez également utiliser <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> pour exécuter plusieurs instructions SQL si le pilote ODBC sous-jacent prend en charge cette fonctionnalité. Dans ce cas, la valeur de retour est le nombre de lignes affectées par toutes les instructions dans la commande.  
  
 Bien que <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> retourne aucune ligne, les paramètres de sortie ou de retourner des valeurs mappées aux paramètres sont remplis avec des données.  
  
 Pour les instructions UPDATE, INSERT et DELETE, les valeurs de retour représentent le nombre de lignes affectées par la commande. Pour tous les autres types d'instructions, la valeur de retour est -1. En cas d’annulation, la valeur de retour est également -1.  
  
 Lorsqu’un déclencheur existe sur une table et les données est ajouté ou modifié dans la table, la valeur de retour inclut le nombre de lignes affectées par l’opération d’insertion ou de mise à jour et le nombre de lignes affectées par l’ou les déclencheurs.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La connexion n’existe pas.  
  
 - ou -  
  
 La connexion n'est pas ouverte.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> à <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> et génère <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envoie <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> à <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> et génère <see cref="T:System.Data.Odbc.OdbcDataReader" />.</summary>
        <returns>Objet <see cref="T:System.Data.Odbc.OdbcDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez définir le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété à la syntaxe d’appel ODBC complète pour les procédures stockées. La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.  
  
 Alors que le <xref:System.Data.Odbc.OdbcDataReader> est utilisé, associé <xref:System.Data.Odbc.OdbcConnection> est occupé à servir le <xref:System.Data.Odbc.OdbcDataReader>. Dans cet état, aucune autre opération ne peut être effectuée sur la <xref:System.Data.Odbc.OdbcConnection> autre que sa fermeture. C’est le cas jusqu'à ce que le <xref:System.Data.Odbc.OdbcDataReader.Close%2A> méthode de la <xref:System.Data.Odbc.OdbcDataReader> est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As OdbcDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">Une des valeurs de <see langword="System.Data.CommandBehavior" />.</param>
        <summary>Envoie <see cref="P:System.Data.Odbc.OdbcCommand.CommandText" /> à <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> et génère <see cref="T:System.Data.Odbc.OdbcDataReader" /> à l'aide d'une valeur <see langword="CommandBehavior" />.</summary>
        <returns>Objet <see cref="T:System.Data.Odbc.OdbcDataReader" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous pensez que votre instruction SQL pour retourner une seule ligne, en spécifiant `SingleRow` comme le <xref:System.Data.CommandBehavior> valeur peut améliorer les performances de l’application.  
  
 Vous devez définir le <xref:System.Data.Odbc.OdbcCommand.CommandText%2A> propriété à la syntaxe d’appel ODBC complète pour les procédures stockées. La commande exécute cette procédure stockée lorsque vous appelez <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.  
  
 Le <xref:System.Data.Odbc.OdbcDataReader> prend en charge un mode spécial qui permet la lecture efficace de valeurs binaires volumineux. Pour plus d’informations, consultez la `SequentialAccess` définition pour <xref:System.Data.CommandBehavior>.  
  
> [!NOTE]
>  Le `SequentialAccess` valeur <xref:System.Data.CommandBehavior> n’est ne pas une limitation de configuration ; cela signifie simplement que vous aura un accès séquentiel au moins à la <xref:System.Data.Odbc.OdbcDataReader>. Par exemple, lorsque vous utilisez le pilote ODBC de SQL Server dans `SequentialAccess` mode, vous pouvez toujours déplacer vers la première colonne d’un <xref:System.Data.Odbc.OdbcDataReader> ligne après avoir parcouru toutes les autres colonnes séquentiellement.  
  
 Alors que le <xref:System.Data.Odbc.OdbcDataReader> est utilisé, associé <xref:System.Data.Odbc.OdbcConnection> est occupé à servir le <xref:System.Data.Odbc.OdbcDataReader>. Dans cet état, aucune autre opération ne peut être effectuée sur la <xref:System.Data.Odbc.OdbcConnection> autre que sa fermeture. C’est le cas jusqu'à ce que vous appeliez la <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=nameWithType> (méthode). Si le <xref:System.Data.Odbc.OdbcDataReader> est créée avec <xref:System.Data.CommandBehavior> la valeur `CloseConnection`, fermeture le <xref:System.Data.Odbc.OdbcDataReader> ferme automatiquement la connexion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public override object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la requête et retourne la première colonne de la première ligne du jeu de résultats retourné par la requête. Les colonnes ou lignes supplémentaires sont ignorées.</summary>
        <returns>La première colonne de la première ligne dans le jeu de résultats, ou une référence null si le jeu de résultats est vide.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> pour récupérer une valeur unique (par exemple, une valeur d’agrégation) à partir d’une source de données. Cela nécessite moins de code que l’utilisation de la <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> (méthode), puis en effectuant les opérations requises pour générer la valeur unique à partir des données retournées par une <xref:System.Data.Odbc.OdbcDataReader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As OdbcParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcParameterCollection ^ Parameters { System::Data::Odbc::OdbcParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient <see cref="T:System.Data.Odbc.OdbcParameterCollection" />.</summary>
        <value>Les paramètres de la procédure stockée ou de l’instruction SQL. La valeur par défaut est une collection vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque <xref:System.Data.Odbc.OdbcCommand.CommandType%2A> a la valeur `Text`, le fournisseur de données .NET Framework pour ODBC ne prend pas en charge le passage nommé paramètres d’une instruction SQL ou une procédure stockée appelée par un <xref:System.Data.Odbc.OdbcCommand>. Dans les deux cas, utilisez l’espace réservé de point d’interrogation ( ?). Exemple :  
  
```  
SELECT * FROM Customers WHERE CustomerID = ?  
```  
  
 L’ordre dans lequel <xref:System.Data.Odbc.OdbcParameter> objets sont ajoutés à la <xref:System.Data.Odbc.OdbcParameterCollection> doit directement correspondre à la position de l’espace réservé de point d’interrogation pour le paramètre dans le texte de commande.  
  
> [!NOTE]
>  Si les paramètres de la collection ne correspondent pas à la configuration requise de la requête à exécuter, une erreur se produise.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Odbc.OdbcParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public override void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une version préparée ou compilée de la commande à la source de données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Odbc.OdbcCommand.Prepare%2A> méthode appelle ODBC `SQLPrepare` (fonction). Selon les capacités du pilote ODBC sous-jacent et de la source de données, les informations sur les paramètres tels que les types de données peuvent être vérifiées lorsque l’instruction est préparée, si tous les paramètres ont été liés, ou lorsqu’elle est exécutée si ce n’est pas tous les paramètres ont été liés. Pour une interopérabilité maximale, une application doit dissocier tous les paramètres appliquaient à une instruction SQL précédente avant de préparer une nouvelle instruction SQL sur le même <xref:System.Data.Odbc.OdbcCommand>. Cela empêche les erreurs provoquées par des informations de paramètre précédent est appliquées à la nouvelle instruction SQL.  
  
 Si vous appelez une méthode Execute après avoir appelé <xref:System.Data.Odbc.OdbcCommand.Prepare%2A>, toute valeur de paramètre est supérieure à la valeur spécifiée par la <xref:System.Data.Odbc.OdbcParameter.Size%2A> propriété sera automatiquement tronquée à la taille d’origine spécifiée du paramètre, et aucune erreur de troncation n’est retournés. .  
  
 Paramètres de sortie (qu’ils soient préparés ou non) doit avoir un type de données spécifié par l’utilisateur. Si vous spécifiez un type de données de longueur variable, vous devez également spécifier la valeur maximale <xref:System.Data.Odbc.OdbcParameter.Size%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> n’est pas défini.  
  
 - ou -  
  
 <see cref="P:System.Data.Odbc.OdbcCommand.Connection" /> ne correspond pas à <see cref="M:System.Data.Odbc.OdbcConnection.Open" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetCommandTimeout">
      <MemberSignature Language="C#" Value="public void ResetCommandTimeout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCommandTimeout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.ResetCommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCommandTimeout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCommandTimeout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rétablit la valeur par défaut de la propriété <see cref="P:System.Data.Odbc.OdbcCommand.CommandTimeout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut de le <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> est de 30 secondes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommand.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.ICloneable.Clone" />.</summary>
        <returns>Nouvelle <see cref="T:System.Object" /> qui est une copie de cette instance.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Odbc.OdbcCommand> est castée en interface <xref:System.ICloneable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcTransaction ^ Transaction { System::Data::Odbc::OdbcTransaction ^ get(); void set(System::Data::Odbc::OdbcTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Data.Odbc.OdbcTransaction" /> dans lequel <see cref="T:System.Data.Odbc.OdbcCommand" /> s'exécute.</summary>
        <value>Élément <see cref="T:System.Data.Odbc.OdbcTransaction" />. La valeur par défaut est une valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous ne pouvez pas définir le <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> propriété si elle est déjà définie sur une valeur spécifique, et la commande est en cours d’exécution. Si vous définissez la propriété de transaction sur une <xref:System.Data.Odbc.OdbcTransaction> objet n’est pas connecté au même <xref:System.Data.Odbc.OdbcConnection> en tant que le <xref:System.Data.Odbc.OdbcCommand> de l’objet, une exception est levée la prochaine fois que vous essayez d’exécuter une instruction.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique comment la méthode **Update** doit appliquer les résultats de la commande à **DataRow**.</summary>
        <value>Une des valeurs de <see cref="T:System.Data.UpdateRowSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut <xref:System.Data.UpdateRowSource> valeur est **les deux** , sauf si la commande est générée automatiquement, comme avec la <xref:System.Data.Odbc.OdbcCommandBuilder>, auquel cas la valeur par défaut est **aucun**.  
  
 Pour plus d’informations sur l’utilisation de la <xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A> propriété, consultez [paramètres DataAdapter](~/docs/framework/data/adonet/dataadapter-parameters.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>