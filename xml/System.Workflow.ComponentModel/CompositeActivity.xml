<Type Name="CompositeActivity" FullName="System.Workflow.ComponentModel.CompositeActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c08541305485405a88224e8657cc2bfed512ce76" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55359159" /></Metadata><TypeSignature Language="C#" Value="public class CompositeActivity : System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompositeActivity extends System.Workflow.ComponentModel.Activity" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.CompositeActivity" />
  <TypeSignature Language="VB.NET" Value="Public Class CompositeActivity&#xA;Inherits Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeActivity : System::Workflow::ComponentModel::Activity" />
  <TypeSignature Language="F#" Value="type CompositeActivity = class&#xA;    inherit Activity" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Activity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(System.Workflow.ComponentModel.Serialization.CompositeActivityTypeDescriptorProvider))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.CompositeActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Serialization.ContentProperty("Activities")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="88a8b-101">Dérivée de <see cref="T:System.Workflow.ComponentModel.Activity" /> qui est la classe de base pour toutes les activités qui en contiennent d'autres.</span><span class="sxs-lookup"><span data-stu-id="88a8b-101">Derivative of <see cref="T:System.Workflow.ComponentModel.Activity" /> that is the base class for all activities that contain other activities.</span></span> <span data-ttu-id="88a8b-102"><see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> est chargée de gérer l'exécution de ses activités enfants.</span><span class="sxs-lookup"><span data-stu-id="88a8b-102">A <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> is responsible for managing the execution of its child activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="88a8b-103"><xref:System.Workflow.ComponentModel.CompositeActivity> gère l'exécution de ses activités enfants à l'aide de méthodes de classe <xref:System.Workflow.ComponentModel.ActivityExecutionContext> et d'événements définis sur la classe <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="88a8b-103">A <xref:System.Workflow.ComponentModel.CompositeActivity> manages the execution of its child activities using <xref:System.Workflow.ComponentModel.ActivityExecutionContext> class methods and events defined on the <xref:System.Workflow.ComponentModel.Activity> class.</span></span>  <span data-ttu-id="88a8b-104">Par exemple, l'exécution d'une activité enfant est planifiée à l'aide de <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> de la classe <xref:System.Workflow.ComponentModel.ActivityExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="88a8b-104">For example, a child activity is scheduled for execution using the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity%2A> of <xref:System.Workflow.ComponentModel.ActivityExecutionContext>.</span></span> <span data-ttu-id="88a8b-105">Une activité <xref:System.Workflow.ComponentModel.CompositeActivity> peut être avertie que l'exécution d'une activité enfant est terminée en s'abonnant à l'événement <xref:System.Workflow.ComponentModel.Activity.Closed> défini sur <xref:System.Workflow.ComponentModel.Activity>.</span><span class="sxs-lookup"><span data-stu-id="88a8b-105">A <xref:System.Workflow.ComponentModel.CompositeActivity> activity can be notified when a child activity completes its execution by subscribing to the <xref:System.Workflow.ComponentModel.Activity.Closed> event defined on <xref:System.Workflow.ComponentModel.Activity>.</span></span>  
  
 <span data-ttu-id="88a8b-106">L'exécution du workflow applique certaines contraintes sur l'exécution de <xref:System.Workflow.ComponentModel.CompositeActivity>, la plus importante d'entre elles étant qu'une activité <xref:System.Workflow.ComponentModel.CompositeActivity> ne peut pas passer à l'état <xref:System.Workflow.ComponentModel.Activity.Closed> tant que l'une des activités enfants se trouve encore dans l'état <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating> ou <xref:System.Workflow.ComponentModel.Activity.Faulting>.</span><span class="sxs-lookup"><span data-stu-id="88a8b-106">The workflow runtime enforces certain constraints on <xref:System.Workflow.ComponentModel.CompositeActivity> execution, the most fundamental of which is that a <xref:System.Workflow.ComponentModel.CompositeActivity> activity cannot move to the <xref:System.Workflow.ComponentModel.Activity.Closed> state if any child activities are still in a <xref:System.Workflow.ComponentModel.Activity.Executing>, <xref:System.Workflow.ComponentModel.Activity.Canceling>, <xref:System.Workflow.ComponentModel.Activity.Compensating>, or <xref:System.Workflow.ComponentModel.Activity.Faulting>, state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88a8b-107">Cet exemple montre un `CompositeActivity` simple qui exécute sa première activité enfant.</span><span class="sxs-lookup"><span data-stu-id="88a8b-107">This example shows a basic `CompositeActivity` that executes its first child activity for execution.</span></span> <span data-ttu-id="88a8b-108">Lorsque l'activité enfant passe à l'état Fermé, l'activité composite est notifiée, puis termine son exécution.</span><span class="sxs-lookup"><span data-stu-id="88a8b-108">When the child activity moves to the Closed state, the composite activity is notified and then completes its execution.</span></span>  
  
```csharp  
public class HasOneChildActivity : CompositeActivity  
{  
    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  
    {  
        Activity child = this.EnabledActivities[0];  
        child.Closed += this.ChildClosed;  
        executionContext.ExecuteActivity(child);  
  
        return ActivityExecutionStatus.Executing;  
    }  
  
    void ChildClosed(object sender, ActivityExecutionStatusChangedEventArgs e)  
    {  
        e.Activity.Closed -= this.ChildClosed;  
        ActivityExecutionContext executionContext = sender as ActivityExecutionContext;  
  
        executionContext.CloseActivity();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88a8b-109">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-109">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88a8b-110">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-110">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity (System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Workflow.ComponentModel.Activity&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (children As IEnumerable(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity(System::Collections::Generic::IEnumerable&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ children);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.CompositeActivity : seq&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; System.Workflow.ComponentModel.CompositeActivity" Usage="new System.Workflow.ComponentModel.CompositeActivity children" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.Generic.IEnumerable&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="children"><span data-ttu-id="88a8b-111"><see cref="T:System.Object" /> implémentant l'interface <see cref="T:System.Collections.IEnumerable" /> avec le type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-111">The <see cref="T:System.Object" /> implementing the <see cref="T:System.Collections.IEnumerable" /> interface with type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="88a8b-112">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> à partir d'un <see cref="T:System.Object" /> qui implémente l'interface <see cref="T:System.Collections.IEnumerable" /> avec le type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-112">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class from an <see cref="T:System.Object" /> which implements the <see cref="T:System.Collections.IEnumerable" /> interface with type <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.CompositeActivity : string -&gt; System.Workflow.ComponentModel.CompositeActivity" Usage="new System.Workflow.ComponentModel.CompositeActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="88a8b-113">Nom de l'instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-113">The name for the instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-114">Initialise une nouvelle instance de la classe <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />, ainsi que le nom de cette activité.</span><span class="sxs-lookup"><span data-stu-id="88a8b-114">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> class, along with the name for that activity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88a8b-115"><paramref name="name" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-115"><paramref name="name" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activities">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityCollection Activities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.ActivityCollection Activities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Activities As ActivityCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::ActivityCollection ^ Activities { System::Workflow::ComponentModel::ActivityCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Activities : System.Workflow.ComponentModel.ActivityCollection" Usage="System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88a8b-116">Obtient l'objet représentant la collection, <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, de toutes les activités enfants.</span><span class="sxs-lookup"><span data-stu-id="88a8b-116">Gets the object representing the collection, <see cref="T:System.Workflow.ComponentModel.ActivityCollection" />, of all child activities.</span></span></summary>
        <value><span data-ttu-id="88a8b-117"><see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> de toutes les activités enfants.</span><span class="sxs-lookup"><span data-stu-id="88a8b-117"><see cref="T:System.Workflow.ComponentModel.ActivityCollection" /> of all child activities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a8b-118">Représente la collection d'activités enfants gérée par l'activité composite.</span><span class="sxs-lookup"><span data-stu-id="88a8b-118">Represents the collection of child activities managed by the composite activity.</span></span> <span data-ttu-id="88a8b-119">Cette collection peut être mise à jour.</span><span class="sxs-lookup"><span data-stu-id="88a8b-119">This collection can be updated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="88a8b-120">Le code suivant affiche la manière de créer des activités et de les ajouter comme enfants à une activité composite et inclut la définition de <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> sur la valeur permissive pour ce type.</span><span class="sxs-lookup"><span data-stu-id="88a8b-120">The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.</span></span>  
  
 <span data-ttu-id="88a8b-121">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Throw (SDK) et provient du fichier ThrowWorkFlow.cs.</span><span class="sxs-lookup"><span data-stu-id="88a8b-121">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="88a8b-122">Pour plus d’informations, consultez [exemple lever](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span><span class="sxs-lookup"><span data-stu-id="88a8b-122">For more information, see [Throw Sample](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyWorkflowChanges">
      <MemberSignature Language="C#" Value="protected void ApplyWorkflowChanges (System.Workflow.ComponentModel.WorkflowChanges workflowChanges);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ApplyWorkflowChanges(class System.Workflow.ComponentModel.WorkflowChanges workflowChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ApplyWorkflowChanges(System::Workflow::ComponentModel::WorkflowChanges ^ workflowChanges);" />
      <MemberSignature Language="F#" Value="member this.ApplyWorkflowChanges : System.Workflow.ComponentModel.WorkflowChanges -&gt; unit" Usage="compositeActivity.ApplyWorkflowChanges workflowChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowChanges" Type="System.Workflow.ComponentModel.WorkflowChanges" />
      </Parameters>
      <Docs>
        <param name="workflowChanges"><span data-ttu-id="88a8b-123"><see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> à appliquer.</span><span class="sxs-lookup"><span data-stu-id="88a8b-123">The <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> to apply.</span></span></param>
        <summary><span data-ttu-id="88a8b-124">Applique le manifeste <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> au paramètre de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-124">Applies the <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> manifest in the parameter to this instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88a8b-125"><paramref name="workflowChanges" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-125"><paramref name="workflowChanges" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanModifyActivities">
      <MemberSignature Language="C#" Value="protected internal bool CanModifyActivities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanModifyActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property CanModifyActivities As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool CanModifyActivities { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanModifyActivities : bool with get, set" Usage="System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88a8b-126">Obtient ou définit une valeur qui contrôle si les activités individuelles au sein de <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> peuvent être modifiées.</span><span class="sxs-lookup"><span data-stu-id="88a8b-126">Gets or sets a value which controls whether the individual activities within <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> can be modified.</span></span></summary>
        <value><span data-ttu-id="88a8b-127"><see langword="true" /> si chaque activité au sein de <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> peut être modifiée ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-127"><see langword="true" /> if the individual activities within <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> can be modified; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="88a8b-128">Le code suivant affiche la manière de créer des activités et de les ajouter comme enfants à une activité composite et inclut la définition de <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> sur la valeur permissive pour ce type.</span><span class="sxs-lookup"><span data-stu-id="88a8b-128">The following code shows how to create activities and add them as children to a composite activity and includes setting the <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> permissive for this type.</span></span>  
  
 <span data-ttu-id="88a8b-129">Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Throw (SDK) et provient du fichier ThrowWorkFlow.cs.</span><span class="sxs-lookup"><span data-stu-id="88a8b-129">This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file.</span></span> <span data-ttu-id="88a8b-130">Pour plus d’informations, consultez [exemple lever](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span><span class="sxs-lookup"><span data-stu-id="88a8b-130">For more information, see [Throw Sample](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).</span></span>  
  
 [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]
 [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="compositeActivity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="88a8b-131"><see langword="true" /> pour libérer les ressources managées et non managées par cette instance et toutes ses activités enfants ; <see langword="false" /> pour libérer uniquement les ressources non managées de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-131"><see langword="true" /> to release both managed and unmanaged resources used by this instance and all child activities of this instance; <see langword="false" /> to release only the unmanaged resources of this instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-132">Appelle <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" /> sur cette instance, et appelle éventuellement <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose" /> sur toutes les activités enfants de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-132">Calls <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" /> on this instance, and optionally calls <see cref="M:System.Workflow.ComponentModel.DependencyObject.Dispose" /> on all child activities of this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a8b-133">Pendant toute la durée de vie d'une activité, plusieurs objets .NET peuvent être créés ou supprimés.</span><span class="sxs-lookup"><span data-stu-id="88a8b-133">Throughout an activity's lifetime, several .NET objects may be created or disposed.</span></span> <span data-ttu-id="88a8b-134">Chaque fois qu'une instance de workflow est déchargée de la mémoire, les objets .NET correspondant aux activités de l'arborescence du workflow sont supprimés (la méthode <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> est appelée sur chaque activité).</span><span class="sxs-lookup"><span data-stu-id="88a8b-134">Every time a workflow instance is unloaded from memory, the .NET objects corresponding to the activities in the workflow tree are disposed (the <xref:System.Workflow.ComponentModel.DependencyObject.Dispose%2A> method is called on each activity).</span></span> <span data-ttu-id="88a8b-135">Lorsque l'instance de workflow est rechargée en mémoire, un nouvel objet .NET est créé pour chaque activité et l'état de l'instance déchargée de la mémoire correspondante lui est assigné.</span><span class="sxs-lookup"><span data-stu-id="88a8b-135">When the workflow instance is loaded back into memory, a new .NET object is created for each activity with the state from the corresponding unload.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnabledActivities">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; EnabledActivities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; EnabledActivities" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnabledActivities As ReadOnlyCollection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ EnabledActivities { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnabledActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" Usage="System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88a8b-136">Obtient la collection en lecture seule qui représente le sous-ensemble des <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> activées.</span><span class="sxs-lookup"><span data-stu-id="88a8b-136">Gets the read-only collection that represents the subset of <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> that are enabled.</span></span></summary>
        <value><span data-ttu-id="88a8b-137">Collection en lecture seule qui représente le sous-ensemble des <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> activées.</span><span class="sxs-lookup"><span data-stu-id="88a8b-137">The read-only collection that represents the subset of <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> that are enabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicActivities">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.Activity[] GetDynamicActivities (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Workflow.ComponentModel.Activity[] GetDynamicActivities(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ GetDynamicActivities(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="member this.GetDynamicActivities : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity[]" Usage="compositeActivity.GetDynamicActivities activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="88a8b-138"><see cref="T:System.Workflow.ComponentModel.Activity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-138">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="88a8b-139">Retourne un tableau qui contient toutes les instances en cours d'exécution de l'activité spécifiée.</span><span class="sxs-lookup"><span data-stu-id="88a8b-139">Returns an array that contains all of the currently executing instances of the specified activity.</span></span></summary>
        <returns><span data-ttu-id="88a8b-140">Un tableau des instances d'activité qui sont en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="88a8b-140">An array of activity instances that are currently executing.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="compositeActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="88a8b-141"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> pour cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-141">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this instance.</span></span></param>
        <param name="exception"><span data-ttu-id="88a8b-142"><see cref="T:System.Exception" /> qui a causé cette erreur.</span><span class="sxs-lookup"><span data-stu-id="88a8b-142">The <see cref="T:System.Exception" /> that caused this fault.</span></span></param>
        <summary><span data-ttu-id="88a8b-143">Appelée lorsqu'une exception est levée dans le contexte de l'exécution de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-143">Called when an exception is raised within the context of the execution of this instance.</span></span></summary>
        <returns><span data-ttu-id="88a8b-144"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> qui résulte d'une tentative d'annulation de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-144">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionStatus" /> that results from an attempt to cancel this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88a8b-145"><paramref name="executionContext" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-145"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="88a8b-146">ou</span><span class="sxs-lookup"><span data-stu-id="88a8b-146">-or-</span></span>

<span data-ttu-id="88a8b-147"><paramref name="exception" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-147"><paramref name="exception" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="compositeActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="88a8b-148"><see cref="T:System.IServiceProvider" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-148">The specified <see cref="T:System.IServiceProvider" />.</span></span></param>
        <summary><span data-ttu-id="88a8b-149">Initialise toutes les activités enfants appropriées de cette instance et le <see cref="T:System.IServiceProvider" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-149">Initializes all appropriate child activities of this instance and the specified <see cref="T:System.IServiceProvider" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88a8b-150"><paramref name="provider" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-150"><paramref name="provider" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeAdd">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityChangeAdd(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity addedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityChangeAdd (executionContext As ActivityExecutionContext, addedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityChangeAdd(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ addedActivity);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChangeAdd : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.OnActivityChangeAdd : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivity.OnActivityChangeAdd (executionContext, addedActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="addedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="88a8b-151"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-151">The specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></param>
        <param name="addedActivity"><span data-ttu-id="88a8b-152"><see cref="T:System.Workflow.ComponentModel.Activity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-152">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="88a8b-153">Appelle lorsqu'une activité est ajoutée.</span><span class="sxs-lookup"><span data-stu-id="88a8b-153">Calls when an activity is added.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="88a8b-154"><paramref name="executionContext" /> est une référence Null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="88a8b-154"><paramref name="executionContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>

<span data-ttu-id="88a8b-155">ou</span><span class="sxs-lookup"><span data-stu-id="88a8b-155">-or-</span></span>

<span data-ttu-id="88a8b-156"><paramref name="addedActivity" /> est une référence Null (<see langword="Nothing" />).</span><span class="sxs-lookup"><span data-stu-id="88a8b-156"><paramref name="addedActivity" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnActivityChangeRemove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivityChangeRemove(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Workflow.ComponentModel.Activity removedActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnActivityChangeRemove (executionContext As ActivityExecutionContext, removedActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnActivityChangeRemove(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, System::Workflow::ComponentModel::Activity ^ removedActivity);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityChangeRemove : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit&#xA;override this.OnActivityChangeRemove : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivity.OnActivityChangeRemove (executionContext, removedActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="removedActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="88a8b-157"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-157">The specified <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" />.</span></span></param>
        <param name="removedActivity"><span data-ttu-id="88a8b-158"><see cref="T:System.Workflow.ComponentModel.Activity" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="88a8b-158">The specified <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <summary><span data-ttu-id="88a8b-159">Appelée lorsqu'une activité est supprimée.</span><span class="sxs-lookup"><span data-stu-id="88a8b-159">Called when an activity is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a8b-160">L'implémentation actuelle ne fournit aucune fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="88a8b-160">Current implementation provides no functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnActivityExecutionContextLoad (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnActivityExecutionContextLoad(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnActivityExecutionContextLoad (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnActivityExecutionContextLoad(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnActivityExecutionContextLoad : IServiceProvider -&gt; unit" Usage="compositeActivity.OnActivityExecutionContextLoad provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="88a8b-161"><see cref="T:System.Object" /> qui implémente <see cref="T:System.IServiceProvider" /> et fournit des services à cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-161">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-162">Appelée par le moteur d'exécution de workflow chaque fois que le <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> de cette activité est chargé.</span><span class="sxs-lookup"><span data-stu-id="88a8b-162">Called by the workflow runtime engine every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this activity is loaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExecutionContextUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnActivityExecutionContextUnload (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnActivityExecutionContextUnload(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnActivityExecutionContextUnload (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnActivityExecutionContextUnload(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.OnActivityExecutionContextUnload : IServiceProvider -&gt; unit" Usage="compositeActivity.OnActivityExecutionContextUnload provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="88a8b-163"><see cref="T:System.Object" /> qui implémente <see cref="T:System.IServiceProvider" /> et fournit des services à cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-163">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-164">Appelée par le moteur d'exécution de workflow chaque fois que le <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> de cette activité est déchargé.</span><span class="sxs-lookup"><span data-stu-id="88a8b-164">Called by the workflow runtime engine every time the <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> for this activity is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanged(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanged (e As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanged(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnListChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivity.OnListChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="88a8b-165">Les <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> diffusés par l'événement.</span><span class="sxs-lookup"><span data-stu-id="88a8b-165">The <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> broadcast by the event.</span></span></param>
        <summary><span data-ttu-id="88a8b-166">Effectue un traitement supplémentaire lorsque la propriété <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> est modifiée.</span><span class="sxs-lookup"><span data-stu-id="88a8b-166">Performs additional processing when the <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnListChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnListChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnListChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnListChanging (e As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnListChanging(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnListChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnListChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivity.OnListChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="88a8b-167"><see cref="T:System.EventArgs" /> relatifs à l'événement.</span><span class="sxs-lookup"><span data-stu-id="88a8b-167"><see cref="T:System.EventArgs" /> relating to the event.</span></span></param>
        <summary><span data-ttu-id="88a8b-168">Événement qui se produit avant une modification des <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> sous-jacentes.</span><span class="sxs-lookup"><span data-stu-id="88a8b-168">Event that occurs before a change being made to the underlying <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWorkflowChangesCompleted">
      <MemberSignature Language="C#" Value="protected internal virtual void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext rootContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnWorkflowChangesCompleted(class System.Workflow.ComponentModel.ActivityExecutionContext rootContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnWorkflowChangesCompleted (rootContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnWorkflowChangesCompleted(System::Workflow::ComponentModel::ActivityExecutionContext ^ rootContext);" />
      <MemberSignature Language="F#" Value="abstract member OnWorkflowChangesCompleted : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit&#xA;override this.OnWorkflowChangesCompleted : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="compositeActivity.OnWorkflowChangesCompleted rootContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="rootContext"><span data-ttu-id="88a8b-169"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associé à cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-169">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> associated with this instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-170">Appelée après que des modifications ont été apportées à la collection <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> de cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-170">Called after changes have been made to the collection <see cref="P:System.Workflow.ComponentModel.CompositeActivity.Activities" /> of this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a8b-171">En cas de substitution dans une classe dérivée, fournit le traitement pour cet événement.</span><span class="sxs-lookup"><span data-stu-id="88a8b-171">When overridden in a derived class, provides processing for this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninitialize">
      <MemberSignature Language="C#" Value="protected internal override void Uninitialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Uninitialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Uninitialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Uninitialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Uninitialize : IServiceProvider -&gt; unit" Usage="compositeActivity.Uninitialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="88a8b-172"><see cref="T:System.Object" /> qui implémente <see cref="T:System.IServiceProvider" /> et fournit des services à cette instance.</span><span class="sxs-lookup"><span data-stu-id="88a8b-172">An <see cref="T:System.Object" /> that implements <see cref="T:System.IServiceProvider" /> and provides services to this instance.</span></span></param>
        <summary><span data-ttu-id="88a8b-173">Appelée par le moteur d'exécution de workflow lorsqu'une activité passe de l'état <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> à l'état <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" />.</span><span class="sxs-lookup"><span data-stu-id="88a8b-173">Called by the workflow runtime engine when an activity transitions into the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" /> state from the <see cref="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" /> state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88a8b-174">Cette méthode est utilisée pour le nettoyage d'activité tel que la suppression des propriétés de dépendance et des files d'attente.</span><span class="sxs-lookup"><span data-stu-id="88a8b-174">This method is used for activity cleanup, such as clearing dependency properties and deleting queues.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>