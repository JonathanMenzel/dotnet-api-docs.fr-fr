<Type Name="X509CertificateInitiatorServiceCredential" FullName="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7361cb345690bb8777bb79d8b7578f89dbfef58a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37454437" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateInitiatorServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateInitiatorServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateInitiatorServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateInitiatorServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente les paramètres utilisés par le service pour valider le certificat présenté par les clients. Il contient également un certificat pour le service à utiliser pour le chiffrement des réponses ou des rappels pour les clients lorsque le mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" /> est utilisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le certificat défini dans cette classe est utilisé pour chiffrer des messages au client uniquement pour les liaisons configurées avec le mode d'authentification de sécurité de message `MutualCertificateDuplex`.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ClientCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ClientCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ClientCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ClientCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ClientCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ClientCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les paramètres utilisés pour valider le certificat présenté par le client pendant l'authentification.</summary>
        <value>Paramètres utilisés pour valider le certificat présenté par le client pendant l'authentification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Le code suivant montre comment utiliser cette propriété pour définir les propriétés de l'authentification du certificat.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Certificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le certificat à utiliser en mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" />.</summary>
        <value>La <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> à utiliser pour chiffrer les messages envoyés au client par le service en cas de transport duplex non corrélé si le mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" /> est utilisé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée pour les liaisons configurées au mode de sécurité de message lorsque le mode d'authentification de sécurité de message `MutualCertificateDuplex` est utilisé.  
  
   
  
## Examples  
 Le code suivant montre comment utiliser cette propriété pour obtenir le certificat.  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Une tentative de définition d'informations d'identification en lecture seule a été effectuée.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit le certificat à utiliser pour chiffrer les messages envoyés au client par le service. Ce paramètre est utilisé uniquement par les liaisons configurées avec le mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nom unique de l'objet.</param>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <summary>Vous permet de spécifier le certificat à utiliser pour chiffrer les messages pour le client en spécifiant le nom unique du sujet. Ce paramètre est utilisé uniquement par les liaisons configurées avec le mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations sur le paramètre `subjectName`, consultez <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName%2A>.  
  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local (par défaut).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel.  
  
 Si l'application cliente s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application cliente s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 Le code suivant montre comment utiliser cette méthode pour définir le certificat.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCertificate">
      <MemberSignature Language="C#" Value="public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateInitiatorServiceCredential.SetCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <param name="findType">Le type de recherche X.509 à exécuter.</param>
        <param name="findValue">Valeur à rechercher dans le magasin de certificats X.509.</param>
        <summary>Spécifie le certificat à utiliser pour chiffrer les messages pour le client. Ce paramètre est utilisé uniquement par les liaisons configurées avec le mode d'authentification de sécurité de message <see langword="MutualCertificateDuplex" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local (par défaut).  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel.  
  
 Si l'application s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Les valeurs pour `findType` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 L'énumération la plus communément utilisée est <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, qui recherche dans le magasin spécifié (non sensible à la casse) le nom de sujet des certificats. Cette recherche peut être imprécise. Si aucun certificat ou plusieurs certificats qui correspondent aux critères sont trouvés, l'exception <xref:System.InvalidOperationException> est levée.  
  
   
  
## Examples  
 Le code suivant montre comment utiliser cette méthode pour définir le certificat.  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>