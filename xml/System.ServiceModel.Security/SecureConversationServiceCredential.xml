<Type Name="SecureConversationServiceCredential" FullName="System.ServiceModel.Security.SecureConversationServiceCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="185684a83acafb2c3f829a18fe5352be0e197322" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34313809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecureConversationServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecureConversationServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.SecureConversationServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecureConversationServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecureConversationServiceCredential sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1a7f2-101">Fournit les informations d'identification pour un service de conversation sécurisée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a7f2-101">Provides credential settings for a secure conversation service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a7f2-102">Les conversations sécurisées impliquent l'échange de plusieurs messages et utilisent un jeton de contexte de sécurité (SCT, Security Context Token) pour garantir la sécurité.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-102">Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</span></span> <span data-ttu-id="1a7f2-103">Le SCT est partagé parmi les correspondants communiquant pendant la durée de vie d'une session de communication.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-103">The SCT is shared among the communicating parties for the lifetime of a communications session.</span></span> <span data-ttu-id="1a7f2-104">Un service peut publier deux types de SCT différents :</span><span class="sxs-lookup"><span data-stu-id="1a7f2-104">A service can issue two different kinds of SCTs:</span></span>  
  
-   <span data-ttu-id="1a7f2-105">Le premier est un SCT basé sur session qui contient un identificateur unique. Les messages retiennent uniquement l'identificateur, puis le service maintient un cache de mappage d'état qui assure le mappage entre les identificateurs SCT et le contenu (tel que revendications, clés de sécurité, etc.).</span><span class="sxs-lookup"><span data-stu-id="1a7f2-105">The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</span></span> <span data-ttu-id="1a7f2-106">Un client valide doit envoyer une annulation de SCT pour aider le service à optimiser les ressources de cache.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-106">A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</span></span> <span data-ttu-id="1a7f2-107">Si vous instanciez cette classe en appelant <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> avec le paramètre `requireCancellation` égal à `true`, le SCT est publié de cette manière.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-107">If you instantiate this class by calling <xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A> with the `requireCancellation` parameter equal to `true`, the SCT is issued in this manner.</span></span>  
  
-   <span data-ttu-id="1a7f2-108">Le second est un SCT autonome qui réside dans un cookie sur le client.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-108">The second is a self-contained SCT that resides in a cookie on the client.</span></span> <span data-ttu-id="1a7f2-109">Ce SCT contient les toutes les informations d'état et ne requiert donc aucune gestion d'état par le service ni d'annulation de SCT par le client.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-109">This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</span></span> <span data-ttu-id="1a7f2-110">On parle parfois de SCT en « mode cookie ».</span><span class="sxs-lookup"><span data-stu-id="1a7f2-110">This is sometimes called a "cookie-mode" SCT.</span></span> <span data-ttu-id="1a7f2-111">Comme le SCT contient toutes les informations d'état, sa taille est plus grande que dans le cas basé sur session.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-111">Because the SCT contains the entire state information, its size is larger than in the session-based case.</span></span> <span data-ttu-id="1a7f2-112">Avec des SCT basé sur session, le service stocke la plupart des informations d'état.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-112">With session-based SCTs, the service stores much of the state information.</span></span> <span data-ttu-id="1a7f2-113">Toutefois, comme il est autonome, il peut être utilisé pendant toute la durée de vie du service et survivre à l'arrêt du service et à sa reprise.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-113">However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SecurityContextClaimTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Type&gt; SecurityContextClaimTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Type&gt; SecurityContextClaimTypes" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextClaimTypes As Collection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ SecurityContextClaimTypes { System::Collections::ObjectModel::Collection&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a7f2-114">Obtient une collection des revendications <see cref="T:System.Type" /> pour la sérialisation de cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a7f2-114">Gets a collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a7f2-115">Collection des revendications <see cref="T:System.Type" /> pour la sérialisation de cookies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a7f2-115">A collection of the <see cref="T:System.Type" /> claims for cookie serialization.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a7f2-116">Pour sérialiser des revendications dans des cookies SCT, Windows Communication Foundation (WCF) utilise <xref:System.Runtime.Serialization.DataContractSerializer> comme la valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-116">To serialize claims into SCT cookies, Windows Communication Foundation (WCF) uses <xref:System.Runtime.Serialization.DataContractSerializer> as the default.</span></span> <span data-ttu-id="1a7f2-117">Étant donné que la ressource de revendication est extensible, WCF vous permet de fournir une liste de types de ressources connues.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-117">Because the Claim resource is extensible, WCF allows you to provide a list of known resource types.</span></span> <span data-ttu-id="1a7f2-118">Cela aide <xref:System.Runtime.Serialization.DataContractSerializer> pendant la désérialisation des revendications dans le cookie afin qu'il puisse retourner les objets fortement typés d'origine.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-118">This assists the <xref:System.Runtime.Serialization.DataContractSerializer> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a7f2-119">Le code suivant montre comment obtenir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-119">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityStateEncoder">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecurityStateEncoder SecurityStateEncoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityStateEncoder As SecurityStateEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::SecurityStateEncoder ^ SecurityStateEncoder { System::ServiceModel::Security::SecurityStateEncoder ^ get(); void set(System::ServiceModel::Security::SecurityStateEncoder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecurityStateEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a7f2-120">Obtient ou définit un <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> personnalisé pour encoder et décoder la sérialisation de cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a7f2-120">Gets or sets a customized <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> for encoding and decoding cookie serialization.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a7f2-121">Objet <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> qui est une personnalisation de <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a7f2-121">A <see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /> object, which is a customization of <see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a7f2-122">En « mode cookie », un service publie au client un jeton de contexte de sécurité (SCT) sous la forme d'un cookie au client afin qu'il n'ait à gérer aucun état de sécurité.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-122">In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</span></span> <span data-ttu-id="1a7f2-123">Le client renvoie le cookie dans le message de demande afin que le service sache comment déprotéger et vérifier le message de demande.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-123">The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</span></span> <span data-ttu-id="1a7f2-124">Comme le SCT est souvent transmis sur un réseau non sécurisé, il doit être protégé.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-124">Because the SCT is often transmitted over a non-secure network, it must be protected.</span></span>  
  
 <span data-ttu-id="1a7f2-125">Par défaut, Windows Communication Foundation (WCF) utilise le <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> classe pour protéger le cookie à l’aide de l’API de Protection des données (DPAPI).</span><span class="sxs-lookup"><span data-stu-id="1a7f2-125">By default, Windows Communication Foundation (WCF) uses the <xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder> class to protect the cookie using the Data Protection API (DPAPI).</span></span> <span data-ttu-id="1a7f2-126">Pour que DPAPI fonctionne dans un environnement de batterie de serveurs Web, tous les services principaux doivent s'exécuter comme même compte d'utilisateur de domaine.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-126">For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</span></span> <span data-ttu-id="1a7f2-127">En d'autres termes, si le service est hébergé sur le Web, le processus de travail IIS (Internet Information Services) doit être configuré pour s'exécuter comme utilisateur de domaine.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-127">In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</span></span>  
  
 <span data-ttu-id="1a7f2-128">Cette propriété vous permet d'utiliser un <xref:System.ServiceModel.Security.SecurityStateEncoder> personnalisé pour chiffrer et déchiffrer le cookie et ne pas dépendre de DPAPI.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-128">This property enables you to use a customized <xref:System.ServiceModel.Security.SecurityStateEncoder> to encrypt and decrypt the cookie and not depend on DPAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a7f2-129">Le code suivant montre comment définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="1a7f2-129">The following code shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_SecureConversationServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_secureconversationservicecredential/cs/source.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>