<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d93ced277dfc8b3409ce8c8f02fee220bd9bc8cc" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792926" /></Metadata><TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509CertificateRecipientClientCredential sealed" />
  <TypeSignature Language="F#" Value="type X509CertificateRecipientClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente les paramètres utilisés par le client pour valider le certificat présenté par le service à l'aide de l'authentification SSL. Il contient également tout certificat pour le service explicitement configuré sur le client à utiliser pour chiffrer des messages au service à l'aide de la sécurité de message.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par la propriété <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> dans la classe <xref:System.ServiceModel.Description.ClientCredentials>.  
  
   
  
## Examples  
 Ce code montre une méthode de création d'une instance de cette classe.  
  
 [!code-csharp[c_CreateSTS#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c_CreateSTS#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ Authentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les paramètres utilisés pour valider le certificat de service obtenu à l'aide de l'authentification SSL.</summary>
        <value>Paramètres utilisés pour valider le certificat de service obtenu à l'aide de l'authentification SSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> représente les paramètres utilisés par le proxy client pour authentifier des certificats de service obtenus à l'aide de la négociation SSL/TLS.  
  
   
  
## Examples  
 Ce code montre comment accéder à cette propriété.  
  
 [!code-csharp[c_CreateSTS#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultCertificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ DefaultCertificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); void set(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCertificate : System.Security.Cryptography.X509Certificates.X509Certificate2 with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le certificat par défaut à utiliser pour le service.</summary>
        <value>Certificat par défaut à utiliser pour le service.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour les liaisons qui utilisent la sécurité de message basée sur des certificats, ce certificat est utilisé pour chiffrer les messages au service et doit être utilisé par le service pour signer les réponses au client.  
  
   
  
## Examples  
 Ce code montre comment accéder à cette propriété.  
  
 [!code-csharp[c_CreateSTS#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScopedCertificates As Dictionary(Of Uri, X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ ScopedCertificates { System::Collections::Generic::Dictionary&lt;Uri ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopedCertificates : System.Collections.Generic.Dictionary&lt;Uri, System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un certificat étendu à utiliser pour représenter le service avec lequel le client communique.</summary>
        <value>Certificat étendu à utiliser pour représenter le service avec lequel le client communique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété permet au client de configurer le certificat de service à utiliser en fonction de l'URL du service avec lequel il communique. Ceci s'avère particulièrement utile dans les scénarios de jeton émis dans lesquels un client peut communiquer avec plusieurs services (autant le service final que les services de jeton de sécurité intermédiaire). Pour les liaisons qui utilisent la sécurité de message basée sur des certificats, ce certificat est utilisé pour chiffrer les messages au service et doit être utilisé par le service pour signer les réponses au client.  
  
 Le certificat par défaut est utilisé si une liaison requiert un certificat pour le service et qu'aucun certificat spécifique à l'URL du service n'est trouvé dans les `ScopedCertificates`.  
  
   
  
## Examples  
 Ce code montre comment définir cette propriété.  
  
 [!code-csharp[c_CreateSTS#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Spécifie le certificat par défaut à utiliser pour le service.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ces méthodes obtiennent un certificat du magasin de l'emplacement spécifié qui correspond aux paramètres spécifiés.  
  
 Pour les liaisons qui utilisent la sécurité de message basée sur des certificats, ce certificat est utilisé pour chiffrer les messages au service et doit être utilisé par le service pour signer les réponses au client.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (subjectName, storeLocation, storeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">Nom unique de l'objet.</param>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat de service.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <summary>Spécifie le certificat par défaut à utiliser pour le service. Pour les liaisons qui utilisent la sécurité de message basée sur des certificats, ce certificat est utilisé pour chiffrer les messages au service et doit être utilisé par le service pour signer les réponses au client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode obtient un certificat du magasin de l'emplacement spécifié qui correspond au paramètre `subjectName`.  
  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel (valeur par défaut).  
  
 Si l'application s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 Le code suivant utilise cette méthode pour spécifier un certificat X.509 à utiliser.  
  
 [!code-csharp[c_CreateSTS#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDefaultCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue);" />
      <MemberSignature Language="F#" Value="member this.SetDefaultCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetDefaultCertificate (storeLocation, storeName, findType, findValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat de service.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <param name="findType">Le type de recherche X.509 à exécuter.</param>
        <param name="findValue">Valeur à rechercher dans le magasin de certificats X.509.</param>
        <summary>Spécifie le certificat par défaut à utiliser pour le service. Pour les liaisons qui utilisent la sécurité de message basée sur des certificats, ce certificat est utilisé pour chiffrer les messages au service et doit être utilisé par le service pour signer les réponses au client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode obtient un certificat du magasin de l'emplacement spécifié qui correspond aux paramètres `findType` et `findValue`.  
  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel (valeur par défaut).  
  
 Si l'application s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Les valeurs pour `findType` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 L'énumération la plus communément utilisée est <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, qui recherche dans le magasin spécifié (non sensible à la casse) le nom de sujet des certificats. Cette recherche peut être imprécise. Si aucun certificat ou plusieurs certificats qui correspondent aux critères sont trouvés, l'exception <xref:System.InvalidOperationException> est levée.  
  
   
  
## Examples  
 Le code suivant utilise cette méthode pour spécifier un certificat X.509 à utiliser.  
  
 [!code-csharp[c_CreateSTS#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit un certificat d'un magasin et le stocke dans une collection indexée par l'URL qui définit la portée.</summary>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::String ^ subjectName, System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : string * System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (subjectName, storeLocation, storeName, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">Le nom de sujet complet.</param>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat de service.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <param name="targetService">L'URL qui définit la portée.</param>
        <summary>Définit un certificat par nom de sujet, emplacement de magasin de certificats et nom de magasin de certificats, et le stocke dans une collection à utiliser pour l'URL qui définit la portée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel (valeur par défaut).  
  
 Si l'application s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
   
  
## Examples  
 Ce code montre comment appeler cette méthode.  
  
 [!code-csharp[c_CreateSTS#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="subjectName" /> ou <paramref name="targetService" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScopedCertificate(System::Security::Cryptography::X509Certificates::StoreLocation storeLocation, System::Security::Cryptography::X509Certificates::StoreName storeName, System::Security::Cryptography::X509Certificates::X509FindType findType, System::Object ^ findValue, Uri ^ targetService);" />
      <MemberSignature Language="F#" Value="member this.SetScopedCertificate : System.Security.Cryptography.X509Certificates.StoreLocation * System.Security.Cryptography.X509Certificates.StoreName * System.Security.Cryptography.X509Certificates.X509FindType * obj * Uri -&gt; unit" Usage="x509CertificateRecipientClientCredential.SetScopedCertificate (storeLocation, storeName, findType, findValue, targetService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">L'emplacement du magasin de certificats que le service utilise pour obtenir le certificat de service.</param>
        <param name="storeName">Le nom du magasin de certificats X.509 à ouvrir.</param>
        <param name="findType">Le type de recherche X.509 à exécuter.</param>
        <param name="findValue">Valeur à rechercher dans le magasin de certificats X.509.</param>
        <param name="targetService">L'URL qui définit la portée.</param>
        <summary>Définit un certificat par emplacement de magasin de certificats, nom de magasin de certificats, type de recherche X.509 et valeur à rechercher, et les stocke dans une collection à utiliser pour l'URL qui définit la portée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les valeurs pour `storeLocation` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreLocation> :  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> : le magasin de certificats assigné à l'ordinateur local.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> : le magasin de certificats utilisé par l'utilisateur actuel (valeur par défaut).  
  
 Si l'application s'exécute sous un compte système, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. Si l'application s'exécute sous un compte d'utilisateur, le certificat se trouve généralement dans <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Les valeurs pour `storeName` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.StoreName>.  
  
 Les valeurs pour `findType` sont incluses dans l'énumération <xref:System.Security.Cryptography.X509Certificates.X509FindType>.  
  
 L'énumération la plus communément utilisée est <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, qui recherche dans le magasin spécifié (non sensible à la casse) le nom de sujet des certificats. Cette recherche peut être imprécise. Si aucun certificat ou plusieurs certificats qui correspondent aux critères sont trouvés, <xref:System.InvalidOperationException> est levé.  
  
   
  
## Examples  
 Ce code montre comment appeler cette méthode.  
  
 [!code-csharp[c_CreateSTS#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c_CreateSTS#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="findValue" /> ou <paramref name="targetService" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A tenté de définir quand les informations d'identification sont en lecture seule.</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property SslCertificateAuthentication As X509ServiceCertificateAuthentication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ SslCertificateAuthentication { System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ get(); void set(System::ServiceModel::Security::X509ServiceCertificateAuthentication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslCertificateAuthentication : System.ServiceModel.Security.X509ServiceCertificateAuthentication with get, set" Usage="System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le validateur de certificat SSL à utiliser.</summary>
        <value>Instance de <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété vous permet d’utiliser WCF X509CertificateValidator pour valider un certificat de serveur sur un client WCF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>