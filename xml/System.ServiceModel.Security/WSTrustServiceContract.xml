<Type Name="WSTrustServiceContract" FullName="System.ServiceModel.Security.WSTrustServiceContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d9c1cf93230c050d7d7afde561cfd9b76237fe9d" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48639089" /></Metadata><TypeSignature Language="C#" Value="public class WSTrustServiceContract : System.ServiceModel.Description.IContractBehavior, System.ServiceModel.Description.IWsdlExportExtension, System.ServiceModel.Security.IWSTrust13AsyncContract, System.ServiceModel.Security.IWSTrust13SyncContract, System.ServiceModel.Security.IWSTrustFeb2005AsyncContract, System.ServiceModel.Security.IWSTrustFeb2005SyncContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSTrustServiceContract extends System.Object implements class System.ServiceModel.Description.IContractBehavior, class System.ServiceModel.Description.IWsdlExportExtension, class System.ServiceModel.Security.IWSTrust13AsyncContract, class System.ServiceModel.Security.IWSTrust13SyncContract, class System.ServiceModel.Security.IWSTrustFeb2005AsyncContract, class System.ServiceModel.Security.IWSTrustFeb2005SyncContract" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.WSTrustServiceContract" />
  <TypeSignature Language="VB.NET" Value="Public Class WSTrustServiceContract&#xA;Implements IContractBehavior, IWsdlExportExtension, IWSTrust13AsyncContract, IWSTrust13SyncContract, IWSTrustFeb2005AsyncContract, IWSTrustFeb2005SyncContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSTrustServiceContract : System::ServiceModel::Description::IContractBehavior, System::ServiceModel::Description::IWsdlExportExtension, System::ServiceModel::Security::IWSTrust13AsyncContract, System::ServiceModel::Security::IWSTrust13SyncContract, System::ServiceModel::Security::IWSTrustFeb2005AsyncContract, System::ServiceModel::Security::IWSTrustFeb2005SyncContract" />
  <TypeSignature Language="F#" Value="type WSTrustServiceContract = class&#xA;    interface IWSTrustFeb2005SyncContract&#xA;    interface IWSTrust13SyncContract&#xA;    interface IWSTrustFeb2005AsyncContract&#xA;    interface IWSTrust13AsyncContract&#xA;    interface IWsdlExportExtension&#xA;    interface IContractBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IContractBehavior</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IWSTrust13AsyncContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IWSTrust13SyncContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IWSTrustFeb2005AsyncContract</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IWSTrustFeb2005SyncContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Name="SecurityTokenService", Namespace="http://schemas.microsoft.com/ws/2008/06/identity/securitytokenservice")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définition de l’implémentation du contrat de service WS-Trust.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémente les interfaces de contrat de service suivantes :  
  
-   <xref:System.ServiceModel.Security.IWSTrustFeb2005SyncContract>  
  
-   <xref:System.ServiceModel.Security.IWSTrust13SyncContract>  
  
-   <xref:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract>  
  
-   <xref:System.ServiceModel.Security.IWSTrust13AsyncContract>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSTrustServiceContract (System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration securityTokenServiceConfiguration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.#ctor(System.IdentityModel.Configuration.SecurityTokenServiceConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSTrustServiceContract(System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ securityTokenServiceConfiguration);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.WSTrustServiceContract : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration -&gt; System.ServiceModel.Security.WSTrustServiceContract" Usage="new System.ServiceModel.Security.WSTrustServiceContract securityTokenServiceConfiguration" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityTokenServiceConfiguration" Type="System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" />
      </Parameters>
      <Docs>
        <param name="securityTokenServiceConfiguration">Objet de configuration qui initialise cette instance.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.WSTrustServiceContract" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.AddBindingParameters : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="wSTrustServiceContract.AddBindingParameters (contractDescription, endpoint, bindingParameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="contractDescription">Description de contrat à modifier.</param>
        <param name="endpoint">Point de terminaison à modifier.</param>
        <param name="bindingParameters">Objets que requièrent les éléments de liaison pour prendre en charge le comportement.</param>
        <summary>Configure tous les éléments de liaison pour prendre en charge le comportement de contrat.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime clientRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime clientRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyClientBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::ClientRuntime ^ clientRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit&#xA;override this.ApplyClientBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.ClientRuntime -&gt; unit" Usage="wSTrustServiceContract.ApplyClientBehavior (contractDescription, endpoint, clientRuntime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="clientRuntime" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription">Description de contrat auquel l’extension est destinée.</param>
        <param name="endpoint">Point de terminaison.</param>
        <param name="clientRuntime">Exécution du client.</param>
        <summary>Description de contrat auquel l’extension est destinée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.DispatchRuntime dispatchRuntime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint, System::ServiceModel::Dispatcher::DispatchRuntime ^ dispatchRuntime);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.DispatchRuntime -&gt; unit&#xA;override this.ApplyDispatchBehavior : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint * System.ServiceModel.Dispatcher.DispatchRuntime -&gt; unit" Usage="wSTrustServiceContract.ApplyDispatchBehavior (contractDescription, endpoint, dispatchRuntime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatchRuntime" Type="System.ServiceModel.Dispatcher.DispatchRuntime" />
      </Parameters>
      <Docs>
        <param name="contractDescription">Description de contrat à modifier.</param>
        <param name="endpoint">Point de terminaison qui expose le contrat.</param>
        <param name="dispatchRuntime">Exécution de répartiteur qui contrôle l'exécution de service.</param>
        <summary>Implémente une modification ou une extension du client sur l’intégralité d’un contrat.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDispatchRequest">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginDispatchRequest (System.ServiceModel.Security.DispatchContext dispatchContext, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginDispatchRequest(class System.ServiceModel.Security.DispatchContext dispatchContext, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginDispatchRequest(System.ServiceModel.Security.DispatchContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginDispatchRequest(System::ServiceModel::Security::DispatchContext ^ dispatchContext, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginDispatchRequest : System.ServiceModel.Security.DispatchContext * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginDispatchRequest : System.ServiceModel.Security.DispatchContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginDispatchRequest (dispatchContext, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatchContext" Type="System.ServiceModel.Security.DispatchContext" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dispatchContext">Définit les paramètres de requête à traiter et expose les propriétés qui déterminent l’action et le message de réponse.</param>
        <param name="asyncCallback">Rappel asynchrone facultatif à appeler quand le dispatch est terminé.</param>
        <param name="asyncState">Objet fourni par l’utilisateur qui distingue cette requête de dispatch asynchrone des autres requêtes.</param>
        <summary>Démarre un appel asynchrone à <see cref="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui représente l'opération asynchrone. Utilisé comme entrée pour la méthode <see cref="M:System.ServiceModel.Security.WSTrustServiceContract.EndDispatchRequest(System.IAsyncResult)" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginProcessCore (System.ServiceModel.Channels.Message requestMessage, System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, string requestAction, string responseAction, string trustNamespace, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginProcessCore(class System.ServiceModel.Channels.Message requestMessage, class System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, class System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, string requestAction, string responseAction, string trustNamespace, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginProcessCore (requestMessage As Message, requestSerializer As WSTrustRequestSerializer, responseSerializer As WSTrustResponseSerializer, requestAction As String, responseAction As String, trustNamespace As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginProcessCore(System::ServiceModel::Channels::Message ^ requestMessage, System::IdentityModel::Protocols::WSTrust::WSTrustRequestSerializer ^ requestSerializer, System::IdentityModel::Protocols::WSTrust::WSTrustResponseSerializer ^ responseSerializer, System::String ^ requestAction, System::String ^ responseAction, System::String ^ trustNamespace, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginProcessCore : System.ServiceModel.Channels.Message * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * string * string * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginProcessCore : System.ServiceModel.Channels.Message * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * string * string * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginProcessCore (requestMessage, requestSerializer, responseSerializer, requestAction, responseAction, trustNamespace, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="requestSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" />
        <Parameter Name="responseSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" />
        <Parameter Name="requestAction" Type="System.String" />
        <Parameter Name="responseAction" Type="System.String" />
        <Parameter Name="trustNamespace" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestMessage">Message de demande entrant.</param>
        <param name="requestSerializer">Sérialiseur de requêtes WS-Trust.</param>
        <param name="responseSerializer">Sérialiseur de réponses WS-Trust.</param>
        <param name="requestAction">Action SOAP de requête.</param>
        <param name="responseAction">Action SOAP de réponse.</param>
        <param name="trustNamespace">URI d’espace de noms de la version WS-Trust de la requête entrante.</param>
        <param name="callback">Rappel qui est appelé une fois l’appel asynchrone terminé.</param>
        <param name="state">Objet qui contient les informations d’état de cet appel asynchrone.</param>
        <summary>Gère un appel asynchrone au service STS.</summary>
        <returns>IAsyncResult à repasser à la méthode End pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L’un des arguments est null.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13Cancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13Cancel (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13Cancel(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13Cancel (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13Cancel(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13Cancel : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13Cancel : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13Cancel (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 1.3 Cancel.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13CancelResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13CancelResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13CancelResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13CancelResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13CancelResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13CancelResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13CancelResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13CancelResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust 1.3 RSTR/Cancel.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13Issue">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13Issue (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13Issue(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13Issue (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13Issue(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13Issue : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13Issue : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13Issue (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust 1.3 Issue.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13IssueResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13IssueResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13IssueResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13IssueResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13IssueResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13IssueResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13IssueResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13IssueResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust 1.3 RSTR/Issue.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13Renew">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13Renew (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13Renew(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13Renew (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13Renew(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13Renew : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13Renew : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13Renew (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust 1.3 Renew.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13RenewResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13RenewResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13RenewResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13RenewResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13RenewResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13RenewResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13RenewResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13RenewResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust 1.3 RSTR/Renew.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13Validate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13Validate (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13Validate(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13Validate (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13Validate(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13Validate : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13Validate : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13Validate (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust 1.3 Validate.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrust13ValidateResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrust13ValidateResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrust13ValidateResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrust13ValidateResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrust13ValidateResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrust13ValidateResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrust13ValidateResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrust13ValidateResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.BeginTrust13ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust 1.3 RSTR/Validate.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005Cancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005Cancel (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005Cancel(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005Cancel (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005Cancel(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005Cancel : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005Cancel : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005Cancel (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Cancel(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 Cancel.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005CancelResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005CancelResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005CancelResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005CancelResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005CancelResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005CancelResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005CancelResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005CancelResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 RSTR/Cancel.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005Issue">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005Issue (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005Issue(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005Issue (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005Issue(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005Issue : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005Issue : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005Issue (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Issue(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust Feb 2005 Issue.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005IssueResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005IssueResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005IssueResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005IssueResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005IssueResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005IssueResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005IssueResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005IssueResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 RSTR/Issue.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005Renew">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005Renew (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005Renew(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005Renew (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005Renew(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005Renew : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005Renew : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005Renew (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Renew(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust Feb 2005 Renew.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005RenewResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005RenewResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005RenewResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005RenewResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005RenewResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005RenewResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005RenewResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005RenewResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 RSTR/Renew.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005Validate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005Validate (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005Validate(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005Validate (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005Validate(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005Validate : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005Validate : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005Validate (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005Validate(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 Validate.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTrustFeb2005ValidateResponse">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTrustFeb2005ValidateResponse (System.ServiceModel.Channels.Message request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginTrustFeb2005ValidateResponse(class System.ServiceModel.Channels.Message request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTrustFeb2005ValidateResponse (request As Message, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginTrustFeb2005ValidateResponse(System::ServiceModel::Channels::Message ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginTrustFeb2005ValidateResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginTrustFeb2005ValidateResponse : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="wSTrustServiceContract.BeginTrustFeb2005ValidateResponse (request, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.BeginTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Message de demande entrant.</param>
        <param name="callback">Rappel à appeler quand l’opération asynchrone se termine.</param>
        <param name="state">Objet qui contient l’état asynchrone.</param>
        <summary>Traite un appel asynchrone au message WS-Trust Feb 2005 RSTR/Validate.</summary>
        <returns><see cref="T:System.IAsyncResult" /> à repasser à la méthode End correspondante pour terminer l’appel asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDispatchContext">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Security.DispatchContext CreateDispatchContext (System.ServiceModel.Channels.Message requestMessage, string requestAction, string responseAction, string trustNamespace, System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext serializationContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Security.DispatchContext CreateDispatchContext(class System.ServiceModel.Channels.Message requestMessage, string requestAction, string responseAction, string trustNamespace, class System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, class System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext serializationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.CreateDispatchContext(System.ServiceModel.Channels.Message,System.String,System.String,System.String,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDispatchContext (requestMessage As Message, requestAction As String, responseAction As String, trustNamespace As String, requestSerializer As WSTrustRequestSerializer, responseSerializer As WSTrustResponseSerializer, serializationContext As WSTrustSerializationContext) As DispatchContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Security::DispatchContext ^ CreateDispatchContext(System::ServiceModel::Channels::Message ^ requestMessage, System::String ^ requestAction, System::String ^ responseAction, System::String ^ trustNamespace, System::IdentityModel::Protocols::WSTrust::WSTrustRequestSerializer ^ requestSerializer, System::IdentityModel::Protocols::WSTrust::WSTrustResponseSerializer ^ responseSerializer, System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ serializationContext);" />
      <MemberSignature Language="F#" Value="abstract member CreateDispatchContext : System.ServiceModel.Channels.Message * string * string * string * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.ServiceModel.Security.DispatchContext&#xA;override this.CreateDispatchContext : System.ServiceModel.Channels.Message * string * string * string * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext -&gt; System.ServiceModel.Security.DispatchContext" Usage="wSTrustServiceContract.CreateDispatchContext (requestMessage, requestAction, responseAction, trustNamespace, requestSerializer, responseSerializer, serializationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.DispatchContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="requestAction" Type="System.String" />
        <Parameter Name="responseAction" Type="System.String" />
        <Parameter Name="trustNamespace" Type="System.String" />
        <Parameter Name="requestSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" />
        <Parameter Name="responseSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" />
        <Parameter Name="serializationContext" Type="System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" />
      </Parameters>
      <Docs>
        <param name="requestMessage">Message de demande entrant.</param>
        <param name="requestAction">L’action SOAP de la requête.</param>
        <param name="responseAction">Action SOAP par défaut de la réponse.</param>
        <param name="trustNamespace">URI d’espace de noms de la version WS-Trust de la requête entrante.</param>
        <param name="requestSerializer"><see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" /> utilisé pour désérialiser les messages RST entrants.</param>
        <param name="responseSerializer"><see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" /> utilisé pour désérialiser les messages RSTR entrants.</param>
        <param name="serializationContext"><see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" /> à utiliser lors de la désérialisation des messages entrants.</param>
        <summary>Crée un objet <see cref="T:System.ServiceModel.Security.DispatchContext" /> en vue de la méthode <see cref="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Security.DispatchContext" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSerializationContext">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext CreateSerializationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext CreateSerializationContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.CreateSerializationContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSerializationContext () As WSTrustSerializationContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Protocols::WSTrust::WSTrustSerializationContext ^ CreateSerializationContext();" />
      <MemberSignature Language="F#" Value="abstract member CreateSerializationContext : unit -&gt; System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext&#xA;override this.CreateSerializationContext : unit -&gt; System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" Usage="wSTrustServiceContract.CreateSerializationContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet <see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" /> en utilisant les informations de résolution locales du WSTrustServiceClient.</summary>
        <returns><see cref="T:System.IdentityModel.Protocols.WSTrust.WSTrustSerializationContext" /> initialisé avec les informations de résolution actuelles.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRequest">
      <MemberSignature Language="C#" Value="protected virtual void DispatchRequest (System.ServiceModel.Security.DispatchContext dispatchContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchRequest(class System.ServiceModel.Security.DispatchContext dispatchContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchRequest(System::ServiceModel::Security::DispatchContext ^ dispatchContext);" />
      <MemberSignature Language="F#" Value="abstract member DispatchRequest : System.ServiceModel.Security.DispatchContext -&gt; unit&#xA;override this.DispatchRequest : System.ServiceModel.Security.DispatchContext -&gt; unit" Usage="wSTrustServiceContract.DispatchRequest dispatchContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatchContext" Type="System.ServiceModel.Security.DispatchContext" />
      </Parameters>
      <Docs>
        <param name="dispatchContext">Définit les paramètres de requête à traiter et expose les propriétés qui déterminent l’action et le message de réponse.</param>
        <summary>Traite un message de requête WS-Trust, et détermine éventuellement le message de réponse approprié et l’action WS-Addressing pour le message de réponse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDispatchRequest">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Security.DispatchContext EndDispatchRequest (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Security.DispatchContext EndDispatchRequest(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndDispatchRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndDispatchRequest (ar As IAsyncResult) As DispatchContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Security::DispatchContext ^ EndDispatchRequest(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndDispatchRequest : IAsyncResult -&gt; System.ServiceModel.Security.DispatchContext&#xA;override this.EndDispatchRequest : IAsyncResult -&gt; System.ServiceModel.Security.DispatchContext" Usage="wSTrustServiceContract.EndDispatchRequest ar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.DispatchContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar"><see cref="T:System.IAsyncResult" /> retourné par l’appel à la méthode <see cref="M:System.ServiceModel.Security.WSTrustServiceContract.BeginDispatchRequest(System.ServiceModel.Security.DispatchContext,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine un appel asynchrone à <see cref="M:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest(System.ServiceModel.Security.DispatchContext)" />.</summary>
        <returns><see cref="T:System.ServiceModel.Security.DispatchContext" /> qui expose des propriétés qui déterminent l’action et le message de réponse.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndProcessCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Channels.Message EndProcessCore (IAsyncResult ar, string requestAction, string responseAction, string trustNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndProcessCore(class System.IAsyncResult ar, string requestAction, string responseAction, string trustNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndProcessCore(System.IAsyncResult,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndProcessCore (ar As IAsyncResult, requestAction As String, responseAction As String, trustNamespace As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Channels::Message ^ EndProcessCore(IAsyncResult ^ ar, System::String ^ requestAction, System::String ^ responseAction, System::String ^ trustNamespace);" />
      <MemberSignature Language="F#" Value="abstract member EndProcessCore : IAsyncResult * string * string * string -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndProcessCore : IAsyncResult * string * string * string -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndProcessCore (ar, requestAction, responseAction, trustNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
        <Parameter Name="requestAction" Type="System.String" />
        <Parameter Name="responseAction" Type="System.String" />
        <Parameter Name="trustNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ar"><see cref="T:System.IAsyncResult" /> qui a été retourné par l’appel à la méthode Begin asynchrone.</param>
        <param name="requestAction">Action SOAP de la requête.</param>
        <param name="responseAction">Action SOAP de la réponse.</param>
        <param name="trustNamespace">URI de l’espace de noms de la version WS-Trust actuelle.</param>
        <summary>Effectue un appel asynchrone au STS.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RST sérialisé.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L’un des arguments est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13Cancel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13Cancel (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13Cancel(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Cancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13Cancel (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13Cancel(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13Cancel : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13Cancel : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13Cancel ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Cancel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Effectue un appel asynchrone au message WS-Trust 1.3 Cancel.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13CancelResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13CancelResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13CancelResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13CancelResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13CancelResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13CancelResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13CancelResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13CancelResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13CancelResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13CancelResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone du message WS-Trust 1.3 RSTR/Cancel.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13Issue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13Issue (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13Issue(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Issue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13Issue (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13Issue(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13Issue : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13Issue : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13Issue ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Issue(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Effectue un appel asynchrone du message WS-Trust 1.3 Issue.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13IssueResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13IssueResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13IssueResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13IssueResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13IssueResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13IssueResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13IssueResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13IssueResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13IssueResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13IssueResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Effectue un appel asynchrone du message WS-Trust 1.3 RSTR/Issue.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13Renew">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13Renew (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13Renew(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Renew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13Renew (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13Renew(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13Renew : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13Renew : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13Renew ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Renew(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone du message WS-Trust 1.3 Renew.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13RenewResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13RenewResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13RenewResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13RenewResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13RenewResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13RenewResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13RenewResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13RenewResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13RenewResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13RenewResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Exécute un appel asynchrone du message WS-Trust 1.3 RSTR/Renew.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13Validate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13Validate (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13Validate(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13Validate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13Validate (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13Validate(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13Validate : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13Validate : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13Validate ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13Validate(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone du message WS-Trust 1.3 Validate.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrust13ValidateResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrust13ValidateResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrust13ValidateResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrust13ValidateResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrust13ValidateResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrust13ValidateResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrust13ValidateResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrust13ValidateResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrust13ValidateResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13AsyncContract.EndTrust13ValidateResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone au message WS-Trust 1.3 RSTR/Validate.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005Cancel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005Cancel (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005Cancel(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Cancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005Cancel (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005Cancel(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005Cancel : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005Cancel : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005Cancel ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Cancel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Complète un appel asynchrone du message WS-Trust Feb 2005 Cancel.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005CancelResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005CancelResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005CancelResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005CancelResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005CancelResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005CancelResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005CancelResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005CancelResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005CancelResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone au message WS-Trust Feb 2005 RSTR/Cancel.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005Issue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005Issue (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005Issue(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Issue(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005Issue (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005Issue(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005Issue : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005Issue : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005Issue ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Issue(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Effectuer un appel asynchrone au message Trust Feb 2005 Cancel.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005IssueResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005IssueResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005IssueResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005IssueResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005IssueResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005IssueResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005IssueResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005IssueResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005IssueResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone du message WS-Trust Feb 2005 RSTR/Issue.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005Renew">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005Renew (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005Renew(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Renew(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005Renew (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005Renew(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005Renew : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005Renew : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005Renew ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Renew(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Exécute un appel asynchrone du message WS-Trust Feb 2005 Renew.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005RenewResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005RenewResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005RenewResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005RenewResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005RenewResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005RenewResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005RenewResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005RenewResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005RenewResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Traite un appel asynchrone du message WS-Trust Feb 2005 RSTR/Renew.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005Validate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005Validate (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005Validate(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005Validate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005Validate (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005Validate(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005Validate : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005Validate : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005Validate ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005Validate(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Exécute un appel asynchrone du message WS-Trust Feb 2005 Validate.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTrustFeb2005ValidateResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndTrustFeb2005ValidateResponse (IAsyncResult ar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndTrustFeb2005ValidateResponse(class System.IAsyncResult ar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndTrustFeb2005ValidateResponse (ar As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ EndTrustFeb2005ValidateResponse(IAsyncResult ^ ar);" />
      <MemberSignature Language="F#" Value="abstract member EndTrustFeb2005ValidateResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message&#xA;override this.EndTrustFeb2005ValidateResponse : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.EndTrustFeb2005ValidateResponse ar" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005AsyncContract.EndTrustFeb2005ValidateResponse(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ar" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="ar">Objet <see cref="T:System.IAsyncResult" /> retourné par la méthode Begin qui a initié l’appel asynchrone.</param>
        <summary>Termine un appel asynchrone du message WS-Trust Feb 2005 RSTR/Validate.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public virtual void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit&#xA;override this.ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="wSTrustServiceContract.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> qui exporte les informations de contrat.</param>
        <param name="context">Fournit des mappages d'éléments WSDL à la description de contrat.</param>
        <summary>En cas d’implémentation dans une classe dérivée, écrit des éléments WSDL (Web Services Description Language) personnalisés dans le WSDL généré pour un contrat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fournit une implémentation de la méthode <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>. L'implémentation par défaut n'exécute aucune opération. Vous pouvez remplacer cette méthode dans une classe dérivée pour implémenter le comportement spécifique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public virtual void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit&#xA;override this.ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="wSTrustServiceContract.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> qui exporte les informations de contrat.</param>
        <param name="context">Fournit les mappages d'éléments WSDL exportés à la description de point de terminaison.</param>
        <summary>Écrit des éléments WSDM (Web Services Description Language) personnalisés dans le service WSDL généré pour un point de terminaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémente la méthode <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>.  
  
 L’implémentation par défaut effectue ce qui suit pour chaque contrat de WS-Trust trouvé :  
  
1.  Inclut l’espace de noms WS-Trust appropriée dans le WSDL.  
  
2.  Importe le schéma approprié de WS-Trust et tous les schémas dépendants.  
  
3.  Résout les Messages de chaque opération à leurs équivalents de WS-Trust appropriés. Le contrat de WS-Trust exposé par Windows Identity Foundation (WIF) prend un <xref:System.ServiceModel.Channels.Message> dans et retourne un <xref:System.ServiceModel.Channels.Message> out. Mais les messages WS-Trust attendent une RST et retournent un RSTR/RSTRC. Cette méthode résout les noms de message avec les messages WS-Trust appropriées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FixMessageElement">
      <MemberSignature Language="C#" Value="protected virtual void FixMessageElement (System.Web.Services.Description.ServiceDescription serviceDescription, System.Web.Services.Description.PortType portType, System.ServiceModel.Description.WsdlEndpointConversionContext context, string operationName, System.Xml.XmlQualifiedName inputMessageElement, System.Xml.XmlQualifiedName outputMessageElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FixMessageElement(class System.Web.Services.Description.ServiceDescription serviceDescription, class System.Web.Services.Description.PortType portType, class System.ServiceModel.Description.WsdlEndpointConversionContext context, string operationName, class System.Xml.XmlQualifiedName inputMessageElement, class System.Xml.XmlQualifiedName outputMessageElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.FixMessageElement(System.Web.Services.Description.ServiceDescription,System.Web.Services.Description.PortType,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FixMessageElement(System::Web::Services::Description::ServiceDescription ^ serviceDescription, System::Web::Services::Description::PortType ^ portType, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context, System::String ^ operationName, System::Xml::XmlQualifiedName ^ inputMessageElement, System::Xml::XmlQualifiedName ^ outputMessageElement);" />
      <MemberSignature Language="F#" Value="abstract member FixMessageElement : System.Web.Services.Description.ServiceDescription * System.Web.Services.Description.PortType * System.ServiceModel.Description.WsdlEndpointConversionContext * string * System.Xml.XmlQualifiedName * System.Xml.XmlQualifiedName -&gt; unit&#xA;override this.FixMessageElement : System.Web.Services.Description.ServiceDescription * System.Web.Services.Description.PortType * System.ServiceModel.Description.WsdlEndpointConversionContext * string * System.Xml.XmlQualifiedName * System.Xml.XmlQualifiedName -&gt; unit" Usage="wSTrustServiceContract.FixMessageElement (serviceDescription, portType, context, operationName, inputMessageElement, outputMessageElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.Web.Services.Description.ServiceDescription" />
        <Parameter Name="portType" Type="System.Web.Services.Description.PortType" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="inputMessageElement" Type="System.Xml.XmlQualifiedName" />
        <Parameter Name="outputMessageElement" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="serviceDescription"><see cref="T:System.Web.Services.Description.ServiceDescription" /> dont l’état actuel est celui du WSDL exporté.</param>
        <param name="portType">PortType WSDL pour lequel les messages ont besoin d’être corrigés.</param>
        <param name="context">Fournit les mappages d'éléments WSDL exportés à la description de point de terminaison.</param>
        <param name="operationName">Nom de l’opération à l’intérieur de PortType.</param>
        <param name="inputMessageElement"><see cref="T:System.Xml.XmlQualifiedName" /> de l’élément du message d’entrée.</param>
        <param name="outputMessageElement"><see cref="T:System.Xml.XmlQualifiedName" /> de l’élément du message de sortie.</param>
        <summary>Pendant la génération WSDL, cette méthode corrige un élément de message d’opération spécifié pour faire référence aux éléments RST et RSTR de la version WS-Trust appropriée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contrat de WS-Trust exposé par Windows Identity Foundation (WIF) prend un <xref:System.ServiceModel.Channels.Message> dans et retourne un <xref:System.ServiceModel.Channels.Message> out. Mais les messages WS-Trust attendent une RST et retournent un RSTR/RSTRC. Cette méthode résout les noms de message avec les messages WS-Trust appropriées spécifiées par les noms qualifiés XML dans `inputMessageElement` et `outputMessageLement`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceDescription" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="portType" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="inputMessageType" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="outputMessageType" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="operationName" /> a la valeur <see langword="null" /> ou est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRstSecurityTokenResolver">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Selectors.SecurityTokenResolver GetRstSecurityTokenResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Selectors.SecurityTokenResolver GetRstSecurityTokenResolver() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.GetRstSecurityTokenResolver" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRstSecurityTokenResolver () As SecurityTokenResolver" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Selectors::SecurityTokenResolver ^ GetRstSecurityTokenResolver();" />
      <MemberSignature Language="F#" Value="abstract member GetRstSecurityTokenResolver : unit -&gt; System.IdentityModel.Selectors.SecurityTokenResolver&#xA;override this.GetRstSecurityTokenResolver : unit -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="wSTrustServiceContract.GetRstSecurityTokenResolver " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> qui sera utilisé pour la résolution des jetons et clés dans le corps de message WS-Trust.</summary>
        <returns>Programme de résolution de jeton de sécurité utilisé lors de la résolution des jetons et clés dans le corps de message WS-Trust.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ServiceModel.Security.WSTrustServiceContract.GetSecurityHeaderTokenResolver(System.ServiceModel.Channels.RequestContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetSecurityHeaderTokenResolver">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Selectors.SecurityTokenResolver GetSecurityHeaderTokenResolver (System.ServiceModel.Channels.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Selectors.SecurityTokenResolver GetSecurityHeaderTokenResolver(class System.ServiceModel.Channels.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.GetSecurityHeaderTokenResolver(System.ServiceModel.Channels.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Selectors::SecurityTokenResolver ^ GetSecurityHeaderTokenResolver(System::ServiceModel::Channels::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityHeaderTokenResolver : System.ServiceModel.Channels.RequestContext -&gt; System.IdentityModel.Selectors.SecurityTokenResolver&#xA;override this.GetSecurityHeaderTokenResolver : System.ServiceModel.Channels.RequestContext -&gt; System.IdentityModel.Selectors.SecurityTokenResolver" Usage="wSTrustServiceContract.GetSecurityHeaderTokenResolver requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenResolver</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.ServiceModel.Channels.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Contexte associé à la demande.</param>
        <summary>Retourne le <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> qui résout les jetons de sécurité suivants contenus dans l'en-tête de sécurité de la demande de message WCF en cours : jeton de protection, jetons prenant en charge l'endossement ou l'endossement signé.</summary>
        <returns>Résolveur de jeton de sécurité utilisé pour résoudre tout identificateur de jeton de sécurité au moment de la désérialisation des éléments RST UseKey ou RST RenewTarget.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cela <xref:System.IdentityModel.Selectors.SecurityTokenResolver> sert à résoudre n’importe quel identificateur lors de la désérialisation des éléments RST UseKey ou RST RenewTarget.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="requestContext" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="protected virtual bool HandleException (Exception ex, string trustNamespace, string action, System.ServiceModel.EnvelopeVersion requestEnvelopeVersion);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleException(class System.Exception ex, string trustNamespace, string action, class System.ServiceModel.EnvelopeVersion requestEnvelopeVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.HandleException(System.Exception,System.String,System.String,System.ServiceModel.EnvelopeVersion)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleException (ex As Exception, trustNamespace As String, action As String, requestEnvelopeVersion As EnvelopeVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleException(Exception ^ ex, System::String ^ trustNamespace, System::String ^ action, System::ServiceModel::EnvelopeVersion ^ requestEnvelopeVersion);" />
      <MemberSignature Language="F#" Value="abstract member HandleException : Exception * string * string * System.ServiceModel.EnvelopeVersion -&gt; bool&#xA;override this.HandleException : Exception * string * string * System.ServiceModel.EnvelopeVersion -&gt; bool" Usage="wSTrustServiceContract.HandleException (ex, trustNamespace, action, requestEnvelopeVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="trustNamespace" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="requestEnvelopeVersion" Type="System.ServiceModel.EnvelopeVersion" />
      </Parameters>
      <Docs>
        <param name="ex">Exception d’origine.</param>
        <param name="trustNamespace">Espace de noms de la version WS-Trust actuelle.</param>
        <param name="action">Action WS-Trust qui a levé l’exception.</param>
        <param name="requestEnvelopeVersion">Version SOAP de l’enveloppe de la requête.</param>
        <summary>Déclenche l’événement <see cref="E:System.ServiceModel.Security.WSTrustServiceContract.RequestFailed" /> et convertit l’exception spécifiée en <see cref="T:System.ServiceModel.FaultException" />, si besoin. Si l’exception d’origine était un <see cref="T:System.ServiceModel.FaultException" /> ou si l’indicateur PreserveOriginalException a la valeur <see langword="true" />, la conversion en <see cref="T:System.ServiceModel.FaultException" /> n’est pas effectuée.</summary>
        <returns>Retourne <see cref="T:System.Boolean" />. <see langword="false" /> si l’exception d’origine est levée.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportSchema">
      <MemberSignature Language="C#" Value="protected virtual void ImportSchema (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImportSchema(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ImportSchema(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ImportSchema (exporter As WsdlExporter, context As WsdlEndpointConversionContext, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ImportSchema(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ImportSchema : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext * string -&gt; unit&#xA;override this.ImportSchema : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext * string -&gt; unit" Usage="wSTrustServiceContract.ImportSchema (exporter, context, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> qui exporte les informations de contrat.</param>
        <param name="context">Fournit les mappages d'éléments WSDL exportés à la description de point de terminaison.</param>
        <param name="ns">Espace de noms WS-Trust actuel pour lequel les schémas sont importés.</param>
        <summary>Importe tous les schémas nécessaires s’ils ne se trouvent pas déjà dans le WSDL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut importe les schémas suivants : WS-Trust Feb 2005 et WS-Trust 1.3. Vous pouvez substituer cette méthode dans les classes dérivées pour importer d’autres schémas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="exporter" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="context" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ns" /> est soit <see langword="null" /> soit une chaîne vide.</exception>
        <exception cref="T:System.InvalidOperationException">L'espace de noms spécifié dans <paramref name="ns" /> n'est pas un espace de noms WS-Trust reconnu.</exception>
      </Docs>
    </Member>
    <Member MemberName="IncludeNamespace">
      <MemberSignature Language="C#" Value="protected virtual void IncludeNamespace (System.ServiceModel.Description.WsdlEndpointConversionContext context, string prefix, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void IncludeNamespace(class System.ServiceModel.Description.WsdlEndpointConversionContext context, string prefix, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.IncludeNamespace(System.ServiceModel.Description.WsdlEndpointConversionContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub IncludeNamespace (context As WsdlEndpointConversionContext, prefix As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void IncludeNamespace(System::ServiceModel::Description::WsdlEndpointConversionContext ^ context, System::String ^ prefix, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member IncludeNamespace : System.ServiceModel.Description.WsdlEndpointConversionContext * string * string -&gt; unit&#xA;override this.IncludeNamespace : System.ServiceModel.Description.WsdlEndpointConversionContext * string * string -&gt; unit" Usage="wSTrustServiceContract.IncludeNamespace (context, prefix, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Fournit les mappages d'éléments WSDL exportés à la description de point de terminaison.</param>
        <param name="prefix">Préfixe de l’espace de noms à inclure.</param>
        <param name="ns">Espace de noms à inclure.</param>
        <summary>Ajoute les espaces de noms WS-Trust requis au service WSDL, s’ils ne sont pas déjà présents.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="context" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Channels.Message ProcessCore (System.ServiceModel.Channels.Message requestMessage, System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, string requestAction, string responseAction, string trustNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessCore(class System.ServiceModel.Channels.Message requestMessage, class System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer requestSerializer, class System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer responseSerializer, string requestAction, string responseAction, string trustNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessCore(System.ServiceModel.Channels.Message,System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer,System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessCore (requestMessage As Message, requestSerializer As WSTrustRequestSerializer, responseSerializer As WSTrustResponseSerializer, requestAction As String, responseAction As String, trustNamespace As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessCore(System::ServiceModel::Channels::Message ^ requestMessage, System::IdentityModel::Protocols::WSTrust::WSTrustRequestSerializer ^ requestSerializer, System::IdentityModel::Protocols::WSTrust::WSTrustResponseSerializer ^ responseSerializer, System::String ^ requestAction, System::String ^ responseAction, System::String ^ trustNamespace);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCore : System.ServiceModel.Channels.Message * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * string * string * string -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessCore : System.ServiceModel.Channels.Message * System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer * System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer * string * string * string -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessCore (requestMessage, requestSerializer, responseSerializer, requestAction, responseAction, trustNamespace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestMessage" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="requestSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustRequestSerializer" />
        <Parameter Name="responseSerializer" Type="System.IdentityModel.Protocols.WSTrust.WSTrustResponseSerializer" />
        <Parameter Name="requestAction" Type="System.String" />
        <Parameter Name="responseAction" Type="System.String" />
        <Parameter Name="trustNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestMessage">Message de demande entrant.</param>
        <param name="requestSerializer">Sérialiseur de demandes WS-Trust.</param>
        <param name="responseSerializer">Sérialiseur de réponses WS-Trust.</param>
        <param name="requestAction">Action SOAP de demande.</param>
        <param name="responseAction">Action SOAP de réponse.</param>
        <param name="trustNamespace">URI d’espace de noms de la version WS-Trust de la requête entrante.</param>
        <summary>Gère les appels synchrones à destination du STS.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">L’un des arguments est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13Cancel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13Cancel (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13Cancel(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13Cancel(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13Cancel : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13Cancel : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13Cancel message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Cancel(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 Cancel de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13CancelResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13CancelResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13CancelResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13CancelResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13CancelResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13CancelResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13CancelResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13CancelResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 RSTR/Cancel de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13Issue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13Issue (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13Issue(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13Issue(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13Issue : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13Issue : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13Issue message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Issue(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite de façon synchrone un message WS-Trust 1.3 Issue.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13IssueResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13IssueResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13IssueResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13IssueResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13IssueResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13IssueResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13IssueResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13IssueResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 RSTR/Cancel de façon synchrone.</summary>
        <returns>Retourne <see cref="T:System.ServiceModel.Channels.Message" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13Renew">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13Renew (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13Renew(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13Renew(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13Renew : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13Renew : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13Renew message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Renew(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 Renew de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13RenewResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13RenewResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13RenewResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13RenewResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13RenewResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13RenewResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13RenewResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13RenewResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 RSTR/Renew de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13Validate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13Validate (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13Validate(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13Validate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13Validate : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13Validate : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13Validate message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13Validate(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 Validate de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrust13ValidateResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrust13ValidateResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrust13ValidateResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrust13ValidateResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrust13ValidateResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrust13ValidateResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrust13ValidateResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrust13SyncContract.ProcessTrust13ValidateResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust 1.3 RSTR/Validate de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005Cancel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005Cancel (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005Cancel(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005Cancel(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005Cancel : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005Cancel : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005Cancel message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Cancel(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 Cancel de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005CancelResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005CancelResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005CancelResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005CancelResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005CancelResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005CancelResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005CancelResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005CancelResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 RSTR/Cancel de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005Issue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005Issue (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005Issue(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005Issue(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005Issue : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005Issue : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005Issue message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Issue(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005/Issue de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005IssueResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005IssueResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005IssueResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005IssueResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005IssueResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005IssueResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005IssueResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005IssueResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 RSTR/Issue de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005Renew">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005Renew (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005Renew(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005Renew(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005Renew : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005Renew : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005Renew message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Renew(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 Renew de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005RenewResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005RenewResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005RenewResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005RenewResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005RenewResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005RenewResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005RenewResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005RenewResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 RSTR/Renew de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005Validate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005Validate (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005Validate(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005Validate(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005Validate : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005Validate : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005Validate message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005Validate(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 Validate de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessTrustFeb2005ValidateResponse">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ProcessTrustFeb2005ValidateResponse (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ProcessTrustFeb2005ValidateResponse(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::Message ^ ProcessTrustFeb2005ValidateResponse(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member ProcessTrustFeb2005ValidateResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message&#xA;override this.ProcessTrustFeb2005ValidateResponse : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="wSTrustServiceContract.ProcessTrustFeb2005ValidateResponse message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IWSTrustFeb2005SyncContract.ProcessTrustFeb2005ValidateResponse(System.ServiceModel.Channels.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message de demande entrant.</param>
        <summary>Traite un message WS-Trust Feb 2005 RSTR/Validate de façon synchrone.</summary>
        <returns>Objet <see cref="T:System.ServiceModel.Channels.Message" /> qui contient le message RSTR sérialisé.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs&gt; RequestFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs&gt; RequestFailed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Security.WSTrustServiceContract.RequestFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestFailed As EventHandler(Of WSTrustRequestProcessingErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ServiceModel::Security::WSTrustRequestProcessingErrorEventArgs ^&gt; ^ RequestFailed;" />
      <MemberSignature Language="F#" Value="member this.RequestFailed : EventHandler&lt;System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs&gt; " Usage="member this.RequestFailed : System.EventHandler&lt;System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ServiceModel.Security.WSTrustRequestProcessingErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu’une défaillance intervient lors du traitement d’une requête WS-Trust à partir du client.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations, voir la méthode <xref:System.ServiceModel.Security.WSTrustServiceContract.HandleException%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenServiceConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.SecurityTokenServiceConfiguration SecurityTokenServiceConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.WSTrustServiceContract.SecurityTokenServiceConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityTokenServiceConfiguration As SecurityTokenServiceConfiguration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ SecurityTokenServiceConfiguration { System::IdentityModel::Configuration::SecurityTokenServiceConfiguration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenServiceConfiguration : System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" Usage="System.ServiceModel.Security.WSTrustServiceContract.SecurityTokenServiceConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.SecurityTokenServiceConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la configuration du service.</summary>
        <value><see cref="T:System.IdentityModel.Configuration.SecurityTokenServiceConfiguration" /> qui représente la configuration du service.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ContractDescription contractDescription, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ContractDescription contractDescription, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ContractDescription ^ contractDescription, System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; unit&#xA;override this.Validate : System.ServiceModel.Description.ContractDescription * System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="wSTrustServiceContract.Validate (contractDescription, endpoint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contractDescription" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="contractDescription">Contrat à valider.</param>
        <param name="endpoint">Point de terminaison à valider.</param>
        <summary>En cas d’implémentation dans une classe dérivée, confirme que le contrat et le point de terminaison peuvent prendre en charge le comportement de contrat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut retourne simplement sans lever d’exception. Cela indique que le contrat spécifié et le point de terminaison sont valides.  
  
 Hérité de l'objet <xref:System.ServiceModel.Description.IContractBehavior>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateDispatchContext">
      <MemberSignature Language="C#" Value="protected virtual void ValidateDispatchContext (System.ServiceModel.Security.DispatchContext dispatchContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateDispatchContext(class System.ServiceModel.Security.DispatchContext dispatchContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.WSTrustServiceContract.ValidateDispatchContext(System.ServiceModel.Security.DispatchContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateDispatchContext(System::ServiceModel::Security::DispatchContext ^ dispatchContext);" />
      <MemberSignature Language="F#" Value="abstract member ValidateDispatchContext : System.ServiceModel.Security.DispatchContext -&gt; unit&#xA;override this.ValidateDispatchContext : System.ServiceModel.Security.DispatchContext -&gt; unit" Usage="wSTrustServiceContract.ValidateDispatchContext dispatchContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispatchContext" Type="System.ServiceModel.Security.DispatchContext" />
      </Parameters>
      <Docs>
        <param name="dispatchContext">Objet <see cref="T:System.ServiceModel.Security.DispatchContext" /> à valider.</param>
        <summary>Valide l'objet de <see cref="T:System.ServiceModel.Security.DispatchContext" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode garantit que le <xref:System.ServiceModel.Security.DispatchContext> objet représente une demande légale avant d’être passée à la <xref:System.ServiceModel.Security.WSTrustServiceContract.DispatchRequest%2A> (méthode). L’implémentation par défaut rejette les messages RST entrants avec des actions de RSTR et vice versa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>