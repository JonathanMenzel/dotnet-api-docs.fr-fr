<Type Name="ServiceCredentialsSecurityTokenManager" FullName="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2f1a91e9a295f73293dae5894934fbabda1b9da9" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39804012" /></Metadata><TypeSignature Language="C#" Value="public class ServiceCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager, System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager implements class System.ServiceModel.Security.IEndpointIdentityProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceCredentialsSecurityTokenManager&#xA;Inherits SecurityTokenManager&#xA;Implements IEndpointIdentityProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceCredentialsSecurityTokenManager : System::IdentityModel::Selectors::SecurityTokenManager, System::ServiceModel::Security::IEndpointIdentityProvider" />
  <TypeSignature Language="F#" Value="type ServiceCredentialsSecurityTokenManager = class&#xA;    inherit SecurityTokenManager&#xA;    interface IEndpointIdentityProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.IEndpointIdentityProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2e5f6-101">Représente l'implémentation de <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> qui fournit des sérialiseurs de jeton de sécurité basés sur les <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configurées sur le service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-101">Represents a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation that provides security token serializers based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> configured on the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-102">Cette classe crée des instances de la classe <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-102">This class creates instances of the <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> class.</span></span> <span data-ttu-id="2e5f6-103">Il existe une instance de cette classe pour chaque écouteur de canal de service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-103">There is one instance of this class for each service channel listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e5f6-104">Le code suivant montre comment substituer cette classe pour créer un gestionnaire personnalisé de jetons d'informations d'identification de service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-104">The following code shows how to override this class to create a customized Service Credentials Token Manager.</span></span>  
  
 [!code-csharp[c_CustomCredentials#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#5)]
 [!code-vb[c_CustomCredentials#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentialsSecurityTokenManager (System.ServiceModel.Description.ServiceCredentials parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As ServiceCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceCredentialsSecurityTokenManager(System::ServiceModel::Description::ServiceCredentials ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager : System.ServiceModel.Description.ServiceCredentials -&gt; System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" Usage="new System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="2e5f6-105">Informations d'identification du service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-105">The service credentials.</span></span></param>
        <summary><span data-ttu-id="2e5f6-106">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> en fonction des <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passées.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> class based on the <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> passed in.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecureConversationTokenAuthenticator">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator (System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, out System.IdentityModel.Selectors.SecurityTokenResolver sctResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecureConversationTokenAuthenticator(class System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement recipientRequirement, bool preserveBootstrapTokens, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; sctResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator(System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement,System.Boolean,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateSecureConversationTokenAuthenticator (recipientRequirement As RecipientServiceModelSecurityTokenRequirement, preserveBootstrapTokens As Boolean, ByRef sctResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecureConversationTokenAuthenticator(System::ServiceModel::Security::Tokens::RecipientServiceModelSecurityTokenRequirement ^ recipientRequirement, bool preserveBootstrapTokens, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % sctResolver);" />
      <MemberSignature Language="F#" Value="member this.CreateSecureConversationTokenAuthenticator : System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement * bool *  -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecureConversationTokenAuthenticator (recipientRequirement, preserveBootstrapTokens, sctResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipientRequirement" Type="System.ServiceModel.Security.Tokens.RecipientServiceModelSecurityTokenRequirement" />
        <Parameter Name="preserveBootstrapTokens" Type="System.Boolean" />
        <Parameter Name="sctResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="recipientRequirement"><span data-ttu-id="2e5f6-107">Représente des besoins de propriété sécurité spécifiques à l’écouteur.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-107">Represents security property requirements specific to the listener.</span></span></param>
        <param name="preserveBootstrapTokens"><span data-ttu-id="2e5f6-108"><see langword="true" /> si les jetons de démarrage doivent être conservés ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-108"><see langword="true" /> if the bootstrap tokens should be preserved; Otherwise <see langword="false" />.</span></span></param>
        <param name="sctResolver"><span data-ttu-id="2e5f6-109">Objet de résolution de jetons de sécurité qui peut récupérer des jetons ou des clés de sécurité lorsque vous avez un identificateur de clé ou une clause d'identificateur de clé.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-109">A security token resolver object that can retrieve security tokens or keys when you have a key identifier or key identifier clause.</span></span></param>
        <summary><span data-ttu-id="2e5f6-110">Crée un authentificateur de jeton de conversation sécurisé selon les exigences de propriétés transmises.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-110">Creates a secure conversation token authenticator based on the property requirements passed in.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-111">Authentificateur de jetons de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-111">A security token authenticator.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, [out] class System.IdentityModel.Selectors.SecurityTokenResolver&amp; outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenAuthenticator (tokenRequirement As SecurityTokenRequirement, ByRef outOfBandTokenResolver As SecurityTokenResolver) As SecurityTokenAuthenticator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenAuthenticator ^ CreateSecurityTokenAuthenticator(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement, [Runtime::InteropServices::Out] System::IdentityModel::Selectors::SecurityTokenResolver ^ % outOfBandTokenResolver);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenRequirement *  -&gt; System.IdentityModel.Selectors.SecurityTokenAuthenticator" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator (tokenRequirement, outOfBandTokenResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="2e5f6-112">L’exigence du jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-112">The security token requirement.</span></span></param>
        <param name="outOfBandTokenResolver"><span data-ttu-id="2e5f6-113">Cette méthode retourne un <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-113">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />.</span></span> <span data-ttu-id="2e5f6-114">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-114">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2e5f6-115">Crée un authentificateur de jetons de sécurité basé sur <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-115">Creates a security token authenticator based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-116">Authentificateur de jetons de sécurité</span><span class="sxs-lookup"><span data-stu-id="2e5f6-116">The security token authenticator.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-117">Un `outOfBand` programme de résolution de jeton peut éventuellement être retourné par la méthode, qui est utilisée par le processeur de sécurité WCF pour résoudre les jetons qui ne sont pas dans le protocole SOAP message lors du traitement de la sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-117">An `outOfBand` token resolver can optionally be returned by the method, which is used by the WCF security processor to resolve tokens that are not in the SOAP message when processing security.</span></span> <span data-ttu-id="2e5f6-118"><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> retourné par cette méthode valide les jetons et extrait les revendications.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-118">The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> that is returned by this method validates tokens and extracts claims.</span></span> <span data-ttu-id="2e5f6-119">Un <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> est créé pour chaque classe dérivée de la <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-119">One <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is created for each class derived from <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e5f6-120">Le code suivant constitue un exemple de substitution de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-120">The following code is an example of how to override this method.</span></span>  
  
 [!code-csharp[c_CustomTokenAuthenticator#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customtokenauthenticator/cs/source.cs#2)]
 [!code-vb[c_CustomTokenAuthenticator#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customtokenauthenticator/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e5f6-121"><paramref name="tokenRequirement" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-121"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e5f6-122">Il est impossible de créer un authentificateur de jetons de sécurité pour le paramètre <paramref name="tokenRequirement" /> qui a été passé.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-122">A security token authenticator cannot be created for the <paramref name="tokenRequirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenProvider (requirement As SecurityTokenRequirement) As SecurityTokenProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenProvider ^ CreateSecurityTokenProvider(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.IdentityModel.Selectors.SecurityTokenProvider" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenProvider requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="2e5f6-123">L’exigence du jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-123">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="2e5f6-124">Crée un fournisseur de jetons de sécurité basé sur la <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-124">Creates a security token provider based on the <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-125">Fournisseur de jetons de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-125">The security token provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-126">La classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider> est chargée d'obtenir des jetons pour une <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>donnée.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-126">The <xref:System.IdentityModel.Selectors.SecurityTokenProvider> class is responsible for obtaining tokens for a given <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</span></span> <span data-ttu-id="2e5f6-127">Les fournisseurs de jetons peuvent également, de manière facultative, prendre en charge des jetons de renouvellement et d'annulation.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-127">Optionally, token providers can support renewing and canceling tokens as well.</span></span> <span data-ttu-id="2e5f6-128">Le fournisseur de jetons peut mettre en cache des jetons s'il est configuré de manière adéquate.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-128">The token provider can cache tokens if it is configured to do so.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e5f6-129">L'exemple de code suivant montre comment substituer cette méthode.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-129">The following code shows how to override this method.</span></span>  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#4)]
 [!code-vb[ClientCredentialsSecurityTokenManager#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e5f6-130"><paramref name="requirement" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-130"><paramref name="requirement" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e5f6-131">Il est impossible de créer un fournisseur de jetons de sécurité pour le paramètre <paramref name="requirement" /> qui a été passé.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-131">A security token provider cannot be created for the <paramref name="requirement" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSecurityTokenSerializer (version As SecurityTokenVersion) As SecurityTokenSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IdentityModel::Selectors::SecurityTokenSerializer ^ CreateSecurityTokenSerializer(System::IdentityModel::Selectors::SecurityTokenVersion ^ version);" />
      <MemberSignature Language="F#" Value="override this.CreateSecurityTokenSerializer : System.IdentityModel.Selectors.SecurityTokenVersion -&gt; System.IdentityModel.Selectors.SecurityTokenSerializer" Usage="serviceCredentialsSecurityTokenManager.CreateSecurityTokenSerializer version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version"><span data-ttu-id="2e5f6-132">Version du jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-132">The version of the security token.</span></span></param>
        <summary><span data-ttu-id="2e5f6-133">Crée un sérialiseur de jetons de sécurité basé sur la version de jeton de sécurité passée.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-133">Creates a security token serializer based on the security token version passed in.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-134">Sérialiseur de jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-134">The security token serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-135">Le <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> est utilisé pour écrire et lire des jetons de sécurité et des références de jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-135">The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used for writing and reading security tokens and security token references.</span></span> <span data-ttu-id="2e5f6-136">Lors de la désérialisation du jeton à partir du XML, le jeton retourné doit pouvoir exécuter des opérations de chiffrement.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-136">When deserializing the token from XML, the returned token must be able to perform cryptographic operations.</span></span> <span data-ttu-id="2e5f6-137">Le sérialiseur de jetons doit pouvoir effectuer une validation suffisante pour garantir que le jeton peut effectuer des opérations de chiffrement (traitement de ticket Kerberos, décodage X.509, décodage SAML, etc.) mais doit déférer les décisions d’approbation d’application à l’authentificateur.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-137">The token serializer must be able to do enough validation to ensure that the token can do cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding, and so on) but should defer application trust decisions to the authenticator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e5f6-138">Il est impossible de créer un sérialiseur de jetons de sécurité pour le paramètre <paramref name="version" /> qui a été passé.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-138">A security token serializer cannot be created for the  <paramref name="version" /> that was passed in.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIdentityOfSelf">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.EndpointIdentity GetIdentityOfSelf (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.EndpointIdentity GetIdentityOfSelf(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIdentityOfSelf (tokenRequirement As SecurityTokenRequirement) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::EndpointIdentity ^ GetIdentityOfSelf(System::IdentityModel::Selectors::SecurityTokenRequirement ^ tokenRequirement);" />
      <MemberSignature Language="F#" Value="abstract member GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity&#xA;override this.GetIdentityOfSelf : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; System.ServiceModel.EndpointIdentity" Usage="serviceCredentialsSecurityTokenManager.GetIdentityOfSelf tokenRequirement" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.IEndpointIdentityProvider.GetIdentityOfSelf(System.IdentityModel.Selectors.SecurityTokenRequirement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement"><span data-ttu-id="2e5f6-139">L’exigence du jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-139">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="2e5f6-140">Obtient l'<see cref="T:System.ServiceModel.EndpointIdentity" /> en fonction de la spécification de jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-140">Gets the <see cref="T:System.ServiceModel.EndpointIdentity" /> based on the security token requirement.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-141">Identité du point de terminaison qui correspond au <paramref name="tokenRequirement" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-141">The endpoint identity that corresponds to the <paramref name="tokenRequirement" />.</span></span> <span data-ttu-id="2e5f6-142">La valeur <see langword="null" /> est retournée si une identité ne peut pas être créée à partir de <paramref name="tokenRequirement" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-142"><see langword="null" /> is returned if an identity cannot be created from the <paramref name="tokenRequirement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-143">Cette méthode est appelée par l’infrastructure WCF d’obtenir le <xref:System.ServiceModel.EndpointIdentity> qui correspond à un point de terminaison de service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-143">This method is called by the WCF infrastructure to obtain the <xref:System.ServiceModel.EndpointIdentity> that corresponds to a service endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e5f6-144"><paramref name="tokenRequirement" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-144"><paramref name="tokenRequirement" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsIssuedSecurityTokenRequirement (requirement As SecurityTokenRequirement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsIssuedSecurityTokenRequirement(System::IdentityModel::Selectors::SecurityTokenRequirement ^ requirement);" />
      <MemberSignature Language="F#" Value="member this.IsIssuedSecurityTokenRequirement : System.IdentityModel.Selectors.SecurityTokenRequirement -&gt; bool" Usage="serviceCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement requirement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement"><span data-ttu-id="2e5f6-145">L’exigence du jeton de sécurité.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-145">The security token requirement.</span></span></param>
        <summary><span data-ttu-id="2e5f6-146">Détermine si l’exigence de jeton de sécurité concerne un jeton émis.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-146">Determines whether the security token requirement is for an issued token.</span></span></summary>
        <returns><span data-ttu-id="2e5f6-147"><see langword="true" /> si la spécification de jeton de sécurité concerne un jeton émis ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-147"><see langword="true" /> if the security token requirement is for an issued token; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials ServiceCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceCredentials ServiceCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceCredentials As ServiceCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceCredentials ^ ServiceCredentials { System::ServiceModel::Description::ServiceCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceCredentials : System.ServiceModel.Description.ServiceCredentials" Usage="System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager.ServiceCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e5f6-148">Obtient les informations d'identification de service utilisées pour construire cette instance de la classe en question.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-148">Gets the service credentials used to construct this instance of this class.</span></span></summary>
        <value><span data-ttu-id="2e5f6-149">Informations d'identification du service.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-149">The service credentials.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e5f6-150">L'objet <xref:System.ServiceModel.Description.ServiceCredentials> vous permet de configurer les informations d'identification ainsi que les paramètres d'authentification.</span><span class="sxs-lookup"><span data-stu-id="2e5f6-150">The <xref:System.ServiceModel.Description.ServiceCredentials> object enables you to configure service credentials as well as service credential authentication settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>