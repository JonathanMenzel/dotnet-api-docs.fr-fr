<Type Name="CompiledQuery" FullName="System.Data.Objects.CompiledQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3bf5294d86fcb2d08e94e3534f9ec9f078d24557" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678275" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompiledQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompiledQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.CompiledQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompiledQuery" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompiledQuery sealed" />
  <TypeSignature Language="F#" Value="type CompiledQuery = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une requête LINQ to Entities mise en cache.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permet la compilation et la mise en cache de requêtes pour une réutilisation. Conceptuellement, cette classe contient une méthode `Compile` unique avec plusieurs surcharges. Vous appelez la méthode `Compile` pour créer un nouveau délégué pour représenter la requête compilée. Le délégué, lorsqu'il est appelé avec le paramètre d'entrée <xref:System.Data.Objects.ObjectContext> et d'autres valeurs de paramètres, produit un résultat (tel qu'une instance de <xref:System.Linq.IQueryable%601>). La requête est traduite et mise en cache lorsque le délégué est appelé pour la première fois.  
  
   
  
## Examples  
 L'exemple suivant compile puis appelle une requête qui accepte les paramètres d'entrée <xref:System.DateTime> et <xref:System.Decimal> et retourne une séquence de commandes où la date de commande est ultérieure au 8 mars 2003 et le montant total dû est inférieur à 300,00 $ :  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Compile&lt;TArg0,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TResult&gt; Compile&lt;TArg0,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`2&lt;!!TArg0, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TArg0, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TResult))) As Func(Of TArg0, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`2" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 L'exemple suivant compile puis appelle une requête qui retourne une instance de <xref:System.Data.Objects.ObjectQuery%601> :  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery1_mq)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery1_MQ](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery1_mq)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TResult&gt; Compile&lt;TArg0,TArg1,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`3&lt;!!TArg0, !!TArg1, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TResult))) As Func(Of TArg0, TArg1, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`3" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 L'exemple suivant compile puis appelle une requête qui accepte un paramètre d'entrée <xref:System.Decimal> et retourne une séquence de commandes où le montant total dû est supérieur à 200,00 $ :  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery2)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery2](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`4&lt;!!TArg0, !!TArg1, !!TArg2, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TResult))) As Func(Of TArg0, TArg1, TArg2, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`4" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
   
  
## Examples  
 L'exemple suivant compile puis appelle une requête qui accepte les paramètres d'entrée <xref:System.DateTime> et <xref:System.Decimal> et retourne une séquence de commandes où la date de commande est ultérieure au 8 mars 2003 et le montant total dû est inférieur à 300,00 $ :  
  
 [!code-csharp[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/csharp/VS_Snippets_Data/DP L2E Conceptual Examples/CS/Program.cs#compiledquery5)]
 [!code-vb[DP L2E Conceptual Examples#CompiledQuery5](~/samples/snippets/visualbasic/VS_Snippets_Data/DP L2E Conceptual Examples/VB/Module1.vb#compiledquery5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`5&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`5" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`6&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`6" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`7&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`7" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`8&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`8" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`9&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`9" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`10&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`10" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`11&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`11" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`12&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`12" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`13&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg11">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg11</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`13" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`14&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg11">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg11</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg12">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg12</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`14" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`15&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg11">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg11</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg12">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg12</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg13">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg13</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`15" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`16&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg11">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg11</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg12">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg12</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg13">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg13</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg14">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg14</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`16" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; Compile&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt; query) where TArg0 : System.Data.Objects.ObjectContext;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt; Compile&lt;(class System.Data.Objects.ObjectContext) TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`17&lt;!!TArg0, !!TArg1, !!TArg2, !!TArg3, !!TArg4, !!TArg5, !!TArg6, !!TArg7, !!TArg8, !!TArg9, !!TArg10, !!TArg11, !!TArg12, !!TArg13, !!TArg14, !!TArg15, !!TResult&gt;&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compile(Of TArg0 As ObjectContext, TArg1 As ObjectContext, TArg2 As ObjectContext, TArg3 As ObjectContext, TArg4 As ObjectContext, TArg5 As ObjectContext, TArg6 As ObjectContext, TArg7 As ObjectContext, TArg8 As ObjectContext, TArg9 As ObjectContext, TArg10 As ObjectContext, TArg11 As ObjectContext, TArg12 As ObjectContext, TArg13 As ObjectContext, TArg14 As ObjectContext, TArg15 As ObjectContext, TResult As ObjectContext) (query As Expression(Of Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult))) As Func(Of TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TArg0, typename TArg1, typename TArg2, typename TArg3, typename TArg4, typename TArg5, typename TArg6, typename TArg7, typename TArg8, typename TArg9, typename TArg10, typename TArg11, typename TArg12, typename TArg13, typename TArg14, typename TArg15, typename TResult&gt;&#xA; where TArg0 : System::Data::Objects::ObjectContext static Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^ Compile(System::Linq::Expressions::Expression&lt;Func&lt;TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, TResult&gt; ^&gt; ^ query);" />
      <MemberSignature Language="F#" Value="static member Compile : System.Linq.Expressions.Expression&lt;Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result&gt;&gt; -&gt; Func&lt;'TArg0, 'TArg1, 'TArg2, 'TArg3, 'TArg4, 'TArg5, 'TArg6, 'TArg7, 'TArg8, 'TArg9, 'TArg10, 'TArg11, 'TArg12, 'TArg13, 'TArg14, 'TArg15, 'Result (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)&gt; (requires 'TArg0 :&gt; System.Data.Objects.ObjectContext)" Usage="System.Data.Objects.CompiledQuery.Compile query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TArg0">
          <Constraints>
            <BaseTypeName>System.Data.Objects.ObjectContext</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TArg1" />
        <TypeParameter Name="TArg2" />
        <TypeParameter Name="TArg3" />
        <TypeParameter Name="TArg4" />
        <TypeParameter Name="TArg5" />
        <TypeParameter Name="TArg6" />
        <TypeParameter Name="TArg7" />
        <TypeParameter Name="TArg8" />
        <TypeParameter Name="TArg9" />
        <TypeParameter Name="TArg10" />
        <TypeParameter Name="TArg11" />
        <TypeParameter Name="TArg12" />
        <TypeParameter Name="TArg13" />
        <TypeParameter Name="TArg14" />
        <TypeParameter Name="TArg15" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="query" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TArg0,TArg1,TArg2,TArg3,TArg4,TArg5,TArg6,TArg7,TArg8,TArg9,TArg10,TArg11,TArg12,TArg13,TArg14,TArg15,TResult&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TArg0">Type dérivé de <see cref="T:System.Data.Objects.ObjectContext" />.</typeparam>
        <typeparam name="TArg1">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg1</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg2">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg2</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg3">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg3</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg4">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg4</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg5">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg5</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg6">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg6</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg7">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg7</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg8">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg8</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg9">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg9</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg10">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg10</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg11">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg11</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg12">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg12</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg13">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg13</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg14">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg14</c> doit être un type primitif.</typeparam>
        <typeparam name="TArg15">Représente le type du paramètre qui doit être passé lors de l'exécution du délégué retourné par cette méthode. <c>TArg15</c> doit être un type primitif.</typeparam>
        <typeparam name="TResult">Le type <c>T</c> des résultats de requête retournés par l’exécution du délégué retourné par la <see cref="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})" /> (méthode).</typeparam>
        <param name="query">Expression lambda à compiler.</param>
        <summary>Crée un nouveau délégué qui représente la requête LINQ to Entities compilée.</summary>
        <returns>
          <see cref="T:System.Func`17" />, délégué générique qui représente la requête LINQ to Entities compilée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations et des exemples, consultez [requêtes compilées (LINQ to Entities)](~/docs/framework/data/adonet/ef/language-reference/compiled-queries-linq-to-entities.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>