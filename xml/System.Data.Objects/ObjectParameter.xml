<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51ad8767c35da1368d2617ac0173c5c6a165be7f" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46596295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <TypeSignature Language="F#" Value="type ObjectParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un paramètre de requête passé à une requête d'objet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Représente un paramètre de requête passé à un objet <xref:System.Data.Objects.ObjectQuery%601> ou une méthode de générateur de requêtes. Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Les paramètres d'objets sont constitués d'un nom, d'un type et d'une valeur.  
  
 Cette classe ne peut pas être héritée. Pour plus d'informations, consultez <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouveaux paramètres à la collection. Il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Interrogation des données sous forme d'objets (Entity Framework)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Objects.ObjectParameter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * obj -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre. Ce nom ne doit pas inclure le marqueur de paramètre « @ » utilisé dans les instructions [!INCLUDE[esql](~/includes/esql-md.md)], mais uniquement le nom réel. Le premier caractère de l'expression doit être une lettre. Tous les caractères ultérieurs dans l'expression doivent être des lettres, des chiffres ou des traits de soulignement (_).</param>
        <param name="value">Valeur initiale (et, de manière inhérente, le type) du paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Objects.ObjectParameter" /> avec la valeur et le nom spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un paramètre à partir du nom et de la valeur spécifiés. Le type du paramètre est déduit à partir de la valeur.  
  
 Lorsqu'il est ajouté à l'objet <xref:System.Data.Objects.ObjectParameterCollection>, le nom du paramètre ne peut pas être modifié. La valeur du paramètre peut être modifiée par le biais de la propriété <xref:System.Data.Objects.ObjectParameter.Value%2A>. Une fois la requête compilée, la valeur ne peut pas être modifiée. Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouveaux paramètres à la collection. Il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si la valeur de l’un des arguments est null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Si la valeur de l’argument de nom n’est pas valide. Les noms des paramètres doivent commencer par une lettre et peuvent contenir uniquement des lettres, des chiffres et des traits de soulignement.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectParameter : string * Type -&gt; System.Data.Objects.ObjectParameter" Usage="new System.Data.Objects.ObjectParameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">Nom du paramètre. Ce nom ne doit pas inclure le marqueur de paramètre « @ » utilisé dans les instructions [!INCLUDE[esql](~/includes/esql-md.md)], mais uniquement le nom réel. Le premier caractère de l'expression doit être une lettre. Tous les caractères ultérieurs dans l'expression doivent être des lettres, des chiffres ou des traits de soulignement (_).</param>
        <param name="type">Type du Common Language Runtime (CLR) du paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Objects.ObjectParameter" /> avec le nom et le type spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu'il est instancié, le nom du paramètre ne peut pas être modifié. La valeur du paramètre peut être définie ou modifiée par le biais de la propriété <xref:System.Data.Objects.ObjectParameter.Value%2A>. Une fois la requête compilée, la valeur ne peut pas être modifiée. Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Si la valeur de l’un des arguments est null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Si la valeur de l’argument de nom n’est pas valide. Les noms des paramètres doivent commencer par une lettre et peuvent contenir uniquement des lettres, des chiffres et des traits de soulignement.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.Objects.ObjectParameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du paramètre, qui peut être défini uniquement par le biais d'un constructeur.</summary>
        <value>Nom du paramètre, qui peut être défini uniquement par le biais d'un constructeur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu'il est instancié, le nom du paramètre ne peut pas être modifié. La valeur du paramètre peut être définie ou modifiée par le biais de la propriété <xref:System.Data.Objects.ObjectParameter.Value%2A>. Une fois la requête compilée, la valeur ne peut pas être modifiée. Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouveaux paramètres à la collection. Il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterType : Type" Usage="System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de paramètre.</summary>
        <value>Le <see cref="T:System.Type" /> du paramètre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type de paramètre peut être défini uniquement par le biais d'un constructeur.  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouveaux paramètres à la collection. Il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Data.Objects.ObjectParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de paramètre.</summary>
        <value>Valeur du paramètre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois la requête compilée, la valeur ne peut pas être modifiée. Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Si la nouvelle valeur est incompatible avec le type déclaré dans le constructeur, une exception runtime peut se produire. Le fournisseur doit déterminer si la valeur est compatible avec le type déclaré. Par exemple, si le type initial est <xref:System.Int32> et que la nouvelle valeur est <xref:System.Guid>, vous pouvez recevoir une exception.  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L’exemple ajoute de nouveaux paramètres à la collection. Il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</related>
      </Docs>
    </Member>
  </Members>
</Type>