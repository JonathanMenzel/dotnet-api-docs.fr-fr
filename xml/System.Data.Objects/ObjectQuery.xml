<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e5343d026f21efaba63022c3d7fb7f7c2c9a880" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48612798" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable, System::Linq::IQueryable" />
  <TypeSignature Language="F#" Value="type ObjectQuery = class&#xA;    interface IEnumerable&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="44b15-101">Implémente la fonctionnalité commune des requêtes exécutées sur un modèle conceptuel à l'aide de LINQ to Entities et de <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="44b15-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-102"><xref:System.Data.Objects.ObjectQuery> est la classe de base pour les requêtes sur un modèle conceptuel.</span><span class="sxs-lookup"><span data-stu-id="44b15-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="44b15-103"><xref:System.Data.Objects.ObjectQuery> est fourni pour garantir que les requêtes LINQ to Entities ont les mêmes fonctionnalités que les requêtes exécutées à l’aide de <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="44b15-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="44b15-104">Vous devez utiliser <xref:System.Data.Objects.ObjectQuery%601> avec un type spécifié pour interroger un modèle conceptuel.</span><span class="sxs-lookup"><span data-stu-id="44b15-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="44b15-105">Pour plus d’informations, consultez [requêtes d’objet](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="44b15-105">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d">
      <span data-ttu-id="44b15-106">LINQ to Entities</span>
      <span class="sxs-lookup">
        <span data-stu-id="44b15-106">LINQ to Entities</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string" Usage="System.Data.Objects.ObjectQuery.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-107">Retourne le texte de commande de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-107">Returns the command text for the query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-108">Valeur <see langword="string" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-108">A <see langword="string" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Data.Objects.ObjectContext" Usage="System.Data.Objects.ObjectQuery.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-109">Obtient l'objet de contexte associé à cette requête d'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-109">Gets the object context associated with this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-110">Objet <see cref="T:System.Data.Objects.ObjectContext" /> associé à cette instance <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-110">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-111">Le contexte pour la requête inclut la connexion, le cache et les métadonnées.</span><span class="sxs-lookup"><span data-stu-id="44b15-111">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="44b15-112">Pour plus d’informations, consultez [Vue d’ensemble d’Object Services (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span><span class="sxs-lookup"><span data-stu-id="44b15-112">For more information, see [Object Services Overview (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="44b15-113">La propriété de connexion est mutable et doit être définie pour qu'une requête puisse être exécutée.</span><span class="sxs-lookup"><span data-stu-id="44b15-113">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="44b15-114">Pour plus d’informations, consultez [gestion des connexions dans Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="44b15-114">For more information, see [Managing Connections in Object Services (Entity Framework)](https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b15-115">L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="44b15-115">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="44b15-116">L'exemple obtient l'objet <xref:System.Data.Objects.ObjectContext> associé à cet objet <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="44b15-116">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-117">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-117">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePlanCaching : bool with get, set" Usage="System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-118">Obtient ou définit une valeur qui indique si le plan de requête doit être mis en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-118">Gets or sets a value that indicates whether the query plan should be cached.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-119">Valeur qui indique si le plan de requête doit être mis en cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-119">A value that indicates whether the query plan should be cached.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-120">Pour plus d’informations, consultez [mise en cache de requête planifier](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span><span class="sxs-lookup"><span data-stu-id="44b15-120">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-121">Interrogation des données sous forme d'objets (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-121">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">
          <span data-ttu-id="44b15-122">Objet <see cref="T:System.Data.Objects.MergeOption" /> à utiliser lors de l'exécution de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-122">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span>
          </span>
          <span data-ttu-id="44b15-123">La valeur par défaut est <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-123">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="44b15-124">Exécute la requête d’objet non typé avec l’option de fusion spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-124">Executes the untyped object query with the specified merge option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b15-125">Objet <see cref="T:System.Data.Objects.ObjectResult`1" /> qui contient une collection d'objets entité retournés par la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-125">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-126">L'option de fusion par défaut pour les requêtes d'objets est <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="44b15-126">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="44b15-127">Pour plus d’informations, consultez [résolution d’identité, la gestion de l’état et le suivi des modifications](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="44b15-127">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="44b15-128">Appelez la méthode <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> sur <xref:System.Data.Objects.ObjectQuery%601> pour les requêtes d'objet typé.</span><span class="sxs-lookup"><span data-stu-id="44b15-128">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-129">Interrogation des données sous forme d'objets (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-129">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberSignature Language="F#" Value="member this.GetResultType : unit -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="objectQuery.GetResultType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b15-130">Retourne des informations sur le type de résultat de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-130">Returns information about the result type of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b15-131">Objet <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> qui contient des informations sur le type de résultat de la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-131">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44b15-132">Cet exemple est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="44b15-132">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="44b15-133">L'exemple crée un objet <xref:System.Data.Objects.ObjectQuery%601> de type <xref:System.Data.Common.DbDataRecord> et utilise la méthode <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> pour déterminer si le type retourné représente une ligne.</span><span class="sxs-lookup"><span data-stu-id="44b15-133">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67(v=vs.90)">
          <span data-ttu-id="44b15-134">Gestion des connexions dans Object Services (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-134">Managing Connections in Object Services (Entity Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/196097a5-a791-4ac4-9e6a-805685d481d5">
          <span data-ttu-id="44b15-135">Métadonnées ADO.NET</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-135">ADO.NET Metadata</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberSignature Language="F#" Value="member this.MergeOption : System.Data.Objects.MergeOption with get, set" Usage="System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-136">Obtient ou définit la manière dont les objets retournés par une requête sont ajoutés au contexte de l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-136">Gets or sets how objects returned from a query are added to the object context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-137">Requête <see cref="T:System.Data.Objects.MergeOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-137">The query <see cref="T:System.Data.Objects.MergeOption" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-138">Si aucun objet <xref:System.Data.Objects.MergeOption> n'est spécifié, la valeur par défaut est <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="44b15-138">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="44b15-139">Pour plus d’informations, consultez [résolution d’identité, la gestion de l’état et le suivi des modifications](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="44b15-139">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-140">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-140">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Data.Objects.ObjectParameterCollection" Usage="System.Data.Objects.ObjectQuery.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-141">Obtient la collection de paramètres pour cette requête d’objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-141">Gets the parameter collection for this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-142">Collection de paramètres pour cet objet <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-142">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-143">Utilisez l'objet <xref:System.Data.Objects.ObjectParameterCollection> retourné pour spécifier les paramètres qui sont passés à la requête.</span><span class="sxs-lookup"><span data-stu-id="44b15-143">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="44b15-144">Pour plus d’informations, consultez [méthodes du Générateur de requête](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="44b15-144">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b15-145">Cet exemple est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="44b15-145">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="44b15-146">L'exemple ajoute de nouveaux paramètres à la collection, puis il obtient la collection de paramètres pour cet objet <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="44b15-146">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="44b15-147">Ensuite, il itère au sein de la collection <xref:System.Data.Objects.ObjectParameterCollection> et affiche le nom, le type et la valeur de chaque paramètre de la collection.</span><span class="sxs-lookup"><span data-stu-id="44b15-147">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-148">Interrogation des données sous forme d'objets (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-148">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b15-149">Retourne un énumérateur qui itère au sein d’une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-149">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b15-150">
            <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-150">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-151">L'appel de <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> exécute la requête avec l'option de fusion spécifiée par la propriété <xref:System.Data.Objects.ObjectQuery.MergeOption%2A>.</span><span class="sxs-lookup"><span data-stu-id="44b15-151">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="44b15-152">L'instruction `foreach` du langage C# (`For Each` en Visual Basic) se charge de la complexité des énumérateurs.</span><span class="sxs-lookup"><span data-stu-id="44b15-152">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="44b15-153">Il est donc recommandé d'utiliser `foreach` plutôt que de manipuler l'énumérateur directement.</span><span class="sxs-lookup"><span data-stu-id="44b15-153">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="44b15-154">Les énumérateurs peuvent être utilisés pour lire les données de la collection, mais ils ne permettent pas de modifier la collection sous-jacente.</span><span class="sxs-lookup"><span data-stu-id="44b15-154">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-155">Interrogation des données sous forme d'objets (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-155">Querying Data as Objects (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-156">Obtient une valeur qui indique si la collection retournée par la requête contient des objets de collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-156">Gets a value that indicates whether the collection returned by the query contains collection objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-157">Valeur Boolean.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-157">A Boolean value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-158">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="44b15-158">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44b15-159">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.ObjectQuery%601> est castée en interface <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="44b15-159">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="44b15-160">Cette propriété retourne toujours `false` , car la collection retournée par la requête contient des objets et non des collections.</span><span class="sxs-lookup"><span data-stu-id="44b15-160">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b15-161">Retourne la collection sous la forme d'un objet <see cref="T:System.Collections.IList" /> utilisé pour la liaison de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-161">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b15-162">
            <see cref="T:System.Collections.IList" /> d'objets entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-162">An <see cref="T:System.Collections.IList" /> of entity objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-163">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="44b15-163">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44b15-164">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.ObjectQuery%601> est castée en interface <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="44b15-164">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="44b15-165">Cette méthode permet d'établir une liaison de données au résultat de la requête.</span><span class="sxs-lookup"><span data-stu-id="44b15-165">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="44b15-166">Elle est appelée par le contrôle lié à la collection.</span><span class="sxs-lookup"><span data-stu-id="44b15-166">It is called by the control bound to the collection.</span></span> <span data-ttu-id="44b15-167">Pour plus d’informations, consultez [liaison d’objets aux contrôles](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span><span class="sxs-lookup"><span data-stu-id="44b15-167">For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Linq::IQueryable::ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-168">Obtient le type d'élément de résultat pour cette instance de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-168">Gets the result element type for this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-169">Objet <see cref="T:System.Type" /> qui correspond au type d'élément de résultat pour cette instance de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-169">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-170">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="44b15-170">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44b15-171">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.ObjectQuery%601> est castée en interface <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="44b15-171">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System::Linq::IQueryable::Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-172">Obtient l'expression décrivant cette requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-172">Gets the expression describing this query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-173">Objet <see cref="T:System.Linq.Expressions.Expression" /> LINQ qui décrit cette requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-173">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-174">Pour les requêtes générées à l’aide de modèles de générateurs LINQ, cela retourne une arborescence d’expressions LINQ complète ; sinon, retourne une expression constante qui encapsule cette requête.</span><span class="sxs-lookup"><span data-stu-id="44b15-174">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="44b15-175">Notez que l'expression par défaut n'est pas mise en cache.</span><span class="sxs-lookup"><span data-stu-id="44b15-175">Note that the default expression is not cached.</span></span> <span data-ttu-id="44b15-176">Cela permet à l'infrastructure de différencier les requêtes LINQ et Entity SQL.</span><span class="sxs-lookup"><span data-stu-id="44b15-176">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="44b15-177">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="44b15-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44b15-178">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.ObjectQuery%601> est castée en interface <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="44b15-178">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System::Linq::IQueryable::Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Linq.IQueryable.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="44b15-179">Obtient l'objet <see cref="T:System.Linq.IQueryProvider" /> LINQ associé à cette instance de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-179">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="44b15-180">Objet <see cref="T:System.Linq.IQueryProvider" /> associé à cette instance de requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-180">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b15-181">Ce membre est une implémentation d'un membre d'interface explicite.</span><span class="sxs-lookup"><span data-stu-id="44b15-181">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="44b15-182">Il peut uniquement être utilisé lorsque l'instance de <xref:System.Data.Objects.ObjectQuery%601> est castée en interface <xref:System.ComponentModel.IListSource>.</span><span class="sxs-lookup"><span data-stu-id="44b15-182">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberSignature Language="F#" Value="member this.ToTraceString : unit -&gt; string" Usage="objectQuery.ToTraceString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="44b15-183">Retourne les commandes à exécuter sur la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-183">Returns the commands to execute against the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="44b15-184">
            <see langword="string" /> qui représente les commandes exécutées par la requête sur la source de données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-184">A <see langword="string" /> that represents the commands that the query executes against the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="44b15-185">L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="44b15-185">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">
          <span data-ttu-id="44b15-186">Interrogation des données sous forme d’objets et mise en forme des résultats (Entity Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="44b15-186">Querying Data as Objects and Shaping Results (Entity Framework)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>