<Type Name="ObjectResult&lt;T&gt;" FullName="System.Data.Objects.ObjectResult&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61d1b4de307995d0df70697cdfc414e7a86826f1" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51882999" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectResult&lt;T&gt; : System.Data.Objects.ObjectResult, System.Collections.Generic.IEnumerable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectResult`1&lt;T&gt; extends System.Data.Objects.ObjectResult implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectResult`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectResult(Of T)&#xA;Inherits ObjectResult&#xA;Implements IEnumerable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectResult sealed : System::Data::Objects::ObjectResult, System::Collections::Generic::IEnumerable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectResult&lt;'T&gt; = class&#xA;    inherit ObjectResult&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectResult</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="8aef6-101">Type d'entité du résultat.</span><span class="sxs-lookup"><span data-stu-id="8aef6-101">The entity type of the result.</span></span></typeparam>
    <summary><span data-ttu-id="8aef6-102">Représente le résultat d’un objet <see cref="T:System.Data.Objects.ObjectQuery`1" /> en tant que collection dénombrable d’objets.</span><span class="sxs-lookup"><span data-stu-id="8aef6-102">Represents the result of an <see cref="T:System.Data.Objects.ObjectQuery`1" /> as an enumerable collection of objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aef6-103">Cette classe implémente <xref:System.Collections.Generic.IEnumerable%601> et <xref:System.IDisposable>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-103">This class implements <xref:System.Collections.Generic.IEnumerable%601> and <xref:System.IDisposable>.</span></span> <span data-ttu-id="8aef6-104">Les instances de cette classe sont retournées à partir des méthodes <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> et <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType>. </span><span class="sxs-lookup"><span data-stu-id="8aef6-104">Instances of this class are returned from the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method and from the <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aef6-105">L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), qui a été généré par le [Assistant Entity Data Model](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).</span><span class="sxs-lookup"><span data-stu-id="8aef6-105">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832), which was generated by the [Entity Data Model Wizard](https://msdn.microsoft.com/library/423ec9a7-5464-43b7-a7ef-9f5f000848b5).</span></span>  
  
 <span data-ttu-id="8aef6-106">L'exemple suivant retourne un objet <xref:System.Data.Objects.ObjectResult%601> à partir de la méthode <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-106">The following example returns an <xref:System.Data.Objects.ObjectResult%601> from the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method.</span></span> <span data-ttu-id="8aef6-107">Ensuite, il obtient un énumérateur et itère au sein des résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-107">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="8aef6-108">À la fin, il libère l’énumérateur et l’objet <xref:System.Data.Objects.ObjectResult%601>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-108">At the end, it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Execute](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_execute)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Execute](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_execute)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="8aef6-109">Interrogation des données sous forme d'objets (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8aef6-109">Querying Data as Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectResult`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="objectResult.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aef6-110">Exécute les tâches associées à la libération ou à la redéfinition des ressources.</span><span class="sxs-lookup"><span data-stu-id="8aef6-110">Performs tasks associated with freeing, releasing, or resetting resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aef6-111">Ferme l'objet <xref:System.Data.Common.DbDataReader>, qui contient les résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-111">Closes the <xref:System.Data.Common.DbDataReader>, which contains the results of the query.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aef6-112">L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8aef6-112">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="8aef6-113">L'exemple retourne un objet <xref:System.Data.Objects.ObjectResult%601> à partir de la méthode <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-113">The example returns an <xref:System.Data.Objects.ObjectResult%601> from the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method.</span></span> <span data-ttu-id="8aef6-114">Ensuite, il obtient un énumérateur et itère au sein des résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-114">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="8aef6-115">À la fin, il libère l’énumérateur et l’objet <xref:System.Data.Objects.ObjectResult%601>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-115">At the end, it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="8aef6-116">Interrogation des données sous forme d'objets (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8aef6-116">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public override Type ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectResult`1.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ElementType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementType : Type" Usage="System.Data.Objects.ObjectResult&lt;'T&gt;.ElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8aef6-117">Obtient le type de <see cref="T:System.Data.Objects.ObjectResult`1" />.</span><span class="sxs-lookup"><span data-stu-id="8aef6-117">Gets the type of the <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></summary>
        <value><span data-ttu-id="8aef6-118"><see cref="T:System.Type" /> qui correspond au type de l'objet <see cref="T:System.Data.Objects.ObjectResult`1" />.</span><span class="sxs-lookup"><span data-stu-id="8aef6-118">A <see cref="T:System.Type" /> that is the type of the <see cref="T:System.Data.Objects.ObjectResult`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectResult`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="objectResult.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8aef6-119">Retourne un énumérateur qui itère au sein des résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-119">Returns an enumerator that iterates through the query results.</span></span></summary>
        <returns><span data-ttu-id="8aef6-120">Énumérateur qui itère au sein des résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-120">An enumerator that iterates through the query results.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8aef6-121">L'énumérateur doit être supprimé lorsqu'il n'est plus nécessaire.</span><span class="sxs-lookup"><span data-stu-id="8aef6-121">The enumerator must be disposed when no longer needed.</span></span> <span data-ttu-id="8aef6-122">À l’aide de la `foreach` instruction (`For Each` en Visual Basic) garantit que l’énumérateur est correctement supprimé lorsque l’itération sur les résultats est terminée.</span><span class="sxs-lookup"><span data-stu-id="8aef6-122">Using the `foreach` statement (`For Each` in Visual Basic) ensures that the enumerator is correctly disposed when iteration over the results is complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8aef6-123">L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8aef6-123">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="8aef6-124">L'exemple retourne un objet <xref:System.Data.Objects.ObjectResult%601> à partir de la méthode <xref:System.Data.Objects.ObjectQuery%601.Execute%2A>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-124">The example returns an <xref:System.Data.Objects.ObjectResult%601> from the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method.</span></span> <span data-ttu-id="8aef6-125">Ensuite, il obtient un énumérateur et itère au sein des résultats de la requête.</span><span class="sxs-lookup"><span data-stu-id="8aef6-125">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="8aef6-126">À la fin, il libère l’énumérateur et l’objet <xref:System.Data.Objects.ObjectResult%601>.</span><span class="sxs-lookup"><span data-stu-id="8aef6-126">At the end, it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="8aef6-127">Interrogation des données sous forme d'objets (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="8aef6-127">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>