<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="664db2787ebe4f9c098d29c333e9b5fd3d93d1ec" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48698400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Maintient la gestion de l'identité et de l'état d'objet pour les instances de type d'entité et les instances de relation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> effectue le suivi des résultats de requête et fournit la logique nécessaire pour fusionner plusieurs résultats de requête qui se chevauchent. Il effectue également le suivi des modifications en mémoire lorsqu'un utilisateur insère, supprime ou modifie des objets et fournit le jeu de modifications pour les mises à jour. Ce jeu de modifications est utilisé par le processeur de modification pour rendre les modifications persistantes.  
  
 Cette classe est généralement utilisée par <xref:System.Data.Objects.ObjectContext>, et non directement dans les applications.  
  
   
  
## Examples  
 Ces exemples sont basés sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 L'exemple suivant obtient l'objet <xref:System.Data.Objects.ObjectStateManager> à partir de l'objet <xref:System.Data.Objects.ObjectContext> et utilise le gestionnaire d'état pour accéder à un objet dans le contexte.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 L'exemple suivant utilise la méthode <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> sur l'objet <xref:System.Data.Objects.ObjectStateManager> retourné pour obtenir un objet en fonction de sa clé d'entité.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">Objet <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> qui fournit des informations de mappage et de métadonnées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Data.Objects.ObjectStateManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="entity">Objet pour lequel l'état doit être modifié.</param>
        <param name="entityState">Nouvel état de l'objet.</param>
        <summary>Remplace l'état du <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour un objet spécifique par le <paramref name="entityState" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour le <paramref name="entity" /> fourni.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de la <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> méthode pour modifier l’état d’un objet à <xref:System.Data.EntityState.Deleted> ne provoque pas d’objets connexes dans une relation contrainte à supprimer.  
  
 Modification de l’état d’un objet n’affecte pas les objets connexes dans le graphique d’objet.  
  
 Lorsque vous modifiez le <xref:System.Data.EntityState> d’une entrée d’objet entité en <xref:System.Data.EntityState.Modified>, toutes les propriétés de l’objet sont marquées comme modifiées, indépendamment des valeurs actuelles ou d’origine.  
  
 Lorsque le <xref:System.Data.EntityState> modification d’entrée d’un objet d’entité à <xref:System.Data.EntityState.Added>, <xref:System.Data.EntityState.Deleted>, ou <xref:System.Data.EntityState.Detached>, les relations de l’objet sont également à jour.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lorsque <paramref name="entity" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Lorsque l'objet n'est pas détaché et n'a pas d'entrée dans le gestionnaire d'état.  
  
- ou - 
Lorsque vous essayez de modifier l'état en <see cref="F:System.Data.EntityState.Detached" /> à partir de tout autre <see cref="T:System.Data.EntityState" />  
  
- ou - 
Lorsque <paramref name="state" /> n'est pas une valeur <see cref="T:System.Data.EntityState" /> valide.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Modifie l'état de la relation spécifiée entre deux objets d'entité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n'est pas prise en charge pour les relations basées sur une association de clé étrangère.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationProperty" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité source à une extrémité de la relation.</param>
        <param name="targetEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité cible à l'autre extrémité de la relation.</param>
        <param name="navigationProperty">Nom de la propriété de navigation sur la <c>source</c> qui retourne la <c>cible</c> spécifiée.</param>
        <param name="relationshipState">
          <see cref="T:System.Data.EntityState" /> demandé de la relation spécifiée.</param>
        <summary>Modifie l'état de la relation entre deux objets d'entité spécifiée en fonction des deux objets associés et du nom de la propriété de navigation.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectStateEntry" /> de la relation qui a été modifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrées pour les objets aux deux extrémités de la relation spécifiée doivent exister dans le <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Cette méthode n'est pas prise en charge pour les relations basées sur une association de clé étrangère.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lorsque <paramref name="source" /> ou <paramref name="target" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Lors de la tentative de modification de l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Deleted" />.  
  
- ou - 
Lorsque vous essayez de modifier l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Added" />.  
  
- ou - 
Lorsque <paramref name="state" /> n'est pas une valeur <see cref="T:System.Data.EntityState" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité source à une extrémité de la relation.</param>
        <param name="targetEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité cible à l'autre extrémité de la relation.</param>
        <param name="relationshipName">Nom de la relation.</param>
        <param name="targetRoleName">Nom du rôle à la terminaison <c>cible</c> de la relation.</param>
        <param name="relationshipState">
          <see cref="T:System.Data.EntityState" /> demandé de la relation spécifiée.</param>
        <summary>Modifie l'état de la relation entre deux objets d'entité spécifiée en fonction des deux objets associés et des propriétés de la relation.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectStateEntry" /> de la relation qui a été modifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrées pour les objets aux deux extrémités de la relation spécifiée doivent exister dans le <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Cette méthode n’est pas pris en charge pour les relations qui reposent sur une association de clé étrangère. Pour plus d’informations, consultez [définition et la gestion des relations](http://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lorsque <paramref name="source" /> ou <paramref name="target" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Lorsque vous essayez de modifier l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Deleted" />.  
  
- ou - 
Lorsque vous essayez de modifier l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Added" />.  
  
- ou - 
Lorsque <paramref name="state" /> n'est pas une valeur <see cref="T:System.Data.EntityState" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Le type d’entité de la <c>source</c> objet.</typeparam>
        <param name="sourceEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité source à une extrémité de la relation.</param>
        <param name="targetEntity">Instance d'objet ou <see cref="T:System.Data.EntityKey" /> de l'entité cible à l'autre extrémité de la relation.</param>
        <param name="navigationPropertySelector">Expression LINQ qui sélectionne la propriété de navigation sur la <c>source</c> qui retourne la <c>cible</c> spécifiée.</param>
        <param name="relationshipState">
          <see cref="T:System.Data.EntityState" /> demandé de la relation spécifiée.</param>
        <summary>Modifie l'état de la relation entre deux objets d'entité spécifiée en fonction des deux objets associés et d'une expression LINQ qui définit la propriété de navigation.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectStateEntry" /> de la relation qui a été modifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrées pour les objets aux deux extrémités de la relation spécifiée doivent exister dans le <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Cette méthode n’est pas pris en charge pour les relations qui reposent sur une association de clé étrangère.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lorsque <paramref name="source" />, <paramref name="target" /> ou <paramref name="selector" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="selector" /> est incorrect ou ne peut pas retourner de propriété de navigation.</exception>
        <exception cref="T:System.InvalidOperationException">Lorsque vous essayez de modifier l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Deleted" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Deleted" />.  
  
- ou - 
Lorsque vous essayez de modifier l'état de la relation vers un état autre que <see cref="F:System.Data.EntityState.Added" /> ou <see cref="F:System.Data.EntityState.Detached" /> lorsque la <paramref name="source" /> ou la <paramref name="target" /> est dans un état <see cref="F:System.Data.EntityState.Added" />.  
  
- ou - 
Lorsque <paramref name="state" /> n'est pas une valeur <see cref="T:System.Data.EntityState" /> valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">Objet <see cref="T:System.Data.EntityState" /> utilisé pour filtrer les objets <see cref="T:System.Data.Objects.ObjectStateEntry" /> retournés.</param>
        <summary>Retourne une collection d'objets <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour les objets ou les relations avec l'état donné.</summary>
        <returns>Collection d'objets <see cref="T:System.Data.Objects.ObjectStateEntry" /> dans l'objet <see cref="T:System.Data.EntityState" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'objet <xref:System.Data.EntityState> est un champ binaire ; par conséquent, les entrées d'état pour plusieurs états peuvent être récupérées en un appel en effectuant une opération OR au niveau du bit de plusieurs valeurs <xref:System.Data.EntityState>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Lorsque <paramref name="state" /> est <see cref="F:System.Data.EntityState.Detached" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour une entrée d'objet ou de relation spécifique.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Data.EntityKey" />.</param>
        <summary>Retourne un objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour l'entrée d'objet ou de relation avec la clé spécifiée.</summary>
        <returns>Objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour l'objet <see cref="T:System.Data.EntityKey" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> méthode pour retourner un <xref:System.Data.Objects.ObjectStateEntry> objet sans avoir à gérer le <xref:System.InvalidOperationException> déclenchés par le <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> (méthode).  
  
   
  
## Examples  
 L’exemple de cette rubrique est basé sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). L'exemple obtient l'objet <xref:System.Data.Objects.ObjectStateEntry> pour l'objet <xref:System.Data.EntityKey> donné à partir de l'objet <xref:System.Data.Objects.ObjectStateManager>. Ensuite, il obtient la valeur actuelle de la `SalesOrderHeader.PurchaseOrderNumber` propriété, modifie la valeur de propriété et énumère la collection de propriétés modifiées.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Lorsque <paramref name="key" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Lorsque la <paramref name="key" /> spécifiée ne peut pas être trouvé dans le gestionnaire d'état.</exception>
        <exception cref="T:System.InvalidOperationException">Il n'existe aucune entité avec l'objet <see cref="T:System.Data.EntityKey" /> dans l'objet <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Objet <see cref="T:System.Object" /> auquel appartient l'objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> récupéré.</param>
        <summary>Retourne un objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour l'objet spécifié.</summary>
        <returns>Objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour l'objet <see cref="T:System.Object" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> méthode pour retourner un <xref:System.Data.Objects.ObjectStateEntry> objet sans avoir à gérer le <xref:System.InvalidOperationException> déclenchés par le <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il n'existe aucune entité pour l'objet <see cref="T:System.Object" /> dans l'objet <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">Objet pour lequel retourner le <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <summary>Retourne le <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> utilisé par l'objet spécifié.</summary>
        <returns>
          <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> pour l'objet spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelant le <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> méthode est la même que si vous appelez le <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> (méthode), sauf que cette méthode lève une exception au lieu de retourner `false`.  
  
 Appelez le <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> méthode pour éviter de gérer le <xref:System.InvalidOperationException> qui se produit quand un <xref:System.Data.Objects.DataClasses.RelationshipManager> ne peut pas être retourné pour l’entité fournie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Lorsqu'un <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> ne peut pas être retourné pour l'<paramref name="entity" /> spécifiée.</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associé à ce gestionnaire d'état.</summary>
        <value>
          <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> associé à ce <see cref="T:System.Data.Objects.ObjectStateManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.Data.Metadata.Edm.MetadataWorkspace> est une interface de programmation centrale que vous pouvez utiliser pour interagir avec les métadonnées EDM (Entity Data Model) au moment de l'exécution et dans le contexte d'une application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque des entités sont ajoutées ou supprimées du gestionnaire d'état.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Essaie de retourner un objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour une entrée d'objet ou de relation spécifique.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Objet <see cref="T:System.Data.EntityKey" /> donné.</param>
        <param name="entry">Lorsque cette méthode est retournée, contient un objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour l'objet <see cref="T:System.Data.EntityKey" /> donné. Ce paramètre est passé sans être initialisé.</param>
        <summary>Essaie de récupérer l'objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour l'objet ou la relation avec l'objet <see cref="T:System.Data.EntityKey" /> spécifié.</summary>
        <returns>Valeur booléenne qui est <see langword="true" /> s'il existe un <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour le <see cref="T:System.Data.EntityKey" /> donné ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> pour retourner un objet <xref:System.Data.Objects.ObjectStateEntry> sans avoir à gérer l'exception <xref:System.InvalidOperationException> levée par la méthode <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>.  
  
   
  
## Examples  
 Les exemples de cette rubrique sont basés sur le [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 L'exemple tente de récupérer l'objet <xref:System.Data.Objects.ObjectStateEntry> correspondant pour l'objet <xref:System.Data.EntityKey> donné.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 L'exemple suivant utilise la méthode <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> sur l'objet <xref:System.Data.Objects.ObjectStateManager> retourné pour obtenir un objet en fonction de sa clé d'entité.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Une valeur <see langword="null" /><see langword="Nothing" /> en Visual Basic) est fournie pour <paramref name="key" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Objet <see cref="T:System.Object" /> auquel appartient l'objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> récupéré.</param>
        <param name="entry">Lorsque cette méthode est retournée, contient l'objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> pour l'objet <see cref="T:System.Data.EntityKey" /> donné. Ce paramètre est passé sans être initialisé.</param>
        <summary>Essaie de récupérer l'objet <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour l'objet <see cref="T:System.Object" /> spécifié.</summary>
        <returns>Valeur booléenne qui est <see langword="true" /> s'il existe un <see cref="T:System.Data.Objects.ObjectStateEntry" /> correspondant pour l'objet donné ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la méthode <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> pour retourner un objet <xref:System.Data.Objects.ObjectStateEntry> sans avoir à gérer l'exception <xref:System.InvalidOperationException> levée par la méthode <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">Objet pour lequel retourner le <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <param name="relationshipManager">La méthode retourne <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> pour <c>entity</c>.</param>
        <summary>Retourne le <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> utilisé par l'objet spécifié.</summary>
        <returns>
          <see langword="true" /> si une instance de <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> a été retournée pour le <paramref name="entity" /> fourni ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> méthode est utilisée pour obtenir le <xref:System.Data.Objects.DataClasses.RelationshipManager> pour les objets ignorant la persistance. Lorsque les objets implémentent <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> ou hériter de <xref:System.Data.Objects.DataClasses.EntityObject>, le <xref:System.Data.Objects.DataClasses.RelationshipManager> est accessible à partir du <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> propriété.  
  
 Le <xref:System.Data.Objects.DataClasses.RelationshipManager> ne peut pas être retourné lorsque l’objet est dans un <xref:System.Data.EntityState.Detached> état.  
  
 Appelant le <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> méthode est la même que si vous appelez le <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> (méthode), sauf que cette méthode retourne `false` au lieu de lever une exception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>