<Type Name="ILease" FullName="System.Runtime.Remoting.Lifetime.ILease">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a75620e8c62c3a53ec4594fc4caf7c650d7193e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489143" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ILease" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILease" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.ILease" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILease" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILease" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit un objet de bail de durée de vie utilisé par le service de durée de vie de communication à distance.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Garbage collection distribué contrôle les applications serveur peuvent être supprimés. En règle générale, un garbage collection distribué utilise des décomptes de références et le test ping pour le contrôle. Cela fonctionne bien quand il y a quelques clients par objet, mais ne fonctionne pas correctement lorsqu’il existe des milliers de clients par chaque objet. Le service de durée de vie peut assumer la fonction d’un garbage collector distribué classique et les échelles correctement lorsque le nombre de clients augmente.  
  
 Le service de durée de vie associe un bail à chaque objet activé à distance. Lorsque le bail expire, l’objet est supprimé. Un bail peut spécifier qu’un objet a une durée de vie infinie.  
  
 Chaque <xref:System.AppDomain> contient un gestionnaire de bail qui administre les baux du domaine. Le Gestionnaire de bail examine périodiquement les baux pour l’expiration du temps. Si un bail a expiré, il peut être annulé en supprimant sa référence au bail, ou renouvelé en appelant un ou plusieurs des sponsors du bail.  
  
 Un bail contient des propriétés qui déterminent ses stratégies et méthodes qui renouvellent la durée du bail. Le bail expose le <xref:System.Runtime.Remoting.Lifetime.ILease> interface.  
  
 Pour obtenir un exemple montrant comment utiliser les <xref:System.Runtime.Remoting.Lifetime.ILease> interface voir [durées de vie](http://msdn.microsoft.com/library/334a30e5-33cb-4f0f-a38a-ed4abc5560fa).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan CurrentLeaseTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CurrentLeaseTime { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la période résiduelle du bail.</summary>
        <value>Période résiduelle du bail.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Remoting.Lifetime.LeaseState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As LeaseState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Lifetime::LeaseState CurrentState { System::Runtime::Remoting::Lifetime::LeaseState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Lifetime.LeaseState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> actuel du bail.</summary>
        <value>
          <see cref="T:System.Runtime.Remoting.Lifetime.LeaseState" /> actuel du bail.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="T:System.Runtime.Remoting.Lifetime.LeaseState" />
      </Docs>
    </Member>
    <Member MemberName="InitialLeaseTime">
      <MemberSignature Language="C#" Value="public TimeSpan InitialLeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InitialLeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialLeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InitialLeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée initiale du bail.</summary>
        <value>Durée initiale du bail.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime%2A> est définie sur <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, le bail n’expire jamais, puis l’objet associé aura une durée de vie infinie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Register">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inscrit un sponsor pour le bail.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">Objet de rappel du sponsor.</param>
        <summary>Inscrit un sponsor pour le bail sans renouveler ce dernier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un sponsor est inscrit avec la méthode actuelle, le bail n’est pas renouvelé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(class System.Runtime.Remoting.Lifetime.ISponsor obj, valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (obj As ISponsor, renewalTime As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(System::Runtime::Remoting::Lifetime::ISponsor ^ obj, TimeSpan renewalTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="obj">Objet de rappel du sponsor.</param>
        <param name="renewalTime">Durée de renouvellement du bail.</param>
        <summary>Inscrit un sponsor pour le bail et renouvelle celui-ci du <see cref="T:System.TimeSpan" /> spécifié.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Renew">
      <MemberSignature Language="C#" Value="public TimeSpan Renew (TimeSpan renewalTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan Renew(valuetype System.TimeSpan renewalTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Renew (renewalTime As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Renew(TimeSpan renewalTime);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renewalTime" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="renewalTime">Durée de renouvellement du bail.</param>
        <summary>Renouvelle un bail de la période spécifiée.</summary>
        <returns>Nouvelle heure d'expiration du bail.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La durée du bail est définie sur la valeur maximale de la <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> ou l’heure actuelle plus la durée de renouvellement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée au terme de laquelle un appel de l'objet distant renouvelle <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</summary>
        <value>Durée au terme de laquelle un appel de l'objet distant renouvelle <see cref="P:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous effectuez un appel à un objet distant, le service de durée de vie ajoute le <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> à la <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> uniquement si le <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> est descendu en dessous du <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A>. Appels séquentiels n’augmentent pas par conséquent la <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> sans limite. Au lieu de cela, immédiatement après chaque appel, le <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime%2A> est obligatoirement le <xref:System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime%2A> ou plus.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la période d'attente du retour d'un sponsor avec une durée de renouvellement.</summary>
        <value>Période d'attente du retour d'un sponsor avec une durée de renouvellement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout%2A> est <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, puis ce bail n’accepte pas de sponsors.  
  
 Si un sponsor ne répond pas à un appel à renouveler un bail dans le délai imparti, il est supposé pour être inactif et est supprimé de la liste des sponsors pour le bail actuel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister(class System.Runtime.Remoting.Lifetime.ISponsor obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister (obj As ISponsor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister(System::Runtime::Remoting::Lifetime::ISponsor ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Runtime.Remoting.Lifetime.ISponsor" />
      </Parameters>
      <Docs>
        <param name="obj">Le commanditaire de bail à désinscrire.</param>
        <summary>Supprime un sponsor de la liste de commanditaires.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">L’appelant immédiat effectue l’appel via une référence à l’interface et ne dispose pas d’autorisation d’infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>