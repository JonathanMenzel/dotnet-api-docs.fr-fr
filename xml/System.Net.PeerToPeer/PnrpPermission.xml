<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66595da3de98ede979e14cf91995cf8f2b5988b7" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49147229" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0d19b-101">Spécifie les valeurs utilisées dans les autorisations d'objet <see cref="N:System.Net.PeerToPeer" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d19b-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-102">Les autorisations par défaut permettent toutes les applications locales et Intranet zone pour accéder aux services PNRP.</span><span class="sxs-lookup"><span data-stu-id="0d19b-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="0d19b-103">Si les autorisations par défaut ne sont pas modifiées, toutes les applications de site-local et lien-local ont accès aux services de Peer-to-Peer, mais les applications (internet) globales n’ont aucun accès.</span><span class="sxs-lookup"><span data-stu-id="0d19b-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="0d19b-104">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="0d19b-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink?LinkID=92731">
      <span data-ttu-id="0d19b-105">API du fournisseur de Namespace PNRP</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d19b-105">PNRP Namespace Provider API</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="0d19b-106">Une des valeurs dans l’énumération <see cref="T:System.Security.Permissions.PermissionState" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d19b-107">Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> avec l’état d’autorisation initial fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-108">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="0d19b-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="0d19b-109">Si `state` est illimité, l’instance PnrpPermission passe toutes les demandes.</span><span class="sxs-lookup"><span data-stu-id="0d19b-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="0d19b-110">Si `state` contient une autre valeur, l’instance PnrpPermission échoue toutes les demandes.</span><span class="sxs-lookup"><span data-stu-id="0d19b-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d19b-111">Crée et retourne une copie identique de l'objet <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-112">Objet avec une interface IPermission, dont l'instance contient une copie de l'instance actuelle de <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-113">Une copie d’une autorisation représente le même accès aux ressources que l’autorisation d’origine.</span><span class="sxs-lookup"><span data-stu-id="0d19b-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="0d19b-114">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="0d19b-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d19b-115">- Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="0d19b-116">- Le numéro de version du paramètre n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-116">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d19b-117">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink?LinkID=92731">
          <span data-ttu-id="0d19b-118">API du fournisseur de Namespace PNRP</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-118">PNRP Namespace Provider API</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0d19b-119">Encodage XML à utiliser pour reconstruire l’autorisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-119">The XML encoding to use to reconstruct the permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d19b-120">Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-120">Reconstructs a security object with a specified state from an XML encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-121">Représente le modèle d’objet XML pour l’encodage des objets de sécurité.</span><span class="sxs-lookup"><span data-stu-id="0d19b-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="0d19b-122">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="0d19b-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="0d19b-123">Cette classe est destinée à être une implémentation légère d’un modèle d’objet XML simple pour une utilisation au sein du système de sécurité et non en tant que modèle objet XML global.</span><span class="sxs-lookup"><span data-stu-id="0d19b-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d19b-124">- Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span>
          </span>
          <span data-ttu-id="0d19b-125">- Le numéro de version du paramètre n’est pas pris en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-125">-   The parameter's version number is not supported.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0d19b-126">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="0d19b-127">Autorisation sur <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> avec l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span>
          </span>
          <span data-ttu-id="0d19b-128">Elle doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-128">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d19b-129">Crée et retourne une autorisation qui est l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-130">Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
          <span data-ttu-id="0d19b-131">Cette nouvelle autorisation est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic), si l'intersection est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-132">L’intersection de deux autorisations est une autorisation qui décrit l’ensemble des opérations qu’elles décrivent en commun.</span><span class="sxs-lookup"><span data-stu-id="0d19b-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="0d19b-133">Seule une demande qui passe les deux autorisations d’origine transmettra l’intersection.</span><span class="sxs-lookup"><span data-stu-id="0d19b-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="0d19b-134">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode Intersect.</span><span class="sxs-lookup"><span data-stu-id="0d19b-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="0d19b-135">X et Y représentent <xref:System.Security.IPermission> références d’objet qui ne sont pas un `null` référence (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0d19b-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="0d19b-136">X.Intersect(X) retourne une valeur égale à X.</span><span class="sxs-lookup"><span data-stu-id="0d19b-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="0d19b-137">X.Intersect (y) retourne la même valeur qu’y.Intersect (x).</span><span class="sxs-lookup"><span data-stu-id="0d19b-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="0d19b-138">X.Intersect (une `null` référence (`Nothing` en Visual Basic)) retourne un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0d19b-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d19b-139">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="0d19b-140">Autorisation qui doit être testée pour la relation de sous-ensemble.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-140">A permission that is to be tested for the subset relationship.</span>
          </span>
          <span data-ttu-id="0d19b-141">Cette autorisation doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-141">This permission must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d19b-142">Détermine si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-143">
            <see langword="True" /> si l'autorisation <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-143">
              <see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-144">Actuel <xref:System.Net.PeerToPeer.PnrpPermission> est un sous-ensemble de l’autorisation spécifiée si l’autorisation en cours spécifie un ensemble d’opérations qui est entièrement contenu par l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0d19b-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="0d19b-145">Par exemple, une autorisation qui représente l’accès à «*C:\example.txt*« est un sous-ensemble d’une autorisation qui représente l’accès à »*C:\\*».</span><span class="sxs-lookup"><span data-stu-id="0d19b-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="0d19b-146">Si cette méthode retourne `true`, l’autorisation en cours ne représente pas plus d’accès à la ressource protégée que l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0d19b-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="0d19b-147">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="0d19b-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="0d19b-148">X, Y et Z représentent <xref:System.Security.IPermission> les objets qui ne sont pas un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0d19b-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="0d19b-149">X.IsSubsetOf (x) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="0d19b-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="0d19b-150">X.IsSubsetOf (y) retourne la même valeur qu’y.IsSubsetOf (x) si et seulement si X et Y représentent le même jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="0d19b-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="0d19b-151">Si x.IsSubsetOf (y) et Y.IsSubsetOf retournent `true`, x.IsSubsetOf (z) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="0d19b-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="0d19b-152">Si X représente un objet IPermission vide avec un état d’autorisation *aucun* et Y représente un objet IPermission qui est une `null` référence (`Nothing` en Visual Basic), x.IsSubsetOf (y) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="0d19b-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="0d19b-153">Si Z est également une autorisation vide, l’opération ensembliste composée x.Union (z). IsSubsetOf (y) retourne également `true` , car le <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> de deux autorisations vides est une autorisation vide.</span><span class="sxs-lookup"><span data-stu-id="0d19b-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d19b-154">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d19b-155">Retourne une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est illimité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-156">
            <see langword="True" /> si l’autorisation actuelle est illimitée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-156">
              <see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-157">Une autorisation sans restriction représente l’accès à toutes les ressources protégées par l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="0d19b-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d19b-158">Crée un encodage XML du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> et de son état actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-159">Objet <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'autorisation, y compris des informations d'état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="0d19b-160">Autorisation à combiner avec l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-160">A permission to combine with the current permission.</span>
          </span>
          <span data-ttu-id="0d19b-161">Elle doit être du même type que l’autorisation actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-161">It must be of the same type as the current permission.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d19b-162">Crée une autorisation qui est l'union entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel et l'autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d19b-163">Nouvelle autorisation qui représente le <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d19b-164">Le résultat d’un appel à <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> est une autorisation qui représente toutes les opérations représentées par l’analyseur lexical actuel <xref:System.Net.PeerToPeer.PnrpPermission> et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="0d19b-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="0d19b-165">Toutes les demandes qui transmet une autorisation passent leur union.</span><span class="sxs-lookup"><span data-stu-id="0d19b-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="0d19b-166">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode Union.</span><span class="sxs-lookup"><span data-stu-id="0d19b-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="0d19b-167">X et Y représentent <xref:System.Security.IPermission> les objets qui ne sont pas un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="0d19b-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="0d19b-168">X.Union (x) retourne un objet qui a la même valeur que X.</span><span class="sxs-lookup"><span data-stu-id="0d19b-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="0d19b-169">X.Union (y) retourne un objet qui a la même valeur que l’objet retourné par y.Union (x).</span><span class="sxs-lookup"><span data-stu-id="0d19b-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="0d19b-170">X.Union (un `null` référence (`Nothing` en Visual Basic)) retourne un objet qui a la même valeur que X.</span><span class="sxs-lookup"><span data-stu-id="0d19b-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0d19b-171">Le paramètre <paramref name="target" /> n'est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d19b-171">
              <paramref name="target" /> parameter is invalid.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>