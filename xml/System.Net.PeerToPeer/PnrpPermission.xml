<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6791f-101">Spécifie les valeurs utilisées dans les autorisations d'objet <see cref="N:System.Net.PeerToPeer" />.</span><span class="sxs-lookup"><span data-stu-id="6791f-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-102">Les autorisations par défaut permettent à tous les locaux et les applications de la zone Intranet d’accéder aux services PNRP.</span><span class="sxs-lookup"><span data-stu-id="6791f-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="6791f-103">Si les autorisations par défaut ne sont pas modifiées, toutes les applications de lien local et de site local ont accès aux services d’égal à égal, mais les applications (internet) globales n’ont aucun accès.</span><span class="sxs-lookup"><span data-stu-id="6791f-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="6791f-104">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="6791f-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="6791f-105">Une des valeurs dans l’énumération <see cref="T:System.Security.Permissions.PermissionState" />.</span><span class="sxs-lookup"><span data-stu-id="6791f-105">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="6791f-106">Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> avec l’état d’autorisation initial fourni.</span><span class="sxs-lookup"><span data-stu-id="6791f-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-107">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="6791f-107">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="6791f-108">Si `state` est illimité, l’instance PnrpPermission passe toutes les demandes.</span><span class="sxs-lookup"><span data-stu-id="6791f-108">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="6791f-109">Si `state` contient toute autre valeur, l’instance PnrpPermission échoue toutes les demandes.</span><span class="sxs-lookup"><span data-stu-id="6791f-109">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6791f-110">Crée et retourne une copie identique de l'objet <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="6791f-110">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="6791f-111">Objet avec une interface IPermission, dont l'instance contient une copie de l'instance actuelle de <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="6791f-111">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-112">Une copie d’une autorisation représente le même accès aux ressources que l’autorisation d’origine.</span><span class="sxs-lookup"><span data-stu-id="6791f-112">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="6791f-113">Les instances de ce type ont deux États d’autorisation : ils ont soit aucun accès aux ressources protégées par l’autorisation, ou un accès complet illimité à ces ressources.</span><span class="sxs-lookup"><span data-stu-id="6791f-113">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="6791f-114">Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.</span><span class="sxs-lookup"><span data-stu-id="6791f-114">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="6791f-115">Le numéro de version du paramètre n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="6791f-115">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6791f-116">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-116">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="6791f-117">Encodage XML à utiliser pour reconstruire l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="6791f-117">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="6791f-118">Reconstruit un objet de sécurité avec un état spécifié à partir d’un encodage XML.</span><span class="sxs-lookup"><span data-stu-id="6791f-118">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-119">Représente le modèle d’objet XML pour l’encodage des objets de sécurité.</span><span class="sxs-lookup"><span data-stu-id="6791f-119">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="6791f-120">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="6791f-120">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="6791f-121">Cette classe est destinée à être une implémentation légère d’un modèle d’objet XML simple à utiliser dans le système de sécurité et non en tant que modèle objet XML global.</span><span class="sxs-lookup"><span data-stu-id="6791f-121">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <span data-ttu-id="6791f-122">Le paramètre n’est pas un élément <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> valide.</span><span class="sxs-lookup"><span data-stu-id="6791f-122">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
-   <span data-ttu-id="6791f-123">Le numéro de version du paramètre n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="6791f-123">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6791f-124">Le paramètre est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-124">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="6791f-125">Autorisation sur <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> avec l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="6791f-125">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="6791f-126">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="6791f-126">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="6791f-127">Crée et retourne une autorisation qui est l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-127">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="6791f-128">Nouvelle autorisation qui représente l'intersection entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation  spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-128">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="6791f-129">Cette nouvelle autorisation est une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic), si l'intersection est vide.</span><span class="sxs-lookup"><span data-stu-id="6791f-129">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-130">L’intersection de deux autorisations est une autorisation qui décrit l’ensemble des opérations qu’elles décrivent en commun.</span><span class="sxs-lookup"><span data-stu-id="6791f-130">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="6791f-131">Seule une demande qui passe les deux autorisations d’origine passera l’intersection.</span><span class="sxs-lookup"><span data-stu-id="6791f-131">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="6791f-132">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode Intersect.</span><span class="sxs-lookup"><span data-stu-id="6791f-132">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="6791f-133">X et Y représentent <xref:System.Security.IPermission> références d’objet qui ne sont pas un `null` référence (Nothing en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-133">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="6791f-134">X.Intersect(X) retourne une valeur égale à X.</span><span class="sxs-lookup"><span data-stu-id="6791f-134">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="6791f-135">X.Intersect (y) retourne la même valeur qu’y.Intersect (x).</span><span class="sxs-lookup"><span data-stu-id="6791f-135">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="6791f-136">X.Intersect (une `null` référence (`Nothing` en Visual Basic)) retourne un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-136">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6791f-137">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="6791f-137">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="6791f-138">Autorisation qui doit être testée pour la relation de sous-ensemble.</span><span class="sxs-lookup"><span data-stu-id="6791f-138">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="6791f-139">Cette autorisation doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="6791f-139">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="6791f-140">Détermine si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est un sous-ensemble de l'autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-140">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="6791f-141"><see langword="True" /> si l'autorisation <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours est un sous-ensemble de l'autorisation spécifiée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6791f-141"><see langword="True" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-142">En cours <xref:System.Net.PeerToPeer.PnrpPermission> est un sous-ensemble de l’autorisation spécifiée si l’autorisation actuelle spécifie un ensemble d’opérations qui est entièrement contenu par l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-142">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="6791f-143">Par exemple, une autorisation qui représente l’accès à «*C:\example.txt*« est un sous-ensemble d’une autorisation qui représente l’accès à »*C:\\*».</span><span class="sxs-lookup"><span data-stu-id="6791f-143">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="6791f-144">Si cette méthode retourne `true`, l’autorisation en cours ne représente pas plus d’accès à la ressource protégée que l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-144">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="6791f-145">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode IsSubsetOf.</span><span class="sxs-lookup"><span data-stu-id="6791f-145">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="6791f-146">X, Y et Z représentent <xref:System.Security.IPermission> les objets qui ne sont pas un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-146">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="6791f-147">X.IsSubsetOf (x) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="6791f-147">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="6791f-148">X.IsSubsetOf (y) retourne la même valeur qu’y.IsSubsetOf (x) si et seulement si X et Y représentent le même jeu d’autorisations.</span><span class="sxs-lookup"><span data-stu-id="6791f-148">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="6791f-149">Si x.IsSubsetOf (y) et Y.IsSubsetOf renvoient tous deux `true`, x.IsSubsetOf (z) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="6791f-149">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="6791f-150">Si X représente un objet IPermission vide avec un état d’autorisation *aucun* et Y représente un objet IPermission qui est une `null` référence (`Nothing` en Visual Basic), x.IsSubsetOf (y) retourne `true`.</span><span class="sxs-lookup"><span data-stu-id="6791f-150">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="6791f-151">Si Z est également une autorisation vide, l’opération de définition composée x.Union (z). IsSubsetOf (y) retourne également `true` , car le <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> de deux autorisations vides est une autorisation vide.</span><span class="sxs-lookup"><span data-stu-id="6791f-151">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6791f-152">Le paramètre cible n'est pas une référence <see langword="null" /> (<see langword="Nothing" /> en Visual Basic) et n'est pas une instance de la même classe que l'autorisation en cours.</span><span class="sxs-lookup"><span data-stu-id="6791f-152">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6791f-153">Retourne une valeur qui spécifie si le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel est illimité.</span><span class="sxs-lookup"><span data-stu-id="6791f-153">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns>
          <span data-ttu-id="6791f-154"><see langword="True" /> si l'autorisation en cours est illimitée ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6791f-154"><see langword="True" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-155">Une autorisation sans restriction représente l’accès à toutes les ressources protégées par l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="6791f-155">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6791f-156">Crée un encodage XML du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> et de son état actuel.</span><span class="sxs-lookup"><span data-stu-id="6791f-156">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="6791f-157">Objet <see cref="T:System.Security.SecurityElement" /> contenant l'encodage XML de l'autorisation, y compris des informations d'état.</span><span class="sxs-lookup"><span data-stu-id="6791f-157">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="6791f-158">Autorisation à combiner avec l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="6791f-158">A permission to combine with the current permission.</span></span> <span data-ttu-id="6791f-159">Elle doit être du même type que l’autorisation actuelle.</span><span class="sxs-lookup"><span data-stu-id="6791f-159">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="6791f-160">Crée une autorisation qui est l'union entre le <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> actuel et l'autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-160">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="6791f-161">Nouvelle autorisation qui représente le <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> du <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> en cours et l'autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-161">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6791f-162">Le résultat d’un appel à <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> est une autorisation qui représente toutes les opérations représentées par l’analyseur lexical actuel <xref:System.Net.PeerToPeer.PnrpPermission> et l’autorisation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="6791f-162">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="6791f-163">Toute demande qui transmet une autorisation passe leur union.</span><span class="sxs-lookup"><span data-stu-id="6791f-163">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="6791f-164">Les instructions suivantes doivent être `true` pour toutes les implémentations de la méthode Union.</span><span class="sxs-lookup"><span data-stu-id="6791f-164">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="6791f-165">X et Y représentent <xref:System.Security.IPermission> les objets qui ne sont pas un `null` référence (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6791f-165">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="6791f-166">X.Union (x) retourne un objet qui a la même valeur que X.</span><span class="sxs-lookup"><span data-stu-id="6791f-166">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="6791f-167">X.Union (y) retourne un objet qui a la même valeur que l’objet retourné par y.Union (x).</span><span class="sxs-lookup"><span data-stu-id="6791f-167">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="6791f-168">X.Union (une `null` référence (`Nothing` en Visual Basic)) retourne un objet qui a la même valeur que X.</span><span class="sxs-lookup"><span data-stu-id="6791f-168">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6791f-169">Le paramètre <paramref name="target" /> n'est pas valide.</span><span class="sxs-lookup"><span data-stu-id="6791f-169"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>