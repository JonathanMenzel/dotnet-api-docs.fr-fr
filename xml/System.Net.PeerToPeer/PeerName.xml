<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerName.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58fd9ef4ba35fbf407d4e0305280fa1ac0ccde172.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8fd9ef4ba35fbf407d4e0305280fa1ac0ccde172</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerName">
          <source>Specifies the values that define a peer-to-peer <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Spécifie les valeurs qui définissent un objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> pair à pair.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerName">
          <source>A peer name is typically a string used to identify a peer resource.</source>
          <target state="translated">Un nom d'homologue est en général une chaîne utilisée pour identifier une ressource homologue.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerName">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
          <source>Contains the peer name to encode as a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> instance.</source>
          <target state="translated">Contenant le nom d’homologue à encoder en tant qu’instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
          <source>Initializes a new object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> with the supplied fully qualified peer name <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> value.</source>
          <target state="translated">Initialise un nouvel objet de type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> avec la valeur <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph> fournie comme nom d’homologue complet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> provided is not a valid <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> fourni n’est pas un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> valide.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="remotePeerName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="remotePeerName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
          <target state="translated">Référence à l’objet qui contient les données nécessaires pour désérialiser cette instance.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context that provides the means for deserializing the data.</source>
          <target state="translated">Le contexte qui fournit les moyens de désérialiser les données.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Also referred to as the source of the serialized data.</source>
          <target state="translated">On l’appelle aussi source des données sérialisées.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object with the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Remplit un objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> avec les données nécessaires pour sérialiser le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is required for deserialization of this type.</source>
          <target state="translated">Ce constructeur est requis pour la désérialisation de ce type.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>One or more parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Au moins un paramètre a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the Peer Name to encode as a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenant le nom d’homologue à encoder en tant que <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameType" /&gt;</ph> enumeration value that specifies the type of peer name to create.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameType" /&gt;</ph> qui spécifie le type nom d’homologue à créer.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>This constructor returns an object of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> that contains the fully qualified name of the peer.</source>
          <target state="translated">Ce constructeur retourne un objet de type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> qui contient le nom qualifié complet de l’homologue.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>It also specifies whether the peer name is secured or unsecured.</source>
          <target state="translated">Il spécifie également si le nom d’homologue est sécurisé ou non sécurisé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>This instance uses the default peer identity for the current user and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph>, in addition to the type of peer name to create with the specified classifier and type.</source>
          <target state="translated">Cette instance utilise l’identité d’homologue par défaut pour l’utilisateur actuel et spécifié <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph>, en plus du type de nom d’homologue à créer avec le classifieur spécifié et le type.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> includes one or more illegal characters.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> inclut un ou plusieurs caractères non autorisés.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>One or more parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un ou plusieurs des paramètres sont <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>The Default Identity used as the basis of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> could not be retrieved.</source>
          <target state="translated">L’identité par défaut utilisée comme base du <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> pas pu être récupérée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> could not be created.</source>
          <target state="translated">Impossible de créer le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>Returns a string that specifies the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> used by this <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Retourne une chaîne qui spécifie le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> utilisée par cet objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>The string which contains the authentication portion of the specified <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui contient la partie authentification du <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>For secured peer names, this property contains the public key as a forty-character hexadecimal string.</source>
          <target state="translated">Pour les noms d'homologue sécurisés, cette propriété contient la clé publique sous la forme d'une chaîne hexadécimale de quarante caractères.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>For unsecured peer names, this property is set to zero (0).</source>
          <target state="translated">Pour les noms d'homologue non sécurisés, cette propriété a la valeur zéro (0).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>Only the owner, or peer host, can register a secured peer name.</source>
          <target state="translated">Seul le propriétaire, ou hôte homologue, peut inscrire un nom d’homologue sécurisé.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>A peer name is considered secured if it is backed by a self-signed certificate.</source>
          <target state="translated">Un nom d’homologue est considéré comme sécurisé s’il est sauvegardé par un certificat auto-signé.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>Peer names are case-sensitive and the format of a peer name is: <bpt id="p1">*</bpt>Authority.Classifier<ept id="p1">*</ept>.</source>
          <target state="translated">Noms d’homologues respectent la casse et le format d’un nom d’homologue est : <bpt id="p1">*</bpt>Authority.Classifier<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>For example, "0.MyPeerName" is a well-formed peer name.</source>
          <target state="translated">Par exemple, « 0.NomHomologue » est un nom d’homologue bien formé.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>Using a secured peer name does not ensure the overall security of the networking application.</source>
          <target state="translated">À l’aide d’un nom d’homologue sécurisé ne garantit pas la sécurité globale de l’application de mise en réseau.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Authority">
          <source>Security of the application is implementation-dependent.</source>
          <target state="translated">La sécurité d’une application dépend de son implémentation.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>Returns a string that contains the classifier for a peer-to-peer <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Retourne une chaîne qui contient le classifieur pour un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> pair à pair.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>The string which contains the classifier portion used to identify a peer name for <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> or resolution within a PNRP <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui contient la partie classifieur utilisée pour identifier un nom d'homologue pour <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> ou résolution au sein d'un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> PNRP.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types and zero (0) for properties of type <ph id="ph2">&lt;see langword="int" /&gt;</ph>.</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence et zéro (0) pour les propriétés de type <ph id="ph2">&lt;see langword="int" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>The format of a peer name is: <bpt id="p1">*</bpt>Authority.Classifier<ept id="p1">*</ept>.</source>
          <target state="translated">Le format d’un nom d’homologue est : <bpt id="p1">*</bpt>Authority.Classifier<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>The peer name <bpt id="p1">*</bpt>Classifier<ept id="p1">*</ept> component can be set to any string that contains 149 or fewer Unicode characters, including the <ph id="ph1">`null`</ph> ("\0") terminator.</source>
          <target state="translated">Le nom d’homologue <bpt id="p1">*</bpt>classifieur<ept id="p1">*</ept> composant peut être défini à n’importe quelle chaîne qui contient au maximum 149 caractères Unicode, y compris le <ph id="ph1">`null`</ph> marque de fin (« \0 »).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>Peer name strings are case-sensitive.</source>
          <target state="translated">Chaînes de nom d’homologue respectent la casse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>For secured peer names, the classifier and the dot (period) after the authority are optional.</source>
          <target state="translated">Pour les noms d’homologue sécurisés, le classifieur et le point (point) après l’autorité sont facultatifs.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.Classifier">
          <source>For unsecured peer names, the classifier is not optional.</source>
          <target state="translated">Pour les noms d’homologue non sécurisés, le classifieur n’est pas facultatif.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>A string that contains the DNS-qualified host name.</source>
          <target state="translated">Chaîne qui contient le nom d'hôte qualifié DNS.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>Creates a new instance of the specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> object with the specified peer host name.</source>
          <target state="translated">Crée une nouvelle instance de l'objet <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> spécifié avec le nom d'hôte homologue spécifié.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that represents the specified peer host name.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> qui représente le nom d'hôte homologue spécifié.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</source>
          <target state="translated">L’hôte d’égal à égal est le nœud « valeur initiale » responsable de l’initialisation de la session de mise en réseau pair à pair, invitant ainsi des homologues devant être inclus dans les applications pour lesquelles ce type de connectivité réseau est plus approprié pour les communications telles que les groupes de conversation ou de jeu sessions.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>This method can be used to create a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object based on the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A&gt;</ph> property.</source>
          <target state="translated">Cette méthode peut être utilisée pour créer un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> objet basé sur le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>This peer name is not associated with the identity of the calling node.</source>
          <target state="translated">Ce nom d’homologue n’est pas associé à l’identité du nœud appelant.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> provided is not a valid peer host name string.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> fourni n'est pas une chaîne de nom d'hôte homologue valide.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> could not be created from the supplied <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph></source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> n'a pas pu être créé à partir du <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph>fourni</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object on which to set the new classifier string value.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> sur lequel définir la nouvelle valeur de chaîne du classifieur.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> to set on the returned <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> à définir sur la valeur <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> retournée.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> by replacing the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> field defined on the supplied <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object with the specified classifier string value.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> en remplaçant le champ <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /&gt;</ph> défini sur l'objet <ph id="ph3">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> fourni par la valeur de chaîne du classifieur spécifié.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that contains the updated classifier.</source>
          <target state="translated">Le nouvel objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> qui contient le classifieur mis à jour.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> is appended to the existing <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph> portion of the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> est ajouté à l’objet existant <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph> partie de la <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>This string is no more than 149 characters long, including the <ph id="ph1">`null`</ph> terminator.</source>
          <target state="translated">Cette chaîne n’est pas plus de 149 caractères, y compris le <ph id="ph1">`null`</ph> marque de fin.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>Specify <ph id="ph1">`null`</ph> to return the peer name of the identity.</source>
          <target state="translated">Spécifiez <ph id="ph1">`null`</ph> pour renvoyer le nom d’homologue de l’identité.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> provided is not a valid peer name classifier.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> fourni n'est pas un classifieur du nom de l'homologue valide.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>One or more parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Au moins un paramètre a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> could not be created from the supplied <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph></source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> n'a pas pu être créé à partir du <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph>fourni</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerName">
          <source>Determines whether the content of this <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object is equivalent to the content of another object.</source>
          <target state="translated">Détermine si le contenu de cet objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> est équivalent au contenu d'un autre objet.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerName">
          <source>The implementation of Equals is defined by IEquatable<ph id="ph1">\&lt;</ph>T&gt;.</source>
          <target state="translated">L’implémentation d’est égal à est définie par IEquatable<ph id="ph1">\&lt;</ph>T &gt;.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>The peer name to compare with this <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Nom d'homologue à comparer avec ce <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>Performs a case-sensitive comparison of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> and the specified peer name.</source>
          <target state="translated">Effectue une comparaison sensible à la casse du <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> actuel et du nom d'homologue spécifié.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>Returns <ph id="ph1">&lt;see langword="True" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> identifies the same resource as the current peer name object; otherwise this method returns <ph id="ph3">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">Retourne la valeur <ph id="ph1">&lt;see langword="True" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié identifie la même ressource que l'objet nom de l'homologue actuel ; sinon, cette méthode retourne la valeur <ph id="ph3">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>This method also returns <ph id="ph1">&lt;see langword="False" /&gt;</ph> if <ph id="ph2">&lt;paramref name="other" /&gt;</ph> is set to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Cette méthode retourne également <ph id="ph1">&lt;see langword="False" /&gt;</ph> si <ph id="ph2">&lt;paramref name="other" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>Two peer names are considered equal if they contain identical characters in their <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> components.</source>
          <target state="translated">Deux noms d’homologue sont considérés comme égaux s’ils contiennent des caractères identiques dans leurs <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.Authority%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName.Classifier%2A&gt;</ph> composants.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>No normalizations are performed on the strings prior to comparison.</source>
          <target state="translated">Aucune normalisation n’est exécutée sur les chaînes avant la comparaison.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
          <source>All normalization should have been completed while or before constructing the peer name objects.</source>
          <target state="translated">Toute la normalisation doit être effectuée pendant ou avant la construction d’objets de nom d’homologue.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à comparer avec l'objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
          <source>Determines whether the content of this <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> is equal to the content of another object.</source>
          <target state="translated">Détermine si le contenu de ce <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> est égal au contenu d'un autre objet.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> and the comparison object contain the same information; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> et l'objet de comparaison contiennent les mêmes informations ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
          <source>This method inherits the default signature and behavior from <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Cette méthode hérite de la signature par défaut et le comportement de <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.GetHashCode">
          <source>Overrides the <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">Substitue la méthode <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.GetHashCode">
          <source>A hashcode for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Code de hachage pour le <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.GetHashCode">
          <source>Two objects are considered equal if this method returns the same hashcode for both of them.</source>
          <target state="translated">Deux objets sont considérées comme égales si cette méthode retourne le même code de hachage pour les deux.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Contient les données sérialisées associées à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Contient la destination du flux sérialisé associé à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</source>
          <target state="translated">Remplit un objet d’informations de sérialisation avec les données nécessaires pour sérialiser <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A derived type must call the base type <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> method.</source>
          <target state="translated">Un type dérivé doit appeler la méthode <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> de type de base.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Gets a Boolean value that specifies whether this is a secured peer name.</source>
          <target state="translated">Obtient une valeur booléenne qui spécifie s'il s'agit d'un nom d'homologue sécurisé.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, this peer name is secured with a private key/ public key pair.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="true" /&gt;</ph>, ce nom d'homologue est sécurisé avec une paire de clé privée/ clé publique.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine.</source>
          <target state="translated">Son nom contient le hachage SHA (Secure Hash Algorithm, algorithme de hachage sécurisé) de la clé publique du certificat utilisateur de cet ordinateur homologue.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Otherwise, if <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the peer name has no associated identity.</source>
          <target state="translated">Sinon, si la valeur est <ph id="ph1">&lt;see langword="false" /&gt;</ph>, le nom d'homologue n'est associé à aucune identité.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types and zero (0) for properties of type <ph id="ph2">&lt;see langword="int" /&gt;</ph>.</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence et zéro (0) pour les propriétés de type <ph id="ph2">&lt;see langword="int" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>A peer name is considered secured if it is backed by a self-signed certificate.</source>
          <target state="translated">Un nom d’homologue est considéré comme sécurisé s’il est sauvegardé par un certificat auto-signé.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Only the owner can register a secured peer name with PNRP.</source>
          <target state="translated">Seul le propriétaire peut inscrire un nom d’homologue sécurisé auprès du protocole PNRP.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Using a secured peer name does not ensure the overall security of the networking application.</source>
          <target state="translated">À l’aide d’un nom d’homologue sécurisé ne garantit pas la sécurité globale de l’application de mise en réseau.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.IsSecured">
          <source>Security of the application is implementation-dependent.</source>
          <target state="translated">La sécurité d’une application dépend de son implémentation.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>Gets the name of the peer-to-peer host.</source>
          <target state="translated">Obtient le nom de l'hôte de réseau pair à pair.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>This is a DNS-encoded version of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> which is equivalent to a <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> in that they are both identifiers.</source>
          <target state="translated">Il s'agit d'une version encodée par DNS du <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> qui équivalent à un <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /&gt;</ph> du fait qu'ils sont tous deux identificateurs.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>The difference between the two is visual representation.</source>
          <target state="translated">La différence entre les deux est la représentation visuelle.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that is the name of the peer-to-peer host.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui est le nom de l'hôte de réseau pair à pair.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</source>
          <target state="translated">L’hôte d’égal à égal est le nœud « valeur initiale » responsable de l’initialisation de la session de mise en réseau pair à pair, invitant ainsi des homologues devant être inclus dans les applications pour lesquelles ce type de connectivité réseau est plus approprié pour les communications telles que les groupes de conversation ou de jeu sessions.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A&gt;</ph> property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A&gt;</ph> propriété spécifie le nom d’un homologue qui a créé la session de mise en réseau pair à pair, et qui est considérée comme l’hôte de la session.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>The host of a peer-to-peer networking session may collect peers into more than one <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>.</source>
          <target state="translated">L’hôte d’une session de mise en réseau pair à pair peut rassembler des homologues dans plusieurs <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerName.PeerHostName">
          <source>Also, a peer may simultaneously be hosted by more than one peer host.</source>
          <target state="translated">En outre, un homologue peut être hébergé simultanément par plusieurs hôtes d’homologue.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Contient les données sérialisées associées à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Contient la destination du flux sérialisé associé à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> instance.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et retourne les données nécessaires pour sérialiser l'instance <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.ToString">
          <source>Returns a string representation of the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">Retourne une chaîne représentant l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.ToString">
          <source>A string that represents the current <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph>, and specified in the following format: <bpt id="p1">*</bpt>Authority.Classifier<ept id="p1">*</ept>.</source>
          <target state="translated">Chaîne qui représente le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> actuel, spécifiée au format suivant : <bpt id="p1">*</bpt>Autorité.Classifieur<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerName.ToString">
          <source>For example, "0.MyInternetPeer".</source>
          <target state="translated">Par exemple, "0.MonHomologueInternet".</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerName.ToString">
          <source>This method inherits the default signature and behavior from <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Cette méthode hérite de la signature par défaut et le comportement de <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>