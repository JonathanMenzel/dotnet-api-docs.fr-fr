<Type Name="PeerNameType" FullName="System.Net.PeerToPeer.PeerNameType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0650fb8b6e4a91e37af9cf7e613795a75e2d861" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36550222" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PeerNameType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PeerNameType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PeerNameType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PeerNameType" />
  <TypeSignature Language="F#" Value="type PeerNameType = " />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Définit le type de <see cref="T:System.Net.PeerToPeer.PeerName" /> à créer. Un nom d'homologue est sécurisé ou non sécurisé. Un nom d'homologue sécurisé fournit une preuve de propriété du nom. Un nom d'homologue non sécurisé n'est associé à aucune identité.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nœud doit avoir accès à la clé privée associée à la clé publique utilisée pour la création d’un <xref:System.Net.PeerToPeer.PeerName>, afin de prouver la propriété. Le nœud n’a pas d’une relation avec une clé publique.  
  
 Le format d’un nom d’homologue est : *Authority.Classifier*. La valeur de <xref:System.Net.PeerToPeer.PeerName.Authority%2A> varie selon que le nom est un nom d’homologue sécurisé ou un nom d’homologue non sécurisés. Le <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> partie du nom peut être définie à n’importe quelle chaîne qui contient au maximum 15 caractères Unicode, y compris le `null` marque de fin. Une fois la <xref:System.Net.PeerToPeer.PeerName.Authority%2A>, <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> et niveau de sécurité d’un homologue ont été établis, permettre également être référence à un homologue avec un nom relatif ou un nom d’hôte.  
  
 Seul le propriétaire, ou hôte homologue, peut inscrire un nom d’homologue sécurisé avec le [PNRP Namespace fournisseur API](http://go.microsoft.com/fwlink?LinkID=92731). N’importe quel nœud peut réclamer la propriété à une non sécurisés <xref:System.Net.PeerToPeer.PeerName>.  
  
 **Remarque** à l’aide d’un <xref:System.Net.PeerToPeer.PeerName> ne garantit pas la sécurité globale d’une application de mise en réseau. La sécurité d’une application dépend de son implémentation.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
    <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
    <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
  </Docs>
  <Members>
    <Member MemberName="Secured">
      <MemberSignature Language="C#" Value="Secured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Secured = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberSignature Language="VB.NET" Value="Secured" />
      <MemberSignature Language="C++ CLI" Value="Secured" />
      <MemberSignature Language="F#" Value="Secured = 0" Usage="System.Net.PeerToPeer.PeerNameType.Secured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Crée un <see cref="T:System.Net.PeerToPeer.PeerName" /> sécurisé à l'aide de l'identité d'utilisateur actuel.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unsecured">
      <MemberSignature Language="C#" Value="Unsecured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.PeerToPeer.PeerNameType Unsecured = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberSignature Language="VB.NET" Value="Unsecured" />
      <MemberSignature Language="C++ CLI" Value="Unsecured" />
      <MemberSignature Language="F#" Value="Unsecured = 1" Usage="System.Net.PeerToPeer.PeerNameType.Unsecured" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Crée un <see cref="T:System.Net.PeerToPeer.PeerName" /> non sécurisé à l'aide de l'identité d'utilisateur actuel.</summary>
      </Docs>
    </Member>
  </Members>
</Type>