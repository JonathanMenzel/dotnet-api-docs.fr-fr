<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b80c3c2b3af816addae84c731aa096610d61da43" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39725675" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Inscrit un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> dans un <see cref="T:System.Net.PeerToPeer.Cloud" /> ou un jeu de nuages.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’inscription crée (ou met à jour) toutes les informations qui sont associées à un <xref:System.Net.PeerToPeer.PeerName> dans un nuage d’homologues ou clouds.  
  
 Il est possible d’avoir plusieurs <xref:System.Net.PeerToPeer.PeerNameRegistration> objets pour le même nom d’homologue. Dans ce cas, si le nom d’homologue est sécurisé, chaque instance représente <xref:System.Net.PeerToPeer.PeerNameRegistration> dans un autre cloud. Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois, fournissant que chaque inscription provient d’un autre processus.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance par défaut de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourne une nouvelle instance par défaut de type <xref:System.Net.PeerToPeer.PeerNameRegistration>. Il n’effectue pas l’inscription de nom d’homologue lors de la construction.  
  
 Après avoir instancié un objet avec ce constructeur, l’appelant doit remplir les champs appropriés dans l’instance avant d’appeler <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> ou <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Objet <see cref="T:System.Net.PeerToPeer.PeerName" /> à inscrire.</param>
        <param name="port">Valeur d’entier qui spécifie le numéro de port à enregistrer.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> avec le nom et le numéro de port spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de ce constructeur crée une instance qui sera utilisée pour inscrire toutes les adresses source (IPv4 IPv6and) et le port fourni pour tous les nuages auxquels l’homologue participe actuellement.  Si l’objet est construit avec succès, le texte spécifié <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> et <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> sont remplies.  
  
 Si le nom d’homologue est sécurisé et a été précédemment inscrit dans un <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> l’homologue participe actuellement, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Ce constructeur crée uniquement une <xref:System.Net.PeerToPeer.PeerNameRegistration> instance ; il n’effectue pas l’inscription. Après avoir instancié l’objet d’inscription avec ce constructeur et rempli ses champs, l’application doit appeler <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> pour effectuer l’inscription proprement dite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le numéro de port spécifié est inférieur à zéro.  Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit à partir de cet hôte.  
  
- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour l’objet <see cref="T:System.Net.PeerToPeer.PeerName" /> fourni.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Référence à l’objet qui contient les données nécessaires pour désérialiser cette instance.</param>
        <param name="context">Le contexte qui fournit les moyens de désérialiser les données. On l’appelle aussi source des données sérialisées.</param>
        <summary>Initialise un nouvel objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> sérialisable.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">Objet <see cref="T:System.Net.PeerToPeer.PeerName" /> à inscrire.</param>
        <param name="port">Valeur d’entier qui spécifie le numéro de port à enregistrer.</param>
        <param name="cloud">
          <see cref="T:System.Net.PeerToPeer.Cloud" /> où enregistrer le nom d’homologue.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> avec le nom d’homologue, le numéro de port et <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de ce constructeur crée une instance qui sera utilisée pour enregistrer toutes les adresses source (IPv4 et IPv6), le port fourni et spécifié <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  Si l’objet est construit avec succès, les propriétés sont remplies avec la valeur <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> et <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.  
  
 Si le paramètre de cloud est `null`, le nom est inscrit à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Après l’instanciation, le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode doit être appelée pour inscrire le <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> ne peut pas avoir la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le numéro de port spécifié est inférieur à zéro.  Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit à partir de cet hôte.  
  
- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour l’objet <see cref="T:System.Net.PeerToPeer.PeerName" /> fourni.</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit des informations dans un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> dans lequel cet objet <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> sera inscrit.</summary>
        <value>Un objet de type <see cref="T:System.Net.PeerToPeer.Cloud" /> qui spécifie le nuage d'homologues pour lequel cette inscription est définie. Cette propriété a la valeur <see langword="null" /> par défaut.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit des informations supplémentaires à propos de l'objet <see cref="T:System.Net.PeerToPeer.PeerName" /> qui sera inscrit avec le <see cref="T:System.Net.PeerToPeer.Cloud" />.</summary>
        <value>Commentaire qui contient des informations supplémentaires à propos du <see cref="T:System.Net.PeerToPeer.PeerName" /> à associer au <see cref="T:System.Net.PeerToPeer.Cloud" />. Cette propriété a la valeur <see langword="null" /> par défaut.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">La valeur de chaîne spécifiée est supérieure à 39 caractères Unicode.</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les données binaires définies par l'application pour l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Tableau d'octets contenant les données binaires associées à l'entrée. Cette propriété a la valeur <see langword="null" /> par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La quantité maximale de <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> qui peut être fournie est de 4 096 octets.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> spécifié est supérieur à 4096 octets.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libère les ressources utilisées par l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un homologue quitte un <xref:System.Net.PeerToPeer.Cloud>, le cloud ne requiert plus le <xref:System.Net.PeerToPeer.PeerNameRegistration> objet associé à l’homologue.  Indique si l’objet d’inscription est arrêté ou supprimé dépend si le cloud doit réutiliser l’objet pour inscrire cet homologue ou un autre pair. S’il existe de n’importe quel autre point de terminaison au sein de l’objet d’inscription avec lequel l’hôte homologue prévu communiquer, l’inscription de ces points de terminaison dans le cloud doit se produire avant l’arrêt ou la suppression de cet objet.  
  
 Si le cloud s’attend à enregistrer d’autres homologues, la <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> méthode est recommandée ; lorsque le cloud n’a plus besoin la mémoire, il doit être retourné au système d’exploitation via la <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>toujours appellent la méthode Dispose avant de détruire le <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objet.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="True" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</param>
        <summary>Libère les ressources non gérées et libère éventuellement les ressources gérées utilisées par l’objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage">
          <para>Toujours appeler la méthode Dispose avant de libérer la dernière référence à la <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objet.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection des points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit.</summary>
        <value>Objet <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> qui contient les points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit. Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans le <xref:System.Net> espace de noms, un <xref:System.Net.IPEndPoint> représente un point de terminaison réseau comme une adresse IP et un numéro de port.  Pour PNRP, une valeur d’adresse et le port IP doit être fournie pour chaque point de terminaison.  Le nombre maximal de points de terminaison qui peut être fournie est de dix. Sélection automatique des adresses est utilisée lorsque ce paramètre est `null`.  
  
 Si une méthode d’inscription est utilisée pour sélectionner automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lesquelles le nom d’homologue a été inscrit.  Autrement dit, le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété ne sera pas mis à jour pour refléter les adresses sélectionnés.  
  
 Lorsqu’un nom d’homologue est inscrit pour plusieurs nœuds, chaque <xref:System.Net.PeerToPeer.PeerNameRegistration> est distinct et la <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété définie sur chaque instance d’inscription sera différente. Également, lorsqu’un <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> est inscrit dans plusieurs <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, chaque inscription est distincte et la collection de points de terminaison généralement sera différente pour chaque instance.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>La liste des points de terminaison avec lesquels cet homologue communiquera n’est pas identique à la liste des points de terminaison par lequel ce nom d’homologue est connu, qui est stockée différemment.</para>
        </block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contient les données sérialisées associées à l’objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Contient la destination du flux sérialisé associé à l’objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Remplit un objet d’informations de sérialisation <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> avec les données nécessaires pour sérialiser l’instance.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient ou définit si le nom d'homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> est inscrit avec un <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifique sur un hôte.</summary>
        <returns>Si la valeur est <see langword="true" />, le nom d'homologue est inscrit avec un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> pour l'hôte homologue. Si la valeur est <see langword="false" />, le processus d'inscription peut être démarré avec <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">Un objet qui a déjà été supprimé ne peut pas être inscrit.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom d'homologue à inscrire avec un nuage d'homologue.</summary>
        <value>Objet de type <see cref="T:System.Net.PeerToPeer.PeerName" /> qui contient des valeurs associé à cet objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />. Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nom d’homologue peut être inscrit pour plusieurs nœuds ; chaque <xref:System.Net.PeerToPeer.PeerNameRegistration> instance est distincte. Le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété associée à chaque correspondant <xref:System.Net.PeerToPeer.PeerName> instance est différente. En outre, il est possible d’inscrire un nom d’homologue pour plusieurs nuages le nœud est connecté ; chacune de ces inscriptions est distincte. Le nom d’homologue <xref:System.Net.IPEndPointCollection> sera différent dans chacune de ces instances.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le numéro de port [TCP/IP](http://go.microsoft.com/fwlink?LinkID=98458) utilisé par l’homologue en cours d’inscription dans l’objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <value>Valeur entière indiquant le numéro port TCP du <see cref="T:System.Net.IPEndPoint" />. Sauf spécification explicite, la valeur par défaut de cette propriété est zéro (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le port par défaut est utilisé par le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode uniquement lorsque aucun point de terminaison n’est spécifiés.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur de port spécifiée est inférieure à zéro.  Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inscrit le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> dans le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />. Si aucun <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> n’est spécifié, la sélection automatique des adresses est utilisée avec la valeur de port spécifiée par la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode inscrit le nom d’homologue spécifié dans le <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> propriété avec toutes les adresses source et le <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> spécifié dans le constructeur. Le port par défaut est utilisé par cette méthode uniquement si aucun point de terminaison n’est spécifiés.  
  
 Si le <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> propriété est `null`, cette méthode inscrit le nom d’homologue spécifié dans le <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> à l’aide de la propriété le <xref:System.Net.PeerToPeer.Cloud.Available> champ, qui initialise des valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Après un <xref:System.Net.PeerToPeer.PeerNameRegistration> objet a été démarré, le <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> méthode est utilisée pour l’arrêter.  
  
 Pour mettre à jour une inscription, la <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> méthode doit être utilisée.  
  
   
  
## Examples  
 L’exemple de code suivant crée un <xref:System.Net.PeerToPeer.PeerName> et l’inscrit avec les métadonnées spécifiées.  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Dispose() a déjà été appelé pour cet objet.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit. Le méthode <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> doit être utilisée pour mettre à jour une inscription.  
  
- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié.  
  
- <see cref="T:System.Net.PeerToPeer.PeerName" /> ou <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> n’est pas spécifié. Au moins l’un des deux doit être fourni.  
  
- Les éléments de message ou de données ne sont pas valides. Ou bien <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> n’est pas défini et aucun objet blob de données ou <see cref="T:System.Net.IPEndPoint" /> n’est spécifié.</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule l’inscription du nom d’homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> dans tous les clouds où il était inscrit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois le processus d’inscription a été arrêté, état de l’objet d’inscription est égal à l’état directement après la construction par le constructeur par défaut. Dans cet état, toutes ses propriétés sont supposées avoir aucune valeur. Le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode peut être utilisée pour le redémarrer.  
  
 Il est possible d’avoir plusieurs objets d’inscription pour le même nom d’homologue.  Dans ce cas, si le nom d’homologue est sécurisé, chaque instance de représentent une inscription dans un nuage PNRP différent.  Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois.  
  
 Si cette instance est déjà arrêtée, l’appel de cette méthode n’a aucun effet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> n’a pas encore été enregistrée. Cela se produit lorsqu’un objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> est construit à l’aide du constructeur vide. La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> doit être remplie dans cette instance avant d’appeler <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Dispose() a déjà été appelé pour cet objet.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contient les données sérialisées associées à l'instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <param name="context">Contient la destination du flux sérialisé associé à l’instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</param>
        <summary>Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données nécessaires pour sérialiser l'instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Met à jour le <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> pour un nœud enregistré avec un <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifique. La mise à jour est effectuée à l’aide des informations spécifiées dans les propriétés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Toutes les informations enregistrées dans les nuages pour ce <xref:System.Net.PeerToPeer.PeerName> avant l’appel est complètement ignoré.  Les nouvelles données ne sont pas combinées avec l’inscription existante.  Pour mettre à jour un <xref:System.Net.PeerToPeer.PeerNameRegistration>, tout d’abord mettre à jour les propriétés sur cette instance, puis appelez cette méthode.  
  
 Après un <xref:System.Net.PeerToPeer.PeerNameRecord> est inscrit, le <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> propriété ne peut pas être mis à jour.  Tous les autres champs dans l’enregistrement peuvent être mis à jour.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">-  La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> n’a pas encore été inscrite. La méthode <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> ne peut pas être appelée jusqu'à ce que le nom d’homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> soit enregistré dans un ou plusieurs clouds.  
  
- Le nom de pair spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a été modifié depuis que le <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> correspondant a été inscrit.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Impossible d’enregistrer un objet qui a été supprimé.</exception>
        <exception cref="T:System.ArgumentNullException">Une propriété <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie s'il faut utiliser la sélection de point de terminaison automatique pour traverser un maillage ou un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> d'homologues.</summary>
        <value>
          <see langword="True" /> si la sélection de point de terminaison automatique doit être utilisée ; <see langword="false" /> si une autre méthode doit être utilisée pour déterminer un point de terminaison. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la sélection de point de terminaison automatique est utilisée (cette propriété est définie sur `true`) sans aucune information de point de terminaison spécifiée avant le début d’un <xref:System.Net.PeerToPeer.PeerNameRegistration>, le système choisit des points de terminaison individuels et les publie avec le nom d’homologue associé dans tous les disponibles clouds.  Si le port n’est pas spécifié, la sélection automatique choisit le zéro comme le <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.  
  
 Lorsque la valeur `false`, la sélection automatique comme décrit ci-dessus n’est pas effectuée.  Ainsi, le processus d’inscription de publier un nom d’homologue avec un objet blob de données (comme spécifié par le <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> propriété). Aucun point de terminaison n’est associés avec le nom.  
  
 Si une méthode d’inscription est utilisée pour sélectionner automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lesquelles le <xref:System.Net.PeerToPeer.PeerName> objet a été inscrit.  Autrement dit, le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété ne sera pas mis à jour pour refléter les adresses sélectionnés.  
  
 La mise à jour de cette propriété après que l’inscription de nom d’homologue a démarré n’a aucun effet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>