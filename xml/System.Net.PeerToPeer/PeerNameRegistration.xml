<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9970347a507e1a50dbece7b9f46a71933a14be17" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294757" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d899a-101">Inscrit un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> dans un <see cref="T:System.Net.PeerToPeer.Cloud" /> ou un jeu de nuages.</span><span class="sxs-lookup"><span data-stu-id="d899a-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-102">L’inscription crée (ou met à jour) toutes les informations qui sont associées à un <xref:System.Net.PeerToPeer.PeerName> dans un nuage d’homologues ou clouds.</span><span class="sxs-lookup"><span data-stu-id="d899a-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="d899a-103">Il est possible d’avoir plusieurs <xref:System.Net.PeerToPeer.PeerNameRegistration> objets pour le même nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="d899a-104">Dans ce cas, si le nom d’homologue est sécurisé, chaque instance représente <xref:System.Net.PeerToPeer.PeerNameRegistration> dans un autre cloud.</span><span class="sxs-lookup"><span data-stu-id="d899a-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="d899a-105">Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois, fournissant que chaque inscription provient d’un autre processus.</span><span class="sxs-lookup"><span data-stu-id="d899a-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d899a-106">Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-107">Initialise une nouvelle instance par défaut de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-108">Retourne une nouvelle instance par défaut de type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span><span class="sxs-lookup"><span data-stu-id="d899a-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="d899a-109">Il n’effectue pas l’inscription de nom d’homologue lors de la construction.</span><span class="sxs-lookup"><span data-stu-id="d899a-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="d899a-110">Après avoir instancié un objet avec ce constructeur, l’appelant doit remplir les champs appropriés dans l’instance avant d’appeler <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> ou <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d899a-111">Objet <see cref="T:System.Net.PeerToPeer.PeerName" /> à inscrire.</span><span class="sxs-lookup"><span data-stu-id="d899a-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="d899a-112">Valeur entière qui spécifie le numéro de port à inscrire.</span><span class="sxs-lookup"><span data-stu-id="d899a-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="d899a-113">Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> avec le nom et le numéro de port spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d899a-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-114">Appel de ce constructeur crée une instance qui sera utilisée pour inscrire toutes les adresses source (IPv4 IPv6and) et le port fourni pour tous les nuages auxquels l’homologue participe actuellement.</span><span class="sxs-lookup"><span data-stu-id="d899a-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="d899a-115">Si l’objet est construit avec succès, le texte spécifié <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> et <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> sont remplies.</span><span class="sxs-lookup"><span data-stu-id="d899a-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="d899a-116">Si le nom d’homologue est sécurisé et a été précédemment inscrit dans un <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> l’homologue participe actuellement, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="d899a-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="d899a-117">Ce constructeur crée uniquement une <xref:System.Net.PeerToPeer.PeerNameRegistration> instance ; il n’effectue pas l’inscription.</span><span class="sxs-lookup"><span data-stu-id="d899a-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="d899a-118">Après avoir instancié l’objet d’inscription avec ce constructeur et rempli ses champs, l’application doit appeler <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> pour effectuer l’inscription proprement dite.</span><span class="sxs-lookup"><span data-stu-id="d899a-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d899a-119">Le paramètre <paramref name="name" /> ne peut pas être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d899a-120">Le numéro de port spécifié est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="d899a-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="d899a-121">Les numéros de port doivent être supérieurs ou égaux au zéro et inférieurs à 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="d899a-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="d899a-122">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit à partir de cet hôte.</span><span class="sxs-lookup"><span data-stu-id="d899a-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="d899a-123">- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour l’objet <see cref="T:System.Net.PeerToPeer.PeerName" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="d899a-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d899a-124">Référence à l'objet qui contient les données nécessaires pour désérialiser cette instance.</span><span class="sxs-lookup"><span data-stu-id="d899a-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="d899a-125">Le contexte qui fournit les moyens de désérialiser les données.</span><span class="sxs-lookup"><span data-stu-id="d899a-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="d899a-126">Également connu sous le nom de source des données sérialisées.</span><span class="sxs-lookup"><span data-stu-id="d899a-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="d899a-127">Initialise un nouvel objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> sérialisable.</span><span class="sxs-lookup"><span data-stu-id="d899a-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d899a-128">Objet <see cref="T:System.Net.PeerToPeer.PeerName" /> à inscrire.</span><span class="sxs-lookup"><span data-stu-id="d899a-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="d899a-129">Valeur d’entier qui spécifie le numéro de port à enregistrer.</span><span class="sxs-lookup"><span data-stu-id="d899a-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="d899a-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel enregistrer le nom d'homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="d899a-131">Initialise une nouvelle instance de la classe <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> avec le nom d'homologue, le numéro de port et le <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d899a-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-132">Appel de ce constructeur crée une instance qui sera utilisée pour enregistrer toutes les adresses source (IPv4 et IPv6), le port fourni et spécifié <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="d899a-133">Si l’objet est construit avec succès, les propriétés sont remplies avec la valeur <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> et <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="d899a-134">Si le paramètre de cloud est `null`, le nom est inscrit à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="d899a-135">Après l’instanciation, le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode doit être appelée pour inscrire le <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="d899a-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d899a-136">Le paramètre <paramref name="name" /> ne peut pas être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d899a-137">Le numéro de port spécifié est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="d899a-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="d899a-138">Les numéros de port doivent être supérieurs ou égaux au zéro et inférieurs à 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="d899a-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="d899a-139">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit à partir de cet hôte.</span><span class="sxs-lookup"><span data-stu-id="d899a-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="d899a-140">- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour l’objet <see cref="T:System.Net.PeerToPeer.PeerName" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="d899a-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-141">Obtient ou définit des informations dans un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> dans lequel cet objet <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> sera inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="d899a-142">Un objet de type <see cref="T:System.Net.PeerToPeer.Cloud" /> qui spécifie le nuage d'homologues pour lequel cette inscription est définie.</span><span class="sxs-lookup"><span data-stu-id="d899a-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="d899a-143">Cette propriété a la valeur <see langword="null" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d899a-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-144">Obtient ou définit des informations supplémentaires à propos de l'objet <see cref="T:System.Net.PeerToPeer.PeerName" /> qui sera inscrit avec le <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="d899a-145">Commentaire qui contient des informations supplémentaires à propos du <see cref="T:System.Net.PeerToPeer.PeerName" /> à associer au <see cref="T:System.Net.PeerToPeer.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="d899a-146">Cette propriété a la valeur <see langword="null" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d899a-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="d899a-147">La valeur de chaîne spécifiée est supérieure à 39 caractères Unicode.</span><span class="sxs-lookup"><span data-stu-id="d899a-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-148">Obtient ou définit les données binaires définies par l'application pour l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="d899a-149">Tableau d'octets contenant les données binaires associées à l'entrée.</span><span class="sxs-lookup"><span data-stu-id="d899a-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="d899a-150">Cette propriété a la valeur <see langword="null" /> par défaut.</span><span class="sxs-lookup"><span data-stu-id="d899a-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-151">La quantité maximale de <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> qui peut être fournie est de 4 096 octets.</span><span class="sxs-lookup"><span data-stu-id="d899a-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d899a-152">Le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> spécifié est supérieur à 4096 octets.</span><span class="sxs-lookup"><span data-stu-id="d899a-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d899a-153">Libère les ressources utilisées par l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-154">Lorsqu’un homologue quitte un <xref:System.Net.PeerToPeer.Cloud>, le cloud ne requiert plus le <xref:System.Net.PeerToPeer.PeerNameRegistration> objet associé à l’homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="d899a-155">Indique si l’objet d’inscription est arrêté ou supprimé dépend si le cloud doit réutiliser l’objet pour inscrire cet homologue ou un autre pair.</span><span class="sxs-lookup"><span data-stu-id="d899a-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="d899a-156">S’il existe de n’importe quel autre point de terminaison au sein de l’objet d’inscription avec lequel l’hôte homologue prévu communiquer, l’inscription de ces points de terminaison dans le cloud doit se produire avant l’arrêt ou la suppression de cet objet.</span><span class="sxs-lookup"><span data-stu-id="d899a-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="d899a-157">Si le cloud s’attend à enregistrer d’autres homologues, la <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> méthode est recommandée ; lorsque le cloud n’a plus besoin la mémoire, il doit être retourné au système d’exploitation via la <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="d899a-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-158">Libère toutes les ressources utilisées par <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="d899a-159">toujours appellent la méthode Dispose avant de détruire le <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objet.</span><span class="sxs-lookup"><span data-stu-id="d899a-159">lways call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="d899a-160"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="d899a-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d899a-161">Libère les ressources non managées et, éventuellement, les ressources managées utilisées par l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="d899a-162">Toujours appeler la méthode Dispose avant de libérer la dernière référence à la <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> objet.</span><span class="sxs-lookup"><span data-stu-id="d899a-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-163">Obtient la collection des points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="d899a-164">Objet <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> qui contient les points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="d899a-165">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="d899a-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-166">Dans le <xref:System.Net> espace de noms, un <xref:System.Net.IPEndPoint> représente un point de terminaison réseau comme une adresse IP et un numéro de port.</span><span class="sxs-lookup"><span data-stu-id="d899a-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="d899a-167">Pour PNRP, une valeur d’adresse et le port IP doit être fournie pour chaque point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="d899a-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="d899a-168">Le nombre maximal de points de terminaison qui peut être fournie est de dix.</span><span class="sxs-lookup"><span data-stu-id="d899a-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="d899a-169">Sélection automatique des adresses est utilisée lorsque ce paramètre est `null`.</span><span class="sxs-lookup"><span data-stu-id="d899a-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="d899a-170">Si une méthode d’inscription est utilisée pour sélectionner automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lesquelles le nom d’homologue a été inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</span></span>  <span data-ttu-id="d899a-171">Autrement dit, le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété ne sera pas mis à jour pour refléter les adresses sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="d899a-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="d899a-172">Lorsqu’un nom d’homologue est inscrit pour plusieurs nœuds, chaque <xref:System.Net.PeerToPeer.PeerNameRegistration> est distinct et la <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété définie sur chaque instance d’inscription sera différente.</span><span class="sxs-lookup"><span data-stu-id="d899a-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="d899a-173">Également, lorsqu’un <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> est inscrit dans plusieurs <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, chaque inscription est distincte et la collection de points de terminaison généralement sera différente pour chaque instance.</span><span class="sxs-lookup"><span data-stu-id="d899a-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="d899a-174">La liste des points de terminaison avec lesquels cet homologue communiquera n’est pas identique à la liste des points de terminaison par lequel ce nom d’homologue est connu, qui est stockée différemment.</span><span class="sxs-lookup"><span data-stu-id="d899a-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d899a-175">Contient les données sérialisées associées à l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="d899a-176">Contient la destination du flux sérialisé associé à l'objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="d899a-177">Remplit un objet d'informations de sérialisation avec les données nécessaires pour sérialiser l'instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-178">Obtient ou définit si le nom d'homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> est inscrit avec un <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifique sur un hôte.</span><span class="sxs-lookup"><span data-stu-id="d899a-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="d899a-179">Si la valeur est <see langword="true" />, le nom d'homologue est inscrit avec un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> pour l'hôte homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="d899a-180">Si la valeur est <see langword="false" />, le processus d'inscription peut être démarré avec <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d899a-181">Un objet qui a déjà été supprimé ne peut pas être inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-182">Obtient ou définit le nom d'homologue à inscrire avec un nuage d'homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="d899a-183">Objet de type <see cref="T:System.Net.PeerToPeer.PeerName" /> qui contient des valeurs associé à cet objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="d899a-184">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <see langword="null" /> pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="d899a-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-185">Un nom d’homologue peut être inscrit pour plusieurs nœuds ; chaque <xref:System.Net.PeerToPeer.PeerNameRegistration> instance est distincte.</span><span class="sxs-lookup"><span data-stu-id="d899a-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="d899a-186">Le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété associée à chaque correspondant <xref:System.Net.PeerToPeer.PeerName> instance est différente.</span><span class="sxs-lookup"><span data-stu-id="d899a-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="d899a-187">En outre, il est possible d’inscrire un nom d’homologue pour plusieurs nuages le nœud est connecté ; chacune de ces inscriptions est distincte.</span><span class="sxs-lookup"><span data-stu-id="d899a-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="d899a-188">Le nom d’homologue <xref:System.Net.IPEndPointCollection> sera différent dans chacune de ces instances.</span><span class="sxs-lookup"><span data-stu-id="d899a-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-189">Obtient ou définit le numéro de port [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) utilisé par l’homologue en cours d’inscription dans l’objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="d899a-190">Valeur entière indiquant le numéro port TCP du <see cref="T:System.Net.IPEndPoint" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="d899a-191">Sauf spécification explicite, la valeur par défaut de cette propriété est zéro (0).</span><span class="sxs-lookup"><span data-stu-id="d899a-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-192">Le port par défaut est utilisé par le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode uniquement lorsque aucun point de terminaison n’est spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d899a-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d899a-193">La valeur de port spécifiée est inférieure à zéro.</span><span class="sxs-lookup"><span data-stu-id="d899a-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="d899a-194">Les numéros de port doivent être supérieurs ou égaux au zéro et inférieurs à 65 535 (0xFFFF).</span><span class="sxs-lookup"><span data-stu-id="d899a-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-195">Inscrit le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> dans le <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="d899a-196">Si aucun <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> n'est spécifié, la sélection automatique des adresses est utilisée avec la valeur de port spécifiée par la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-197">La méthode inscrit le nom d’homologue spécifié dans le <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> propriété avec toutes les adresses source et le <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> spécifié dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="d899a-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="d899a-198">Le port par défaut est utilisé par cette méthode uniquement si aucun point de terminaison n’est spécifiés.</span><span class="sxs-lookup"><span data-stu-id="d899a-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="d899a-199">Si le <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> propriété est `null`, cette méthode inscrit le nom d’homologue spécifié dans le <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> à l’aide de la propriété le <xref:System.Net.PeerToPeer.Cloud.Available> champ, qui initialise des valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="d899a-200">Après un <xref:System.Net.PeerToPeer.PeerNameRegistration> objet a été démarré, le <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> méthode est utilisée pour l’arrêter.</span><span class="sxs-lookup"><span data-stu-id="d899a-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="d899a-201">Pour mettre à jour une inscription, la <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> méthode doit être utilisée.</span><span class="sxs-lookup"><span data-stu-id="d899a-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d899a-202">L’exemple de code suivant crée un <xref:System.Net.PeerToPeer.PeerName> et l’inscrit avec les métadonnées spécifiées.</span><span class="sxs-lookup"><span data-stu-id="d899a-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d899a-203">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a pour valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d899a-204">La méthode Dispose() a déjà été appelée sur l'objet.</span><span class="sxs-lookup"><span data-stu-id="d899a-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="d899a-205">- Le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié a déjà été inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="d899a-206">La méthode <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> doit être utilisée pour mettre à jour une inscription.</span><span class="sxs-lookup"><span data-stu-id="d899a-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="d899a-207">- Le pair distant n’est pas propriétaire de <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="d899a-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="d899a-208">- <see cref="T:System.Net.PeerToPeer.PeerName" /> ou <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> n’est pas spécifié. Au moins l’un des deux doit être fourni.</span><span class="sxs-lookup"><span data-stu-id="d899a-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="d899a-209">- Les éléments de message ou de données ne sont pas valides.</span><span class="sxs-lookup"><span data-stu-id="d899a-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="d899a-210">Ou, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> n'est pas défini et aucun objet blob de données ou <see cref="T:System.Net.IPEndPoint" /> n'est spécifié.</span><span class="sxs-lookup"><span data-stu-id="d899a-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-211">Annule l'inscription du nom d'homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> à partir de tous les nuages dans lesquels il a été inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-212">Une fois le processus d’inscription a été arrêté, état de l’objet d’inscription est égal à l’état directement après la construction par le constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="d899a-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</span></span> <span data-ttu-id="d899a-213">Dans cet état, toutes ses propriétés sont supposées avoir aucune valeur.</span><span class="sxs-lookup"><span data-stu-id="d899a-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="d899a-214">Le <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> méthode peut être utilisée pour le redémarrer.</span><span class="sxs-lookup"><span data-stu-id="d899a-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="d899a-215">Il est possible d’avoir plusieurs objets d’inscription pour le même nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="d899a-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="d899a-216">Dans ce cas, si le nom d’homologue est sécurisé, chaque instance de représentent une inscription dans un nuage PNRP différent.</span><span class="sxs-lookup"><span data-stu-id="d899a-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="d899a-217">Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="d899a-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="d899a-218">Si cette instance est déjà arrêtée, l’appel de cette méthode n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="d899a-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d899a-219">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> n'a pas encore été inscrite.</span><span class="sxs-lookup"><span data-stu-id="d899a-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="d899a-220">Cela se produit lorsqu’un objet <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> est construit à l’aide du constructeur vide.</span><span class="sxs-lookup"><span data-stu-id="d899a-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="d899a-221">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> doit être remplie dans cette instance avant d’appeler <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d899a-222">La méthode Dispose() a déjà été appelée sur l'objet.</span><span class="sxs-lookup"><span data-stu-id="d899a-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d899a-223">Contient les données sérialisées associées à l'instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="d899a-224">Contient la destination du flux sérialisé associé à l'instance <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="d899a-225">Implémente l'interface <see cref="T:System.Runtime.Serialization.ISerializable" /> et retourne les données requises pour sérialiser l'instance de <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d899a-226">Met à jour le <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> pour un nœud inscrit avec un <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifique.</span><span class="sxs-lookup"><span data-stu-id="d899a-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="d899a-227">La mise à jour est effectuée à l'aide des informations spécifiées dans les propriétés.</span><span class="sxs-lookup"><span data-stu-id="d899a-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-228">Toutes les informations enregistrées dans les nuages pour ce <xref:System.Net.PeerToPeer.PeerName> avant l’appel est complètement ignoré.</span><span class="sxs-lookup"><span data-stu-id="d899a-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="d899a-229">Les nouvelles données ne sont pas combinées avec l’inscription existante.</span><span class="sxs-lookup"><span data-stu-id="d899a-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="d899a-230">Pour mettre à jour un <xref:System.Net.PeerToPeer.PeerNameRegistration>, tout d’abord mettre à jour les propriétés sur cette instance, puis appelez cette méthode.</span><span class="sxs-lookup"><span data-stu-id="d899a-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="d899a-231">Après un <xref:System.Net.PeerToPeer.PeerNameRecord> est inscrit, le <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> propriété ne peut pas être mis à jour.</span><span class="sxs-lookup"><span data-stu-id="d899a-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="d899a-232">Tous les autres champs dans l’enregistrement peuvent être mis à jour.</span><span class="sxs-lookup"><span data-stu-id="d899a-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d899a-233">La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a pour valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="d899a-234">-  La propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> n’a pas encore été inscrite.</span><span class="sxs-lookup"><span data-stu-id="d899a-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="d899a-235">La méthode <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> ne peut pas être appelée tant que le nom d'homologue spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> n'a pas été inscrit dans un ou plusieurs nuages.</span><span class="sxs-lookup"><span data-stu-id="d899a-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="d899a-236">- Le nom de pair spécifié dans la propriété <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> a été modifié depuis que le <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> correspondant a été inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="d899a-237">Un objet qui a été supprimé ne peut pas être inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d899a-238">Une propriété <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> a pour valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d899a-239">Obtient ou définit une valeur qui spécifie s'il faut utiliser la sélection de point de terminaison automatique pour traverser un maillage ou un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> d'homologues.</span><span class="sxs-lookup"><span data-stu-id="d899a-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="d899a-240"><see langword="true" /> si la sélection de point de terminaison automatique doit être utilisée ; <see langword="false" /> si une autre méthode doit être utilisée pour déterminer un point de terminaison.</span><span class="sxs-lookup"><span data-stu-id="d899a-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="d899a-241">La valeur par défaut est <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="d899a-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d899a-242">Lorsque la sélection de point de terminaison automatique est utilisée (cette propriété est définie sur `true`) sans aucune information de point de terminaison spécifiée avant le début d’un <xref:System.Net.PeerToPeer.PeerNameRegistration>, le système choisit des points de terminaison individuels et les publie avec le nom d’homologue associé dans tous les disponibles clouds.</span><span class="sxs-lookup"><span data-stu-id="d899a-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="d899a-243">Si le port n’est pas spécifié, la sélection automatique choisit le zéro comme le <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span><span class="sxs-lookup"><span data-stu-id="d899a-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="d899a-244">Lorsque la valeur `false`, la sélection automatique comme décrit ci-dessus n’est pas effectuée.</span><span class="sxs-lookup"><span data-stu-id="d899a-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="d899a-245">Ainsi, le processus d’inscription de publier un nom d’homologue avec un objet blob de données (comme spécifié par le <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> propriété).</span><span class="sxs-lookup"><span data-stu-id="d899a-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="d899a-246">Aucun point de terminaison n’est associés avec le nom.</span><span class="sxs-lookup"><span data-stu-id="d899a-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="d899a-247">Si une méthode d’inscription est utilisée pour sélectionner automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lesquelles le <xref:System.Net.PeerToPeer.PeerName> objet a été inscrit.</span><span class="sxs-lookup"><span data-stu-id="d899a-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="d899a-248">Autrement dit, le <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> propriété ne sera pas mis à jour pour refléter les adresses sélectionnés.</span><span class="sxs-lookup"><span data-stu-id="d899a-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="d899a-249">La mise à jour de cette propriété après que l’inscription de nom d’homologue a démarré n’a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="d899a-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>