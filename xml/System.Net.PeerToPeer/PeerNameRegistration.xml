<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PeerNameRegistration.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57cd8457b2e09ced1cfe602c70df106251aec2f71.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd8457b2e09ced1cfe602c70df106251aec2f71</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registers a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> in a <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> or set of clouds.</source>
          <target state="translated">Inscrit un <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> dans un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> ou un jeu de nuages.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Registration creates (or updates) all the information that is associated with a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.</source>
          <target state="translated">L’inscription crée (ou met à jour) toutes les informations qui sont associées à un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> dans un ou plusieurs nuages d’homologues.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>It is possible to have multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.</source>
          <target state="translated">Il est possible d’avoir plusieurs <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objets pour le même nom d’homologue.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>In such a case, if the peer name is secured, each instance represents <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.</source>
          <target state="translated">Dans ce cas, si le nom d’homologue est sécurisé, chaque instance représente <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> dans un cloud différent.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
          <target state="translated">Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois, en fournissant que chaque inscription provient d’un autre processus.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance par défaut de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>Returns a new default instance of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</source>
          <target state="translated">Retourne une nouvelle instance par défaut de type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>It does not perform peer name registration during construction.</source>
          <target state="translated">Il n’effectue pas l’inscription de nom d’homologue pendant la construction.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</source>
          <target state="translated">Après avoir instancié un objet avec ce constructeur, l’appelant doit remplir les champs appropriés dans l’instance avant d’appeler <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> à inscrire.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">Valeur d’entier qui spécifie le numéro de port à enregistrer.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified name and port number.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> avec le nom et le numéro de port spécifiés.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
          <target state="translated">Appel de ce constructeur crée une instance qui sera utilisée pour enregistrer toutes les adresses source (IPv4 IPv6and) et le port fourni pour tous les clouds auquel l’homologue participe actuellement.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the object is constructed successfully, the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.</source>
          <target state="translated">Si l’objet est construit avec succès, le texte spécifié <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> sont remplies.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>If the peer name is secured and was previously registered in a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
          <target state="translated">Si le nom d’homologue est sécurisé et qu’il a été précédemment inscrit dans un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> l’homologue participe actuellement, un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>This constructor only creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.</source>
          <target state="translated">Ce constructeur crée uniquement une <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance ; il n’effectue pas l’inscription.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.</source>
          <target state="translated">Après avoir instancié l’objet d’inscription avec ce constructeur et rempli ses champs, l’application doit appeler <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> pour effectuer l’inscription proprement dite.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> ne peut pas avoir la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">Le numéro de port spécifié est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié a déjà été enregistré à partir de cet hôte.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">L’homologue distant ne possède pas <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> pour l’objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
          <target state="translated">Référence à l’objet qui contient les données nécessaires pour désérialiser cette instance.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Context that provides the means for deserializing the data.</source>
          <target state="translated">Le contexte qui fournit les moyens de désérialiser les données.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Also referred to as the source of the serialized data.</source>
          <target state="translated">On l’appelle aussi source des données sérialisées.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new serializable <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Initialise un nouvel objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> sérialisable.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object to register.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> à inscrire.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Integer value that specifies the port number to register.</source>
          <target state="translated">Valeur d’entier qui spécifie le numéro de port à enregistrer.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> in which to register the peer name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> où enregistrer le nom d’homologue.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> class with the specified peer name, port number, and <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> avec le nom d’homologue, le numéro de port et <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">Appel de ce constructeur crée une instance qui sera utilisée pour enregistrer toutes les adresses source (IPv4 et IPv6), le port fourni et spécifié <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the object is constructed successfully, the properties are populated with the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
          <target state="translated">Si l’objet est construit avec succès, les propriétés sont remplies avec les <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Si le paramètre de cloud est <ph id="ph1">`null`</ph>, le nom est enregistré à l’aide de la <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> raccourci qui initialise les valeurs par défaut pour le <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>After instantiation, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
          <target state="translated">Après l’instanciation, le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> méthode doit être appelée pour inscrire le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;paramref name="name" /&gt;</ph> parameter cannot be <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="name" /&gt;</ph> ne peut pas avoir la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The specified port number is less than zero.</source>
          <target state="translated">Le numéro de port spécifié est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered from this host.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié a déjà été enregistré à partir de cet hôte.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the supplied <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object.</source>
          <target state="translated">L’homologue distant ne possède pas <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> pour l’objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> fourni.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>Gets or sets information in a <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> into which this <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> object will be registered.</source>
          <target state="translated">Obtient ou définit des informations dans un <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> dans lequel cet objet <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /&gt;</ph> sera inscrit.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> that specifies the peer cloud for which this registration is defined.</source>
          <target state="translated">Un objet de type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> qui spécifie le nuage d'homologues pour lequel cette inscription est définie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Cette propriété a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>Gets or sets additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> object that will be registered with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit des informations supplémentaires à propos de l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> qui sera inscrit avec le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The comment that contains additional information about the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> to associate with the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Commentaire qui contient des informations supplémentaires à propos du <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> à associer au <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Cette propriété a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
          <source>The specified string value is greater than 39 Unicode characters.</source>
          <target state="translated">La valeur de chaîne spécifiée est supérieure à 39 caractères Unicode.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>Gets or sets application-defined binary data for the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Obtient ou définit les données binaires définies par l'application pour l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
          <target state="translated">Tableau d'octets contenant les données binaires associées à l'entrée.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>This property is set to <ph id="ph1">&lt;see langword="null" /&gt;</ph> by default.</source>
          <target state="translated">Cette propriété a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The maximum amount of <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.</source>
          <target state="translated">La quantité maximale de <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> qui peut être fournie est de 4 096 octets.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
          <source>The specified <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> is greater than 4096 bytes.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /&gt;</ph> spécifié est supérieur à 4096 octets.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>When a peer leaves a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, the cloud no longer requires the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object associated with the peer.</source>
          <target state="translated">Lorsqu’un homologue quitte un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Cloud&gt;</ph>, le cloud ne requiert plus le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objet associé à l’homologue.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</source>
          <target state="translated">Indique si l’objet d’inscription est arrêté ou de suppression dépend de si le cloud réutilise l’objet pour inscrire cet homologue ou un autre homologue.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</source>
          <target state="translated">S’il existe de n’importe quel autre point de terminaison dans l’objet d’inscription avec lequel l’hôte homologue attendu communiquer, l’inscription de ces points de terminaison dans le cloud doit se produire avant l’arrêt ou la suppression de cet objet.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.PeerToPeer.PeerNameRegistration">
          <source>If the cloud expects to register more peers, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Si le cloud s’attend à enregistrer d’autres homologues, la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> méthode est recommandée ; lorsque le cloud ne nécessite plus de la mémoire, il doit être retournée au système d’exploitation via la <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <source>lways call the Dispose method before destroying the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">toujours appellent la méthode Dispose avant de détruire le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources non gérées et libère éventuellement les ressources gérées utilisées par l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
          <source>Always call the Dispose method before releasing the last reference to the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Appelez toujours la méthode Dispose avant de libérer la dernière référence à le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
          <target state="translated">Obtient la collection des points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>An <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /&gt;</ph> qui contient les points de terminaison de réseau pour lesquels le nom d'homologue associé est inscrit.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>In the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace, an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.</source>
          <target state="translated">Dans le <ph id="ph1">&lt;xref:System.Net&gt;</ph> espace de noms, un <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> représente un point de terminaison réseau comme une adresse IP et un numéro de port.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
          <target state="translated">Pour PNRP, une valeur d’adresse et le port IP doit être fournie pour chaque point de terminaison.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The maximum number of endpoints that can be provided is ten.</source>
          <target state="translated">Le nombre maximal de points de terminaison qui peut être fourni est 10.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Sélection automatique des adresses est utilisée lorsque ce paramètre est <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
          <target state="translated">Si une méthode d’inscription est utilisée qui sélectionne automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lequel le nom d’homologue a été enregistré.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">Autrement dit, le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propriété ne sera pas mis à jour pour refléter les adresses sélectionnées.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>When a peer name is registered for more than one node, each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.</source>
          <target state="translated">Lorsqu’un nom d’homologue est enregistré pour plusieurs nœuds, chaque <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> est distincte et <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propriété définie sur chaque instance d’inscription sera différente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>Also, when a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
          <target state="translated">Également, lorsqu’un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> est enregistré dans plusieurs <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, chaque inscription est distincte et la collection de points de terminaison sera habituellement différente pour chaque instance.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
          <source>The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</source>
          <target state="translated">La liste de points de terminaison avec lesquels cet homologue communiquera n’est pas identique à la liste des points de terminaison par lequel ce nom d’homologue est connu, qui est stockée différemment.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Contient les données sérialisées associées à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Contient la destination du flux sérialisé associé à l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Remplit un objet d’informations de sérialisation <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> avec les données nécessaires pour sérialiser l’instance.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>Gets or sets whether the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> on a host.</source>
          <target state="translated">Obtient ou définit si le nom d'homologue spécifié dans la propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> est inscrit avec un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> spécifique sur un hôte.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the peer name is registered with a <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> for the peer host.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="true" /&gt;</ph>, le nom d'homologue est inscrit avec un <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> pour l'hôte homologue.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, then the registration process can be started with <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="false" /&gt;</ph>, le processus d'inscription peut être démarré avec <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
          <source>An object that has been disposed already cannot be registered.</source>
          <target state="translated">Un objet qui a déjà été supprimé ne peut pas être inscrit.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
          <target state="translated">Obtient ou définit le nom d'homologue à inscrire avec un nuage d'homologue.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>An object of type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> that contains values associated with this <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Objet de type <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> qui contient des valeurs associé à cet objet <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">&lt;see langword="null" /&gt;</ph> for reference types.</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de toutes les propriétés est <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour les types référence.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>A peer name can be registered for more than one node; each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.</source>
          <target state="translated">Un nom d’homologue peut être inscrit pour plusieurs nœuds ; chaque <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance est distincte.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propriété associée à chaque correspondant <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance est différente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
          <target state="translated">En outre, il est possible d’inscrire un nom d’homologue pour plusieurs nuages le nœud est connecté ; chacune de ces inscriptions est distincte.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
          <source>The peer name's <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.</source>
          <target state="translated">Le nom d’homologue <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> sera différent dans chacune de ces instances.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object.</source>
          <target state="translated">Obtient ou définit le numéro de port <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> utilisé par l’homologue en cours d’inscription dans l’objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>An integer value indicating the TCP port number of the <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</source>
          <target state="translated">Valeur entière indiquant le numéro port TCP du <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
          <target state="translated">Sauf spécification explicite, la valeur par défaut de cette propriété est zéro (0).</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The default port is used by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.</source>
          <target state="translated">Le port par défaut est utilisé par le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> méthode uniquement si aucun point de terminaison n’est spécifiés.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>The specified port value is less than zero.</source>
          <target state="translated">La valeur de port spécifiée est inférieure à zéro.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
          <target state="translated">Les numéros de ports doivent être supérieurs ou égaux à zéro et inférieurs à 65 535 (0xFFFF).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Registers the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> into the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">Inscrit le <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> dans le <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If no <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph> property.</source>
          <target state="translated">Si aucun <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /&gt;</ph> n’est spécifié, la sélection automatique des adresses est utilisée avec la valeur de port spécifiée par la propriété <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The method registers the peer name specified in the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.</source>
          <target state="translated">La méthode inscrit le nom d’homologue spécifié dans le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> propriété avec toutes les adresses source et le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> spécifié dans le constructeur.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The default port is used by this method only when no endpoints are specified.</source>
          <target state="translated">Le port par défaut est utilisé par cette méthode uniquement si aucun point de terminaison n’est spécifiés.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, this method registers the peer name specified in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> propriété est <ph id="ph2">`null`</ph>, cette méthode inscrit le nom d’homologue spécifié dans le <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> à l’aide de la propriété du <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> champ, qui initialise les valeurs par défaut pour le <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>et <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.</source>
          <target state="translated">Après un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> l’objet a été démarré, le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> méthode est utilisée pour l’arrêter.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>To update a registration, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.</source>
          <target state="translated">Pour mettre à jour une inscription, la <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> méthode doit être utilisée.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> and registers it along with the metadata specified.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> et l’inscrit avec les métadonnées spécifiées.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">Dispose() a déjà été appelé pour cet objet.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified has already been registered.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié a déjà été enregistré.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method must be used to update a registration.</source>
          <target state="translated">Le méthode <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> doit être utilisée pour mettre à jour une inscription.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The remote peer does not own the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> specified.</source>
          <target state="translated">L’homologue distant ne possède pas <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerName.Authority" /&gt;</ph> pour le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Either the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> or the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> is not specified; at least one needs to be provided.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerName" /&gt;</ph> ou le <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /&gt;</ph> n’est pas spécifié ; au moins un des deux doit être fourni.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>The message or data elements are invalid.</source>
          <target state="translated">Les éléments de message ou de données ne sont pas valides.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
          <source>Or, <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> is not set and no data blob or <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> is specified.</source>
          <target state="translated">Ou bien <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /&gt;</ph> n’est pas défini et aucun objet blob de données ou <ph id="ph2">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> n’est spécifié.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>Unregisters the peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property from all the clouds in which it was registered.</source>
          <target state="translated">Annule l’inscription du nom d’homologue spécifié dans la propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> dans tous les clouds où il était inscrit.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
          <target state="translated">Une fois le processus d’inscription a été arrêté, état de l’objet d’inscription est égal à l’état directement après la construction par le constructeur par défaut.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In this state, all of its properties are assumed to have no value.</source>
          <target state="translated">Dans cet état, toutes ses propriétés sont supposées avoir aucune valeur.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> méthode peut être utilisée pour le redémarrer.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
          <target state="translated">Il est possible d’avoir plusieurs objets d’inscription pour le même nom d’homologue.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
          <target state="translated">Dans ce cas, si le nom d’homologue est sécurisé, chaque instance représente un enregistrement dans un nuage PNRP différent.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
          <target state="translated">Toutefois, si le nom d’homologue n’est pas sécurisé, il peut être inscrit dans le cloud même plusieurs fois.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">Si cette instance est déjà arrêtée, appel de cette méthode n’a aucun effet.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> n’a pas encore été enregistrée.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This occurs when a <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> object is constructed using the empty constructor.</source>
          <target state="translated">Cela se produit lorsqu’un objet <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> est construit à l’aide du constructeur vide.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property must be populated in this instance prior to calling <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> doit être remplie dans cette instance avant d’appeler <ph id="ph2">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
          <source>This object had Dispose() called on it previously.</source>
          <target state="translated">Dispose() a déjà été appelé pour cet objet.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Contient les données sérialisées associées à l'instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Contient la destination du flux sérialisé associé à l’instance <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> instance.</source>
          <target state="translated">Implémente l'interface <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ISerializable" /&gt;</ph> et retourne les données nécessaires pour sérialiser l'instance <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Updates the <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> for a node registered with a specific <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph>.</source>
          <target state="translated">Met à jour le <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /&gt;</ph> pour un nœud enregistré avec un <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.Cloud" /&gt;</ph> spécifique.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>Update is performed using the information specified in the properties.</source>
          <target state="translated">La mise à jour est effectuée à l’aide des informations spécifiées dans les propriétés.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All information registered in cloud(s) for this <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.</source>
          <target state="translated">Toutes les informations inscrites dans les nuages pour ce <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> avant l’appel sont complètement ignorées.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The new data is not combined with the existing registration.</source>
          <target state="translated">Les nouvelles données ne sont pas associées à l’enregistrement existant.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>To update a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.</source>
          <target state="translated">Pour mettre à jour un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, tout d’abord mettre à jour les propriétés sur cette instance, puis appelez cette méthode.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.</source>
          <target state="translated">Après un <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> est inscrit, le <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> propriété ne peut pas être mise à jour.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>All other fields in the record may be updated.</source>
          <target state="translated">Tous les autres champs dans l’enregistrement peuvent être mis à jour.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has not yet been registered.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> n’a pas encore été enregistrée.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> method cannot be called until the peer name specified in the <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property is registered in one or more clouds.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /&gt;</ph> ne peut pas être appelée jusqu'à ce que le nom d’homologue spécifié dans la propriété <ph id="ph2">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> soit enregistré dans un ou plusieurs clouds.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>The peer name specified in the <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> property has changed since the corresponding <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> was registered.</source>
          <target state="translated">Le nom d’homologue spécifié dans la propriété <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /&gt;</ph> a été modifié depuis que le <ph id="ph2">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> correspondant a été enregistré.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>An object that has been disposed cannot be registered.</source>
          <target state="translated">Impossible d’enregistrer un objet qui a été supprimé.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> property is set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Une propriété <ph id="ph1">&lt;see cref="T:System.Net.PeerToPeer.PeerNameRecord" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une valeur qui spécifie s'il faut utiliser la sélection de point de terminaison automatique pour traverser un maillage ou un <ph id="ph1">&lt;see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /&gt;</ph> d'homologues.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if automatic endpoint selection is to be used; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if some other method will be used to determine an endpoint.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si la sélection de point de terminaison automatique doit être utilisée ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si une autre méthode doit être utilisée pour déterminer un point de terminaison.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
          <target state="translated">Lorsque la sélection de point de terminaison automatique est utilisée (cette propriété est définie sur <ph id="ph1">`true`</ph>) sans aucune information de point de terminaison spécifiée avant le démarrage d’un <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, le système choisit des points de terminaison individuels et les publie avec le nom d’homologue associé dans tous les disponibles clouds.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If the port is not specified, auto selection chooses zero as the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</source>
          <target state="translated">Si le port n’est pas spécifié, la sélection automatique choisit le zéro comme le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
          <target state="translated">Lorsque la valeur <ph id="ph1">`false`</ph>, la sélection automatique comme décrit ci-dessus n’est pas effectuée.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).</source>
          <target state="translated">Cela permet au processus d’inscription de publier un nom d’homologue avec un objet blob de données (comme spécifié par le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> propriété).</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>No endpoints are associated with the name.</source>
          <target state="translated">Aucun point de terminaison n’est associés avec le nom.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.</source>
          <target state="translated">Si une méthode d’inscription est utilisée qui sélectionne automatiquement les adresses à inscrire, il n’existe aucune méthode pour déterminer les adresses pour lesquelles le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> l’objet a été inscrit.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
          <target state="translated">Autrement dit, le <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> propriété ne sera pas mis à jour pour refléter les adresses sélectionnées.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
          <source>Updating this property after peer name registration has started has no effect.</source>
          <target state="translated">Mise à jour de cette propriété après que l’inscription de nom d’homologue a démarré n’a aucun effet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>