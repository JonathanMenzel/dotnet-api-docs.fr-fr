<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97ae5e632ef32ac564a931d5e857b1eac247da22" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733653" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b35b4-101">Spécifie les valeurs qui résolvent un <see cref="T:System.Net.PeerToPeer.PeerName" /> en un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à l'aide de l'API du fournisseur d'espace de noms PNRP.</span><span class="sxs-lookup"><span data-stu-id="b35b4-101">Specifies the values that resolve a <see cref="T:System.Net.PeerToPeer.PeerName" /> to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP Namespace Provider API protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-102">Un <xref:System.Net.PeerToPeer.PeerNameRecord> qui contient toutes les informations pour le <xref:System.Net.PeerToPeer.PeerName> qui a été publié dans le <xref:System.Net.PeerToPeer.Cloud> ou nuages ont été interrogés pendant le processus de résolution.</span><span class="sxs-lookup"><span data-stu-id="b35b4-102">A <xref:System.Net.PeerToPeer.PeerNameRecord> which contains all the information for the <xref:System.Net.PeerToPeer.PeerName> that was published in the <xref:System.Net.PeerToPeer.Cloud> or cloud(s) that were queried during the resolve process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b35b4-103">Initialise une nouvelle instance par défaut de la classe <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-103">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameResolver" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-104">Après avoir résolu avec succès un <xref:System.Net.PeerToPeer.PeerName>, le <xref:System.Net.PeerToPeer.PeerNameRecord> contient toutes les informations pour le texte spécifié <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> qui a été publié dans les nuages ont été interrogés pendant la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> opération.</span><span class="sxs-lookup"><span data-stu-id="b35b4-104">After successfully resolving a <xref:System.Net.PeerToPeer.PeerName>, the <xref:System.Net.PeerToPeer.PeerNameRecord> contains all the information for the specified <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> that was published in the cloud(s) that were queried during the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b35b4-105">Objet <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> qui contient les données retournées par l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-105">The <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> object that contains the data returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event.</span></span></param>
        <summary><span data-ttu-id="b35b4-106">Retourne les données de la résolution des homologues si l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="b35b4-106">Returns peer resolution data after the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-107">Cette méthode est un rappel asynchrone utilisé pour traiter les données de résolution de nom homologue une fois que la résolution d’homologue est terminée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-107">This method is an asynchronous callback used to process peer name resolution data after peer resolution has completed.</span></span>  
  
 <span data-ttu-id="b35b4-108">Types dérivés peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement est déclenché par l’objet de programme de résolution d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-108">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised by the peer resolver object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b35b4-109">Objet <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> qui contient les informations de progression de la résolution de noms d’homologues retournées par l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> object that contains peer name resolution progress information returned by the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="b35b4-110">Retourne les données de progression de la résolution des homologues lorsque l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="b35b4-110">Returns peer resolution progress data when the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event is raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-111">Cette méthode est un rappel asynchrone utilisé pour traiter les données de résolution d’homologue une fois que la progression de la résolution d’homologue a été demandée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-111">This method is an asynchronous callback used to process peer resolution data after peer resolution progress has been requested.</span></span>  
  
 <span data-ttu-id="b35b4-112">Types dérivés peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement se produit.</span><span class="sxs-lookup"><span data-stu-id="b35b4-112">Derived types can override this method to perform additional tasks when the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b35b4-113">Lorsque vous substituez cette méthode dans un type dérivé, veillez à appeler le type de base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</span><span class="sxs-lookup"><span data-stu-id="b35b4-113">When overriding this method in a derived type, be sure to call the base type's <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b35b4-114">Résout un objet <see cref="T:System.Net.PeerToPeer.PeerName" /> en un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à l'aide du protocole PNRP.</span><span class="sxs-lookup"><span data-stu-id="b35b4-114">Resolves a <see cref="T:System.Net.PeerToPeer.PeerName" /> object to a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> using the PNRP protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-115">Cette méthode associe des noms d’homologue aux nuages.</span><span class="sxs-lookup"><span data-stu-id="b35b4-115">This method associates peer names to clouds.</span></span> <span data-ttu-id="b35b4-116">Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-116">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="b35b4-117">Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-117">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="b35b4-118">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-118">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="b35b4-119">Ils sont identiques dans les paramètres, qu'ils sont passés, à ceci près que la méthode ResolveAsync inclut un jeton de système dans sa liste de paramètres pour la gestion des événements asynchrones.</span><span class="sxs-lookup"><span data-stu-id="b35b4-119">They are identical in the parameters they are passed, except that the ResolveAsync method includes a system token in its parameter list for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="b35b4-120">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-120">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  <span data-ttu-id="b35b4-121">Si le `maxRecords` paramètre est manquant, la valeur par défaut zéro provoque une <xref:System.ArgumentOutOfRangeException> levée d’exception.</span><span class="sxs-lookup"><span data-stu-id="b35b4-121">If the `maxRecords` parameter is missing, the default value of zero causes an <xref:System.ArgumentOutOfRangeException> exception to be thrown.</span></span>  
  
 <span data-ttu-id="b35b4-122">Cet événement sera également être déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-122">This event will also be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-123">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-123">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <summary><span data-ttu-id="b35b4-124">Résout le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les nuages connus de l'homologue appelant.</span><span class="sxs-lookup"><span data-stu-id="b35b4-124">Resolves the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <returns><span data-ttu-id="b35b4-125">Un <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> qui contient tous les enregistrements de nom de l'homologue (représentés comme objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> ) associés au nom d'homologue spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-125">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="b35b4-126">Pour les noms d'homologue non sécurisés, le même <see cref="T:System.Net.PeerToPeer.PeerName" /> peut être inscrit par des utilisateurs différents dans le même <see cref="T:System.Net.PeerToPeer.Cloud" />, et associés à des points de terminaison différents.</span><span class="sxs-lookup"><span data-stu-id="b35b4-126">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-127">Cette méthode associe un nom d’homologue aux nuages.</span><span class="sxs-lookup"><span data-stu-id="b35b4-127">This method associates a peer name to clouds.</span></span> <span data-ttu-id="b35b4-128">Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-128">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="b35b4-129">Si le nom d’homologue ne peut pas être résolu ou n’est `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-129">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-130">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-130">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="b35b4-131">Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-131">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="b35b4-132">Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-132">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="b35b4-133">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-133">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="b35b4-134">Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.</span><span class="sxs-lookup"><span data-stu-id="b35b4-134">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="b35b4-135">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-135">If the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 <span data-ttu-id="b35b4-136">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-136">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b35b4-137">L’exemple de code suivant illustre comment résoudre un <xref:System.Net.PeerToPeer.PeerName> publié dans un <xref:System.Net.PeerToPeer.Cloud>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-137">The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.</span></span>  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-138">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-138">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="b35b4-139">Le nom d'homologue spécifié ne peut pas être résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-139">The peer name specified cannot be resolved.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-140">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-140">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="b35b4-141">Nombre maximal d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à obtenir de tous les objets <see cref="T:System.Net.PeerToPeer.Cloud" /> pour le <paramref name="peerName" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="b35b4-141">The maximum number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects to obtain from all <see cref="T:System.Net.PeerToPeer.Cloud" /> objects for the supplied <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="b35b4-142">Résout le nom d'homologue spécifié dans tous les nuages connus de l'homologue appelant, sans retourner plus que le nombre spécifié d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-142">Resolves the specified peer name in all clouds known to the calling peer, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="b35b4-143"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> dont la taille est inférieure ou égale aux entrées <paramref name="maxRecords" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-143">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="b35b4-144">Cette collection contient des enregistrements de nom d'homologue associés au <see cref="T:System.Net.PeerToPeer.PeerName" /> qui a été résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-144">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-145">Cette méthode associe un nom d’homologue aux nuages.</span><span class="sxs-lookup"><span data-stu-id="b35b4-145">This method associates a peer name to clouds.</span></span> <span data-ttu-id="b35b4-146">Tous les nuages sont interrogés pour le nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-146">All clouds are queried for the peer name.</span></span> <span data-ttu-id="b35b4-147">Pour les noms d’homologue non sécurisés, le même nom d’homologue peut être inscrit par différents utilisateurs dans le même <xref:System.Net.PeerToPeer.Cloud>et associés à différents points de terminaison.</span><span class="sxs-lookup"><span data-stu-id="b35b4-147">For unsecured peer names, the same peer name can be registered by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="b35b4-148">Si le <xref:System.Net.PeerToPeer.PeerName> ne peut pas être résolu (par exemple, le nom d’homologue n’est pas publié) un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-148">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (for example, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-149">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-149">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="b35b4-150">Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.</span><span class="sxs-lookup"><span data-stu-id="b35b4-150">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="b35b4-151">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-151">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-152">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-152">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b35b4-153">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="b35b4-153">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="b35b4-154">Le nom d'homologue fourni ne peut pas être résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-154">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-155">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-155">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="b35b4-156"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel résoudre le nom d'homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-156">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the peer name.</span></span></param>
        <summary><span data-ttu-id="b35b4-157">Résout le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" />spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-157">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <returns><span data-ttu-id="b35b4-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> qui contient tous les enregistrements de nom d'homologue (représentés comme objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> ) associés au nom d'homologue spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-158"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> that contains all peer name records (represented as <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects) associated with the specified peer name.</span></span> <span data-ttu-id="b35b4-159">Pour les noms d'homologue non sécurisés, le même <see cref="T:System.Net.PeerToPeer.PeerName" /> peut être inscrit par des utilisateurs différents dans le même <see cref="T:System.Net.PeerToPeer.Cloud" />, et associés à des points de terminaison différents.</span><span class="sxs-lookup"><span data-stu-id="b35b4-159">For unsecured peer names, the same <see cref="T:System.Net.PeerToPeer.PeerName" /> can be registered by different users in the same <see cref="T:System.Net.PeerToPeer.Cloud" />, and associated with different endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-160">Si le <xref:System.Net.PeerToPeer.PeerName> ne peut pas être résolue (autrement dit, le nom d’homologue n’est pas publié) un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-160">If the <xref:System.Net.PeerToPeer.PeerName> cannot be resolved (that is, the peer name is not published) an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-161">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-161">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="b35b4-162">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-162">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="b35b4-163">Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.</span><span class="sxs-lookup"><span data-stu-id="b35b4-163">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="b35b4-164">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le <xref:System.Net.PeerToPeer.PeerNameResolver> utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour renseigner le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-164">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="b35b4-165">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-165">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-166">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-166">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="b35b4-167">Le nom d'homologue fourni ne peut pas être résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-167">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-168">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-168">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="b35b4-169"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel de résoudre le <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-169">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="b35b4-170">Nombre maximal d'objets d'enregistrement de nom d'homologue à obtenir du nuage spécifié pour le <paramref name="peerName" />spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-170">The maximum number of peer name record objects to obtain from the specified cloud for the specified <paramref name="peerName" />.</span></span></param>
        <summary><span data-ttu-id="b35b4-171">Résout le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" />spécifié, sans retourner plus que le nombre spécifié d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-171">Resolves the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />, returning no more than the specified number of <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> objects.</span></span></summary>
        <returns><span data-ttu-id="b35b4-172"><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> dont la taille est inférieure ou égale aux entrées <paramref name="maxRecords" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-172">A <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> whose size is less than or equal to <paramref name="maxRecords" /> entries.</span></span> <span data-ttu-id="b35b4-173">Cette collection contient des enregistrements de nom d'homologue associés au <see cref="T:System.Net.PeerToPeer.PeerName" /> qui a été résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-173">This collection contains peer name records associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> that was resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-174">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-174">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="b35b4-175">Si le nom d’homologue ne peut pas être résolu, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-175">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-176">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-176">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method.</span></span>  <span data-ttu-id="b35b4-177">Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.</span><span class="sxs-lookup"><span data-stu-id="b35b4-177">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling.</span></span>  
  
 <span data-ttu-id="b35b4-178">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le <xref:System.Net.PeerToPeer.PeerNameResolver> utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour renseigner le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-178">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the <xref:System.Net.PeerToPeer.PeerNameResolver> uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="b35b4-179">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-179">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-180">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-180">The <paramref name="peerName" /> parameter is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b35b4-181">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="b35b4-181">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="b35b4-182">Le nom d'homologue fourni ne peut pas être résolu.</span><span class="sxs-lookup"><span data-stu-id="b35b4-182">The supplied peer name cannot be resolved.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b35b4-183">Ces méthodes commencent une opération de résolution asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les nuages connus de l'homologue appelant.</span><span class="sxs-lookup"><span data-stu-id="b35b4-183">These methods begin an asynchronous resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-184">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), qui est utilisé lorsque le traitement asynchrone est requis.</span><span class="sxs-lookup"><span data-stu-id="b35b4-184">For every <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, which is used when asynchronous processing is required.</span></span>  <span data-ttu-id="b35b4-185">Ils sont identiques dans les paramètres, qu'ils sont passés, mais ResolveAsync inclut un jeton de système dans sa liste de paramètres pour la gestion des événements.</span><span class="sxs-lookup"><span data-stu-id="b35b4-185">They are identical in the parameters they are passed, except that ResolveAsync includes a system token in its parameter list for event handling.</span></span>  
  
 <span data-ttu-id="b35b4-186">Si une incompatibilité de paramètres se produit entre la méthode Resolve et la méthode ResolveAsync et le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-186">If a parameter mismatch occurs between the Resolve method and the ResolveAsync method, and the <xref:System.Net.PeerToPeer.Cloud> parameter is not supplied, the method uses the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut to fill in cloud parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-187">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-187">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="userState"><span data-ttu-id="b35b4-188">Objet défini par l'utilisateur qui contient des informations d’état sur l'opération de résolution de nom de pair.</span><span class="sxs-lookup"><span data-stu-id="b35b4-188">A user-defined object that contains state information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="b35b4-189">Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans tous les clouds connus de l’homologue appelant.</span><span class="sxs-lookup"><span data-stu-id="b35b4-189">Begins an asynchronous peer name resolution operation for the specified <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> in all clouds known to the calling peer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-190">Cette méthode associe un nom d’homologue à nuages de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-190">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="b35b4-191">Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-191">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="b35b4-192">Il déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-192">It raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="b35b4-193">Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-193">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="b35b4-194">Si le nom d’homologue ne peut pas être résolu, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-194">If the peer name cannot be resolved, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-195">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-195">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="b35b4-196">Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-196">Calling the <xref:System.Net.PeerToPeer.PeerNameResolver> method is similar to calling the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method for each peer name record in the <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</span></span> <span data-ttu-id="b35b4-197">Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-197">Note that using the Resolve method on an individual peer name record does not invalidate resolving multiple peer names.</span></span>  
  
 <span data-ttu-id="b35b4-198">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-198">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="b35b4-199">Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-199">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="b35b4-200">Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique.</span><span class="sxs-lookup"><span data-stu-id="b35b4-200">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="b35b4-201">Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b35b4-201">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="b35b4-202">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-202">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-203">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-203">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-204">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-204">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="b35b4-205">Le nombre maximal d’enregistrements à obtenir pour le nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-205">The maximum number of records to obtain for the Peer Name.</span></span></param>
        <param name="userState"><span data-ttu-id="b35b4-206">Objet défini par l'utilisateur qui comporte des informations sur l'opération de résolution.</span><span class="sxs-lookup"><span data-stu-id="b35b4-206">A user-defined object that contains information about the resolve operation.</span></span></param>
        <summary><span data-ttu-id="b35b4-207">Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les clouds connus de l’homologue appelant, en renvoyant au maximum <paramref name="maxRecords" /> entrées pour le nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-207">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in all clouds known to the calling peer, returning no more than <paramref name="maxRecords" /> entries for the peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-208">Cette méthode associe un nom d’homologue à nuages de façon asynchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-208">This method asynchronously associates a peer name to clouds.</span></span> <span data-ttu-id="b35b4-209">Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-209">All clouds are queried for the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="b35b4-210">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-210">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span> <span data-ttu-id="b35b4-211">Si le nom d’homologue ne peut pas être résolu ou n’est `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-211">If the peer name cannot be resolved or is `null`, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="b35b4-212">Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-212">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="b35b4-213">Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-213">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="b35b4-214">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-214">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="b35b4-215">Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-215">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="b35b4-216">Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-216">All asynchronous references to the resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="b35b4-217">Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b35b4-217">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="b35b4-218">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-218">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-219">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-219">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b35b4-220">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="b35b4-220">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-221">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-221">The <see cref="T:System.Net.PeerToPeer.PeerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="b35b4-222"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel de résoudre le <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-222">The <see cref="T:System.Net.PeerToPeer.Cloud" /> in which to resolve the <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="b35b4-223"><see cref="T:System.Object" /> défini par l'utilisateur qui contient des informations sur l'opération de résolution du nom de pair.</span><span class="sxs-lookup"><span data-stu-id="b35b4-223">A user-defined <see cref="T:System.Object" /> that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="b35b4-224">Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-224">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-225">Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-225">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="b35b4-226">Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-226">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="b35b4-227">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-227">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="b35b4-228">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le nom est résolu à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="b35b4-228">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="b35b4-229">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-229">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="b35b4-230">Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-230">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="b35b4-231">Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique.</span><span class="sxs-lookup"><span data-stu-id="b35b4-231">All asynchronous references to the resolver object are coordinated with a unique identifier token.</span></span> <span data-ttu-id="b35b4-232">Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b35b4-232">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="b35b4-233">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-233">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-234">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-234">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="b35b4-235">Le <paramref name="peerName" /> à résoudre.</span><span class="sxs-lookup"><span data-stu-id="b35b4-235">The <paramref name="peerName" /> to resolve.</span></span></param>
        <param name="cloud"><span data-ttu-id="b35b4-236"><paramref name="cloud" /> dans lequel résoudre <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-236">The <paramref name="cloud" /> in which to resolve <paramref name="peerName" />.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="b35b4-237">Le nombre maximal d’enregistrements à obtenir de <paramref name="cloud" /> pour <paramref name="peerName" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-237">The maximum number of records to obtain from <paramref name="cloud" /> for <paramref name="peerName" />.</span></span></param>
        <param name="userState"><span data-ttu-id="b35b4-238">Objet défini par l'utilisateur qui contient des informations sur l'opération de résolution de nom d’homologue.</span><span class="sxs-lookup"><span data-stu-id="b35b4-238">A user-defined object that contains information about the peer name resolution operation.</span></span></param>
        <summary><span data-ttu-id="b35b4-239">Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-239">Begins an asynchronous peer name resolution operation for the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> in the specified <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  <span data-ttu-id="b35b4-240">L’opération de résolution ne résout pas plus de <paramref name="maxRecords" /> entrées pour le nom d’homologue spécifié.</span><span class="sxs-lookup"><span data-stu-id="b35b4-240">The resolution operation will resolve no more than <paramref name="maxRecords" /> entries for the specified peer name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-241">Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.</span><span class="sxs-lookup"><span data-stu-id="b35b4-241">For unsecured peer names, the same name can be registered (and associated with different endpoints) by different peers within the same cloud.</span></span>  
  
 <span data-ttu-id="b35b4-242">Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-242">This method raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> method.</span></span> <span data-ttu-id="b35b4-243">Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-243">Or, it raises the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event, which calls back to the <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> method.</span></span>  
  
 <span data-ttu-id="b35b4-244">Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le nom est résolu à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="b35b4-244">If the <xref:System.Net.PeerToPeer.Cloud> parameter is `null`, the name is resolved using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> properties.</span></span>  
  
 <span data-ttu-id="b35b4-245">Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b35b4-245">For every <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> method, there is an equivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> method.</span></span>  <span data-ttu-id="b35b4-246">Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.</span><span class="sxs-lookup"><span data-stu-id="b35b4-246">Their parameter lists are identical, except that the ResolveAsync method includes a system token for asynchronous event handling, and the Resolve method is intended for synchronous processing.</span></span>  
  
 <span data-ttu-id="b35b4-247">Toutes les références asynchrones à l’objet de programme de résolution d’homologue sont coordonnées avec un jeton d’identificateur unique <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-247">All asynchronous references to the peer resolver object are coordinated with a unique identifier token <xref:System.Object>.</span></span> <span data-ttu-id="b35b4-248">Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.</span><span class="sxs-lookup"><span data-stu-id="b35b4-248">This `userState` token or message identifier allows an operating system to deliver a message to a single receiving process after the message has been placed on the message queue.</span></span>  
  
 <span data-ttu-id="b35b4-249">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-249">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event will be raised if the resolve operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-250">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-250">One or both of the <paramref name="peerName" /> and <paramref name="userState" /> parameters are set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b35b4-251">Un ou plusieurs paramètres fournis ne sont pas valides.</span><span class="sxs-lookup"><span data-stu-id="b35b4-251">One or more supplied parameters are invalid.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="b35b4-252">La réussite de cette opération nécessite au moins un gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="b35b4-252">Successful completion of this operation requires at least one event handler.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b35b4-253">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</span><span class="sxs-lookup"><span data-stu-id="b35b4-253">The <paramref name="maxRecords" /> parameter is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState"><span data-ttu-id="b35b4-254">Objet fourni à l’instance de méthode <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> qui a lancé l’opération de résolution.</span><span class="sxs-lookup"><span data-stu-id="b35b4-254">The object provided to the <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> method instance which started the resolve operation.</span></span></param>
        <summary><span data-ttu-id="b35b4-255">Annule la demande de résolution de nom d’homologue asynchrone spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-255">Cancels the specified asynchronous peer name resolution request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-256">Appel de cette méthode garantit que le système ne tente pas d’obtenir des enregistrements supplémentaires pour le texte spécifié <xref:System.Net.PeerToPeer.PeerName>.</span><span class="sxs-lookup"><span data-stu-id="b35b4-256">Calling this method guarantees the system will not attempt to obtain additional records for the specified <xref:System.Net.PeerToPeer.PeerName>.</span></span>  <span data-ttu-id="b35b4-257">Si cette méthode est appelée lorsqu’une opération de résolution d’homologue asynchrone nom n’est pas en attente, il joue le rôle « aucune opération » (NO OP).</span><span class="sxs-lookup"><span data-stu-id="b35b4-257">If this method is called when an asynchronous peer name resolution operation is not outstanding, it acts as a "no operation" (NO OP).</span></span>  
  
 <span data-ttu-id="b35b4-258">Le `userState` objet doit être fourni dans la mesure où il est utilisé pour suivre un appel asynchrone spécifique lorsque plusieurs appels sont en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="b35b4-258">The `userState` object must be provided since it is used to track a specific asynchronous call when multiple calls are in progress.</span></span> <span data-ttu-id="b35b4-259">Cet objet fourni par l’appelant est unique pour chaque demande de résolution de nom de pair.</span><span class="sxs-lookup"><span data-stu-id="b35b4-259">This caller-supplied object is unique for each peer name resolution request.</span></span>  
  
 <span data-ttu-id="b35b4-260">Cette méthode est retournée immédiatement, mais l’opération peut ou ne peut pas annuler immédiatement.</span><span class="sxs-lookup"><span data-stu-id="b35b4-260">This method will return immediately, but the operation may or may not immediately cancel.</span></span> <span data-ttu-id="b35b4-261">Les arguments d’événement retournés par la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement contient un champ qui peut être interrogé par les clients pour déterminer si l’annulation s’est produite.</span><span class="sxs-lookup"><span data-stu-id="b35b4-261">The event arguments returned by the <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event contains a field which can be polled by clients to determine whether cancellation occurred.</span></span>  
  
 <span data-ttu-id="b35b4-262">Appel de cette méthode garantit que l’événement ResolveCompleted sera signalé dès que possible avec l’argument d’événement <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="b35b4-262">Calling this method ensures the ResolveCompleted event will be signaled as soon as possible with the event argument <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b35b4-263">Les paramètres <paramref name="userState" /> ne peuvent pas avoir la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b35b4-263">The <paramref name="userState" /> parameters cannot be <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b35b4-264">L’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> est signalé lorsqu’une requête de résolution de nom d’homologue est terminée pour un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> spécifique.</span><span class="sxs-lookup"><span data-stu-id="b35b4-264">The <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> event is signaled when a peer name resolution request for a specific <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-265">Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement sera déclenché une fois pour chaque point de terminaison trouvé, et cet événement sera déclenché une seule fois lorsque tous les points de terminaison ont été trouvés.</span><span class="sxs-lookup"><span data-stu-id="b35b4-265">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> event will be raised once for each endpoint found, and this event will be raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="b35b4-266">Cet événement sera également déclenché si le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> opération se termine avec une erreur ou est annulée.</span><span class="sxs-lookup"><span data-stu-id="b35b4-266">This event will also be raised if the <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> operation completes in error or is canceled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b35b4-267">Cet événement est signalé chaque fois qu’un objet <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> est trouvé dans la réponse à une opération <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> pour un <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifique.</span><span class="sxs-lookup"><span data-stu-id="b35b4-267">This event is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation for a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b35b4-268">Si plusieurs <xref:System.Net.PeerToPeer.PeerName> objets existent dans les ou les nuages interrogés, cet événement est signalé qu’une seule fois pour chaque <xref:System.Net.PeerToPeer.PeerNameRecord> trouvé.</span><span class="sxs-lookup"><span data-stu-id="b35b4-268">If multiple <xref:System.Net.PeerToPeer.PeerName> objects exist in the cloud(s) being queried, this event is signaled once for each <xref:System.Net.PeerToPeer.PeerNameRecord> found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>