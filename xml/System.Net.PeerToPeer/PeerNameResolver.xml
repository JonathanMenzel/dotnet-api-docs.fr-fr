<Type Name="PeerNameResolver" FullName="System.Net.PeerToPeer.PeerNameResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47cf2e8bec2c1e07b4b3b59d1cc464f97075f394" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55327032" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi PeerNameResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameResolver" />
  <TypeSignature Language="F#" Value="type PeerNameResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Spécifie les valeurs qui résolvent un <see cref="T:System.Net.PeerToPeer.PeerName" /> en un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à l'aide de l'API du fournisseur d'espace de noms PNRP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Net.PeerToPeer.PeerNameRecord> qui contient toutes les informations pour le <xref:System.Net.PeerToPeer.PeerName> qui a été publié dans le <xref:System.Net.PeerToPeer.Cloud> ou nuages ont été interrogés pendant le processus de résolution.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance par défaut de la classe <see cref="T:System.Net.PeerToPeer.PeerNameResolver" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Après avoir résolu avec succès un <xref:System.Net.PeerToPeer.PeerName>, le <xref:System.Net.PeerToPeer.PeerNameRecord> contient toutes les informations pour le texte spécifié <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> qui a été publié dans les nuages ont été interrogés pendant la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> opération.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolveCompleted">
      <MemberSignature Language="C#" Value="protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveCompleted(class System.Net.PeerToPeer.ResolveCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveCompleted (e As ResolveCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveCompleted(System::Net::PeerToPeer::ResolveCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveCompleted : System.Net.PeerToPeer.ResolveCompletedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" /> qui contient les données retournées par l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />.</param>
        <summary>Retourne les données de la résolution des homologues si l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> est déclenché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est un rappel asynchrone utilisé pour traiter les données de résolution de nom homologue une fois que la résolution d’homologue est terminée.  
  
 Types dérivés peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement est déclenché par l’objet de programme de résolution d’homologue.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnResolveProgressChanged">
      <MemberSignature Language="C#" Value="protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnResolveProgressChanged(class System.Net.PeerToPeer.ResolveProgressChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnResolveProgressChanged (e As ResolveProgressChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnResolveProgressChanged(System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnResolveProgressChanged : System.Net.PeerToPeer.ResolveProgressChangedEventArgs -&gt; unit" Usage="peerNameResolver.OnResolveProgressChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> qui contient les informations de progression de la résolution de noms d’homologues retournées par l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />.</param>
        <summary>Retourne les données de progression de la résolution des homologues lorsque l’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> est déclenché.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est un rappel asynchrone utilisé pour traiter les données de résolution d’homologue une fois que la progression de la résolution d’homologue a été demandée.  
  
 Types dérivés peuvent substituer cette méthode pour effectuer les autres tâches lorsque la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement se produit.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous substituez cette méthode dans un type dérivé, veillez à appeler le type de base <see cref="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Résout un objet <see cref="T:System.Net.PeerToPeer.PeerName" /> en un <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à l'aide du protocole PNRP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode associe des noms d’homologue aux nuages. Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).  Ils sont identiques dans les paramètres, qu'ils sont passés, à ceci près que la méthode ResolveAsync inclut un jeton de système dans sa liste de paramètres pour la gestion des événements asynchrones.  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.  Si le `maxRecords` paramètre est manquant, la valeur par défaut zéro provoque une <xref:System.ArgumentOutOfRangeException> levée d’exception.  
  
 Cet événement sera également être déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve peerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <summary>Résout le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les nuages connus de l'homologue appelant.</summary>
        <returns>Un <see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> qui contient tous les enregistrements de nom de l'homologue (représentés comme objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> ) associés au nom d'homologue spécifié. Pour les noms d'homologue non sécurisés, le même <see cref="T:System.Net.PeerToPeer.PeerName" /> peut être inscrit par des utilisateurs différents dans le même <see cref="T:System.Net.PeerToPeer.Cloud" />, et associés à des points de terminaison différents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode associe un nom d’homologue aux nuages. Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>. Si le nom d’homologue ne peut pas être résolu ou n’est `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.  
  
 Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).  Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre comment résoudre un <xref:System.Net.PeerToPeer.PeerName> publié dans un <xref:System.Net.PeerToPeer.Cloud>.  
  
 [!code-csharp[NCLPNRPPeerNameResolver#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPPeerNameResolver/CS/PeerNameResolver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le nom d'homologue spécifié ne peut pas être résolu.</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="maxRecords">Nombre maximal d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> à obtenir de tous les objets <see cref="T:System.Net.PeerToPeer.Cloud" /> pour le <paramref name="peerName" /> fourni.</param>
        <summary>Résout le nom d'homologue spécifié dans tous les nuages connus de l'homologue appelant, sans retourner plus que le nombre spécifié d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> dont la taille est inférieure ou égale aux entrées <paramref name="maxRecords" />. Cette collection contient des enregistrements de nom d'homologue associés au <see cref="T:System.Net.PeerToPeer.PeerName" /> qui a été résolu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode associe un nom d’homologue aux nuages. Tous les nuages sont interrogés pour le nom d’homologue. Pour les noms d’homologue non sécurisés, le même nom d’homologue peut être inscrit par différents utilisateurs dans le même <xref:System.Net.PeerToPeer.Cloud>et associés à différents points de terminaison. Si le <xref:System.Net.PeerToPeer.PeerName> ne peut pas être résolu (par exemple, le nom d’homologue n’est pas publié) un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).  Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le nom d'homologue fourni ne peut pas être résolu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel résoudre le nom d'homologue.</param>
        <summary>Résout le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" />spécifié.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> qui contient tous les enregistrements de nom d'homologue (représentés comme objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> ) associés au nom d'homologue spécifié. Pour les noms d'homologue non sécurisés, le même <see cref="T:System.Net.PeerToPeer.PeerName" /> peut être inscrit par des utilisateurs différents dans le même <see cref="T:System.Net.PeerToPeer.Cloud" />, et associés à des points de terminaison différents.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Net.PeerToPeer.PeerName> ne peut pas être résolue (autrement dit, le nom d’homologue n’est pas publié) un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).  Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le <xref:System.Net.PeerToPeer.PeerNameResolver> utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour renseigner le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le nom d'homologue fourni ne peut pas être résolu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.PeerNameRecordCollection Resolve(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::PeerNameRecordCollection ^ Resolve(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords);" />
      <MemberSignature Language="F#" Value="member this.Resolve : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int -&gt; System.Net.PeerToPeer.PeerNameRecordCollection" Usage="peerNameResolver.Resolve (peerName, cloud, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecordCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel de résoudre le <paramref name="peerName" />.</param>
        <param name="maxRecords">Nombre maximal d'objets d'enregistrement de nom d'homologue à obtenir du nuage spécifié pour le <paramref name="peerName" />spécifié.</param>
        <summary>Résout le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" />spécifié, sans retourner plus que le nombre spécifié d'objets <see cref="T:System.Net.PeerToPeer.PeerNameRecord" />.</summary>
        <returns><see cref="T:System.Net.PeerToPeer.PeerNameRecordCollection" /> dont la taille est inférieure ou égale aux entrées <paramref name="maxRecords" />. Cette collection contient des enregistrements de nom d'homologue associés au <see cref="T:System.Net.PeerToPeer.PeerName" /> qui a été résolu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud. Si le nom d’homologue ne peut pas être résolu, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode).  Leurs listes de paramètres sont identiques, mais la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones.  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le <xref:System.Net.PeerToPeer.PeerNameResolver> utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour renseigner le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="peerName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Le nom d'homologue fourni ne peut pas être résolu.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ces méthodes commencent une opération de résolution asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les nuages connus de l'homologue appelant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), qui est utilisé lorsque le traitement asynchrone est requis.  Ils sont identiques dans les paramètres, qu'ils sont passés, mais ResolveAsync inclut un jeton de système dans sa liste de paramètres pour la gestion des événements.  
  
 Si une incompatibilité de paramètres se produit entre la méthode Resolve et la méthode ResolveAsync et le <xref:System.Net.PeerToPeer.Cloud> paramètre n’est pas fourni, la méthode utilise le <xref:System.Net.PeerToPeer.Cloud.Available> raccourci pour remplir les paramètres de cloud.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="userState">Objet défini par l'utilisateur qui contient des informations d’état sur l'opération de résolution de nom de pair.</param>
        <summary>Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> spécifié dans tous les clouds connus de l’homologue appelant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode associe un nom d’homologue à nuages de façon asynchrone. Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>. Il déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode). Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).  
  
 Si le nom d’homologue ne peut pas être résolu, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.  
  
 Appelant le <xref:System.Net.PeerToPeer.PeerNameResolver> méthode ressemble à appeler le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> méthode pour chaque enregistrement de nom d’homologue dans le <xref:System.Net.PeerToPeer.PeerNameRecordCollection>. Notez qu’à l’aide de la méthode Resolve sur un enregistrement de nom d’homologue individuel n’invalide pas résolution de plusieurs noms d’homologue.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).  Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.  
  
 Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique. Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="maxRecords">Le nombre maximal d’enregistrements à obtenir pour le nom d’homologue.</param>
        <param name="userState">Objet défini par l'utilisateur qui comporte des informations sur l'opération de résolution.</param>
        <summary>Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans tous les clouds connus de l’homologue appelant, en renvoyant au maximum <paramref name="maxRecords" /> entrées pour le nom d’homologue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode associe un nom d’homologue à nuages de façon asynchrone. Tous les clouds sont interrogées pour le <xref:System.Net.PeerToPeer.PeerName>. Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud. Si le nom d’homologue ne peut pas être résolu ou n’est `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException> est levée.  
  
 Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode). Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).  Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.  
  
 Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique <xref:System.Object>. Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <see cref="T:System.Net.PeerToPeer.PeerName" /> à résoudre.</param>
        <param name="cloud"><see cref="T:System.Net.PeerToPeer.Cloud" /> dans lequel de résoudre le <paramref name="peerName" />.</param>
        <param name="userState"><see cref="T:System.Object" /> défini par l'utilisateur qui contient des informations sur l'opération de résolution du nom de pair.</param>
        <summary>Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode). Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).  
  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le nom est résolu à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriétés.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).  Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.  
  
 Toutes les références asynchrones à l’objet programme de résolution sont coordonnées avec un jeton d’identificateur unique. Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsync">
      <MemberSignature Language="C#" Value="public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsync(class System.Net.PeerToPeer.PeerName peerName, class System.Net.PeerToPeer.Cloud cloud, int32 maxRecords, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsync(System::Net::PeerToPeer::PeerName ^ peerName, System::Net::PeerToPeer::Cloud ^ cloud, int maxRecords, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsync : System.Net.PeerToPeer.PeerName * System.Net.PeerToPeer.Cloud * int * obj -&gt; unit" Usage="peerNameResolver.ResolveAsync (peerName, cloud, maxRecords, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerName">Le <paramref name="peerName" /> à résoudre.</param>
        <param name="cloud"><paramref name="cloud" /> dans lequel résoudre <paramref name="peerName" />.</param>
        <param name="maxRecords">Le nombre maximal d’enregistrements à obtenir de <paramref name="cloud" /> pour <paramref name="peerName" />.</param>
        <param name="userState">Objet défini par l'utilisateur qui contient des informations sur l'opération de résolution de nom d’homologue.</param>
        <summary>Commence une opération de résolution de nom d’homologue asynchrone pour le <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifié dans le <see cref="T:System.Net.PeerToPeer.Cloud" /> spécifié.  L’opération de résolution ne résout pas plus de <paramref name="maxRecords" /> entrées pour le nom d’homologue spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour les noms d’homologue non sécurisés, le même nom peut être inscrit (et associé à différents points de terminaison) par des homologues différents dans le même cloud.  
  
 Cette méthode déclenche la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> (méthode). Ou, elle déclenche le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement, qui rappelle le <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> (méthode).  
  
 Si le <xref:System.Net.PeerToPeer.Cloud> paramètre est `null`, le nom est résolu à l’aide de la <xref:System.Net.PeerToPeer.Cloud.Available> raccourci qui initialise les valeurs par défaut pour le <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, et <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> propriétés.  
  
 Pour chaque <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> (méthode), il existe un équivalent <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> (méthode).  Leurs listes de paramètres sont identiques, sauf que la méthode ResolveAsync inclut un jeton de système de gestion des événements asynchrones, et la méthode de résolution est conçue pour un traitement synchrone.  
  
 Toutes les références asynchrones à l’objet de programme de résolution d’homologue sont coordonnées avec un jeton d’identificateur unique <xref:System.Object>. Cela `userState` jeton ou identificateur de message permet à un système d’exploitation remettre un message à un seul processus de réception une fois que le message a été placé sur la file d’attente.  
  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement sera déclenché si l’opération de résolution se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Au moins l’un des deux paramètres <paramref name="peerName" /> et <paramref name="userState" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un ou plusieurs paramètres fournis ne sont pas valides.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">La réussite de cette opération nécessite au moins un gestionnaire d’événements.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Le paramètre <paramref name="maxRecords" /> est inférieur ou égal à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveAsyncCancel">
      <MemberSignature Language="C#" Value="public void ResolveAsyncCancel (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResolveAsyncCancel(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResolveAsyncCancel (userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResolveAsyncCancel(System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.ResolveAsyncCancel : obj -&gt; unit" Usage="peerNameResolver.ResolveAsyncCancel userState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">Objet fourni à l’instance de méthode <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> qui a lancé l’opération de résolution.</param>
        <summary>Annule la demande de résolution de nom d’homologue asynchrone spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de cette méthode garantit que le système ne tente pas d’obtenir des enregistrements supplémentaires pour le texte spécifié <xref:System.Net.PeerToPeer.PeerName>.  Si cette méthode est appelée lorsqu’une opération de résolution d’homologue asynchrone nom n’est pas en attente, il joue le rôle « aucune opération » (NO OP).  
  
 Le `userState` objet doit être fourni dans la mesure où il est utilisé pour suivre un appel asynchrone spécifique lorsque plusieurs appels sont en cours d’exécution. Cet objet fourni par l’appelant est unique pour chaque demande de résolution de nom de pair.  
  
 Cette méthode est retournée immédiatement, mais l’opération peut ou ne peut pas annuler immédiatement. Les arguments d’événement retournés par la <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> événement contient un champ qui peut être interrogé par les clients pour déterminer si l’annulation s’est produite.  
  
 Appel de cette méthode garantit que l’événement ResolveCompleted sera signalé dès que possible avec l’argument d’événement <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> défini sur `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Les paramètres <paramref name="userState" /> ne peuvent pas avoir la valeur <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ResolveCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; ResolveCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveCompleted As EventHandler(Of ResolveCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveCompletedEventArgs ^&gt; ^ ResolveCompleted;" />
      <MemberSignature Language="F#" Value="member this.ResolveCompleted : EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " Usage="member this.ResolveCompleted : System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>L’événement <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" /> est signalé lorsqu’une requête de résolution de nom d’homologue est terminée pour un <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged> événement sera déclenché une fois pour chaque point de terminaison trouvé, et cet événement sera déclenché une seule fois lorsque tous les points de terminaison ont été trouvés.  
  
 Cet événement sera également déclenché si le <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> opération se termine avec une erreur ou est annulée.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="ResolveProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; ResolveProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ResolveProgressChanged As EventHandler(Of ResolveProgressChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::ResolveProgressChangedEventArgs ^&gt; ^ ResolveProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.ResolveProgressChanged : EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " Usage="member this.ResolveProgressChanged : System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cet événement est signalé chaque fois qu’un objet <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> est trouvé dans la réponse à une opération <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> pour un <see cref="T:System.Net.PeerToPeer.PeerName" /> spécifique.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si plusieurs <xref:System.Net.PeerToPeer.PeerName> objets existent dans les ou les nuages interrogés, cet événement est signalé qu’une seule fois pour chaque <xref:System.Net.PeerToPeer.PeerNameRecord> trouvé.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>