<Type Name="ApplicationManager" FullName="System.Web.Hosting.ApplicationManager">
  <TypeSignature Language="C#" Value="public sealed class ApplicationManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.ApplicationManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationManager sealed : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7fc9c-101">Gère des domaines d'application ASP.NET pour une application d'hébergement ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-101">Manages ASP.NET application domains for an ASP.NET hosting application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-102">Le <xref:System.Web.Hosting.ApplicationManager> objet fournit la gestion de la durée de vie des objets dans l’environnement d’hébergement pour une application ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-102">The <xref:System.Web.Hosting.ApplicationManager> object provides lifetime management of objects in the hosting environment for an ASP.NET application.</span></span> <span data-ttu-id="7fc9c-103">Il est responsable de :</span><span class="sxs-lookup"><span data-stu-id="7fc9c-103">It is responsible for:</span></span>  
  
-   <span data-ttu-id="7fc9c-104">L’activation et l’initialisation des applications ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-104">Activating and initializing ASP.NET applications.</span></span>  
  
-   <span data-ttu-id="7fc9c-105">Gestion de la durée de vie d’application et la durée de vie des objets inscrits dans l’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-105">Managing the application lifetime and the lifetime of objects registered in the application.</span></span>  
  
-   <span data-ttu-id="7fc9c-106">L’exposition des objets utilisés par l’environnement d’hébergement pour traiter les demandes d’application ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-106">Exposing objects used by the hosting environment to process ASP.NET application requests.</span></span>  
  
-   <span data-ttu-id="7fc9c-107">Fournir une liste d’applications qui s’exécutent dans le processus d’hébergement à un moment donné.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-107">Providing a list of applications running in the hosting process at any given moment.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-108">Arrête tous les domaines d'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-108">Shuts down all application domains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-109">Si un appel à la <xref:System.Web.Hosting.ApplicationManager.Close%2A> méthode réduit le nombre de références d’applications à l’aide du Gestionnaire d’application 0, le <xref:System.Web.Hosting.ApplicationManager.Close%2A> les appels de méthode le <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7fc9c-109">If a call to the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method reduces the reference count of applications using the application manager to 0, the <xref:System.Web.Hosting.ApplicationManager.Close%2A> method calls the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fc9c-110">Crée un objet pour le domaine d'application et le type d'objet spécifiés.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-110">Creates an object for the specified application domain and object type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (System.Web.Hosting.IApplicationHost appHost, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Web.Hosting.IApplicationHost appHost, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.Web.Hosting.IApplicationHost,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::Web::Hosting::IApplicationHost ^ appHost, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="7fc9c-111">Objet <see cref="T:System.Web.Hosting.IApplicationHost" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-111">An <see cref="T:System.Web.Hosting.IApplicationHost" /> object.</span></span></param>
        <param name="type"><span data-ttu-id="7fc9c-112">Type de l'objet à créer.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-112">The type of the object to create.</span></span></param>
        <summary><span data-ttu-id="7fc9c-113">Crée un objet pour le domaine d’application spécifié en fonction du type.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-113">Creates an object for the specified application domain, based on type.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-114">Un nouvel objet du type spécifié dans <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-114">A new object of the type specified in <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> est introduit dans le .NET Framework version 3.5.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-115"><xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="7fc9c-116">Pour plus d’informations, consultez [Versions et dépendances](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="7fc9c-116">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fc9c-117">Il n’existe aucun chemin d’accès physique de l’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-117">A physical path for the application does not exist.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-118"><paramref name="appHost" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-118"><paramref name="appHost" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7fc9c-119">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-119">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-120"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-120"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-121">Identificateur unique de l'application qui possède l'objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-121">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="7fc9c-122">Type de l'objet à créer.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-122">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="7fc9c-123">Chemin d'accès virtuel de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-123">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="7fc9c-124">Chemin d'accès physique à l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-124">The physical path to the application.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="7fc9c-125"><see langword="true" /> pour lever une exception si un objet du type spécifié est actuellement inscrit ; <see langword="false" /> pour retourner l'objet inscrit existant du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-125"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <summary><span data-ttu-id="7fc9c-126">Crée un objet pour le domaine d'application spécifié selon le type, les chemins d'accès virtuels et physiques et la valeur Boolean indiquant un comportement d'échec lorsqu'un objet du type spécifié existe déjà.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-126">Creates an object for the specified application domain based on type, virtual and physical paths, and a Boolean value indicating failure behavior when an object of the specified type already exists.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-127">Nouvel objet du <paramref name="type" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-127">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-128">Le <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode est utilisée pour créer et inscrire des objets dans l’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-128">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method is used to create and register objects in the application.</span></span> <span data-ttu-id="7fc9c-129">Qu’un seul objet de chaque type peut être créé.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-129">Only one object of each type can be created.</span></span> <span data-ttu-id="7fc9c-130">Si vous avez besoin créer plusieurs objets du même type, vous devez implémenter une fabrique d’objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-130">If you need to create multiple objects of the same type, you must implement an object factory.</span></span> <span data-ttu-id="7fc9c-131">Pour plus d’informations, consultez l’exemple de code dans cette rubrique.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-131">For more information, see the code example in this topic.</span></span>  
  
 <span data-ttu-id="7fc9c-132">Chaque application, identifiée par un identificateur d’application unique, s’exécute dans son propre domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-132">Each application, identified by a unique application identifier, runs in its own application domain.</span></span> <span data-ttu-id="7fc9c-133">Le <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode crée un objet du type spécifié dans le domaine d’application de l’application spécifiée dans le `appID` paramètre.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-133">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method creates an object of the specified type in the application domain of the application specified in the `appID` parameter.</span></span> <span data-ttu-id="7fc9c-134">Si un domaine d’application n’existe pas pour l’application spécifiée, un est créé avant la création de l’objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-134">If an application domain does not exist for the specified application, one is created before the object is created.</span></span>  
  
 <span data-ttu-id="7fc9c-135">Le `failIfExists` paramètre contrôle le comportement de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode lorsqu’un objet du type spécifié existe déjà dans l’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-135">The `failIfExists` parameter controls the behavior of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method when an object of the specified type already exists in the application.</span></span> <span data-ttu-id="7fc9c-136">Lorsque `failIfExists` est `true`, le <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode lève une exception une <xref:System.InvalidOperationException> exception.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-136">When `failIfExists` is `true`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method throws an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="7fc9c-137">Lorsque `failIfExists` est `false`, le <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode retourne l’objet inscrit existant du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-137">When `failIfExists` is `false`, the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method returns the existing registered object of the specified type.</span></span>  
  
 <span data-ttu-id="7fc9c-138">Le <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode appelle la surcharge qui accepte un autre `throwOnError` paramètre avec `throwOnError` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-138">The <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method calls the overload that takes an additional `throwOnError` parameter with `throwOnError` set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc9c-139">L’exemple de code suivant est une implémentation du modèle de conception de fabrique d’objet pour les objets inscrits.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-139">The following code example is an implementation of the object-factory design pattern for registered objects.</span></span> <span data-ttu-id="7fc9c-140">L’utilisation du modèle de fabrique permet d’inscrire plusieurs instances d’un objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-140">Using the factory pattern enables you to register multiple instances of an object.</span></span> <span data-ttu-id="7fc9c-141">L’exemple contient deux objets : `SampleComponent`, qui est l’objet de l’application utilise plusieurs instances, et `SampleComponentFactory`, qui gère une liste de `SampleComponent` instances.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-141">The example contains two objects: `SampleComponent`, which is the object the application will use multiple instances of, and `SampleComponentFactory`, which manages a list of `SampleComponent` instances.</span></span>  
  
 [!code-csharp[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/CS/appManagercs.aspx.cs#1)]
 [!code-vb[System.Web.Hosting.ApplicationManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationManager/VB/appManagervb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7fc9c-142"><paramref name="physicalPath" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-142"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
 <span data-ttu-id="7fc9c-143">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-143">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-144"><paramref name="physicalPath" /> n'est pas un chemin d'accès d'application valide.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-144"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
 <span data-ttu-id="7fc9c-145">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-145">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-146"><paramref name="type" /> n’implémente pas l’interface <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-146"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-147"><paramref name="appID" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-147"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7fc9c-148">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-148">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-149"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-149"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7fc9c-150"><paramref name="failIfExists" /> est <see langword="true" /> et un objet du type spécifié est déjà inscrit.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-150"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (string appId, Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(string appId, class System.Type type, string virtualPath, string physicalPath, bool failIfExists, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(System::String ^ appId, Type ^ type, System::String ^ virtualPath, System::String ^ physicalPath, bool failIfExists, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-151">Identificateur unique de l'application qui possède l'objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-151">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="7fc9c-152">Type de l'objet à créer.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-152">The type of the object to create.</span></span></param>
        <param name="virtualPath"><span data-ttu-id="7fc9c-153">Chemin d'accès virtuel de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-153">The virtual path to the application.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="7fc9c-154">Chemin d'accès physique à l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-154">The physical path to the application.</span></span></param>
        <param name="failIfExists">
          <span data-ttu-id="7fc9c-155"><see langword="true" /> pour lever une exception si un objet du type spécifié est actuellement inscrit ; <see langword="false" /> pour retourner l'objet inscrit existant du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-155"><see langword="true" /> to throw an exception if an object of the specified type is currently registered; <see langword="false" /> to return the existing registered object of the specified type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="7fc9c-156"><see langword="true" /> pour lever des exceptions relatives à des erreurs d'initialisation d'hébergement ; <see langword="false" /> pour ne pas lever d'exceptions relatives à l'initialisation d'hébergement.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-156"><see langword="true" /> to throw exceptions for hosting initialization errors; <see langword="false" /> to not throw hosting initialization exceptions.</span></span></param>
        <summary><span data-ttu-id="7fc9c-157">Crée un objet pour le domaine d'application spécifié selon le type, les chemins d'accès virtuels et physiques, la valeur Boolean qui indique un comportement d'échec lorsqu'un objet du type spécifié existe déjà, et une valeur Boolean qui indique si des exceptions relatives à des erreurs d'initialisation d'hébergement sont levées.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-157">Creates an object for the specified application domain based on type, virtual and physical paths, a Boolean value indicating failure behavior when an object of the specified type already exists, and a Boolean value indicating whether hosting initialization error exceptions are thrown.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-158">Nouvel objet du <paramref name="type" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-158">A new object of the specified <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-159">Cette surcharge de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode fournit le `throwOnError` paramètre, qui vous permet de contrôler si les exceptions d’initialisation d’hébergement sont levées.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-159">This overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method provides the `throwOnError` parameter, which allows you to control whether hosting initialization exceptions are thrown.</span></span> <span data-ttu-id="7fc9c-160">La surcharge de la <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> méthode qui ne fournit pas de `throwOnError` appelle cette surcharge avec le paramètre défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-160">The overload of the <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A> method that does not provide `throwOnError` calls this overload with the parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7fc9c-161"><paramref name="physicalPath" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-161"><paramref name="physicalPath" /> is <see langword="null" /></span></span>  
  
 <span data-ttu-id="7fc9c-162">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-162">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-163"><paramref name="physicalPath" /> n'est pas un chemin d'accès d'application valide.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-163"><paramref name="physicalPath" /> is not a valid application path.</span></span>  
  
 <span data-ttu-id="7fc9c-164">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-164">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-165"><paramref name="type" /> n’implémente pas l’interface <see cref="T:System.Web.Hosting.IRegisteredObject" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-165"><paramref name="type" /> does not implement the <see cref="T:System.Web.Hosting.IRegisteredObject" /> interface.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-166"><paramref name="appID" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-166"><paramref name="appID" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7fc9c-167">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-167">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-168"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-168"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7fc9c-169"><paramref name="failIfExists" /> est <see langword="true" /> et un objet du type spécifié est déjà inscrit.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-169"><paramref name="failIfExists" /> is <see langword="true" /> and an object of the specified type is already registered.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAppDomain">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7fc9c-170">Obtient le domaine d'application d'une application spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-170">Gets the application domain of a specified application.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appId As String) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-171">Identificateur unique de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-171">The unique identifier for the application.</span></span></param>
        <summary><span data-ttu-id="7fc9c-172">Obtient le domaine d'application de l'application spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-172">Gets the application domain of the specified application.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-173">Domaine d'application de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-173">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAppDomain">
      <MemberSignature Language="C#" Value="public AppDomain GetAppDomain (System.Web.Hosting.IApplicationHost appHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.AppDomain GetAppDomain(class System.Web.Hosting.IApplicationHost appHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetAppDomain(System.Web.Hosting.IApplicationHost)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomain (appHost As IApplicationHost) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomain ^ GetAppDomain(System::Web::Hosting::IApplicationHost ^ appHost);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appHost" Type="System.Web.Hosting.IApplicationHost" />
      </Parameters>
      <Docs>
        <param name="appHost"><span data-ttu-id="7fc9c-174">Hôte dont le domaine d'application doit être obtenu.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-174">The host to get the application domain for.</span></span></param>
        <summary><span data-ttu-id="7fc9c-175">Obtient le domaine d'application d'une application à l'aide de l'hôte spécifié.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-175">Gets the application domain of an application using the specified host.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-176">Domaine d'application de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-176">The application domain of the application.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationManager">
      <MemberSignature Language="C#" Value="public static System.Web.Hosting.ApplicationManager GetApplicationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Hosting.ApplicationManager GetApplicationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetApplicationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationManager () As ApplicationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Hosting::ApplicationManager ^ GetApplicationManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-177">Retourne l'instance unique de l'objet <see cref="T:System.Web.Hosting.ApplicationManager" /> associée à ce processus hôte ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-177">Returns the single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with this ASP.NET host process.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-178">Instance unique de l'objet <see cref="T:System.Web.Hosting.ApplicationManager" /> associée au processus hôte ASP.NET qui s'exécute.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-178">The single instance of the <see cref="T:System.Web.Hosting.ApplicationManager" /> object associated with the ASP.NET host process that is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-179">Seule une instance de la <xref:System.Web.Hosting.ApplicationManager> objet est créé par un processus d’hôte ASP.NET dans le domaine d’application par défaut.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-179">Only one instance of the <xref:System.Web.Hosting.ApplicationManager> object is created by an ASP.NET host process in the default application domain.</span></span> <span data-ttu-id="7fc9c-180">Si une instance de la <xref:System.Web.Hosting.ApplicationManager> classe n’est pas disponible, le <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> méthode crée d’abord une instance de la <xref:System.Web.Hosting.ApplicationManager> classe, puis retourne l’objet nouvellement créé.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-180">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class is not available, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method first creates an instance of the <xref:System.Web.Hosting.ApplicationManager> class and then returns the newly created object.</span></span> <span data-ttu-id="7fc9c-181">Si une instance de la <xref:System.Web.Hosting.ApplicationManager> classe a été créé précédemment, le <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> méthode retourne l’objet existant.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-181">If an instance of the <xref:System.Web.Hosting.ApplicationManager> class was previously created, the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method returns the existing object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7fc9c-182">Le code suivant exemple utilise le <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> pour récupérer le <xref:System.Web.Hosting.ApplicationManager> instance pour une application Web.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-182">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetApplicationManager%2A> method to retrieve the <xref:System.Web.Hosting.ApplicationManager> instance for a Web application.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject GetObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject GetObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ GetObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-183">Identificateur unique de l'application qui possède l'objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-183">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="7fc9c-184">Type de l'objet à retourner.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-184">The type of the object to return.</span></span></param>
        <summary><span data-ttu-id="7fc9c-185">Retourne l'objet inscrit du type spécifié à partir de l'application spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-185">Returns the registered object of the specified type from the specified application.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-186">Objet inscrit du type spécifié ou <see langword="null" /> si le type n'a pas été inscrit par le biais d'un appel à la méthode <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-186">The registered object of the specified type; or <see langword="null" /> if the type has not been registered through a call to the <see cref="M:System.Web.Hosting.ApplicationManager.CreateObject(System.String,System.Type,System.String,System.String,System.Boolean)" /> method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-187"><paramref name="appId" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-187"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7fc9c-188">- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-188">—or—</span></span>  
  
 <span data-ttu-id="7fc9c-189"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-189"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRunningApplications">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.ApplicationInfo[] GetRunningApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.ApplicationInfo[] GetRunningApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.GetRunningApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRunningApplications () As ApplicationInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Web::Hosting::ApplicationInfo ^&gt; ^ GetRunningApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.ApplicationInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-190">Retourne un instantané des applications en cours d'exécution.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-190">Returns a snapshot of running applications.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-191">Tableau d'objets <see cref="T:System.Web.Hosting.ApplicationInfo" /> qui contiennent des informations sur les applications gérées par cette instance de <see cref="T:System.Web.Hosting.ApplicationManager" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-191">An array of <see cref="T:System.Web.Hosting.ApplicationInfo" /> objects that contain information about the applications managed by this <see cref="T:System.Web.Hosting.ApplicationManager" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7fc9c-192">Le code suivant exemple utilise le <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> méthode pour afficher des informations sur les applications gérées par une <xref:System.Web.Hosting.ApplicationManager> instance.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-192">The following code example uses the <xref:System.Web.Hosting.ApplicationManager.GetRunningApplications%2A> method to display information about the applications managed by an <xref:System.Web.Hosting.ApplicationManager> instance.</span></span>  
  
 [!code-aspx-csharp[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/CS/applicationInfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.ApplicationInfo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Hosting.ApplicationInfo/VB/applicationInfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-193">Donne au domaine d'application une durée de vie infinie en empêchant toute création de bail.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-193">Gives the application domain an infinite lifetime by preventing a lease from being created.</span></span></summary>
        <returns><span data-ttu-id="7fc9c-194">Toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-194">Always <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-195">Cette méthode remplace la <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> méthode dans sa classe de base.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-195">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="7fc9c-196">Cette propriété retourne toujours `null` et empêche ainsi la création d’un bail qui limiterait la durée de vie du domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-196">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.IsIdle" />
      <MemberSignature Language="VB.NET" Value="Public Function IsIdle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-197">Retourne une valeur indiquant si toutes les applications hébergées par le processus sont inactives et ne traitent pas de requêtes.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-197">Returns a value indicating whether all applications hosted by the process are idle and not processing requests.</span></span></summary>
        <returns>
          <span data-ttu-id="7fc9c-198"><see langword="true" /> si toutes les applications du processus sont inactives ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-198"><see langword="true" /> if all applications in the process are idle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-199">Le <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> retourne de la méthode `true` si toutes les applications hébergées par le processus sont inactives.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-199">The <xref:System.Web.Hosting.ApplicationManager.IsIdle%2A> method returns `true` if all applications hosted by the process are idle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-200">Effectue une incrémentation thread-safe sur le décompte de références d'utilisateur de l'instance du gestionnaire de l'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-200">Makes a thread-safe increment to the user reference count of the application manager instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAll">
      <MemberSignature Language="C#" Value="public void ShutdownAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fc9c-201">Décharge toutes les ressources d'application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-201">Unloads all application resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-202">Appel de la <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> méthode équivaut à appeler le <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> méthode dans tous les domaines d’application gérée par le <xref:System.Web.Hosting.ApplicationManager> instance ; Toutefois, le <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> méthode peut être appelée à partir d’en dehors des domaines d’application managée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-202">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method in all application domains managed by this <xref:System.Web.Hosting.ApplicationManager> instance; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownAll%2A> method can be called from outside the managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownApplication">
      <MemberSignature Language="C#" Value="public void ShutdownApplication (string appId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShutdownApplication(string appId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.ShutdownApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShutdownApplication (appId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShutdownApplication(System::String ^ appId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-203">Identificateur unique de l'application à décharger.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-203">The unique identifier of the application to unload.</span></span></param>
        <summary><span data-ttu-id="7fc9c-204">Décharge l'application spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-204">Unloads the specified application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7fc9c-205">Appel de la <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> méthode équivaut à appeler le <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> méthode pour un domaine d’application spécifique ; Toutefois, le <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> méthode peut être appelée à partir de domaines d’application gérés en dehors.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-205">Calling the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method is equivalent to calling the <xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A?displayProperty=nameWithType> method for a specific application domain; however, the <xref:System.Web.Hosting.ApplicationManager.ShutdownApplication%2A> method can be called from outside managed application domains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-206"><paramref name="appId" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-206"><paramref name="appId" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopObject">
      <MemberSignature Language="C#" Value="public void StopObject (string appId, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopObject(string appId, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.ApplicationManager.StopObject(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopObject(System::String ^ appId, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="appId"><span data-ttu-id="7fc9c-207">Identificateur unique de l'application qui possède l'objet.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-207">The unique identifier for the application that owns the object.</span></span></param>
        <param name="type"><span data-ttu-id="7fc9c-208">Type de l'objet à décharger.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-208">The type of the object to unload.</span></span></param>
        <summary><span data-ttu-id="7fc9c-209">Supprime l'objet spécifié de la liste d'objets inscrits dans une application.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-209">Removes the specified object from the list of registered objects in an application.</span></span> <span data-ttu-id="7fc9c-210">Si l'objet à supprimer est le dernier objet restant dans la liste des objets enregistrés dans une application, l'application est déchargée.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-210">If the object to be removed is the last remaining object in the list of registered objects in an application, the application is unloaded.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7fc9c-211"><paramref name="appId" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-211"><paramref name="appId" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="7fc9c-212">\- ou -</span><span class="sxs-lookup"><span data-stu-id="7fc9c-212">\- or -</span></span>  
  
 <span data-ttu-id="7fc9c-213"><paramref name="type" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fc9c-213"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>