<Type Name="VirtualPathProvider" FullName="System.Web.Hosting.VirtualPathProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0760a40706475ab4bb5f46ab822d59bfa635262" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class VirtualPathProvider : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VirtualPathProvider extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.Web.Hosting.VirtualPathProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VirtualPathProvider&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathProvider abstract : MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit un jeu de méthodes qui permettent à une application Web de récupérer des ressources à partir d'un système de fichiers virtuel.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Hosting.VirtualPathProvider> classe fournit un ensemble de méthodes pour implémenter un système de fichiers virtuel pour une application Web. Dans un système de fichiers virtuel, les fichiers et répertoires sont gérés par un magasin de données autre que le système de fichiers fourni par le système d’exploitation serveur. Par exemple, vous pouvez utiliser un système de fichiers virtuel pour stocker le contenu dans une base de données SQL Server.  
  
 Vous pouvez stocker n’importe quel fichier qui est traité à la demande dans un système de fichiers virtuel. Cela concerne :  
  
-   Les pages ASP.NET, les pages maîtres, les contrôles utilisateur et les autres objets.  
  
-   Pages Web standard avec des extensions telles que .htm et .jpg.  
  
-   Toute extension personnalisée mappée à une <xref:System.Web.Compilation.BuildProvider> instance.  
  
-   Tout thème nommé dans le `App_Theme` dossier.  
  
 Vous ne pouvez pas stocker des dossiers d’application ASP.NET ou des fichiers qui génèrent des assemblys au niveau de l’application dans un système de fichiers virtuel. Cela concerne :  
  
-   Le fichier Global.asax.  
  
-   Fichiers Web.config.  
  
-   Site des fichiers de données de mappage utilisées par le <xref:System.Web.XmlSiteMapProvider>.  
  
-   Répertoires qui contiennent des assemblys d’application ou qui génèrent des assemblys d’application : `Bin`, `App_Code`, `App_GlobalResources`, tout `App_LocalResources`.  
  
-   Le dossier application data, `App_Data`.  
  
> [!NOTE]
>  Si un site Web précompilé pour le déploiement, le contenu fourni par un <xref:System.Web.Hosting.VirtualPathProvider> instance n’est pas compilée et aucun <xref:System.Web.Hosting.VirtualPathProvider> les instances sont utilisées par le site précompilé.  
  
## <a name="registering-a-virtualpathprovider"></a>Inscription de VirtualPathProvider  
 Personnalisé <xref:System.Web.Hosting.VirtualPathProvider> instance doit être inscrite dans le système de compilation ASP.NET en utilisant le <xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A?displayProperty=nameWithType> avant toute analyse de page ou de la compilation est effectuée par l’application Web.  
  
 En règle générale, un <xref:System.Web.Hosting.VirtualPathProvider> instance est inscrite dans un `AppInitialize` méthode définie dans le `App_Code` active, ou lors de la `Application_Start` événement dans le `Global.asax` fichier. Pour obtenir un exemple d’inscription un <xref:System.Web.Hosting.VirtualPathProvider> d’instance dans un `AppInitialize` (méthode), consultez la section exemple.  
  
 Vous pouvez inscrire un <xref:System.Web.Hosting.VirtualPathProvider> instance lors d’autres événements, mais les pages compilées et mises en cache avant le <xref:System.Web.Hosting.VirtualPathProvider> instance est inscrite ne seront pas invalidées, même si la nouvelle <xref:System.Web.Hosting.VirtualPathProvider> instance fournit maintenant la source pour le précédemment page compilée.  
  
   
  
## Examples  
 L’exemple de code suivant est un <xref:System.Web.Hosting.VirtualPathProvider> implémentation de la classe qui crée un système de fichiers virtuel à l’aide des informations stockées dans un <xref:System.Data.DataSet> objet. L’exemple de code fonctionne avec les exemples de code pour le <xref:System.Web.Hosting.VirtualFile> et <xref:System.Web.Hosting.VirtualDirectory> classes pour fournir des ressources virtuelles d’une données magasin qui est chargée dans un <xref:System.Data.DataSet> objet.  
  
 Cet exemple comprend quatre parties : le <xref:System.Web.Hosting.VirtualPathProvider> implémentation de la classe, un fichier de données XML utilisé pour remplir le <xref:System.Data.DataSet> objet, un `AppStart` objet qui contient un `AppInitialize` méthode utilisée pour inscrire le <xref:System.Web.Hosting.VirtualPathProvider> classe avec la compilation système et une page ASP.NET qui fournit des liens vers les fichiers virtuels.  
  
 Pour utiliser cet exemple de code dans une application, procédez comme suit.  
  
1.  Créer un exemple d’application sur votre serveur Web.  
  
2.  Copiez le code source personnalisée du <xref:System.Web.Hosting.VirtualPathProvider> objet (voir ci-dessous) dans un fichier dans l’application `App_Code` active.  
  
3.  Copiez le code source personnalisée du <xref:System.Web.Hosting.VirtualDirectory> objet (consultez la section exemple de la <xref:System.Web.Hosting.VirtualDirectory> rubrique Vue d’ensemble de la classe) dans un fichier dans l’application `App_Code` active.  
  
4.  Copiez le code source personnalisée du <xref:System.Web.Hosting.VirtualFile> objet (consultez la section exemple de la <xref:System.Web.Hosting.VirtualFile> rubrique Vue d’ensemble de la classe) dans un fichier dans l’application `App_Code` active.  
  
5.  Copiez le code source pour le `AppStart` objet (voir ci-dessous) dans un fichier dans l’application `App_Code` active.  
  
6.  Copier les données XML (voir ci-dessous) dans un fichier nommé `XMLData.xml` dans un fichier dans l’application `App_Data` active.  
  
7.  Copie le `default.aspx` fichier (voir ci-dessous) dans le répertoire racine de l’exemple d’application. Utilisez un navigateur Web pour ouvrir le `default.aspx` de fichier, puis cliquez sur les liens sur la page pour afficher le contenu des fichiers virtuels.  
  
 Le premier exemple est personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Le <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> et <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> méthodes sont substituées pour indiquer si un répertoire demandé est présent dans le système de fichiers virtuel. Le <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> et <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> méthodes sont substituées pour retourner personnalisé <xref:System.Web.Hosting.VirtualDirectory> et <xref:System.Web.Hosting.VirtualFile> instances contenant les informations du système de fichiers virtuel.  
  
 La classe fournit également un `GetVirtualData` méthode utilisée par le <xref:System.Web.Hosting.VirtualDirectory> et <xref:System.Web.Hosting.VirtualFile> des classes pour accéder à la <xref:System.Data.DataSet> objet contenant les données de système de fichiers virtuel. Dans une implémentation de production, cette méthode est généralement être implémentée dans un objet métier chargé d’interagir avec le magasin de données.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#20)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#20)]  
  
 Le deuxième exemple est le fichier de données XML utilisé pour remplir le <xref:System.Data.DataSet> objet retourné par la version personnalisée <xref:System.Web.Hosting.VirtualPathProvider> objet. Ces données XML sont utilisées pour présenter à l’aide de la <xref:System.Web.Hosting.VirtualPathProvider>, <xref:System.Web.Hosting.VirtualDirectory>, et <xref:System.Web.Hosting.VirtualFile> objets pour récupérer des données à partir de données externes et n’est pas censé représenter un magasin de données de qualité production.  
  
```  
<?xml version="1.0" encoding="utf-8" ?>  
  <resource type="dir"   
    path="/vrDir"   
    parentPath=""   
    content="">  
    <resource type="file"   
      path="/vrDir/Level1FileA.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level1FileB.vrf"  
      parentPath="/vrDir"   
      content="This is the content of file Level1FileB.">  
    </resource>  
    <resource type="dir"   
      path="/vrDir/Level2DirA"   
      parentPath="/vrDir"   
      content="">  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirA/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirA"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
  <resource type="dir"   
    path="/vrDir/Level2DirB"   
    parentPath="/vrDir"   
    content="">  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileA.vrf"   
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileA.">  
    </resource>  
    <resource type="file"   
      path="/vrDir/Level2DirB/Level2FileB.vrf"  
      parentPath="/vrDir/Level2DirB"   
      content="This is the content of file Level2FileB.">  
    </resource>  
  </resource>  
</resource>  
```  
  
 Le troisième exemple fournit un `AppStart` objet qui contient un `AppInitialize` (méthode). Cette méthode est appelée pendant l’initialisation d’une application ASP.NET pour effectuer toute initialisation personnalisée requise. Dans ce cas, il enregistre personnalisé <xref:System.Web.Hosting.VirtualPathProvider> système de génération de l’objet avec ASP.NET.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/AppStart.cs#10)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/AppStart.vb#10)]  
  
 Le dernier exemple est une page ASP.NET qui contient des liens vers les fichiers virtuels contenus dans le système de fichiers virtuel.  
  
 [!code-aspx-csharp[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.Hosting.VirtualPathProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Lorsque vous héritez de <see cref="T:System.Web.Hosting.VirtualPathProvider" />, vous devez substituer les membres suivants :   
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />  
  
 Si votre personnalisé <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe prend en charge les répertoires du système de fichiers virtuel, vous devez substituer les membres suivants.  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />  
  
-   <see cref="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" /><block subset="none" type="note"><para>  
 Si votre système de fichiers virtuel doit contenir des thèmes pour le site Web (en créant une machine virtuelle, <c>App_Themes</c> active), votre personnalisé <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe doit prendre en charge les répertoires.  
  
</para></block>  
  
 Personnalisé <see cref="T:System.Web.Hosting.VirtualPathProvider" /> classe fonctionne avec les classes dérivées de la <see cref="T:System.Web.Hosting.VirtualFile" /> et <see cref="T:System.Web.Hosting.VirtualDirectory" /> classes. Vous devez implémenter des classes dérivées de ces types pour fournir des informations de fichiers et de répertoires à partir de votre système de fichiers virtuel. Pour obtenir un exemple de personnalisé <see cref="T:System.Web.Hosting.VirtualFile" /> implémentation, consultez la section exemple de la <see cref="T:System.Web.Hosting.VirtualFile" /> rubrique Vue d’ensemble de la classe. Pour obtenir un exemple de personnalisé <see cref="T:System.Web.Hosting.VirtualDirectory" /> implémentation, consultez la section exemple de la <see cref="T:System.Web.Hosting.VirtualDirectory" /> rubrique Vue d’ensemble de la classe.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected VirtualPathProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VirtualPathProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise la classe pour qu'elle soit utilisée par une instance de la classe héritée. Ce constructeur peut être appelé uniquement par une classe héritée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lors de la substitution du <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructeur, différez toute initialisation qui doit être postérieure à la <xref:System.Web.Hosting.VirtualPathProvider> l’objet est inscrit pour le <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.%23ctor%2A> constructeur qui initialise un personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#25)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#25](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombineVirtualPaths">
      <MemberSignature Language="C#" Value="public virtual string CombineVirtualPaths (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CombineVirtualPaths(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CombineVirtualPaths (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ CombineVirtualPaths(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">Chemin d'accès de base de l'application.</param>
        <param name="relativePath">Chemin d'accès à la ressource virtuelle, relatif au chemin d'accès de base.</param>
        <summary>Combine un chemin d'accès de base avec un chemin d'accès relatif pour retourner un chemin d'accès complet à une ressource virtuelle.</summary>
        <returns>Chemin d'accès complet à une ressource virtuelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths%2A> méthode pour inspecter le contenu d’un chemin d’accès relatif à une ressource virtuelle et effectuer toute modification nécessaire.  
  
 L’implémentation par défaut combine les `basePath` et `relativePath` paramètres en fonction de traitement de chemin d’accès ASP.NET standard.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si vous substituez l’implémentation par défaut de la <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> (méthode), vous devez convertir toute syntaxe spéciale avec le <paramref name="relativePath" /> paramètre à un chemin d’accès virtuel valide. Vous êtes responsable de la syntaxe de la vérification de la validation du chemin d’accès et une entrée incorrecte, ainsi que les cases de bord pour l’entrée correcte.  
  
 Dans la plupart des cas, il ne sera pas nécessaire de remplacer la valeur par défaut <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> (méthode). Toutefois, si vous n’avez pas besoin de modifier le chemin d’accès, nous vous recommandons de limiter votre <see cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" /> implémentation à la modification de jetons spécifiques à votre fournisseur de chemin d’accès virtuel dans le <paramref name="relativeUrl" /> paramètre et appeler ensuite l’implémentation de base pour effectuer normal Traitement de chemin d’accès ASP.NET</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public virtual bool DirectoryExists (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DirectoryExists(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DirectoryExists (virtualDir As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DirectoryExists(System::String ^ virtualDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Chemin d'accès au répertoire virtuel.</param>
        <summary>Obtient une valeur qui indique si un répertoire existe dans le système de fichiers virtuel.</summary>
        <returns>
          <see langword="true" /> si le répertoire existe dans le système de fichiers virtuel ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Remplacer la <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> méthode pour indiquer au système de compilation que la ressource représentée par `virtualDir` existe dans le système de fichiers virtuel fourni par cette <xref:System.Web.Hosting.VirtualPathProvider> instance.  
  
 Si votre personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe ne prend pas en charge les répertoires, le <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> méthode doit retourner `false`.  
  
> [!NOTE]
>  Si votre système de fichiers virtuel doit contenir des thèmes pour le site Web (en créant une machine virtuelle, `App_Themes` active), votre personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe doit prendre en charge les répertoires.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.DirectoryExists%2A> méthode personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#22)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public virtual bool FileExists (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FileExists(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FileExists (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool FileExists(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès au fichier virtuel.</param>
        <summary>Obtient une valeur qui indique si un fichier existe dans le système de fichiers virtuel.</summary>
        <returns>
          <see langword="true" /> si le fichier existe dans le système de fichiers virtuel ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Remplacer la <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> méthode pour indiquer au système de compilation que la ressource représentée par `virtualPath` existe dans le système de fichiers virtuel fourni par cette <xref:System.Web.Hosting.VirtualPathProvider> instance.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.FileExists%2A> méthode personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#21)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheDependency">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.CacheDependency GetCacheDependency (string virtualPath, System.Collections.IEnumerable virtualPathDependencies, DateTime utcStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Caching.CacheDependency GetCacheDependency(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies, valuetype System.DateTime utcStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheDependency(System.String,System.Collections.IEnumerable,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheDependency (virtualPath As String, virtualPathDependencies As IEnumerable, utcStart As DateTime) As CacheDependency" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Caching::CacheDependency ^ GetCacheDependency(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies, DateTime utcStart);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.CacheDependency</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
        <Parameter Name="utcStart" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès à la ressource virtuelle principale.</param>
        <param name="virtualPathDependencies">Tableau de chemins d'accès à d'autres ressources requises par la ressource virtuelle principale.</param>
        <param name="utcStart">Heure UTC à laquelle les ressources virtuelles ont été lues.</param>
        <summary>Crée une dépendance de cache basée sur les chemins d'accès virtuels spécifiés.</summary>
        <returns>Objet <see cref="T:System.Web.Caching.CacheDependency" /> pour les ressources virtuelles spécifiées.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut de la <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> méthode renvoie `null`. Pour le cache des ressources virtuelles pour une utilisation ultérieure, vous devez substituer la <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> méthode ou la <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> (méthode).  
  
   
  
## Examples  
 Le code suivant exemple implémente le <xref:System.Web.Hosting.VirtualPathProvider.GetCacheDependency%2A> méthode pour personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#28)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#28](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheKey">
      <MemberSignature Language="C#" Value="public virtual string GetCacheKey (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCacheKey(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCacheKey (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCacheKey(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès à la ressource virtuelle.</param>
        <summary>Retourne une clé de cache à utiliser pour le chemin d'accès virtuel spécifié.</summary>
        <returns>Clé de cache pour la ressource virtuelle spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> méthode pour fournir une clé de cache personnalisé pour les ressources virtuelles. Si vous ne substituez pas la <xref:System.Web.Hosting.VirtualPathProvider.GetCacheKey%2A> (méthode), le chemin d’accès virtuel est utilisé pour la clé de cache.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ne peuvent remplacer la valeur par défaut <see cref="M:System.Web.Hosting.VirtualPathProvider.GetCacheKey(System.String)" /> méthode si la création d’une clé de cache basée sur le chemin d’accès virtuel ne fonctionnera pas pour votre application.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualDirectory GetDirectory (string virtualDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualDirectory GetDirectory(string virtualDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectory (virtualDir As String) As VirtualDirectory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualDirectory ^ GetDirectory(System::String ^ virtualDir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualDirectory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualDir">Chemin d'accès au répertoire virtuel.</param>
        <summary>Obtient un répertoire virtuel à partir du système de fichiers virtuel.</summary>
        <returns>Descendant de la classe <see cref="T:System.Web.Hosting.VirtualDirectory" /> qui représente un répertoire dans le système de fichiers virtuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> méthode retourne un descendant de la <xref:System.Web.Hosting.VirtualDirectory> classe qui contient les fichiers et répertoires contenus dans le répertoire spécifié dans le `virtualDir` paramètre.  
  
 Si votre personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe ne prend pas en charge les répertoires, le <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> méthode doit retourner `null`.  
  
> [!NOTE]
>  Si votre système de fichiers virtuel doit contenir des thèmes pour le site Web (en créant une machine virtuelle, `App_Themes` active), votre personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe doit prendre en charge les répertoires.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.GetDirectory%2A> méthode personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#24)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#24](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Hosting.VirtualFile GetFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.Hosting.VirtualFile GetFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (virtualPath As String) As VirtualFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Hosting::VirtualFile ^ GetFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès au fichier virtuel.</param>
        <summary>Obtient un fichier virtuel à partir du système de fichiers virtuel.</summary>
        <returns>Descendant de la classe <see cref="T:System.Web.Hosting.VirtualFile" /> qui représente un fichier dans le système de fichiers virtuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> méthode retourne un descendant de la <xref:System.Web.Hosting.VirtualFile> classe qui représente le fichier spécifié par le `virtualPath` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> méthode personnalisé <xref:System.Web.Hosting.VirtualPathProvider> classe. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileHash">
      <MemberSignature Language="C#" Value="public virtual string GetFileHash (string virtualPath, System.Collections.IEnumerable virtualPathDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFileHash(string virtualPath, class System.Collections.IEnumerable virtualPathDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.GetFileHash(System.String,System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFileHash (virtualPath As String, virtualPathDependencies As IEnumerable) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFileHash(System::String ^ virtualPath, System::Collections::IEnumerable ^ virtualPathDependencies);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualPathDependencies" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès à la ressource virtuelle principale.</param>
        <param name="virtualPathDependencies">Tableau de chemins d'accès à d'autres ressources virtuelles requises par la ressource virtuelle principale.</param>
        <summary>Retourne un hachage des chemins d'accès virtuels spécifiés.</summary>
        <returns>Hachage des chemins d'accès virtuels spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la <xref:System.Web.Hosting.VirtualPathProvider.GetFileHash%2A> méthode pour fournir un hachage des dépendances pour une ressource de système de fichiers virtuel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise l’instance <see cref="T:System.Web.Hosting.VirtualPathProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> méthode est appelée une fois que le fournisseur est inscrit avec le système de compilation ASP.NET. Le <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> méthode est utilisée pour fournir toute initialisation requise après la <xref:System.Web.Hosting.VirtualPathProvider> instance est placée dans l’environnement occupe de l’application.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.Initialize%2A> méthode qui définit le chemin d’accès au fichier de données à partir de l’application <xref:System.Web.Hosting.HostingEnvironment> instance. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#26)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#26](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Donne à l'objet <see cref="T:System.Web.Hosting.VirtualPathProvider" /> une durée de vie infinie en empêchant toute création de bail.</summary>
        <returns>Toujours <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> méthode dans sa classe de base. Cette propriété retourne toujours `null` et empêche ainsi la création d’un bail qui limiterait le <xref:System.Web.Hosting.VirtualPathProvider> durée de vie de l’objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Hosting.VirtualPathProvider.OpenFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenFile (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Stream ^ OpenFile(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Chemin d'accès au fichier virtuel.</param>
        <summary>Retourne un flux à partir d'un fichier virtuel.</summary>
        <returns>Objet <see cref="T:System.IO.Stream" /> en lecture seule pour le fichier virtuel ou la ressource spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Hosting.VirtualPathProvider.OpenFile%2A> méthode est une méthode pratique qui vous permet d’obtenir un flux de données à partir d’un fichier virtuel sans créer un <xref:System.Web.Hosting.VirtualPathProvider> instance.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="protected internal System.Web.Hosting.VirtualPathProvider Previous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Hosting.VirtualPathProvider Previous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Hosting.VirtualPathProvider.Previous" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property Previous As VirtualPathProvider" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::Hosting::VirtualPathProvider ^ Previous { System::Web::Hosting::VirtualPathProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.VirtualPathProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.Hosting.VirtualPathProvider" /> précédemment inscrit dans le système de compilation.</summary>
        <value>Objet <see cref="T:System.Web.Hosting.VirtualPathProvider" /> suivant dans le système de compilation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un <xref:System.Web.Hosting.VirtualPathProvider> objet est inscrit avec le système de compilation ASP.NET, il est ajouté à une chaîne de fournisseurs. Utilisez le <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> propriété pour transférer le traitement précédemment <xref:System.Web.Hosting.VirtualPathProvider> de l’objet dans la chaîne si le chemin d’accès demandé n’est pas fourni par cette <xref:System.Web.Hosting.VirtualPathProvider> instance.  
  
 La chaîne de fournisseurs de chemin d’accès se termine toujours par le fournisseur ASP.NET par défaut, qui sert les fichiers du système de fichiers.  
  
   
  
## Examples  
 L’exemple de code suivant est une implémentation de la <xref:System.Web.Hosting.VirtualPathProvider.GetFile%2A> (méthode). Si le répertoire virtuel demandé ne commence pas par la chaîne `"/vrdir"`, la méthode utilise le <xref:System.Web.Hosting.VirtualPathProvider.Previous%2A> de transmettre la demande à l’autre propriété <xref:System.Web.Hosting.VirtualPathProvider> objet dans la chaîne. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.Hosting.VirtualPathProvider> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/CS/SamplePathProvider.cs#23)]
 [!code-vb[System.Web.Hosting.VirtualPathProvider#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.hosting.virtualpathprovider/VB/SamplePathProvider.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>