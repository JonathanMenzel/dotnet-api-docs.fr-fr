<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="645ec0e30341333218909acd3fe48761c8661849" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogZoneBase&#xA;Inherits ToolZone&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone, System::Web::UI::IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Sert de classe de base pour tous les contrôles de zone qui agissent en tant que catalogues. Les catalogues contiennent des listes de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> que les utilisateurs peuvent ajouter à une page web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> est une classe de base qui hérite de la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. Il fournit un ensemble de comportements de base pour les zones dérivées.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe fournit une interface utilisateur unique (IU) qui permet aux utilisateurs d’ajouter <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles et autres contrôles serveur à des pages Web. Les contrôles qui dérivent de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class, telle que <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, sont les contrôles réellement placés sur les pages Web. Ils agissent comme conteneurs pour d’autres contrôles, appelés <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, créent des listes de contrôles de serveur pour les utilisateurs à ajouter à une page. Zones qui dérivent de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe peut apparaître uniquement lorsque la page est en mode d’affichage catalogue.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone peut uniquement contenir <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles et inversement, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles peuvent résider que dans <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zones.  
  
 Le mécanisme d’ajout de contrôles serveur à un catalogue est le jeu suivant de trois contrôles qui dérivent de la base de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> classe.  
  
|Contrôle|Description |  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Gère les références aux contrôles qui ont été fermés sur une page. Ces contrôles peuvent être rouvertes (à nouveau ajoutés à la page) par les utilisateurs.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contient des références aux contrôles qui sont déclarés dans un catalogue de composants WebPart dans le balisage d’une page Web. Ces contrôles peuvent être ajoutés à une page Web par les utilisateurs.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Fournit l’interface utilisateur pour un utilisateur de télécharger un fichier de définition dans un catalogue, afin que le contrôle peut être ajouté à une page Web. Fichiers de définition sont des fichiers XML avec un. Extension de nom de fichier WebPart qui importer les paramètres pour un contrôle. Le contrôle doit être présent sur le serveur avant d’importer le fichier de définition.|  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe a un nombre de propriétés qui sont utiles pour afficher des catalogues de <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> propriété référence le verbe qui ajoute un contrôle sélectionné à partir du catalogue à la page, tandis que le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> propriété fait référence à un verbe qui ferme le catalogue et renvoie le mode d’affichage de la page en mode de navigation. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété fait référence à la collection de tous les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dans la zone. Plusieurs propriétés orientées texte, tel que <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>, et <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>, remplacer les propriétés de base pour fournir le texte par défaut approprié pour les catalogues. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> propriété contient le texte en même temps que le contrôle de liste déroulante qui permet aux utilisateurs de choisir la zone dans laquelle un contrôle est ajouté à.  
  
 Plusieurs autres propriétés sont incluses dans la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété est un identificateur de chaîne unique actuellement sélectionné <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A> propriété indique s’il faut afficher les icônes qui peuvent être associés à des contrôles en définissant le <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> propriété sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> propriété contient les attributs de style pour les liens vers les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> les contrôles qui ne sont pas actuellement sélectionnés dans la zone. En revanche, le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriété contient les attributs de style pour un lien vers le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle que l’utilisateur a actuellement sélectionné dans la zone.  
  
 Outre les propriétés, il existe également certaines méthodes dans le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> de classe, en plus de la gestion d’événements standard et le rendu des méthodes héritées d’autres contrôles de base, qui sont conçues uniquement pour gérer des catalogues de contrôles. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> méthode crée le chrome (éléments d’interface utilisateur périphériques comme une bordure, les verbes, les icônes et un titre) qui entoure chaque <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle dans la zone et gère également le rendu des contrôles. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> méthode est une méthode abstraite ; pour créer des instances de tous les classes dérivées de substituent le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles contenus dans la zone. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> méthode peut être appelée par une classe dérivée si la collection de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles dans la zone change pour une raison quelconque, par programmation et la classe dérivée doit recréer la collection. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A> méthode charge de l’état déjà existant pour les cases à cocher à côté du <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles dans le catalogue, chaque fois que la page est publiée sur le serveur ; à l’inverse, la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> méthode enregistre l’état des cases à cocher. Enfin, le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> méthode fournit à tout le rendu pour les liens de chaque <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contenu dans la zone de contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant illustre plusieurs déclarative et utilise par programmation de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe. Étant donné que la classe est abstraite, les exemples de code utilisent dérivé <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe fournie avec le jeu de composants WebPart, illustre les propriétés et les méthodes qu’il hérite la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe.  
  
 L’exemple de code de quatre parties :  
  
-   Un contrôle utilisateur qui permet de modifier les modes d’affichage sur la page Web.  
  
-   Une page Web qui contient une référence à un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> contrôle et un code qui illustre l’utilisation de certains <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> membres de classe.  
  
-   Personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qui est ajouté à personnalisé <xref:System.Web.UI.WebControls.WebParts.CatalogZone> contrôle.  
  
-   Description du fonctionne de l’exemple dans un navigateur.  
  
 La première partie de cet exemple de code est le contrôle utilisateur qui permet de modifier les modes d’affichage sur la page. Pour plus d’informations sur les modes d’affichage et une description du code source dans ce contrôle, consultez [procédure pas à pas : modification des Modes d’affichage sur une Page WebPart](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 La deuxième partie de l’exemple de code est une page Web qui contient une référence déclarative à un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> contrôle. En haut de la page sont deux `Register` directives : une pour le contrôle utilisateur et pour personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Notez que sous le `<asp:WebPartZone>` élément est un `<asp: CatalogZone>` élément qui contient des références déclaratives à personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle) et à ASP.NET <xref:System.Web.UI.WebControls.Calendar> contrôle. La zone possède également plusieurs balises et propriétés configurées pour déterminer son apparence et son comportement. Entre le `<script>` balises dans la page est une variété de code de gestion des événements, plus qui montre les différentes par programmation utilise de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> membres.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 La troisième partie de l’exemple de code est personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle nommé `TextDisplayWebPart`. Il est déclaré dans la zone, et un utilisateur final peut l’ajouter à partir du catalogue à la page. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Pour une démonstration des deux méthodes de la compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 Notez que pour l’exemple de code fonctionne, il existe un paramètre, que vous devez ajouter dans le fichier Web.config pour permettre l’exportation des fichiers de description du WebPart. Assurez-vous que vous disposez d’un fichier Web.config dans le même répertoire que la page Web pour cet exemple de code. Dans le `<system.web>` section, assurez-vous qu’il existe un `<webParts>` élément avec un `enableExport` attribut la valeur `true`, comme dans le balisage suivant.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la zone de liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, vous pouvez voir les deux contrôles serveur qui peuvent être ajoutés à partir du catalogue à la page, et dans l’interface utilisateur vous pouvez également constater les effets de déclarative et par programme utilisent de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> membres de classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Si vous souhaitez développer une zone personnalisée pour l’hébergement <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> contrôles, vous devez déterminer si vous souhaitez fournir la prise en charge du modèle de zone. Un modèle de zone est créé par les types qui implémentent la <see cref="T:System.Web.UI.ITemplate" /> de l’interface et n’est nécessaire si vous souhaitez permettre aux développeurs de page à l’aide de votre zone personnalisée pour faire référence à <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> contrôles dans votre zone dans le balisage déclaratif d’une page Web. Si vous avez besoin de la prise en charge du modèle de zone, vous devez hériter de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> classe. En revanche, si votre zone personnalisée et ses <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> contrôles vont être autonomes, ils sont créés par programme sans aucune option pour les développeurs de page afin de spécifier des contrôles de façon déclarative dans un modèle de zone, puis vous pouvez hériter directement à partir de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe. Si vous héritez de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> (classe), vous devez substituer la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" /> (méthode) et ajouter la <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ou d’autres contrôles serveur souhaité dans votre catalogue à un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> objet.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise la classe pour qu'elle soit utilisée par une instance de la classe héritée. Ce constructeur peut être appelé uniquement par une classe héritée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le constructeur est appelé lorsqu’une classe dérivée est initialisée, comme la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe fournie avec le jeu de composants WebPart. La base de <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A> constructeur vous aide à préparer la page pour afficher l’interface utilisateur du catalogue WebPart (UI), en passant les <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> de l’objet à le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Plus précisément, le constructeur passe un <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AddVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ AddVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'ajouter des contrôles d'un catalogue à une page WebPart.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'ajouter des contrôles du catalogue à une page Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le verbe add est référencé par le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> propriété sur un contrôle dérivé de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe. Il ajoute un contrôle utilisateur a sélectionné dans le catalogue à une page Web. En règle générale, il apparaît dans l’interface utilisateur (IU) comme un <xref:System.Web.UI.WebControls.Button> contrôler, bien qu’il peut également être un lien ou une image.  
  
 Le verbe add est un contrôle de niveau zone, ce qui signifie que, bien qu’il peut y avoir plusieurs <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans le catalogue, le verbe add s’applique à tous les contrôles sélectionnés par l’utilisateur et les ajoute à la zone sélectionnée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriété de façon déclarative dans une page Web. Cet exemple personnalise le texte du verbe.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A> propriété par programme, à l’aide d’un bouton bascule pour activer ou désactiver.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, vous pouvez examiner le texte personnalisé sur le <xref:System.Web.UI.WebControls.Button> contrôle pour le verbe add et vous pouvez cliquer sur le **activer ou désactiver les verbes** bouton pour montrer que vous pouvez accéder par programme au verbe apply.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogPartChrome As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CatalogPartChrome { System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'instance de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> associée à la zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> qui est associé à la zone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> est appelée, elle crée une instance de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> classe et cette instance est utilisé pour restituer des éléments d’interface (interface) (également appelés le chrome) l’utilisateur du périphérique pour tous les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles dans une zone.  
  
 Les éléments de chrome, une personne <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle inclure son texte de titre et la bordure. Le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> fournis avec le jeu de composants WebPart de contrôles n’ont pas de verbes d’en-tête par défaut.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogParts As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CatalogParts { System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de tous les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> contenus dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> qui contient tous les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> d'une zone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété fournit une référence à une collection de tous les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dans la zone. Il fait référence à la fois le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> fournies avec le jeu de composants WebPart et personnalisés des contrôles <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles qui sont ajoutés à la zone.  
  
 La collection est créée initialement lorsqu’une autre méthode accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété et la propriété appelle la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> (méthode).  
  
> [!NOTE]
>  Notez que toute <xref:System.Web.UI.WebControls.WebParts.CatalogPart> qui est ajouté à la collection de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles dans une implémentation de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> méthode doit avoir une valeur assignée à sa propriété ID, sinon une exception est levée lorsque la collection est assignée à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété par programmation. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 L’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété, effectuer une itération au sein de la collection et répertorier les ID de tous les le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dans la zone.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, vous pouvez cliquer sur le **liste CatalogParts** bouton pour illustrer comment le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété est accessible.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui est ajouté à la collection n'avait pas de valeur assignée à sa propriété ID.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bascule la page Web du mode d'affichage catalogue vers le mode de navigation normal.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A> méthode ignore les contrôles actuellement sélectionnés dans le catalogue. Il appelle simplement la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle pour retourner la page Web en mode de navigation.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final de fermer l'interface utilisateur du catalogue et de rétablir la page en mode de navigation normal.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final de fermer l'interface utilisateur du catalogue sur la page Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le verbe de fermeture est référencé par le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> propriété sur un contrôle dérivé de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe.  
  
 Utilisateur peut cliquer sur le verbe close dans le pied de page de zone. Lorsque l’utilisateur clique sur le verbe close, tout <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles sélectionnés par l’utilisateur sont ignorés, le catalogue de l’interface utilisateur ferme, et la page rétablit le mode de navigation normal.  
  
 Le verbe de fermeture est un contrôle de niveau zone, c'est-à-dire que son action s’applique au niveau de la zone entière. Lorsqu’un utilisateur clique sur le verbe close, les contrôles qui ont été sélectionnés, mais ne pas ajoutés à la page sont ignorés, le catalogue est fermé et la page rétablit le mode de navigation.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> propriété de façon déclarative dans une page Web. Cet exemple montre comment personnaliser le <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A> propriété pour le verbe.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A> propriété par programme, à l’aide d’un bouton bascule pour activer ou désactiver.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, en plaçant le pointeur de la souris sur le **fermer** bouton, vous pouvez afficher son texte de description dans une info-bulle. Vous pouvez également cliquer sur le **activer ou désactiver les verbes** bouton pour indiquer que vous pouvez accéder par programmation le verbe de fermeture.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCatalogPartChrome () As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CreateCatalogPartChrome();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une instance d'un objet <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> utilisé pour restituer les éléments d'interface utilisateur périphériques pour les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> présents dans une zone.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> qui génère le rendu des éléments d'interface utilisateur périphériques pour la zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> retourne un objet <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>. Les éléments de chrome, une personne <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle inclure son texte de titre et la bordure. Le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> fournis avec le jeu de composants WebPart de contrôles n’ont pas de verbes d’en-tête par défaut. Toutefois, il est possible de définir la <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> propriété d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôler, afin que vous pouvez réduire et restaurer le contrôle par programmation si nécessaire.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une déclaration de méthode de base que des zones dérivées peuvent substituer pour gérer les détails de la création des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> présents dans une zone.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> qui contient la collection des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> associés à la zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> méthode ne fournit pas d’implémentation. Elle est destinée à être implémentée dans une classe dérivée et doit être utilisé pour créer une instance de la collection de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles contenus dans une zone, chaque fois que la page Web d’hébergement entre en mode catalogue. Le <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType> méthode fournit un exemple d’implémentation de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> (méthode).  
  
> [!NOTE]
>  Notez que toute <xref:System.Web.UI.WebControls.WebParts.CatalogPart> qui est ajouté à la collection de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles dans une implémentation de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> méthode doit avoir une valeur assignée à sa propriété ID, sinon une exception est levée lorsque la collection est assignée à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A> propriété.  
  
 La méthode peut créer le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles à partir de plusieurs sources : les contrôles qui sont déclarés dans le format de persistance dans un <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> , ou les contrôles qui sont conservés dans plusieurs mécanismes de stockage, par exemple un fichier XML ou une base de données.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Les développeurs qui créent personnalisés <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> doivent hériter de contrôles la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> ou <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> des classes et substituer cette méthode s’ils souhaitent créer un personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> objet pour rendre leur personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> contrôles.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée le jeu de composants enfants associé à une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un message qui s’affiche quand une zone ne contient aucun contrôle.</summary>
        <value>Chaîne contenant le message qui s’affiche dans une zone vide. Une chaîne par défaut spécifique à la culture est fournie par le .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de chaîne de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> propriété s’affiche lorsqu’une page Web en mode catalogue, si le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone ne contient pas <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> propriété de façon déclarative. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que l’exemple de code déclare deux `<asp:catalogzone>` éléments et la deuxième ne déclare pas <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles, même s’il assigne une valeur à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, notez que sous la première zone, qui contient deux <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, la deuxième zone apparaît et affiche le contenu de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A> propriété, car il ne contient aucun contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte de la zone d’en-tête d’une zone.</summary>
        <value>Chaîne qui contient le texte d’en-tête de la zone. Une chaîne par défaut spécifique à la culture est fournie par le .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de chaîne de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété est affichée dans la zone d’en-tête d’un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone, qui est tout en haut de la zone. Le texte de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété s’affiche lorsqu’une page active le mode catalogue et l’interface utilisateur du catalogue (UI) devienne visible.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que l’exemple de code déclare deux `<asp:catalogzone>` éléments. Deuxième ne déclare pas <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, mais les deux déclarent une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété dans la première zone est assignée par programme à une autre valeur.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, notez les valeurs de chaque <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> propriété affichée dans la zone d’en-tête de chaque zone. Vous pouvez cliquer sur le **définir les propriétés de Zone de texte** bouton et le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A> de la zone supérieure est définie sur la valeur assignée dans le code.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte dans une zone qui fournit des explications destinées aux utilisateurs finaux.</summary>
        <value>Chaîne qui contient des instructions destinées aux utilisateurs finaux. Une chaîne par défaut propre à la culture est fournie par le jeu de composants WebPart.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de chaîne de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété s’affiche juste en dessous de la zone d’en-tête d’un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone. Le texte de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété s’affiche lorsqu’une page active le mode catalogue et l’interface utilisateur du catalogue (UI) devienne visible.  
  
 L’objectif de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété consiste à fournir à l’utilisateur avec des instructions générales sur ce qu’il faut faire lorsque l’interface utilisateur du catalogue s’affiche.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que l’exemple de code déclare deux `<asp:catalogzone>` éléments, dont le premier déclare une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété dans la première zone est assignée par programme à une autre valeur.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, notez la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> propriété affichée dans la zone d’en-tête de chaque zone. Vous pouvez cliquer sur le **définir les propriétés de Zone de texte** bouton et le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A> de la zone supérieure est définie sur la valeur assignée dans le code.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCatalogParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCatalogParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détruit la collection de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> associée à une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> méthode peut être appelée par les classes dérivées si la liste des <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles associés à un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone a été modifiée pour une raison quelconque, et la classe dérivée doit obtenir une liste actualisée des <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. La classe dérivée doit d’abord appeler <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> de suppression de la collection actuelle, puis la classe de base appellera <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> que nécessaire pour créer la collection mise à jour.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Données d'état précédemment enregistrées.</param>
        <summary>Charge l'état à partir d'une demande de page antérieure pour les propriétés du contrôle qui doivent être persistantes sur des publications (postbacks), même lorsque l'état d'affichage est désactivé sur le contrôle.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> n'est pas un état du contrôle valide.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificateur de clé pour le contrôle.</param>
        <param name="postCollection">Collection des paires nom/valeur publiées sur le serveur.</param>
        <summary>Traite l'état des cases à cocher qui correspondent aux contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> présents dans le catalogue, lorsque la page est publiée sur le serveur.</summary>
        <returns>Par opposition à la méthode de base substituée, cette méthode retourne toujours <see langword="false" />, parce que la classe n'expose pas d'événement de modification.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode effectue une itération au sein de la collection de <xref:System.Web.UI.WebControls.CheckBox> pour déterminer quels contrôles <xref:System.Web.UI.WebControls.WebParts.WebPart> ou autres contrôles serveur dans le catalogue ont été sélectionnées par un utilisateur. Les éléments sélectionnés sont affectés à un tableau interne, qui est ensuite traité pour ajouter les contrôles correspondants à la page Web.  
  
 La méthode n’est pas conçue pour être appelée à partir de votre code. Il est utilisé en interne par le jeu de composants WebPart.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Données d'état précédemment enregistrées.</param>
        <summary>Charge des informations d'état enregistrées précédemment pour une zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code. Toutefois, vous pouvez substituer cette méthode pour spécifier la manière dont un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A> méthode appelle d’abord la méthode de base pour charger les informations d’état déjà existant. Ensuite, elle ajoute l’objet de données de l’état d’affichage contenant les informations d’état pour le verbe add, le verbe de fermeture, la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> objet et le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La taille de l'objet <paramref name="savedState" /> n'est pas égale à la taille de l'objet d'état d'affichage actuel.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Enregistre l'objet de la page afin que celle-ci demande l'état du contrôle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" /> et enregistre l'objet de la page afin que celle-ci demande des publications (postbacks).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui contient des attributs de style pour les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui ne sont pas actuellement sélectionnés dans la zone.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> qui contient des attributs de style pour les contrôles qui ne sont pas actuellement sélectionnés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone, les liens sont affichés pour chaque type de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle : <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, et <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>. Lorsqu’un utilisateur clique sur les liens correspondants <xref:System.Web.UI.WebControls.WebParts.CatalogPart> devient le contrôle sélectionné, et les contrôles enfants contenus par ce contrôle sélectionné deviennent visibles.  
  
 Le <xref:System.Web.UI.WebControls.Style> objet référencé par le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> propriété contient les attributs de style pour le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> les contrôles qui ne sont pas actuellement sélectionnés. Bien que l’objet référencé par la propriété est en lecture seule, vous pouvez l’utiliser pour définir les caractéristiques de style sous-jacentes pour le désélectionnés <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que la première partie de l’exemple de code déclare deux `<asp:catalogzone>` éléments, dont le premier déclare une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la couleur de texte pour le désélectionnés <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles est définie sur une autre valeur.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, notez les attributs de style de la non sélectionnées <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles répertoriés dans la zone (par défaut, le texte sélectionné <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle est le <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> contrôle). Vous pouvez cliquer sur le **changer les Styles de lien partie** pour modifier la couleur du texte des contrôles non sélectionnés. Vous pouvez également cliquer sur les liens pour les contrôles non sélectionnés, pour voir comment les attributs de style modifient lorsqu’un contrôle est sélectionné.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> qui contient l'argument de l'événement.</param>
        <summary>Effectue les actions associées à l'un des verbes de zone ou déclenche un événement qui publie en retour vers le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `eventArgument` les données de paramètre indiquent que le verbe add ou close a cliqué sur, puis le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A> méthode exécute l’action associée au verbe, telles que l’ajout <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles à la page ou la fermeture du catalogue. Si la méthode est appelée pour une raison quelconque, la méthode de base est appelée pour déclencher un événement de publication (postback) sur le serveur.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si vous souhaitez ajouter des verbes personnalisés à un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone, vous devez substituer la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> méthode pour gérer l’événement, si un utilisateur clique sur un verbe personnalisé.</para>
        </block>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu de la zone.</param>
        <summary>Génère le rendu de la zone via l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> méthode substitue la méthode de base à partir de la <xref:System.Web.UI.WebControls.WebControl> classe pour appeler le <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> méthode qui vérifie qu’un formulaire HTML est rendu pour le contrôle de zone au moment de l’exécution. Après la vérification, la méthode restitue ensuite le contenu restant de la zone.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu du corps de la zone.</param>
        <summary>Substitue la méthode de base pour effectuer le rendu du corps d'une zone dérivé de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> méthode restitue la zone du corps d’un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone, qui est la principale zone de contenu entre les zones d’en-tête et pied de page et contient <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> méthode substitue la méthode de base dans le <xref:System.Web.UI.WebControls.WebParts.WebZone> classe afin de fournir un rendu spécialisé des attributs qui s’appliquent uniquement aux <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zones. La méthode restitue une table qui contient tout le contenu du corps et de cette table, il définit des valeurs différentes en fonction des conditions différentes, notamment le nombre <xref:System.Web.UI.WebControls.WebParts.CatalogPart> sont des contrôles dans la zone. S’il existe plusieurs <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, un lien est créé pour chaque contrôle, et seul le contenu du contrôle actuellement sélectionné est affiché. Attributs de style spéciaux sont définis le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A> propriété correspondant à votre <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle par rapport à ceux qui ne sont pas actuellement sélectionnés.  
  
 S’il n’y aucun <xref:System.Web.UI.WebControls.WebParts.CatalogPart> dans la zone, le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A> méthode restitue la valeur de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderCatalogPartLinks (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderCatalogPartLinks(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu des liens pour les contrôles de la zone.</param>
        <summary>Génère le rendu des liens des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> présents dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A> méthode restitue des liens à la personne <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans une zone s’il existe plusieurs <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
 Le lien actuellement sélectionné <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle est restitué différemment afin qu’il le différencier des contrôles. Les développeurs peuvent définir les attributs de style pour les liens des contrôles sélectionnés et à l’aide de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> et <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> propriétés, respectivement.  
  
 Les liens vers les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> les contrôles dans une zone ne sont pas navigation ; ils permettent d’afficher l’interface utilisateur (IU) des contrôles. Lorsqu’un utilisateur clique sur le lien d’un contrôle, l’interface utilisateur pour un autre contrôle affiché est masquée, et l’interface utilisateur pour le contrôle sélectionné s’affiche.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si vous créez une classe personnalisée qui hérite de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> (classe), vous pouvez éventuellement substituer le <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" /> (méthode). Cette méthode vous permet de contrôler par programmation les liens vers <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> rendus des contrôles dans votre zone.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFooter (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFooter(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui génère le rendu de la zone de pied de page pour la zone.</param>
        <summary>Génère le rendu de la zone de pied de page pour une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le pied de page d’un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone est la partie inférieure de la zone qui contient les verbes de niveau zone, telles que le verbe d’ajout et de fermeture. Dans la balise sous-jacente, un pied de page est simplement une cellule dans une table HTML.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A> méthode crée d’abord les attributs de style pour le pied de page, puis appelle la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> méthode pour rendre l’ajout et de fermer les verbes.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui génère le rendu des verbes pour la zone.</param>
        <summary>Génère le rendu des verbes dans la zone de pied de page d'une zone <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A> méthode restitue le verbe d’ajout et de fermeture dans la zone de pied de page d’un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" /> méthode ne gère pas le rendu de personnalisés <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objets un développeur ajoute un personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> zone. Si vous souhaitez ajouter des verbes personnalisés à un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> (classe), vous devez hériter la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> classe et substituer la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" /> (méthode), que vous pouvez utiliser pour restituer les verbes personnalisés pour votre zone. Vous devez également substituer la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" /> méthode pour gérer l’événement lorsqu’un utilisateur clique sur un verbe personnalisé.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les modifications apportées à l'état d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />, qui ont lieu après la publication de la page Web sur le serveur.</summary>
        <returns>
          <see cref="T:System.Object" /> qui contient les données d'état pour le contrôle. Si aucune modification n'a été apportée à l'état, la méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A> méthode s’applique aux données d’état qui sont essentielles pour le fonctionnement d’un contrôle (par exemple, un index ou un mot clé) et sont séparé des données d’état d’affichage du contrôle.  
  
 La méthode appelle d’abord la méthode de base pour enregistrer les données d’état existantes pour le contrôle. Ensuite, elle détermine si un <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle dans la zone est actuellement sélectionné en vérifiant si le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété a une valeur. En l’absence d’un contrôle sélectionné, la méthode met à jour les données d’état avec les données d’état du contrôle sélectionné, puis retourne toutes les données d’état.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous pouvez éventuellement substituer la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" /> méthode dans une classe dérivée afin que vous pouvez mettre à jour l’état du contrôle enregistré pour les autres objets personnalisés dans la zone.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les changements d’état d’affichage qui se sont produits après qu’une page a été republiée sur le serveur.</summary>
        <returns>Retourne l’état d’affichage actuel du contrôle de zone. Si aucun état d'affichage n'est associé à la zone, cette méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A> méthode appelle la méthode de base pour enregistrer l’état d’affichage associé à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone. Ensuite, elle enregistre l’état d’affichage pour les verbes add et close, ainsi que pour les <xref:System.Web.UI.WebControls.Style> objets associés à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> et <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriétés.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedCatalogPartID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedCatalogPartID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne comme identificateur pour le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> actuellement sélectionné dans une zone.</summary>
        <value>Chaîne qui sert d'identificateur pour le contrôle actuellement sélectionné. La valeur par défaut est la valeur de la propriété <see cref="P:System.Web.UI.Control.ID" /> du contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété vous permet de définir l’identificateur de votre choix pour le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle. Cela ne modifie pas du contrôle <xref:System.Web.UI.Control.ID%2A> valeur de propriété, vous pouvez utiliser cette propriété par programmation à des fins personnelles. Par exemple, si vous souhaitez toujours effectuer des opérations de programmation sur actuellement sélectionné <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle, cette propriété permet à ce contrôle d’accès via une valeur connue que vous définissez à l’avance.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que la première partie de l’exemple de code déclare deux `<asp:catalogzone>` éléments, dont le premier déclare une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la valeur de texte pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété du contrôle actuellement sélectionné s’affiche.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, cliquez sur un des liens pour un <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle pour le sélectionner. Puis cliquez sur le **afficher l’ID du CatalogPart sélectionné** bouton pour afficher la valeur de propriété. Notez que la valeur de la propriété est la valeur qui a été définie de manière déclarative pour la zone. Si vous sélectionnez l’autre <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans la zone, la même valeur devient la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété pour chaque contrôle lorsqu’il est sélectionné. Si vous ne définissez pas la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A> propriété, la valeur par défaut est toujours la valeur de la <xref:System.Web.UI.Control.ID%2A> propriété pour le contrôle actuellement sélectionné.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet qui contient des attributs de style pour le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> actuellement sélectionné dans la zone.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> qui contient des attributs de style pour le contrôle actuellement sélectionné.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone, les liens sont affichés pour chaque type de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle : <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>, <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, et <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>. Lorsqu’un utilisateur clique sur les liens correspondants <xref:System.Web.UI.WebControls.WebParts.CatalogPart> devient le contrôle sélectionné, et les contrôles enfants contenus par ce contrôle sélectionné deviennent visibles.  
  
 Le <xref:System.Web.UI.WebControls.Style> objet référencé par le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriété contient les attributs de style de la liaison pour le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle actuellement sélectionné. Bien que l’objet référencé par la propriété est en lecture seule, vous pouvez l’utiliser pour définir les caractéristiques de style sous-jacentes pour le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que la première partie de l’exemple de code déclare deux `<asp:catalogzone>` éléments, dont le premier déclare une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la couleur de texte sélectionné <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle est défini sur une valeur différente.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, cliquez sur le lien pour l’une de la liste <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle et notez les attributs de style du contrôle sélectionné. Vous pouvez cliquer sur le **changer les Styles de lien partie** pour modifier la couleur du texte du contrôle sélectionné. Vous pouvez également cliquer sur les liens pour les contrôles non sélectionnés, pour voir comment les attributs de style modifient lorsqu’un contrôle est sélectionné.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectTargetZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectTargetZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte ainsi que le contrôle dans l'interface utilisateur du catalogue qui permet aux utilisateurs de choisir la zone dans laquelle ajouter leurs contrôles sélectionnés.</summary>
        <value>Chaîne qui contient le texte à afficher ainsi que le contrôle de sélection de zone. Une chaîne par défaut spécifique à la culture est fournie par le .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque l’interface utilisateur du catalogue s’affiche pour la première fois, les utilisateurs peuvent sélectionner un de le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, tels que <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>, qui contient <xref:System.Web.UI.WebControls.WebParts.WebPart> ou d’autres contrôles serveur qui peuvent être ajoutés à la page Web. L’utilisateur sélectionne un ou plusieurs contrôles et peut utiliser ensuite le <xref:System.Web.UI.WebControls.DropDownList> contrôler dans la zone de pied de page du catalogue et de choisir le <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle sur la page dans lequel placer les contrôles de serveur sélectionné. La valeur de texte de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> propriété s’affiche en même temps que le <xref:System.Web.UI.WebControls.DropDownList> contrôle sous la forme d’une instruction simple.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> vue d’ensemble de la classe.  
  
 Notez que la première partie de l’exemple de code déclare deux `<asp:catalogzone>` éléments, dont le premier déclare une valeur pour le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 Dans la deuxième partie de l’exemple de code, la valeur de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A> propriété est modifiée par programme.  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **catalogue** à partir de la liste déroulante pour passer en mode d’affichage. Lorsque le catalogue est visible, notez le texte affiché avec la <xref:System.Web.UI.WebControls.DropDownList> contrôle dans le pied de page du catalogue. Vous pouvez cliquer sur le **définir les propriétés de Zone de texte** bouton pour modifier la valeur de texte de la propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowCatalogIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowCatalogIcons { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les contrôles serveur présents dans le catalogue affichent leurs icônes associées.</summary>
        <value>
          <see langword="true" /> si les icônes associées aux contrôles serveur dans le catalogue doivent être affichées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles et autres contrôles serveur qui sont encapsulées comme <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> au moment de l’exécution, les contrôles ont un <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> propriété. La valeur de cette propriété est l’URL d’une image qui est utilisée en tant qu’icône pour représenter le contrôle dans un catalogue de contrôles.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A> propriété indique si les icônes associées à <xref:System.Web.UI.WebControls.WebParts.WebPart> et autres contrôles serveur sont affichent dans le catalogue.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificateur de clé pour le contrôle.</param>
        <param name="postCollection">Collection des paires nom/valeur publiées sur le serveur.</param>
        <summary>Implémente la méthode <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> en appelant la méthode <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</summary>
        <returns>
          <see langword="true" /> si un événement doit être déclenché pour indiquer que les données ont changé ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> est castée en interface <xref:System.Web.UI.IPostBackDataHandler>. La méthode appelle simplement la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A> méthode sur la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> classe, qui à son tour, traite l’état des cases à cocher dans un catalogue qui correspondent aux contrôles de serveur dans le catalogue.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> est castée en interface <xref:System.Web.UI.IPostBackDataHandler>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Effectue le suivi des modifications apportées à l’état d’affichage d’un contrôle de zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A> méthode appelle d’abord la méthode de base le <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe pour effectuer le suivi de l’état d’affichage associé à une <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone. Ensuite, la méthode commence à suivre l’état d’affichage pour les verbes add et close, ainsi que le <xref:System.Web.UI.WebControls.Style> objets associés à la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A> et <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A> propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>