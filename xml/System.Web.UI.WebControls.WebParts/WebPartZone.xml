<Type Name="WebPartZone" FullName="System.Web.UI.WebControls.WebParts.WebPartZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9952e166a40dfea2432d6c732d40f29c93123fa3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartZone extends System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartZone&#xA;Inherits WebPartZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartZone : System::Web::UI::WebControls::WebParts::WebPartZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPartZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Sert de contrôle principal dans le jeu de contrôles WebPart pour l’hébergement de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sur une page web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la fonctionnalité des composants WebPart, une zone est une région définie sur une page Web qui contient les contrôles WebPart. Les fonctions principales d’une zone sont pour disposer les contrôles qu’il contient et pour fournir une interface utilisateur commune (IU) de ces contrôles. Pour obtenir des informations générales sur les zones et comment elles sont utilisées dans les applications WebPart, consultez la documentation de référence pour la base de <xref:System.Web.UI.WebControls.WebParts.WebZone> et <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classes et la rubrique intitulée [Web Parts Control Set Overview](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 La fonction spéciale de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle doit contenir <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles qui constituent les principales interface utilisateur des applications WebPart. A <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle peut être déclaré dans le format de persistance sur une page Web, permettant aux développeurs de l’utiliser comme modèle et pour ajouter d’autres contrôles serveur dans le `<asp:webpartzone>` élément. N’importe quel type de contrôle de serveur, si ajouté à un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, peuvent fonctionner comme un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle au moment de l’exécution. Cela est vrai même si le contrôle ajouté est un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, un contrôle utilisateur, un contrôle personnalisé ou un contrôle ASP.NET. Pour plus d’informations, consultez la rubrique relative à la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> classe.  
  
 En plus de contenir <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles, un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle fournit également une interface utilisateur commune pour les contrôles qu’il contient. Cette interface utilisateur commune, appelée chrome, se compose des éléments de l’interface utilisateur de périphérique sur tous les contrôles, tels que la bordure, titre, en-tête et pied de page, les caractéristiques de style et verbes (les actions d’interface utilisateur qu’un utilisateur peut effectuer sur un contrôle, telles que fermer ou réduire).  
  
> [!NOTE]
>  Internet Explorer peut rendre la hauteur d’un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ou des contrôles de manière inattendue, selon l’orientation de la zone. Pour plus d’informations, consultez la documentation relative à la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> ou <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> propriétés.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPartZone> classe dérive la plupart de son comportement à partir de la base de <xref:System.Web.UI.WebControls.WebParts.WebZone> et <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classes ; elle ajoute un seul membre unique, la <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> propriété. Cette propriété fait référence à un <xref:System.Web.UI.ITemplate> objet, qui est un modèle qui permet aux développeurs de page Définir les contrôles dans une zone statiquement en utilisant un `<zonetemplate>` élément dans le balisage déclaratif d’une page .aspx.  
  
## <a name="accessibility"></a>Accessibilité  
 Le balisage rendu par défaut pour ce contrôle n’est peut-être pas conforme aux normes d’accessibilité telles que les règles de priorité 1 Web contenu Accessibility Guidelines 1.0 (WCAG). Pour plus d’informations sur la prise en charge de l’accessibilité de ce contrôle, consultez [contrôles ASP.NET et l’accessibilité](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle dans une page WebPart. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 La première partie de l’exemple montre une classe personnalisée qui hérite de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> et qui définit deux des propriétés de la zone de base dans le constructeur.  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 La deuxième partie de l’exemple montre une page qui contient le personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle. Notez que la page requiert un spécial `Register` directive au début de la page pour référencer l’assembly qui contient la zone personnalisée. La page contient également un `<asp:webpartmanager>` élément, qui est requis sur chaque page WebPart. Le `<cc1:MyWebPartZone>` l’élément, qui représente le personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôler, contient un ASP.NET standard <xref:System.Web.UI.WebControls.Calendar> contrôle. Parce qu’elle est contenue dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, le <xref:System.Web.UI.WebControls.Calendar> contrôle sera encapsulé avec un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> contrôle au moment de l’exécution, ce qui lui permet d’agir comme un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#1)]  
  
 Examinez le balisage déclaratif pour personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle. Notez que vous pouvez définir différentes propriétés au niveau de la zone dans le balisage, comme indiqué dans l’exemple de code suivant.  
  
> [!NOTE]
>  Il est très important de noter l’utilisation de la `<zonetemplate>` élément. Cet élément, comme décrit dans la section Notes, est requis dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone pour encapsuler la méthode statique <xref:System.Web.UI.WebControls.WebParts.WebPart> les contrôles qui sont déclarés dans une page.  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPartZone.%23ctor%2A> méthode est un constructeur par défaut et ne définit aucune valeur. Toutefois, les classes dérivées peuvent utiliser le constructeur pour définir les propriétés de zone de base, pour créer des comportements standard et l’apparence d’un contrôle de zone personnalisée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation d’un constructeur sur personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartZone> classe pour définir plusieurs propriétés de base pour la zone. Cette approche peut s’avérer utile si vous souhaitez créer un personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle qui a des comportements spécifiques et l’apparence. Le code complet pour l’exemple, y compris la classe personnalisée et une page .aspx pour héberger le contrôle, se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> rubrique Vue d’ensemble de la classe.  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected internal override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetInitialWebParts () As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartCollection ^ GetInitialWebParts();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Substitue la méthode de base abstraite et obtient le jeu de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> statiques initial contenu dans le modèle de la zone.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> qui contient tous les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ou autres contrôles serveur contenus dans le modèle de la zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> méthode fournit une implémentation de base abstraite <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A> (méthode). La méthode de base ne fournit aucune implémentation, mais déclare la méthode pour que les classes dérivées puissent personnaliser comment qu’ils obtiendront l’ensemble initial des contrôles qui appartiennent dans une zone, sans prendre en compte les modifications de personnalisation.  
  
 Pour chaque contrôle de serveur se trouvant dans la zone, le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> méthode est appelée. Si un contrôle hérite directement de la <xref:System.Web.UI.WebControls.WebParts.WebPart> (classe), il est simplement ajouté à la zone <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> collection (et à la collection similaire de la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle). Si un contrôle n’hérite pas directement à partir de <xref:System.Web.UI.WebControls.WebParts.WebPart>, le jeu de contrôles WebPart encapsule le contrôle avec une <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objet, qui permet le contrôle se comporte comme un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle au moment de l’exécution.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPartZone> classe implémente la méthode de base en retournant le jeu de contrôles (le cas échéant) déclarés statiquement dans un jeu de `<zonetemplate>` balises dans le balisage d’une page WebPart. Si un <xref:System.Web.UI.WebControls.PlaceHolder> contrôle est déclaré dans une zone, les contrôles enfants sont ajoutés, plutôt que le contrôle lui-même. Cette implémentation vous permet, par exemple, créer un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> de zone dans une page maître, puis de déclarer des <xref:System.Web.UI.WebControls.WebParts.WebPart> ou des contrôles serveur dans une page de contenu. Si vous déclarez <xref:System.Web.UI.WebControls.Literal> des contrôles dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone, ils sont ignorés.  
  
> [!NOTE]
>  La collection initiale de contrôles retournée par la <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> méthode peut être différente de la collection d’exécution réelle des contrôles dans une zone, une fois la personnalisation a eu lieu. Par exemple, supposons que vous avez une page Web avec deux <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contient des contrôles, dont le premier contrôle utilisateur nommé `User1` qui est déclaré statiquement dans le `<zonetemplate>` balises. Si un utilisateur charge la page et la fait glisser `User1` dans la deuxième zone, puis `User1` fait toujours partie de la collection qui est retournée en appelant le <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> méthode pour la première zone, car il est déclaré dans cette zone. Mais au moment de l’exécution lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle charge les données de personnalisation, `User1` s’affiche dans la deuxième zone où l’utilisateur fait glisser.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Substitue la méthode de base pour indiquer que la zone a été enregistrée avec succès avec le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une référence à une instance de <see cref="T:System.Web.UI.ITemplate" /> qui contient les contrôles déclarés dans la balise d'une page Web.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> qui contient les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> d'une zone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> propriété fait référence à un <xref:System.Web.UI.ITemplate> instance dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle. Le modèle contient des contrôles serveur statiques que vous pouvez déclarer dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôler, y compris <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles, des contrôles utilisateur, des contrôles personnalisés et des contrôles ASP.NET.  
  
 Lorsque vous ajoutez statique <xref:System.Web.UI.WebControls.WebParts.WebPart> ou d’autres contrôles serveur à un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> dans le balisage déclaratif d’une page Web, vous devez placer les balises des contrôles dans une paire de `<zonetemplate>` balises. Si vous ne déclarez pas les contrôles dans `<zonetemplate>` balises, une exception est levée.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> propriété dans le balisage déclaratif d’une page WebPart. Le code complet pour l’exemple, y compris une classe personnalisée et une page .aspx pour héberger le contrôle, se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> rubrique Vue d’ensemble de la classe.  
  
 Notez que, dans le balisage de la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle, il existe un `<zonetemplate>` élément qui contient une référence au contrôle calendrier. Si vous voulez ajouter supplémentaires <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles ou autres contrôles serveur à la zone, vous pouvez également les ajouter dans le `<zonetemplate>` balises.  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'inscription des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dans la zone est déjà terminée.</exception>
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
  </Members>
</Type>