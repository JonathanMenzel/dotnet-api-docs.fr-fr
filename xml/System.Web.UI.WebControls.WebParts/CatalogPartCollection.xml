<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26799405beda734d72779d16a3f27ec14fc6e9f0" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51879502" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contient une collection de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> utilisés pour fournir des catalogues de contrôles serveur web que les utilisateurs finaux peuvent ajouter à une page web. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> classe est une collection en lecture seule de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, généralement utilisée par un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone pour effectuer le suivi de l’ensemble de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles contenus dans la zone.  
  
 Lorsqu’une page WebPart passe en mode de catalogue, la zone crée une nouvelle <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet constitué du <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Chaque <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle dans la collection peut contenir des références à zéro ou plusieurs contrôles serveur Web qui sont affichées sous la forme d’un catalogue de contrôles serveur disponibles.  
  
 Vous pouvez créer un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection de contrôles pour votre propre programmation si, par exemple, vous avez besoin effectuer une opération en masse sur un ensemble de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Même si le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet est en lecture seule, vous pouvez apporter des modifications par programme aux contrôles sous-jacents référencés dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant illustre plusieurs utilisations de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> classe. Il existe quatre parties dans cet exemple de code :  
  
-   Un contrôle utilisateur qui permet de modifier les modes d’affichage sur une page WebPart.  
  
-   Une classe personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle nommé `TextDisplayWebPart`, qui est référencé dans la page Web et est contenu dans un de le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
-   Une page Web qui fait référence à la `TextDisplayWebPart` contrôler, contient un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> contrôle avec les deux le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle à partir du contrôle WebPart défini déclaré dans la zone et contient pilotée par événements de code pour créer et manipuler un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet.  
  
-   Explication du fonctionne de l’exemple de code lorsque vous le chargez dans un navigateur.  
  
 La première partie de l’exemple de code est le contrôle utilisateur. Le code source pour le contrôle utilisateur provient d’une autre rubrique. Pour cet exemple de code fonctionne, vous devez obtenir le fichier .ascx pour le contrôle utilisateur à partir de la [procédure pas à pas : modification des Modes d’affichage sur une Page WebPart](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) rubrique et place le fichier dans le même dossier que la page .aspx dans cet exemple de code.  
  
 La deuxième partie de l’exemple de code est le `TextDisplayWebPart` contrôle. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Pour une procédure pas à pas qui illustre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08). Notez que le contrôle a une propriété nommée `ContentText`; cette propriété conserve la valeur entrée par l’utilisateur dans la zone de texte.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 La troisième partie de l’exemple de code est la page Web. Notez que le `<asp:catalogzone>` élément pour la page contient des déclarations pour deux <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Ces contrôles font partie d’un personnalisé <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet qui est créé lorsque le `Button1_Click` méthode s’exécute. Le <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle contient des contrôles serveur Web qui ont été précédemment fermés par un utilisateur en cours d’exécution. Contrôles dans le <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle peut être ajouté à une page. Le <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> contrôle contient une déclaration de personnalisé `TextDisplayWebPart` contrôle. Lorsque la page est en mode de catalogue, un utilisateur peut ajouter le `TextDisplayWebPart` contrôler à la page afin qu’il peut être utilisé en mode de navigation normal.  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. Vous pouvez ajouter personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle à la page en sélectionnant la case à cocher en regard de celle-ci, puis en cliquant sur **ajouter**. Cliquez sur **fermer** pour retourner la page en mode de navigation. Sur le contrôle vous venez d’ajouter, si vous cliquez sur le menu d’actions verbales (la flèche vers le bas qui apparaît dans la barre de titre), puis sur **fermer**, le contrôle est supprimé de la page et ajouté à la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle. Retourner la page en mode catalogue, puis cliquez sur le **Page catalogue** lien pour afficher le contenu de la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle. Notez que le contrôle que vous avez fermé maintenant apparaît il. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zone qui contient <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles est généralement le contrôle qui crée un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet, via le <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> (méthode). Toutefois, vous pouvez également créer vos propres <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet à d’autres fins par programmation.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance vide de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur initialise une instance vide de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> classe. Cette surcharge du constructeur est utilisée en interne par le <xref:System.Web.UI.WebControls.WebParts.CatalogZone> classe dans son <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> méthode pour créer un objet de collection vide. La zone crée ensuite des instances de tous les <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles déclarés dans le modèle de zone enfant et utilise une méthode interne de la collection pour les ajouter.  
  
 Vous ne pouvez pas utiliser cette surcharge de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur pour créer une nouvelle instance d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> et ajoutez <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles à ce dernier. Vous devez utiliser une des autres surcharges pour les <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur à la place.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" /> de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />.</param>
        <summary>Initialise une nouvelle instance d'une classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> en passant dans une collection <see cref="T:System.Collections.ICollection" /> de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur initialise une instance de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> classe et passe une collection de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Il s’agit d’une surcharge de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur que vous pouvez utiliser pour créer un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et ajouter <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles à ce dernier.  
  
 Bien que le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> instance créée par le constructeur est en lecture seule, vous pouvez toujours accéder à la personne <xref:System.Web.UI.WebControls.WebParts.CatalogPart> par programmation des contrôles dans la collection et appeler leurs propriétés et méthodes.  
  
 Un scénario courant pour l’utilisation de ce constructeur serait si vous souhaitez effectuer une opération de traitement par lots sur un jeu entier de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles, tels que la modification du contenu, une apparence ou une position d’un groupe d’éléments connexes.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez créer un personnalisé <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>et effectuer une opération de traitement par lots pour modifier l’individu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle dans la collection même s’il est en lecture seule. Pour le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> rubrique Vue d’ensemble de la classe.  
  
 Le code dans le `Button1_Click` méthode crée un <xref:System.Collections.ArrayList> d’objet, ajoute les deux <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle dans la page à l’objet et crée ensuite un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> à l’aide de l’objet le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> constructeur. Il montre également comment vous pouvez apporter des modifications de lot sous-jacentes <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle, même si la collection elle-même est en lecture seule. Le code parcourt la collection, la mise à jour le <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> propriété de chaque contrôle.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. En outre, si vous placez votre pointeur de la souris sur le texte du titre dans la bordure de la <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> contrôle, vous pouvez voir le nouveau texte de description qui a été ajouté au contrôle lorsque vous avez cliqué sur le bouton (la description apparaît dans une info-bulle). Si vous cliquez sur le **Page catalogue** lien pour afficher le <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle, vous trouverez qu’il a également une description de mise à jour.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">
          <see cref="T:System.Collections.ICollection" /> de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> existants dans une zone.</param>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" /> de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> supplémentaires.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> en passant dans une collection <see cref="T:System.Collections.ICollection" /> des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> existants dans une zone, et dans une collection supplémentaire de contrôles.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui est vérifié pour déterminer s'il est dans la collection.</param>
        <summary>Retourne une valeur indiquant si un contrôle particulier existe dans la collection.</summary>
        <returns>Valeur Boolean indiquant si un contrôle particulier existe dans la collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> méthode vous permet de déterminer si un particulier <xref:System.Web.UI.WebControls.WebParts.CatalogPart> objet fait partie d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez déterminer si un particulier <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôle est membre d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet. Pour le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> rubrique Vue d’ensemble de la classe.  
  
 Le code dans le `Button1_Click` méthode crée un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet nommé `myParts`. La méthode utilise le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> méthode pour déterminer si le `PageCatalogPart1` contrôle existe et si tel est le cas, récupère le contrôle et modifie une valeur de propriété.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. Ajouter personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle à la page en sélectionnant la case à cocher en regard de celle-ci, puis en cliquant sur **ajouter**. Cliquez sur **fermer** pour retourner la page en mode de navigation. Sur le contrôle vous venez d’ajouter, si vous cliquez sur le menu d’actions verbales (la flèche vers le bas qui apparaît dans la barre de titre), puis sur **fermer**, le contrôle est supprimé de la page et ajouté à la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle. Retourner la page en mode catalogue, puis cliquez sur le **Page catalogue** lien pour afficher le contenu de la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle. Notez que le contrôle que vous avez fermé a été ajouté à ce dernier. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Sélectionnez la case à cocher en regard du contrôle serveur contenu dans le <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôler, cliquez sur **ajouter** à ajouter à la page, puis cliquez sur **fermer** pour retourner la page en mode de navigation. Cliquez sur le menu d’actions verbales à nouveau sur le contrôle et notez que le verbe close a disparu. Il a été supprimé par le code dans le `Button1_Click` (méthode), lorsqu’il utilisé le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> méthode pour rechercher les `PageCatalogPart1`, puis définissez son <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> propriété `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tableau d'objets <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui contiendra la collection copiée.</param>
        <param name="index">Point de départ du tableau qui contiendra le contenu de collection.</param>
        <summary>Copie la collection dans un tableau d'objets <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> méthode est utile lorsque vous souhaitez assembler un tableau personnalisé qui peut contenir le <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet ou un sous-ensemble de ces contrôles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Référence une instance vide, statique et en lecture seule de la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une instance vide, statique et en lecture seule de <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> réduit l’utilisation de la mémoire dans les cas où vous souhaitez une instance de collection vide pour retourner le type d’objet approprié à partir d’une méthode ou compare l’instance avec un autre objet, mais vous n’avez pas besoin d’ajouter des membres à la instance.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui est membre de la collection.</param>
        <summary>Retourne la position d'un membre particulier de la collection.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> qui est membre de <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> méthode est utile si vous disposez de plusieurs <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles sur une page Web Parts et que vous avez besoin localiser un contrôle particulier dans la collection.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez déterminer la position d’un membre d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> collection à l’aide de son <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> propriété. Pour le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> rubrique Vue d’ensemble de la classe.  
  
 Le code dans le `Button1_Click` méthode crée un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet nommé `myParts`. Utilise la méthode le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> propriété pour récupérer la position de la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôler, puis modifie une valeur de propriété sur le contrôle.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Une fois que vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Cliquez sur le **Page catalogue** lien pour afficher le contenu de la <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle. Notez qu’il a uniquement un titre et aucune bordure, car son <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> valeur de propriété a été remplacée par <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> dans le code utilisé le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> propriété pour récupérer le contrôle.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne un membre spécifique de la collection d'après sa position ou un identificateur unique.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Index d'un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> particulier dans la collection.</param>
        <summary>Obtient ou définit un membre de la collection d'après sa position dans la collection.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> à l'index spécifié dans la collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur vous donne accès à sous-jacent <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet par index et modifier leurs valeurs de propriété ou appeler des méthodes.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez accéder à un membre d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> à l’aide de son index de l’objet. Pour le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> rubrique Vue d’ensemble de la classe.  
  
 Le code dans le `Button1_Click` méthode crée un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet nommé `myParts`. Notez que la méthode utilise le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur pour récupérer des informations à partir du premier membre de la collection.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Le nombre de contrôles serveur disponibles dans le <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle est obtenu en utilisant le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur dans le `Button1_Click` (méthode).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificateur unique pour un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> particulier dans une collection.</param>
        <summary>Retourne un membre de la collection d'après son identificateur de chaîne unique.</summary>
        <value>Premier <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> de la collection dont l'ID est égal à la valeur de <paramref name="id" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur vous donne accès à sous-jacent <xref:System.Web.UI.WebControls.WebParts.CatalogPart> des contrôles dans un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet à l’aide d’un identificateur de chaîne. Bien que le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet est en lecture seule, vous pouvez modifier les valeurs de propriété ou appeler des méthodes sur les contrôles sous-jacente accessibles par l’indexeur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez accéder à un membre d’un <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> à l’aide de sa valeur d’ID de chaîne de l’objet. Pour le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> rubrique Vue d’ensemble de la classe.  
  
 Le code dans le `Button1_Click` méthode crée un nouveau <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> objet nommé `myParts`. La méthode utilise le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur pour extraire des informations sur la <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> contrôle, qui est le deuxième membre de la collection.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez basculer la page en mode catalogue en sélectionnant **catalogue** dans le **Mode d’affichage** contrôle de liste déroulante. En cliquant sur le **afficher les propriétés CatalogPart** bouton accède à la <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> de l’objet et affiche certaines propriétés de la relation contenant-contenu <xref:System.Web.UI.WebControls.WebParts.CatalogPart> contrôles. Le nombre de contrôles serveur disponibles dans le <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> contrôle est obtenu en utilisant le <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> indexeur dans le `Button1_Click` (méthode).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>