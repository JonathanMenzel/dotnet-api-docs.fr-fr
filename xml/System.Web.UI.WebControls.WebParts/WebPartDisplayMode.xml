<Type Name="WebPartDisplayMode" FullName="System.Web.UI.WebControls.WebParts.WebPartDisplayMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df7d3227be187c5f4880c29e472010b908367725" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51866580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPartDisplayMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartDisplayMode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPartDisplayMode" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartDisplayMode abstract" />
  <TypeSignature Language="F#" Value="type WebPartDisplayMode = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit un jeu commun de propriétés pour les divers modes d'affichage qu'une page WebPart peut utiliser.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une page WebPart peut entrer différents modes d’affichage. Dans chaque mode d’affichage, certains éléments de l’interface utilisateur de composants WebPart (IU) sont masqués ou affichés et certains types de modifications de l’utilisateur à une page sont activés ou désactivés. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle contient l’implémentation pour les modes d’affichage qui sont disponibles dans le jeu de composants WebPart et gère les modes d’affichage pour une page.  
  
 Le tableau suivant répertorie les champs qui représentent les modes d’affichage disponible.  
  
|Mode d’affichage|Description |  
|------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Affiche les contrôles WebPart et les éléments d’interface utilisateur en mode normal, dans lequel les utilisateurs finaux afficher une page.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|Affiche les éléments d’interface utilisateur de zone et permet aux utilisateurs de faire glisser des contrôles WebPart pour modifier la disposition d’une page.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|Présente les spécial modification des éléments d’interface utilisateur et permet aux utilisateurs finaux de modifier les contrôles sur une page.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|Affiche les éléments d’interface utilisateur de catalogue spéciaux et permet aux utilisateurs finaux d’ajouter et supprimer des contrôles de page.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|Affiche les éléments d’interface utilisateur de connexion spéciale et permet aux utilisateurs finaux pour se connecter à des contrôles WebPart.|  
  
   
  
## Examples  
 Les exemples de code suivants illustrent l’utilisation déclarative des modes d’affichage sur une page WebPart. Chacun de ces modes d’affichage, tel qu’implémenté par le jeu de composants WebPart, est dérivé le <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> classe.  
  
 Cet exemple de code comprend quatre parties :  
  
-   Personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
-   Une page Web avec une zone pour héberger le contrôle personnalisé.  
  
-   Un contrôle utilisateur qui permet aux utilisateurs de modifier les modes d’affichage sur la page Web.  
  
-   Explication du fonctionne de la page dans un navigateur.  
  
 La première partie de l’exemple est un personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, `TextDisplayWebPart`. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Pour une démonstration de deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPartDisplayMode_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_WebPartDisplayMode_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/textdisplaywebpart.vb#9)]  
  
 La deuxième partie de l’exemple de code est une page Web qui fait référence à un standard ASP.NET <xref:System.Web.UI.WebControls.Calendar> contrôler au sein d’un `<asp:webpartzone>` élément, afin que le contrôle est encapsulé avec un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> contrôle et dispose des fonctionnalités de Web Parts base au moment de l’exécution. Fait également référence à la page le `TextDisplayWebPart` contrôler au sein d’un `<asp:catalogzone>` élément, qui illustre la capacité de l’utilisateur final à passer en mode catalogue et ajouter des contrôles à la page. Cette page inclut également un `<asp:editorzone>` élément, ce qui permet aux utilisateurs de modifier les contrôles contenus dans le `<asp:webpartzone>` lorsque la page est en mode édition. Près du haut de la page sont un `register` directive pour le contrôle personnalisé et un autre pour le contrôle utilisateur.  
  
 [!code-aspx-csharp[WebParts_WebPartDisplayMode_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/WebPartDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartDisplayMode_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/WebPartDisplayModevb.aspx#1)]  
  
 La troisième partie de l’exemple de code est un contrôle utilisateur qui permet aux utilisateurs de basculer les modes d’affichage sur une page Web. Enregistrez le code source pour ce contrôle dans un fichier nommé DisplayModeMenuCS.ascx ou DisplayModeMenuVB.ascx (selon la langue que vous utilisez pour l’exemple de code) et placez-le dans le même répertoire que la page Web. Pour plus d’informations sur les modes d’affichage et une description du code source dans ce contrôle, consultez la rubrique [procédure pas à pas : modification des Modes d’affichage sur une Page WebPart](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_WebPartDisplayMode_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPartDisplayMode_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/displaymodemenuvb.ascx#5)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez utiliser la **Mode d’affichage** modes d’affichage de contrôle de liste déroulante pour basculer vers différentes. Contrôles d’édition, sélectionnez **modifier** dans le contrôle de liste déroulante. Pour modifier un contrôle spécifique, exposez son menu d’actions verbales en cliquant sur la flèche bas dans la barre de titre du contrôle, puis en cliquant sur **modifier** dans le menu d’actions verbales. Lorsqu’un contrôle est en mode édition, les contrôles d’édition ajoutés à cette page permettent de modifier l’apparence et la disposition du contrôle modifié. Lorsque vous avez terminé, sélectionnez **Parcourir** dans le **Mode d’affichage** contrôle de liste déroulante pour retourner la page à une vue normale. Pour ajouter des contrôles à la page, basculez en mode de catalogue. Notez que vous pouvez utiliser la **Mode d’affichage** déroulante contrôle de liste, ou cliquez sur le bouton vers le bas de la page. Le code inline pour la `Button1_Click` méthode montre comment modifier par programmation les modes d’affichage. Lorsque vous êtes en mode de catalogue, vous pouvez ajouter personnalisé `TextDisplayWebPart` contrôle à la page.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Les développeurs peuvent dériver à partir de la <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> classe pour créer des modes d’affichage. Pour rendre un personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> disponible sur une page WebPart, vous devez également dériver de la <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classe et substituer sa <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" /> (méthode).</para>
    </block>
    <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
    <related type="Article" href="https://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668">Vue d’ensemble : Le jeu de contrôles WebPart</related>
    <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Modes d’affichage des pages WebPart</related>
    <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">Procédure pas à pas : Modification des Modes d’affichage sur une Page WebPart</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartDisplayMode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPartDisplayMode(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.WebPartDisplayMode : string -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="new System.Web.UI.WebControls.WebParts.WebPartDisplayMode name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom du mode d'affichage.</param>
        <summary>Initialise une valeur pour le nom du mode d'affichage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> objet n’est jamais créé, car la classe est abstraite. Au moment de l’exécution, le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> de contrôles utilise la <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> classe comme classe de base pour créer des objets pour chacun des modes d’affichage de la page.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Si vous dérivez de la <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> classe pour créer un mode d’affichage personnalisé, dans votre déclaration de classe, vous devez appeler le constructeur de base et lui passer une chaîne contenant le nom du mode d’affichage personnalisé.</para>
        </block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AllowPageDesign">
      <MemberSignature Language="C#" Value="public virtual bool AllowPageDesign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPageDesign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowPageDesign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPageDesign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowPageDesign : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur déterminant si les utilisateurs peuvent modifier la disposition d'une page WebPart lorsqu'elle est dans un certain mode d'affichage.</summary>
        <value>
          <see langword="true" /> si les utilisateurs peuvent modifier la disposition de la page ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AssociatedWithToolZone">
      <MemberSignature Language="C#" Value="public virtual bool AssociatedWithToolZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssociatedWithToolZone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AssociatedWithToolZone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AssociatedWithToolZone { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedWithToolZone : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si un certain mode d'affichage est associé à une classe dérivée de la classe <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />.</summary>
        <value>
          <see langword="true" /> si le mode d'affichage est associé à une classe <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’une page WebPart entre un mode d’affichage dont <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> propriété est définie sur `true`, le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle interprète ceci pour qu’une classe associée est dérivée de la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe et cette éléments d’interface utilisateur (IU) doivent être affichés. Par exemple, lorsqu’une page passe en mode édition, zones spéciales qui contiennent des éléments d’interface utilisateur pour la modification des contrôles WebPart apparaissent sur la page. Ce comportement est possible, car le <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> valeur de propriété sur le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> champ est défini sur `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Les classes qui dérivent de la <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> classe de base pour créer des modes d’affichage personnalisé doit substituer la <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" /> propriété afin de définir sa valeur.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(class System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEnabled(System::Web::UI::WebControls::WebParts::WebPartManager ^ webPartManager);" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : System.Web.UI.WebControls.WebParts.WebPartManager -&gt; bool&#xA;override this.IsEnabled : System.Web.UI.WebControls.WebParts.WebPartManager -&gt; bool" Usage="webPartDisplayMode.IsEnabled webPartManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartManager" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="webPartManager">Instance du contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> sur la page active.</param>
        <summary>Obtient une valeur indiquant si les utilisateurs peuvent personnaliser une page lorsqu'elle est dans un certain mode d'affichage.</summary>
        <returns>
          <see langword="true" /> si les utilisateurs peuvent personnaliser une page ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />. Cependant, si <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" /> a la valeur <see langword="true" />, et si la personnalisation est désactivée sur la page, la valeur par défaut est <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom d'un mode d'affichage.</summary>
        <value>Chaîne contenant le nom d'un mode d'affichage.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequiresPersonalization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPersonalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPersonalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPersonalization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPersonalization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPersonalization : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si un mode d'affichage particulier exige l'activation de la personnalisation.</summary>
        <value>Valeur Boolean indiquant si la personnalisation est requise. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ShowHiddenWebParts">
      <MemberSignature Language="C#" Value="public virtual bool ShowHiddenWebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHiddenWebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShowHiddenWebParts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHiddenWebParts { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowHiddenWebParts : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si les contrôles dont la propriété <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" /> a la valeur <see langword="true" /> doivent être affichés.</summary>
        <value>Valeur Boolean indiquant si les contrôles masqués doivent être affichés. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>