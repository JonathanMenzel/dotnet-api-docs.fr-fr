<Type Name="UnauthorizedWebPart" FullName="System.Web.UI.WebControls.WebParts.UnauthorizedWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1958c8fefd901e75fe32b6c160a12dc99bd597d" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51871078" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnauthorizedWebPart : System.Web.UI.WebControls.WebParts.ProxyWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UnauthorizedWebPart extends System.Web.UI.WebControls.WebParts.ProxyWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnauthorizedWebPart&#xA;Inherits ProxyWebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnauthorizedWebPart sealed : System::Web::UI::WebControls::WebParts::ProxyWebPart" />
  <TypeSignature Language="F#" Value="type UnauthorizedWebPart = class&#xA;    inherit ProxyWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ProxyWebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet de créer un objet d’espace réservé chaque fois que la méthode <see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> du contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> retourne <see langword="false" /> pour un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le jeu de composants WebPart fournit un mécanisme d’autorisation pour déterminer si les <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles peuvent être ajoutés à une page. Les développeurs peuvent éventuellement assigner une chaîne arbitraire pour le <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle ajoute des contrôles à une page, il vérifie cette valeur de filtre aux critères définis par le développeur, à l’aide de la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> méthode et retourne `false` si un contrôle n’est pas autorisé.  
  
> [!NOTE]
>  Ce mécanisme fonctionne également avec les contrôles serveur et les contrôles utilisateur qui sont placés dans <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> de zones, étant donné que ces contrôles sont encapsulés dans un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objet en cours d’exécution et cet objet hérite les <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété.  
  
 Quand un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle n’est pas autorisé, le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle les insertions un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle dans l’arborescence de contrôle de la page à la place le contrôle non autorisé. Un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle dans l’arborescence du contrôle réserve la position du contrôle non autorisé dans la page et empêche toutes les données de personnalisation qu’un utilisateur peut avoir précédemment appliqués à la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle perte.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle n’est jamais affiché sur une page dans laquelle il est inséré et n’apparaît pas dans le code source pour la page rendue. Les développeurs peuvent vérifier sa présence dans l’arborescence de contrôle de page en vérifiant la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> propriété de la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle.  
  
 La première partie de l’exemple de code est personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle qui substitue le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29> méthode pour créer des critères d’autorisation personnalisés. N’importe quel <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qui a son <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> une valeur spécifique, ou tout contrôle qui n’a aucune valeur assignée à la propriété, la valeur de propriété sera autorisée, et les contrôles ne respectant ne pas ces critères ne sont pas autorisés.  
  
 [!code-csharp[WebParts_UnauthorizedWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_UnauthorizedWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/VB/MyManagerAuthorize.vb#2)]  
  
 La deuxième partie de l’exemple de code est la page Web qui héberge personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Il existe trois contrôles serveur statiques déclarées dans le `<asp:webpartzone>` élément. Bien que ces contrôles ne sont pas réellement <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles, ils sont encapsulés dans un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> objet en cours d’exécution, donc vous pouvez les traiter comme <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle et donc affecter des valeurs à leurs <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriétés. Notez que le <xref:System.Web.UI.WebControls.BulletedList> contrôle possède le filtre à la valeur qui doit lui permettre d’être autorisé, en fonction des critères dans personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Le <xref:System.Web.UI.WebControls.Label> contrôle a une valeur de filtre qui doit empêcher son autorisation. Le <xref:System.Web.UI.WebControls.Calendar> contrôle n’affecte pas une valeur à la propriété, donc il doit être autorisé par défaut.  
  
 [!code-aspx-csharp[WebParts_UnauthorizedWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_UnauthorizedWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_UnauthorizedWebPart_Overview/VB/IsAuthorizedVB.aspx#1)]  
  
 La troisième partie de l’exemple de code est un paramètre que vous devez ajouter dans le fichier Web.config pour activer l’exportation des fichiers de description des composants WebPart. Assurez-vous d’avoir un fichier Web.config dans le même répertoire que la page Web pour cet exemple de code. Dans le `<system.web>` section, assurez-vous qu’il y a un `<webParts>` élément avec un `enableExport` attribut la valeur `true`, comme dans le balisage suivant.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Chargez la page dans un navigateur et notez que le <xref:System.Web.UI.WebControls.BulletedList> et <xref:System.Web.UI.WebControls.Calendar> contrôles sont rendus comme prévu, mais le <xref:System.Web.UI.WebControls.Label> contrôle n’est pas affiché, car il n’a pas été autorisé. En cliquant sur le **liste les contrôles WebPart** bouton provoque la <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle pour répertorier les ID de tous les contrôles dans son <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> collection. Notez que l’ID de la <xref:System.Web.UI.WebControls.Label> contrôle est répertorié, prouvant qu’un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle a été ajouté à l’arborescence de contrôle de page pour conserver sa place, même si l’étiquette n’est pas restitué dans la page.  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise des données de propriété pour une nouvelle instance d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A> constructeur, appelle dans deux de ses surcharges, constructeurs de base dans la <xref:System.Web.UI.WebControls.WebParts.ProxyWebPart> classe. Ces constructeurs chaque initialiser les données de propriété et créer une nouvelle instance d’un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ajout d’un contrôle <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles (et autres contrôles serveur ou utilisateur) à sa collection de contrôles, il vérifie chaque contrôle à l’aide de la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> (méthode). Si une instance de contrôle n’est pas autorisée, certaines valeurs de propriété à partir du contrôle (par exemple, son ID) sont affectées aux propriétés dans une nouvelle <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle et le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle est ensuite ajouté à l’arborescence du contrôle de la page à la place le contrôle qui a échoué autorisation.  
  
 Un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle n’est jamais affiché dans une page et un utilisateur n’a aucun moyen de vérifier sa présence. Toutefois, un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle agit également comme un espace réservé, en conservant la position du contrôle d’origine dans l’arborescence du contrôle, ainsi que des données de personnalisation préexistant pour le contrôle d’origine. De cette façon, si un utilisateur a précédemment personnalisé un contrôle, il devient alors non autorisé pour une raison quelconque, et plus tard il est autorisé à nouveau, les données de personnalisation de l’utilisateur peuvent être restaurées.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnauthorizedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnauthorizedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" Usage="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart webPart" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dont l'autorisation par le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> échoue.</param>
        <summary>Initialise une nouvelle instance d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> appelé lorsque l'autorisation d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> statique (ou un contrôle serveur ou utilisateur) échoue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A> constructeur accepte un contrôle statique `webPart` en tant que paramètre, où `webPart` a échoué une vérification d’autorisation. Un contrôle statique est un qui est déclaré dans le balisage d’une page Web, au lieu d’être ajoutés par programmation. Le constructeur retourne une nouvelle instance d’un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> contrôle, qui est ajouté à l’arborescence du contrôle de la page à la place de `webPart`. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnauthorizedWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string originalID, string originalTypeName, string originalPath, string genericWebPartID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnauthorizedWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart : string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" Usage="new System.Web.UI.WebControls.WebParts.UnauthorizedWebPart (originalID, originalTypeName, originalPath, genericWebPartID)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">Chaîne qui contient l'ID du contrôle serveur ou utilisateur d'origine ajouté à un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> pour participer à une application WebPart.</param>
        <param name="originalTypeName">Chaîne qui contient le nom du type du contrôle d'origine.</param>
        <param name="originalPath">Chaîne contenant le chemin d'accès virtuel relatif vers le contrôle utilisateur, si le contrôle d'origine est un contrôle utilisateur.</param>
        <param name="genericWebPartID">Chaîne contenant l'ID du <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> contrôle qui encapsule le contrôle serveur ou utilisateur d'origine.</param>
        <summary>Initialise une nouvelle instance d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" /> appelé lorsque l'autorisation d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dynamique (ou un contrôle serveur ou utilisateur) échoue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A> constructeur est appelé lorsqu’un dynamique <xref:System.Web.UI.WebControls.WebParts.WebPart> ou autre contrôle serveur ne parvient pas son contrôle d’autorisation. Un contrôle dynamique est un qui est ajouté à une page par programme ou par un utilisateur à partir d’un catalogue de composants WebPart des contrôles. Le <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A> constructeur retourne une nouvelle instance d’un <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart> doit remplacer le contrôle dynamique dont l’autorisation a échoué. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>