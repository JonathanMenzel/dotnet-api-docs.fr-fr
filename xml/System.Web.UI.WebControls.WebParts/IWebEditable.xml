<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef59f527b0adce9a9fe50deb742e3cea7d1bc248" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51900757" /></Metadata><TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Fournit une interface pour les développeurs pour spécifier les contrôles d'édition personnalisés associés à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface vous permet d’associer personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles à un contrôle serveur tels qu’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, un contrôle utilisateur ou un contrôle serveur personnalisé. Le <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles contenus avec un <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et cette zone avec ses contrôles d’édition fournit aux utilisateurs finaux une interface utilisateur (IU) permettant de modifier les propriétés, apparence et le comportement associé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface contient deux membres exposés. Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriété offre un moyen pour <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles pour obtenir une référence au contrôle serveur associé. Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode est utilisée pour créer une instance de chaque personnalisation <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle associé à un contrôle serveur et les retourne sous forme de collection.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface est déjà implémentée sur la base de <xref:System.Web.UI.WebControls.WebParts.WebPart> classe, bien que par défaut, cette implémentation n’associe pas personnalisés <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle avec la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe. Pour associer une dérivée <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles, vous pouvez remplacer le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer les méthodes de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, qui crée ensuite une instance de personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôler quand le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle en mode édition.  
  
 Cet exemple comporte quatre parties :  
  
-   Le code de la classe personnalisée.  
  
-   La page Web qui héberge le contrôle personnalisé.  
  
-   Un contrôle utilisateur qui bascule la page en mode édition.  
  
-   Description du fonctionne de l’exemple dans un navigateur.  
  
 La première partie de l’exemple de code est personnalisé `TextDisplayWebPart` classe. Notez que la classe dérive le <xref:System.Web.UI.WebControls.WebParts.WebPart> classe et implémente la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, en fournissant des implémentations spécifiques pour le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> (méthode) et le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriété. Notez également qu’imbriqué dans le `TextDisplayWebPart` classe est privé, personnalisé `TextDisplayEditorPart` classe qui dérive de la base de <xref:System.Web.UI.WebControls.WebParts.EditorPart> classe. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Pour une procédure pas à pas qui illustre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 La deuxième partie de l’exemple de code est une page Web qui héberge le contrôle personnalisé. Notez que même si un <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle est déclaré dans le balisage de la page, personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle pas besoin être référencé, car il peut être ajouté par programme en cours d’exécution.  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 La troisième partie de l’exemple de code est un contrôle utilisateur qui permet à un utilisateur de basculer la page en mode d’édition. Notez que le contrôle utilisateur est référencé dans la page Web d’hébergement. Pour obtenir une description complète de la création de ce contrôle utilisateur, consultez [procédure pas à pas : modification des Modes d’affichage sur une Page WebPart](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 Pour exécuter l’exemple de code, chargez la page Web d’hébergement dans un navigateur, ajoutez du texte dans la zone de texte, puis cliquez sur le **étiquette le contenu** bouton Mettre à jour l’étiquette dans le contrôle. Pour basculer la page en mode édition, sélectionnez **modifier** dans la liste déroulante contenant les modes d’affichage. Pour afficher l’interface utilisateur personnalisé `TextDisplayEditorPart` de contrôle, cliquez sur la flèche déroulante du menu verbes le `TextDisplayWebPart` contrôler, puis sélectionnez **modifier**. Dans l’interface utilisateur de modification, vous pouvez utiliser la liste déroulante qui contient les styles de police pour mettre à jour le style de texte de l’étiquette dans le `TextDisplayWebPart` contrôle. Vous devez cliquer sur **Browse Mode** dans la liste déroulante modes d’affichage à retourner la page en mode normal et confirmer que le texte dans l’étiquette est le style de police que vous avez sélectionné en mode édition.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Si vous souhaitez utiliser les contrôles serveur qui ne sont pas <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contrôles dans une application WebPart (autrement dit, si vous ajoutez ces contrôles à un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone), et si vous souhaitez associer personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contrôles avec ces contrôles de serveur, vous devez implémenter le <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interface. Dérivés <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contrôles ne doivent pas implémenter l’interface, car la base de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> classe déjà fait.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une collection de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personnalisés associés à un contrôle serveur qui implémente l'interface <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />.</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> qui contient la collection de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personnalisés associés à un contrôle serveur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode vous permet de créer une collection de tous les personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles associés à votre contrôle personnalisé, <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ou contrôle utilisateur et les retourner comme un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objet. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle accepte la collection et crée des instances de tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles lorsque le contrôle serveur Active le mode édition.  
  
 En général, vous implémentez cette méthode dans un personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle en substituant ses <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> (méthode). Dans la méthode, vous créez des instances de personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles que vous souhaitez associer à vos contrôles, ajoutez-les à un <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> de l’objet, puis revenez cet objet. La collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles sont ensuite affectées à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone.  
  
> [!NOTE]
>  N’importe quel <xref:System.Web.UI.WebControls.WebParts.EditorPart> qui est ajouté à la collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans une implémentation de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode doit avoir une valeur assignée à sa propriété ID, sinon une exception sera levée lorsque la collection est attribuée à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>propriété.  
  
   
  
## Examples  
 L’exemple de code suivant illustre une substitution de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Le code source complet requis pour exécuter l’exemple se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> rubrique Vue d’ensemble de la classe.  
  
 L’exemple de code contient les deux membres de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Notez que la substitution de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode crée un <xref:System.Collections.ArrayList> pour collecter un ou plusieurs personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle et utilise ensuite la liste pour créer le <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> objet.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Le <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> de l’objet qui le <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> méthode est retournée est en lecture seule et n’a aucune méthode accessible pour lui ajouter des contrôles individuels. Toutefois, dans la substitution ou l’implémentation de la méthode, vous pouvez créer un autre type de <see cref="T:System.Collections.ICollection" /> objet, tel qu’un <see cref="T:System.Collections.ArrayList" />, pour contenir tous les personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contrôle et passer au constructeur lorsque vous créez un nouveau <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> objet . Pour obtenir un exemple de code, consultez la section exemple.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence au contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, au contrôle utilisateur ou au contrôle personnalisé qui sera modifié par les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <value>Référence d'objet au contrôle associé à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriété offre un moyen pour <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles pour obtenir une référence aux contrôles serveur auxquels ils sont associés.  
  
 Bien que la propriété elle-même est en lecture seule, la référence d’objet qu’elle retourne permet <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles pour modifier les valeurs dans le contrôle serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> propriété peut être substituée dans une personnalisée <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Le code source complet requis pour exécuter l’exemple se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> rubrique Vue d’ensemble de la classe.  
  
 L’exemple de code substitue les deux membres de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface.  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Normalement, lorsque vous implémentez le <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propriété dans un contrôle serveur, vous retournez simplement une référence au contrôle serveur proprement dit. Dans le cas de la <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> classe, car elle encapsule un contrôle enfant afin qu’il puisse fonctionner comme un <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contrôler, son implémentation de la <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> propriété retourne une référence au contrôle enfant.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Pages de composants WebPart ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>