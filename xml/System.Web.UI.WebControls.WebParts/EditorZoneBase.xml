<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80d6ac7d5bcbffdea3a3f854e9a56c3ad973e8ed" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585435" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EditorZoneBase&#xA;Inherits ToolZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone" />
  <TypeSignature Language="F#" Value="type EditorZoneBase = class&#xA;    inherit ToolZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sert de classe de base pour tous les contrôles de zone qui agissent en tant que conteneurs pour des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> est une classe de zone spécialisée qui hérite de la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe et fournit un ensemble de comportements de base pour les zones dérivées qui contiennent des <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles. Il existe plusieurs autres types de <xref:System.Web.UI.WebControls.WebParts.ToolZone> classes ; pour plus d’informations, consultez la rubrique de vue d’ensemble de la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. Comme les autres zones outil, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones ne sont pas visibles lorsqu’une page est en mode de navigation normal ; ils sont visibles uniquement lorsqu’une page est en mode édition. Plus, comme les autres zones outil, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones peuvent contenir uniquement le type spécial de contrôles qu’ils ont été conçues pour contenir (dans ce cas, <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles).  
  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones fournissent une interface utilisateur spéciale pour les contrôles d’édition qu’elles contiennent. La plupart de ces éléments d’interface utilisateur sont communes à toutes les zones dans le jeu de composants WebPart. Pour obtenir une présentation détaillée des éléments d’interface communs dans des zones de composants WebPart, consultez la rubrique de présentation de classe pour la <xref:System.Web.UI.WebControls.WebParts.WebZone> classe.  
  
 Étant donné que la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe est abstraite, vous ne pouvez pas l’utiliser directement sur une page Web. Au lieu de cela, vous devez utiliser un contrôle qui hérite de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe et implémente le comportement. Vous pouvez utiliser la zone dérivée qui est fournie dans le jeu de composants WebPart, les <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle, ou vous pouvez dériver vos propres <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> contrôle.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe fournit une interface utilisateur commune (IU) pour contenir des contrôles spéciaux qui permettent aux utilisateurs finaux de modifier les propriétés, la disposition, l’apparence et autres attributs de <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles. Certaines propriétés qui s’appliquent à l’interface utilisateur font référence à des verbes, tels que les <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, et <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriétés. Les verbes sont des actions courantes effectuées par les utilisateurs sur une page et sont représentés dans l’interface utilisateur par les boutons, des liens, des éléments de menu ou d’autres éléments. Par exemple, lorsque les utilisateurs modifier les propriétés d’un contrôle, il peut cliquer un verbe appliquer pour enregistrer les modifications.  
  
 Plusieurs autres propriétés affectent le texte qui s’affiche à différents points dans l’interface utilisateur. Celles-ci incluent la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>, et <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A> propriétés.  
  
 Deux propriétés importantes fournissent des références aux contrôles connexes. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété est une collection de la <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles contenus dans la zone. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> propriété est une référence d’objet à un contrôle contenu dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>--qui peut être un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ou n’importe quel autre ASP.NET contrôle serveur, contrôle utilisateur ou contrôle personnalisé en cours de modification.  
  
 Enfin, le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> propriété fait référence à une instance d’un <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objet associé à la zone, et qui contient les périphériques des éléments d’interface (appelées chrome) telles que les styles de titre et de bordure pour les caractéristiques de style <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans la zone.  
  
 Un nombre de méthodes de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe sont spécialisées pour la gestion de l’édition d’autres contrôles. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> méthode modifie la page à partir du mode d’affichage de l’édition vers un mode de navigation normal. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> consiste pour créer le chrome (éléments d’interface utilisateur périphériques comme une bordure, les verbes, les icônes et un titre) qui entoure chaque <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle dans la zone. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> méthode est une méthode abstraite ; pour créer des instances de tous les classes dérivées de substituent le <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles contenus dans la zone. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> méthode peut être appelée par une classe dérivée si la collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans la zone change pour une raison quelconque par programmation, qui signale le recréer et mettre à jour la collection de la valeur de contrôles WebPart <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles. Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> méthode est utilisée pour définir la collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> des contrôles `null` passe lorsque les modifications de mode d’affichage du mode édition au mode de navigation. Enfin, le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> méthode est utilisée pour gérer l’événement lorsqu’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle entre ou quitte le mode modification. Par exemple, cette méthode est un emplacement pratique pour synchroniser les valeurs de propriété d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle avec les valeurs modifiables dans associé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant illustre plusieurs déclarative et utilise par programmation de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Étant donné que la classe est abstraite, les exemples de code utilisent dérivé <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe fournie avec le jeu de composants WebPart, illustre les propriétés et les méthodes qu’il hérite la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe.  
  
 L’exemple de code de quatre parties :  
  
-   Un contrôle utilisateur qui permet de modifier les modes d’affichage sur la page Web.  
  
-   Une page Web qui contient un <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle.  
  
-   Personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe qui présente quelques-unes du <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membres de classe.  
  
-   Description du fonctionne de l’exemple dans un navigateur.  
  
 Le code source pour le contrôle utilisateur provient d’une autre rubrique. Pour cet exemple de code fonctionne, vous devez obtenir le fichier .ascx pour le contrôle utilisateur à partir de la [procédure pas à pas : modification des Modes d’affichage sur une Page WebPart](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) rubrique et placer ce fichier dans le même dossier que la page .aspx de cet exemple de code.  
  
 La deuxième partie de l’exemple de code est une page Web qui contient une référence déclarative à un <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle. En haut de la page est une `Register` directive pour le contrôle utilisateur. La balise du contrôle utilisateur est déclarée dans la page avec un `<uc1:DisplayModeMenu>` élément. Notez que sous le `<asp:WebPartZone>` élément est un `<asp:EditorZone>` élément contenant <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle et a des balises et propriétés configurées pour déterminer son apparence et son comportement. La plupart du code dans la page illustre plusieurs utilisations par programme de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> propriétés et méthodes.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 La troisième partie de l’exemple de code est personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe qui montre comment travailler avec un nombre de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membres de classe. La classe personnalisée dérivée de <xref:System.Web.UI.WebControls.WebParts.EditorZone> afin qu’il peut être utilisé avec un modèle de zone dans le balisage déclaratif de la page Web. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code utilise la compilation dynamique ; Par conséquent, vous remarquerez que la `Register` directive au début de la page Web ne fait pas référence à un fichier d’assembly. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts_EditorZoneBase_Common#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** à partir de la liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des deux contrôles, puis cliquez sur **modifier** pour modifier le contrôle. Lorsque l’interface utilisateur de modification est visible, vous pouvez voir les effets des différents déclarative et utilise par programmation de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> membres de classe.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Si vous souhaitez développer une zone personnalisée pour l’hébergement <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contrôles, vous devez déterminer si vous souhaitez fournir la prise en charge du modèle de zone. Un modèle de zone est créé par les types qui implémentent la <see cref="T:System.Web.UI.ITemplate" /> de l’interface et n’est nécessaire si vous souhaitez permettre aux développeurs de page à l’aide de votre zone personnalisée pour faire référence à <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contrôles dans votre zone dans le balisage déclaratif d’une page Web. Si vous avez besoin de la prise en charge du modèle de zone, vous devez hériter de la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.  En revanche, si votre zone personnalisée et ses <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contrôles vont être autonomes, ils sont créés par programme sans aucune option pour les développeurs de page afin de spécifier des contrôles de façon déclarative dans un modèle de zone, puis vous pouvez hériter directement à partir de la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe. Si vous faites cela, il est essentiel que vous implémentez le <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> méthode afin que votre zone personnalisée fonctionne.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EditorZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise la classe pour qu'elle soit utilisée par une instance de la classe héritée. Ce constructeur peut être appelé uniquement par une classe héritée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’elle est appelée par une classe héritée, ce constructeur transmet un <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> de l’objet à le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle, ce qui permet à la page Afficher l’interface utilisateur (IU) de modification.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplyVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ ApplyVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'appliquer des modifications à un contrôle en mode édition.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'appliquer des modifications à un contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le verbe apply est référencé par le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriété sur un contrôle dérivé de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Le verbe appliquer enregistre les modifications apportées par un utilisateur final dans l’interface utilisateur (IU) de modification à un contrôle serveur qui est actuellement en cours de modification. Par défaut, le verbe apply s’affiche dans l’interface utilisateur comme un <xref:System.Web.UI.WebControls.Button> contrôle. Le type de bouton peut être une image, un lien ou un bouton réel ; Vous pouvez définir ceci pour tous les boutons de verbe dans une zone (pas pour les boutons individuels) en définissant la <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriété au niveau de la zone.  
  
 Le verbe apply est un contrôle de niveau zone, ce qui signifie que, bien qu’il peut y avoir plusieurs <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles, chaque modification d’une ou plusieurs propriétés pour le contrôle serveur qui est en mode édition, le verbe apply fonctionne de manière universelle pour appliquer toutes les modifications à partir de tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans la zone pour le contrôle serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriété de façon déclarative dans une page Web. Cet exemple personnalise le texte du verbe.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriété par programme, à l’aide d’un bouton bascule pour activer ou désactiver.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts_EditorZoneBase_Common#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque le <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification sont visibles, vous pouvez voir le bouton qui représente le verbe appliquer, puis cliquez sur le **activer/désactiver le verbe Apply** bouton pour activer ou désactiver.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CancelVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CancelVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CancelVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'annuler des modifications apportées à un contrôle en mode édition.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui permet à l'utilisateur final d'annuler des modifications apportées à un contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le verbe cancel est référencé par le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriété sur un contrôle dérivé de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Le verbe annuler annule les modifications apportées par un utilisateur final à un contrôle serveur dans l’interface utilisateur (IU) de modification. Par défaut, le verbe cancel s’affiche dans l’interface utilisateur comme un <xref:System.Web.UI.WebControls.Button> contrôle. Le type de bouton peut être une image, un lien ou un bouton réel ; Vous pouvez définir ceci pour tous les boutons de verbe dans une zone (pas pour les boutons individuels) en définissant la <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriété au niveau de la zone.  
  
 Quand un utilisateur annule des modifications, aucune des modifications dans le <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles sont appliqués au contrôle de serveur qui est en cours de modification. En outre, la page reste en mode édition, mais la <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles sont masqués et <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qui a été modifié n’est plus sélectionné. Cela permet à un utilisateur final de sélectionner un autre <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle à modifier sans avoir à modifier les modes d’affichage à nouveau.  
  
 Le verbe cancel est un contrôle de niveau zone, ce qui signifie que s’il peut exister plusieurs <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles, chaque modification d’une ou plusieurs propriétés pour le contrôle serveur qui est en mode édition, le verbe cancel fonctionne de manière universelle pour annuler toutes les modifications à partir de tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart>dans la zone.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriété de façon déclarative dans une page Web. Cet exemple personnalise le texte du verbe.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> propriété par programme, à l’aide d’un bouton bascule pour activer ou désactiver.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts_EditorZoneBase_Common#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque le <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification sont visibles, vous pouvez voir le bouton qui représente le verbe cancel, puis cliquez sur le **activer/désactiver le verbe Cancel** bouton pour activer ou désactiver.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="editorZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelée lorsqu'un utilisateur clique sur un verbe Close dans l'en-tête d'une zone, cette méthode met fin au processus d'édition des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> et rétablit le mode de navigation d'une page WebPart.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> méthode fournit une implémentation pour la méthode de base déclarée dans la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe. L’implémentation appelle simplement la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> (méthode), qui effectue les étapes nécessaires pour terminer le processus de modification.  
  
 Appel de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> méthode retourne la page en mode de navigation et annule toute modification apportée aux <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="editorZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée le jeu de contrôles enfants associé à une zone <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateEditorPartChrome () As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartChrome ^ CreateEditorPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome&#xA;override this.CreateEditorPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="editorZoneBase.CreateEditorPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une référence à un nouvel objet <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> utilisé pour le rendu des éléments d'interface utilisateur périphériques présents autour d'une zone <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <returns>Un <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> qui génère le rendu des éléments d'interface utilisateur périphériques pour la zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> méthode retourne un nouveau <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objet. Chrome inclut les éléments de l’interface utilisateur périphériques suivants qui entourent chacun <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle dans la zone : une bordure, une barre de titre, les éléments qui apparaissent dans la barre de titre, y compris les icônes facultatif, le texte du titre, un menu d’actions verbales ; et des éléments figurant dans la zone de pied de page d’un contrôle.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> méthode utilise retourné <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> pour créer le chrome autour de chaque objet <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> méthode peut être substituée dans une classe dérivée pour fournir une implémentation différente. Par exemple, vous pouvez créer une liste personnalisée <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> classe pour vous donner plus de contrôle sur le rendu et l’apparence de l’interface utilisateur. Si vous remplacez le <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> méthode dans une zone dérivée, vous pouvez créer vos <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> objet dans la méthode substituée.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZoneBase.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fournit une déclaration de méthode de base que des zones dérivées peuvent substituer pour gérer les détails de la création des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> présents dans une zone.</summary>
        <returns>Un <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> qui contient la collection des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> associés à la zone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> méthode ne fournit pas d’implémentation. Elle est destinée à être implémentée dans une classe dérivée et doit être utilisé pour créer une instance de la collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles contenus dans une zone, chaque fois que la page Web d’hébergement entre le mode édition. Le <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=nameWithType> méthode fournit un exemple d’implémentation de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Display As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Display { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Display : bool" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> est actuellement affiché.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> est actuellement affiché ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorPartChrome As EditorPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartChrome ^ EditorPartChrome { System::Web::UI::WebControls::WebParts::EditorPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorPartChrome : System.Web.UI.WebControls.WebParts.EditorPartChrome" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à l'instance de la classe <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> associée à la zone <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> qui contient des caractéristiques de style destinées aux éléments de chrome des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> d'une zone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> propriété fournit une référence à la <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> objet associé à une zone. Lorsque le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> est appelée, elle crée une instance de la <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> classe et cette instance est utilisé pour restituer des éléments d’interface (interface) (également appelés le chrome) l’utilisateur du périphérique pour tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> dans la zone.  
  
 Les éléments de chrome, une personne <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle inclut sa bordure et autres éléments dans sa zone d’en-tête, tels que les verbes, les icônes et le texte du titre, ainsi que sa zone de pied de page et ses éléments inclus.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditorParts As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::EditorPartCollection ^ EditorParts { System::Web::UI::WebControls::WebParts::EditorPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditorParts : System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de tous les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> contenus dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> qui contient tous les contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> d'une zone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété fournit une référence à une collection de tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> dans la zone. Il fait référence à la fois le <xref:System.Web.UI.WebControls.WebParts.EditorPart> fournies avec le jeu de composants WebPart et personnalisés des contrôles <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles qui sont ajoutés à la zone. Étant donné que la collection est en lecture seule, les développeurs qui souhaitent créer personnalisés <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles modification générale à des fins, ajoutez-les à la collection doivent substituer la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> (méthode).  
  
 Si vous concevez personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles pour modifier un spécifique <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), vous devez substituer les membres de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface--le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> (méthode) et le <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> , propriété dans le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. La raison de substituer ces membres consiste à activer votre <xref:System.Web.UI.WebControls.WebParts.WebPart> création personnalisée contrôle <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle et les ajouter à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> collection lorsque votre contrôle est en cours de modification et pour fournir les contrôles d’édition une référence d’objet pour le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qu’ils modifient. Si vous souhaitez ajouter un personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle à modifier un contrôle serveur qui n’hérite pas de la <xref:System.Web.UI.WebControls.WebParts.WebPart> (classe), vous devez implémenter la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> dans la classe d’interface comme vous le feriez pour un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
> [!NOTE]
>  Notez que toute <xref:System.Web.UI.WebControls.WebParts.EditorPart> qui est ajouté à la collection de <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans une implémentation de la <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> méthode doit avoir une valeur assignée à sa propriété ID, sinon une exception est levée lorsque la collection est assignée à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété par programmation. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre que le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété contient des références à tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles référencés de façon déclarative dans la page Web.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple de code accède par programme à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété et répertorie l’ID de chaque contrôle dans un <xref:System.Web.UI.WebControls.Label> contrôle.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts_EditorZoneBase_Common#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez cliquer sur le **afficher la Collection EditorParts** bouton pour répertorier les ID de tous le <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles référencés dans le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Un <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> qui est ajouté à la collection n'a pas de valeur assignée à sa propriété ID.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un message qui s’affiche quand une zone ne contient aucun contrôle.</summary>
        <value>Chaîne contenant le message qui s’affiche dans une zone vide. Une chaîne par défaut spécifique à la culture est fournie par le .NET Framework.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ErrorText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ErrorText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte d'un message d'erreur de niveau de zone à afficher dans la partie supérieure de l'interface utilisateur de modification.</summary>
        <value>Chaîne localisée qui contient le message d'erreur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A> propriété contient le texte du message d’erreur qui peut être affiché dans l’interface utilisateur si une erreur se produit lors du rendu des contrôles dérivés de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Le message d’erreur s’affiche en haut de la zone si une erreur se produit dans un de la personne <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles contenus dans la zone. En outre, individuel <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles peuvent afficher leurs propres messages d’erreur près du contrôle qui reçoit une erreur.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte de la zone d’en-tête d’une zone.</summary>
        <value>Chaîne qui contient le texte d’en-tête de la zone. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le texte dans un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> qui fournit des explications destinées aux utilisateurs finals.</summary>
        <value>Chaîne qui contient des instructions destinées aux utilisateurs finaux. Une valeur par défaut adaptée aux zones outil spécifiques est fournie par les classes <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> dérivées.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateEditorParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateEditorParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateEditorParts : unit -&gt; unit" Usage="editorZoneBase.InvalidateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Attribue à la collection des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> associés à une zone <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> une valeur <see langword="null" />, qui entraîne l'appel de la méthode <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> pour recréer la collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> méthode peut être appelée par les classes dérivées si la liste des <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles associés à un <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone a été modifiée pour une raison quelconque, et la classe dérivée doit obtenir une liste actualisée des <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles. La classe dérivée doit appeler <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>, qui définit la collection actuelle à `null`. La prochaine fois que le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> collection est accessible, le contrôle WebPart automatiquement appelle la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> méthode pour créer la collection mise à jour.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="editorZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">État enregistré précédemment.</param>
        <summary>Charge des informations d'état enregistrées précédemment pour une zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est principalement utilisée par l’infrastructure .NET Framework et n’est pas destinée à être utilisée directement depuis votre code. Toutefois, les développeurs de contrôles peuvent substituer cette méthode pour spécifier la manière dont un contrôle serveur personnalisé restaure son état d’affichage. Pour plus d’informations, consultez [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A> méthode substitue la méthode de base pour vérifier si la page est chargée parce qu’un verbe OK, annuler ou appliquer a été activé dans la zone. Dans ce cas, la méthode gère l’état associé à chaque scénario respectif.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La taille de l'objet <paramref name="savedState" /> n'est pas égale à la taille de l'objet d'état d'affichage actuel.</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OKVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ OKVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OKVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence à un objet <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui applique des modifications à un contrôle en mode édition, et masque l'interface utilisateur de modification.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> qui applique des modifications à un contrôle et masque l'interface utilisateur de modification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le verbe OK est référencé par le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriété sur un contrôle dérivé de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> classe. Il est semblable au verbe appliquer, dans la mesure où lorsqu’un utilisateur clique dessus, il applique les modifications apportées par l’utilisateur à un contrôle serveur. En outre, les contrôles d’édition sont masqués, la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qui a été modifié est n’est plus sélectionné (ce qui permet à l’utilisateur de modifier un autre contrôle), et la page reste en mode édition.  
  
 Par défaut, le verbe OK s’affiche dans l’interface utilisateur comme un <xref:System.Web.UI.WebControls.Button> contrôle. Le type de bouton peut être une image, un lien ou un bouton réel ; Vous pouvez définir ceci pour tous les boutons de verbe dans une zone (pas pour les boutons individuels) en définissant la <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> propriété au niveau de la zone.  
  
 Le verbe OK est un contrôle de niveau zone, ce qui signifie que s’il peut exister plusieurs <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles, chaque modification d’une ou plusieurs propriétés pour le contrôle serveur qui est en mode édition, le verbe OK fonctionne de manière universelle pour appliquer toutes les modifications de tous les <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans la zone et pour masquer tous les contrôles à l’exception de la zone proprement dite.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriété de façon déclarative et par programme. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La première partie de l’exemple de code montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> propriété de façon déclarative dans une page Web. Cet exemple personnalise le texte du verbe.  
  
 [!code-aspx-csharp[WebParts_EditorZoneBase_Common#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZoneBase_Common#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 La deuxième partie de l’exemple montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> par programme, à l’aide d’un bouton bascule pour activer ou désactiver.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts_EditorZoneBase_Common#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque le <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification sont visibles, vous pouvez voir le bouton qui représente le verbe OK, puis cliquez sur le **activée de désactiver bascule** bouton pour activer ou désactiver.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDisplayModeChanged (sender As Object, e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDisplayModeChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDisplayModeChanged : obj * System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="editorZoneBase.OnDisplayModeChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> qui déclenche l'événement <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />.</param>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> et détruit tous les contrôles enfants et <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> présents dans la zone en préparation pour une page Web, afin d'entrer en mode d'affichage d'édition ou d'en sortir.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> méthode fournit une implémentation pour la méthode de base dans la <xref:System.Web.UI.WebControls.WebParts.ToolZone> classe.  
  
 L’objectif principal de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> méthode consiste à préparer une page Web pour entrer ou quitter le mode d’affichage édition. La méthode détruit tous les contrôles contenus dans la zone et appelle ensuite la méthode de base, laquelle déclenche le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> événement dans le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> méthode dans une classe dérivée. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La zone Éditeur personnalisé dérive la <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe afin qu’il peut être utilisé avec un modèle de zone dans le balisage déclaratif de la page Web. La classe personnalisée substitue la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> méthode, en définissant la couleur d’arrière-plan de la zone à une couleur spécifique, puis appelle la méthode de base, qui détruit tous les enfants et <xref:System.Web.UI.WebControls.WebParts.EditorPart> en mode d’affichage de contrôles en vue d’entre ou sort d’édition.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts_EditorZoneBase_Common#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque la <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification (UI) sont visibles, vous pouvez voir que la zone présente la couleur d’arrière-plan spécifiée dans le code.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> méthode peut être substituée ou appelée par programme dans un contrôle de zone Éditeur personnalisée qui hérite de la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe ou la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="editorZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" /> et appelle la méthode <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> pour les éléments de chrome des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedWebPartChanged (sender As Object, e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedWebPartChanged(System::Object ^ sender, System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectedWebPartChanged : obj * System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="editorZoneBase.OnSelectedWebPartChanged (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> qui déclenche l'événement <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />.</param>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> et attribue à la collection <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> une valeur <see langword="null" /> dans la zone pour préparer l'entrée d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> en mode édition ou sa sortie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> méthode vous permet de fournir une gestion personnalisée pour l’événement qui se produit lorsqu’un individu <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle entre ou quitte le mode édition.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> méthode dans une classe dérivée. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La zone Éditeur personnalisé dérive la <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe afin qu’il peut être utilisé avec un modèle de zone dans le balisage déclaratif de la page Web. La classe personnalisée substitue le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> (méthode), définir la couleur d’arrière-plan du contrôle spécifique qui est en cours de modification, puis appelle la méthode de base.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts_EditorZoneBase_Common#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque le <xref:System.Web.UI.WebControls.WebParts.EditorZone> et modification de l’interface utilisateur (IU) sont visibles, vous pouvez voir que le contrôle sélectionné a la couleur d’arrière-plan spécifiée dans le code.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Le <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> méthode peut être substituée ou appelée par programme dans un contrôle de zone Éditeur personnalisée qui hérite de la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe ou la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> classe.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="editorZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" /> qui contient l'argument de l'événement.</param>
        <summary>Effectue les actions associées à l'un des verbes de zone ou déclenche un événement qui publie en retour vers le serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A> méthode exécute les actions respectives associées avec le verbe OK, annuler ou appliquer, si un d’eux a été activé dans l’interface utilisateur (IU). Sinon, elle déclenche un événement qui publie sur le serveur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu de la zone.</param>
        <summary>Génère le rendu de la zone via l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> méthode substitue la méthode de base à partir de la <xref:System.Web.UI.WebControls.WebControl> classe pour appeler le <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> méthode qui vérifie qu’un formulaire HTML est rendu pour le contrôle de zone au moment de l’exécution. Après la vérification, la méthode appelle ensuite la méthode de base pour restituer le contenu complet de la zone.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu du corps de la zone.</param>
        <summary>Substitue la méthode de base pour effectuer le rendu du corps d'une zone dérivé de la classe <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> méthode restitue la zone du corps d’une <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zone, qui est la principale zone de contenu entre les zones d’en-tête et pied de page et contient <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> méthode substitue la méthode de base dans le <xref:System.Web.UI.WebControls.WebParts.WebZone> classe afin de fournir un rendu spécialisé des attributs qui s’appliquent uniquement aux <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones. La méthode restitue une table qui contient tout le contenu du corps et de cette table, il définit des valeurs différentes en fonction des conditions différentes, notamment le mode d’affichage actuel de la page. S’il n’y a aucun contrôle de contenu, il affiche la valeur de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> méthode dans une classe dérivée. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La zone Éditeur personnalisé dérive la <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe afin qu’il peut être utilisé avec un modèle de zone dans le balisage déclaratif de la page Web. La classe personnalisée substitue la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> méthode, en ajoutant un élément HTML `<hr />` élément pour créer une ligne entre l’en-tête et le corps de la zone. Il appelle ensuite la méthode de base pour restituer le reste du contenu du corps de la zone.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts_EditorZoneBase_Common#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque la <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification (UI) sont visibles, vous pouvez voir la ligne créée entre l’en-tête et corps de la zone Éditeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="editorZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu du corps de la zone.</param>
        <summary>Génère le rendu des verbes qui s'appliquent au niveau de la zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> méthode restitue les verbes dont les actions s’appliquent à la zone entière : OK, Annuler et appliquer. Ces verbes sont référencés dans les <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, et <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> propriétés.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> méthode dans une classe dérivée. Pour obtenir le code complet requis pour exécuter l’exemple, consultez la section exemple de la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> rubrique Vue d’ensemble de la classe.  
  
 La zone Éditeur personnalisé dérive la <xref:System.Web.UI.WebControls.WebParts.EditorZone> classe afin qu’il peut être utilisé avec un modèle de zone dans le balisage déclaratif de la page Web. La classe personnalisée substitue la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> méthode, en ajoutant du texte à la valeur existante de la <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> propriété pour chacun des verbes de niveau de zone. Il appelle ensuite la méthode de base pour tous les verbes de rendu.  
  
 [!code-csharp[WebParts_EditorZoneBase_Common#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts_EditorZoneBase_Common#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 Lorsque vous chargez la page dans un navigateur, vous pouvez sélectionner **Mode d’édition** dans le contrôle de liste déroulante pour passer en mode édition. Vous pouvez cliquez sur le menu des verbes (la flèche vers le bas) dans la barre de titre de l’un des contrôles, puis cliquez sur **modifier** pour modifier le contrôle sélectionné. Lorsque la <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle et l’interface utilisateur de modification (UI) sont visibles, vous pouvez voir le texte a été modifié sur les boutons pour les verbes de niveau zone en bas de la zone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="editorZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les changements d’état d’affichage qui se sont produits après qu’une page a été republiée sur le serveur.</summary>
        <returns>Retourne l’état d’affichage actuel du contrôle de zone. Si aucun état d'affichage n'est associé à la zone, cette méthode retourne <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A> méthode appelle la méthode de base pour enregistrer l’état d’affichage, puis enregistre tout état d’affichage associé à l’appliquer, Annuler et OK verbes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="editorZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Effectue le suivi des modifications apportées à l’état d’affichage d’un contrôle de zone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A> méthode appelle d’abord la méthode de base pour suivre l’état d’affichage associé à une <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> de zone, puis entame le suivi d’état d’affichage pour l’appliquer, Annuler et OK verbes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartToEdit As WebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ WebPartToEdit { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebPartToEdit : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence au contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> en cours d'édition.</summary>
        <value>Un <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> actuellement en mode édition.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Seul <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle peut être modifié à la fois, et lorsqu’un contrôle est en mode édition, le <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> propriété fournit une référence à ce contrôle. Le contrôle référencé est le même que le contrôle qui est référencé par le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> propriété. Par conséquent, un contrôle qui est en cours d’édition est toujours sélectionné.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>La méthode protégée <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" /> propriété est accessible uniquement dans les classes dérivées, qui peuvent appeler cette propriété sur la base de <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> classe pour obtenir une référence d’objet du contrôle actuel en cours de modification.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      </Docs>
    </Member>
  </Members>
</Type>