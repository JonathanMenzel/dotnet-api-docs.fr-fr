<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7351aad8ec327543283c242fe6e0cf14309f77ce" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59743165" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit une interface de fournisseur pour connecter deux contrôles serveur à l'aide d'une table entière de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette interface est conçue pour être utilisée avec les connexions WebPart. Dans une connexion WebPart, deux contrôles serveur qui résident dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone établir une connexion et partagent des données avec un contrôle agissant comme consommateur et d’autre contrôle agissant en tant que fournisseur. Le mécanisme de partage des données dans une connexion WebPart est une instance d’interface, le fournisseur sert au consommateur au moyen d’une méthode de rappel. Pour établir une connexion, le consommateur et le fournisseur doivent les deux fonctionnent avec le même type d’interface pour partager des données. Si le consommateur ne reconnaît pas le type d’interface envoyé par le fournisseur, il est toujours possible de connecter les contrôles au moyen d’un transformateur (un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objet) qui se traduit par l’instance d’interface envoyée par le fournisseur dans un type que le consommateur reconnaît. Pour plus d’informations sur les connexions, consultez <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> et [vue d’ensemble des connexions de parties Web](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)).  
  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface est une interface de fournisseur incluse avec le contrôle WebPart défini comme une interface standard permettant de créer des connexions basées sur une table de données. Vous pouvez également créer des interfaces personnalisées à utiliser avec les connexions WebPart, mais dans de nombreuses applications Web pilotées par les données, il est utile de créer des connexions basées sur un champ commun (pour plus d’informations, consultez le <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface), ligne (pour plus d’informations, consultez le <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), ou une table à partir de la source de données. Dans une connexion par défaut, un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle agissant comme un fournisseur implémente la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> d’interface et de fournir une instance de l’interface aux consommateurs dans une méthode de rappel spéciale. Par exemple, le fournisseur peut implémenter une <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface pour une table qui contient les données de performances financières. Un autre <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle agissant comme un consommateur définirait une méthode spéciale pour recevoir l’instance d’interface et pourrait ensuite extraire les données et restituer un graphique pour afficher le résultat.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface possède deux membres exposés. Le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété retourne des informations de schéma sur la table de données encapsulées dans un <xref:System.ComponentModel.PropertyDescriptorCollection> objet. Le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> méthode déclare une méthode qu’un implémenteur (par exemple, un contrôle fournisseur) utilise pour récupérer des données de la table de l’instance d’interface lorsque la méthode de rappel est appelée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une connexion statique entre deux contrôles à l’aide de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. L’exemple de code comprend trois parties :  
  
-   Code source pour deux personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles qui peuvent établir une connexion en utilisant le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface, avec un contrôle agissant comme fournisseur et l’autre agissant comme consommateur.  
  
-   Une page Web qui héberge les contrôles et déclare la connexion statique dans le format de persistance.  
  
-   Une description de ce qui se passe lors de l’exécution de l’exemple de code.  
  
 La première partie de l’exemple de code est le code source pour les deux contrôles personnalisés. Tout d’abord est le code pour le fournisseur, qui implémente le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. Par souci de simplicité dans l’exemple, le fournisseur crée une table avec des données, plutôt que de se connecter à une base de données. Le `GetConnectionInterface` méthode sert de point de connexion du fournisseur, la méthode de rappel qui retourne l’instance d’interface au consommateur. Comme pour le consommateur, elle récupère l’instance d’interface à partir du fournisseur dans sa méthode nommée `SetConnectionInterface`, qui est marqué avec un `ConnectionConsumer` attribut. Après avoir récupéré l’instance de l’interface, le consommateur, dans son `OnPreRender` (méthode), appelle l’implémentation de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> méthode du fournisseur, pour récupérer les données réelles et l’écrire dans la page.  
  
 Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code utilise la compilation dynamique. Pour une procédure pas à pas qui montre comment compiler, consultez [procédure pas à pas : Contrôle serveur Web de développement et à l’aide d’un](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 La deuxième partie de l’exemple de code est la page Web qui déclare la connexion statique et héberge les contrôles. Près du haut de la page est un `Register` directive qui déclare l’espace de noms du code source contenu dans le répertoire App_Code. La connexion est déclarée à l’aide un `<asp:webpartconnection>` élément. Les contrôles consommateur et fournisseur personnalisés sont déclarés dans un `<zonetemplate>` élément au sein d’un `<asp:webpartzone>` élément, ce qui est nécessaire pour qu’ils puissent se connecter (elles doivent résider dans une zone qui hérite de la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> classe).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Chargez la page dans un navigateur. Le contrôle consommateur affiche les données fournies à partir de la table spécifiée, le fournisseur met à disposition via une instance de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Contrôles WebPart ASP.NET</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Vue d’ensemble des connexions de composants Web</related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> qui contient l'adresse d'une méthode qui reçoit les données.</param>
        <summary>Retourne les données de la table utilisée par l'interface comme base d'une connexion entre deux contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour récupérer les valeurs de table de données passées par l’interface. Le fournisseur implémente cette méthode, le consommateur l’appelle au point lorsque le consommateur est prêt à traiter ou à restituer des données.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’implémentation et l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> (méthode). L’exemple complet est présenté dans la vue d’ensemble de la classe pour le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. Le contrôle fournisseur implémente la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> méthode, en retournant les données dans la table spécifiée. Le contrôle consommateur appelle la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> méthode dans son `OnPreRender` (méthode), afin que la valeur des données peut être écrite dans la page.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reçoit les informations de schéma pour une table de données utilisée pour partager des données entre deux contrôles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> décrivant les données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fournit des informations de propriété sur les données dans un <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instance. Il existe un contrat implicite entre le schéma référencé par le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété et les données dans la table. Le contrat est que pour chaque <xref:System.ComponentModel.PropertyDescriptor> de l’objet dans le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété, vous pouvez appeler <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> sur un élément de données de la table pour obtenir la valeur dans une colonne ou une ligne de la table.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’implémentation et l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété. L’exemple complet est présenté dans la vue d’ensemble de la classe pour le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface. Le contrôle fournisseur implémente la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété. Puis, le contrôle consommateur, dans son `RenderContents` (méthode), les requêtes le <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propriété à récupérer des informations sur la table lorsqu’il écrit les données de table dans la page.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>