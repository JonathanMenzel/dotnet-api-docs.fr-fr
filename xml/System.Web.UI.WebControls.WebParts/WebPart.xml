<Type Name="WebPart" FullName="System.Web.UI.WebControls.WebParts.WebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="050a59f75a19b014fe7664bc0e3acc69cf2bcc4b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591553" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPart extends System.Web.UI.WebControls.WebParts.Part implements class System.Web.UI.WebControls.WebParts.IWebActionable, class System.Web.UI.WebControls.WebParts.IWebEditable, class System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebPart&#xA;Inherits Part&#xA;Implements IWebActionable, IWebEditable, IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPart abstract : System::Web::UI::WebControls::WebParts::Part, System::Web::UI::WebControls::WebParts::IWebActionable, System::Web::UI::WebControls::WebParts::IWebEditable, System::Web::UI::WebControls::WebParts::IWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebActionable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebEditable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebPart</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Sert de classe de base aux contrôles WebPart ASP.NET personnalisés, en ajoutant à la classe <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> de base des fonctionnalités, des propriétés d'interface utilisateur supplémentaires, la possibilité de créer des connexions et un comportement de personnalisation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez des contrôles avec des fonctionnalités de composants WebPart, vous avez deux options de base. Vous pouvez créer des contrôles personnalisés qui dérivent de la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe, ou vous pouvez créer ou utiliser d’autres contrôles serveur. Les contrôles ASP.NET existants, les contrôles serveur personnalisés et les contrôles utilisateur peuvent être attribuées aux fonctionnalités complètes de composants WebPart en les déclarant (ou en les ajoutant par programme à) un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> de la zone de contrôle, avec le résultat qu’ils sont encapsulés avec <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>des objets au moment de l’exécution et traité comme true <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles. Pour plus d’informations, consultez la documentation relative à la <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> classe. Pour la vitesse de développement et de réutilisation de code, l’à l’aide des contrôles serveur existants peut être une bonne option. Pour optimiser le contrôle par programmation sur le comportement et les fonctionnalités WebPart des contrôles, créer un contrôle personnalisé qui hérite de la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe est souvent la meilleure option.  
  
 Le résumé <xref:System.Web.UI.WebControls.WebParts.WebPart> classe hérite de la base de <xref:System.Web.UI.WebControls.WebParts.Part> de contrôle et fournit les éléments de base pour tous les <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles. La classe inclut un ensemble commun de propriétés qui affectent l’apparence de l’interface utilisateur. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>, et <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> chacune des propriétés spécifient si l’utilisateur d’une application Web est autorisé à interagir avec le contrôle de la partie de la manière indiquée par la propriété donnée nom. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>, et <xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> propriétés déterminent la taille, visibilité , l’apparence et le contenu (par exemple, un titre et une description) de prise en charge pour un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 La relation entre un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle son contexte dans les composants WebPart jeu est déterminé par les propriétés telles que <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>, qui contient une référence au contrôle associé <xref:System.Web.UI.WebControls.WebParts.WebPartManager> objet, et <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>, qui référence le <xref:System.Web.UI.WebControls.WebParts.WebZone> qui contient le contrôle. Il peut y avoir qu’un seul <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle par page et chaque instance d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle peut résider dans un seul <xref:System.Web.UI.WebControls.WebParts.WebZone> à la fois.  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle peut être placé en dehors d’une zone sur une page Web, mais dans ce cas, il fonctionne comme un contrôle serveur normal et perd presque toutes les fonctionnalités des composants WebPart.  
  
 Plusieurs autres propriétés importantes affectent des fonctionnalités uniques de <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété permet aux développeurs de définir une chaîne arbitraire qui peut être utilisée en tant que filtre au moment de l’exécution pour déterminer si un contrôle est ajouté à la page. Utilisée avec une fonctionnalité de gestion des rôles, le <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété fournit un mécanisme utile pour créer des vues basées sur des rôles d’utilisateur définis. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> propriété indique si, lors d’une exportation, toutes les données de propriété disponibles sur un contrôle est exporté, ou uniquement les données non sensibles. Cela permet aux développeurs de faire la distinction entre les données sensibles et les données qui ne sont pas, pour des raisons de sécurité. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> propriété retourne une référence à une instance d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, afin qu’un <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle puisse le modifier lorsque la page est en mode édition. Enfin, il existe de plusieurs propriétés qui indiquent l’état du contrôle par rapport au reste de la page. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> propriété indique si un contrôle est fermé (et donc ajouté à un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> objet), ou si elle est ouverte et disponible sur la page. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> propriété indique si un contrôle est un contrôle partagé (par opposition à un contrôle spécifique à l’utilisateur), ce qui signifie qu’il est visible pour tous les utilisateurs d’une page Web. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> propriété indique si un contrôle est actuellement contenu dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>-zone dérivée (tel que <xref:System.Web.UI.WebControls.WebParts.WebPartZone>). La valeur `false` indique le contrôle est à l’intérieur d’une zone et par conséquent a toutes les fonctionnalités WebPart. Le <xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> propriété indique si un contrôle est statique ou dynamique. Un contrôle statique est déclaré dans le balisage d’une page Web, tandis qu’un contrôle dynamique est ajouté par programme.  
  
 La <xref:System.Web.UI.WebControls.WebParts.WebPart> classe fournit également plusieurs méthodes qui déterminent ce qui se passe à différents points dans le cycle de vie du contrôle. Par exemple, le <xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A> et <xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> méthodes peuvent être substituées dans une classe dérivée pour fournir un contrôle par programmation sur le rendu du contenu d’un contrôle lors de l’événement qui correspond au nom de chaque méthode.  
  
 Les classes qui dérivent de <xref:System.Web.UI.WebControls.WebParts.WebPart> peut ajouter <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> des objets sur le <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> collection. Les verbes sont restitués dans un menu d’actions verbales, qui s’affiche dans la barre de titre d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> objets fournissent des éléments d’interface utilisateur simples pour des actions utilisateur courantes telles que le masquage ou la réduction du contrôle ou affichage de l’aide.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> méthode crée une collection de n’importe quel personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> les contrôles qui sont associés un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Les développeurs peuvent substituer cette méthode afin qu’elle crée des contrôles personnalisés conçus spécifiquement pour modifier leur <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. La méthode est appelée lorsqu’un utilisateur clique sur le verbe de modification sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler et à le référencer dans une page Web.  
  
 La première partie de l’exemple contient le code personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle nommé `TextDisplayWebPart`. Ce contrôle montre comment créer un simple personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle que le jeu de contrôles vous donne accès aux fonctionnalités des composants WebPart. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code suppose que vous compilez le code source dans un assembly, placez dans un sous-dossier Bin de votre application Web et référencez l’assembly avec un `Register` directive dans votre page Web. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 La deuxième partie de l’exemple indique comment référencer le `TextDisplayWebPart` contrôle dans une page Web ASP.NET. Notez que de nombreuses des différents <xref:System.Web.UI.WebControls.WebParts.WebPart> propriétés peuvent être attribuées de façon déclarative pour le contrôle personnalisé.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise la classe pour qu'elle soit utilisée par une instance de la classe héritée. Ce constructeur peut être appelé uniquement par une classe héritée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> constructeur initialise les valeurs par défaut pour plusieurs propriétés d’interface utilisateur, y compris les différents `Allow` propriétés qui déterminent les fonctionnalités du contrôle. Ces propriétés sont ensuite incorporées dans une instance de la classe héritée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un contrôle qui dérive de la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe hérite des valeurs de propriété par défaut définies dans la base de <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> constructeur, mais modifie ensuite la valeur d’une propriété dans le constructeur du contrôle dérivé.  
  
 La première partie de cet exemple contient le code personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle nommé `TextDisplayWebPart`. Ce contrôle montre comment créer un simple personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle que le jeu de contrôles vous donne accès aux fonctionnalités des composants WebPart. Notez que dans le constructeur du contrôle personnalisé, le `TextDisplayWebPart.AllowClose` est définie sur `false`, qui a pour effet d’empêcher les utilisateurs de fermer le contrôle sur une page Web. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code suppose que vous compilez le code source dans un assembly, placez dans un sous-dossier Bin de votre application Web et référencez l’assembly avec un `Register` directive dans votre page Web. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 La deuxième partie de l’exemple indique comment référencer le `TextDisplayWebPart` contrôle dans une page Web ASP.NET. Après avoir chargé la page dans un navigateur, si vous cliquez sur le menu d’actions verbales dans la barre de titre personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle, le verbe de fermeture est désormais désactivé, ce qui empêche les utilisateurs de fermer le contrôle.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowClose">
      <MemberSignature Language="C#" Value="public virtual bool AllowClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowClose" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un utilisateur final peut fermer un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> sur une page Web.</summary>
        <value>
          <see langword="true" /> si le contrôle peut être fermé sur une page Web ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un utilisateur ferme un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle sur une page Web, le contrôle n’est plus visible ou disponible sur la page. Le contrôle fermé est ajouté au catalogue de pages, une entité WebPart qui stocke une référence au contrôle. Si un développeur ajoute un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> contrôle à la page dans un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> (contrôle), les utilisateurs peuvent basculer la page en mode d’affichage catalogue, sélectionnez le contrôle fermé dans le catalogue de la page et l’ajouter à la page.  
  
> [!NOTE]
>  Un fermé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle peut être ajouté à une page, soit par programme ou par un utilisateur qui sélectionne le contrôle fermé à partir du catalogue de la page lorsque la page est dans le catalogue de mode d’affichage.  
  
 Fermeture d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle est différente de sa suppression. Un contrôle fermé peut être ajouté à une page, pendant un contrôle supprimé est définitivement supprimé. Pour plus d’informations sur la suppression de contrôles, consultez la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> (méthode). Fermeture d’un contrôle diffère également de masquage. Un contrôle masqué est toujours présent sur la page, toujours participe aux événements de cycle de vie de page et est masqué uniquement à partir de la vue de l’utilisateur, mais un contrôle fermé n’est pas encore rendu sur une page.  
  
 Statiques et dynamiques <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles (contrôles statiques sont déclarés dans le balisage d’une page, tandis que les contrôles dynamiques sont ajoutés par programmation) peuvent être fermés.  
  
 Si un développeur affecte le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> propriété `false`, un verbe close n’apparaît pas sur le contrôle et l’utilisateur n’est pas en mesure de fermer le contrôle.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment modifier le paramètre par défaut de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> propriété personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, afin qu’il ne peut pas être fermé.  
  
 La première partie de cet exemple contient le code personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle nommé `TextDisplayWebPart`. Notez que dans le constructeur du contrôle personnalisé, le `TextDisplayWebPart.AllowClose` est définie sur `false`, qui a pour effet d’empêcher les utilisateurs de fermer le contrôle sur une page Web. Cela signifie que le verbe de fermeture dans le menu de verbes du contrôle sera désactivé pour les utilisateurs. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code suppose que vous compilez le code source dans un assembly, placez dans un sous-dossier Bin de votre application Web et référencez l’assembly avec un `Register` directive dans votre page Web. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_General_TextDisplayPart#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_General_TextDisplayPart#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 La deuxième partie de l’exemple indique comment référencer le `TextDisplayWebPart` contrôle dans une page Web ASP.NET. Notez que dans le `<aspSample:TextDisplayWebPart>` élément qui référence le contrôle, vous pouvez également modifier la valeur de la propriété définie par le constructeur du contrôle. Pour que le contrôle puisse être fermé, ajoutez simplement un `AllowClose="true"` d’attribut à l’élément dans le balisage déclaratif.  
  
 [!code-aspx-csharp[WebParts_General_TextDisplayPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-aspx-vb[WebParts_General_TextDisplayPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="AllowConnect">
      <MemberSignature Language="C#" Value="public virtual bool AllowConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowConnect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique d'autres contrôles peuvent créer des connexions avec le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Valeur Boolean qui indique si des connexions peuvent être créées avec le contrôle. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de propriété peut être définie de manière déclarative dans le balisage de page, ou par programme.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowEdit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un utilisateur final peut modifier un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> par l'intermédiaire de l'interface utilisateur fournie par un ou plusieurs contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> peut être modifié ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour permettre aux utilisateurs finaux de modifier un <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> propriété doit être définie sur `true` (la valeur par défaut), et le mode d’affichage de la page doit être en mode édition. Modes d’affichage sont représentés par des champs dans le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Dans ce cas, le mode est <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>. Pour plus d’informations sur la page de modes d’affichage et comment les modifier, consultez le <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> vue d’ensemble de la classe.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> est définie sur `false` soit de façon déclarative ou par programme, les options d’édition sont limitées. L’uniquement les opérations d’édition possibles sont des modifications apportées à la mise en page, à l’aide un <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> contrôle ou autres opérations de base personnalisés <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles.  
  
 Pour obtenir un exemple qui utilise <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles dans les contrôles WebPart défini et montre comment activer la modification d’un contrôle personnalisé de composants WebPart, consultez [procédure pas à pas : création d’une Page WebPart](http://msdn.microsoft.com/library/e05b659c-d6da-46cb-b177-48efe55f2770).  
  
> [!IMPORTANT]
>  L’effet qui le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> a de propriété sur un contrôle comportement est également affecté par la portée de personnalisation de la page Web actuelle, et des contrôles WebPart dans cette page. Pour plus d’informations, consultez [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment modifier le paramètre par défaut de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> contrôler la propriété d’un composant WebPart, afin que le contrôle ne peut pas être modifié. Cet exemple suppose l’utilisation d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code utilise également un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowEdit#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowEdit#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/displaymodemenuvb.ascx#5)]  
  
 Dans le balisage déclaratif de la page Web, sur le `<aspSample:TextDisplayWebPart>` élément qui référence le contrôle, notez le `AllowEdit="false"` attribut. Bien que `true` est la valeur par défaut, l’attribut a été défini `false` dans le cadre de cet exemple. Charger la page dans un navigateur et d’utiliser le **Modes d’affichage** contrôle de liste déroulante pour modifier le mode d’affichage en mode édition. Ensuite, cliquez sur le menu d’actions verbales dans la barre de titre de la <xref:System.Web.UI.WebControls.WebParts.WebPart> de contrôle et notez que le verbe edit est manquant, car vous avez désactivé la modification sur le contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/alloweditCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/alloweditVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHide">
      <MemberSignature Language="C#" Value="public virtual bool AllowHide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHide" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowHide As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowHide { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'utilisateur final est autorisé à masquer un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> peut être masqué ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> propriété détermine si les utilisateurs peuvent modifier le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété. Dans le cas par défaut, lorsque la valeur de propriété est `true`, les utilisateurs peuvent modifier la valeur lorsque le contrôle est en cours de modification. Par défaut, les contrôles ne sont pas masqués et leur <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> valeur de propriété est `false`. Lorsqu’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle est modifié, si un utilisateur sélectionne une case à cocher pour masquer le contrôle (qui affecte le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété `true`), le contrôle ne sera plus visible lorsque la page rétablit le mode de navigation.  
  
 Les contrôles masqués sont différents des contrôles fermés, parce que le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété a une signification distincte dans le jeu de composants WebPart. Les contrôles fermés ne sont même pas restitués sur une page et ne pas participent aux événements de cycle de vie de page. En revanche, masqué <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles ne sont pas visibles aux utilisateurs, ils sont toujours restitués sur une page Web, sont toujours contenus dans une zone et peuvent toujours gérer des connexions avec d’autres <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles en tant que partie d’une application de composants WebPart.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment modifier le paramètre par défaut de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> propriété personnalisée pour les composants WebPart, afin que le contrôle personnalisé ne peut pas être masqué par un utilisateur. Cet exemple suppose l’utilisation de personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code utilise également un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowHide#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowHide#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/displaymodemenuvb.ascx#5)]  
  
 Dans le balisage déclaratif de la page Web, sur le `<aspSample:TextDisplayWebPart>` élément qui référence le contrôle, notez le `AllowHide="false"` attribut, ce qui empêche un utilisateur qui modifie le contrôle d’être en mesure de le masquer. Charger la page dans un navigateur et d’utiliser le **Mode d’affichage** contrôle de liste déroulante pour modifier le mode d’affichage en mode édition. Ensuite, cliquez sur le menu d’actions verbales dans la barre de titre de la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, puis cliquez sur le verbe de modification. Comme l’interface utilisateur (IU) d’édition s’affiche, vous pouvez voir que l’interface utilisateur pour modifier la <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété est maintenant désactivée, car vous définissez la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> valeur de la propriété `false`.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowHide#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/allowhidecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowHide#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/allowhidevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      </Docs>
    </Member>
    <Member MemberName="AllowMinimize">
      <MemberSignature Language="C#" Value="public virtual bool AllowMinimize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMinimize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMinimize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMinimize { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si l'utilisateur final peut réduire un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> peut être réduit ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> propriété, si la valeur `false`, empêche un utilisateur final de réduire le contrôle et l’interface utilisateur (IU) pour réduire le contrôle n’apparaît pas dans la barre de titre du contrôle. Dans la terminologie WebPart, lorsque la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> est définie sur `false`, le verbe de réduction n’apparaît pas dans le menu d’actions verbales du contrôle.  
  
 Lorsqu’un utilisateur réduit un contrôle, il réduit la taille du contrôle à une zone minimale qui affiche uniquement une partie de la barre de titre du contrôle et le titre.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment modifier le paramètre par défaut de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> propriété personnalisée pour les composants WebPart, afin que le contrôle ne peut pas être réduit par un utilisateur. Cet exemple suppose l’utilisation de personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Dans le balisage déclaratif de la page Web, sur le `<aspSample:TextDisplayWebPart>` élément qui référence le contrôle, Remarque la `AllowMinimize="false"` attribut, qui masque le verbe de réduction dans le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle du menu d’actions verbales et empêche un utilisateur d’être en mesure de réduire le contrôle. Charger la page dans un navigateur, cliquez sur le menu d’actions verbales sur le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Le verbe de réduction, ce qui devrait normalement être présent sur le menu des verbes, est masqué parce que vous l’avez désactivé dans le balisage déclaratif pour le contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowMinimize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/CS/allowminimizecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowMinimize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/VB/allowminimizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowZoneChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowZoneChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowZoneChange" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowZoneChange As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowZoneChange { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un utilisateur peut déplacer un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> entre des zones <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> peut être déplacé entre des zones ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> propriété `true`et une page Web est dans un mode d’affichage qui permet d’apporter des modifications de disposition (par exemple, modifier ou en mode Création), un utilisateur peut modifier la mise en page en déplaçant un contrôle vers un autre <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone sur la page. Si la propriété est définie `false`, un contrôle ne peut pas être déplacé entre des zones, mais peuvent toujours être déplacé dans sa zone actuelle.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment modifier le paramètre par défaut de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> contrôler la propriété d’un composant WebPart personnalisé, afin qu’un utilisateur final ne peut pas déplacer le contrôle vers une autre zone. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code utilise également un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowZoneChange#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_AllowZoneChange#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/displaymodemenuvb.ascx#5)]  
  
 Dans le balisage déclaratif de la Page Web, dans la deuxième `<aspSample:TextDisplayWebPart>` élément, notez le `AllowZoneChange="false"` attribut. Au moment de l’exécution, un utilisateur final peut déplacer le premier contrôle dans **WebPartZone2**, mais n’a ne pas le même avec le deuxième contrôle. Charger la page dans un navigateur et d’utiliser le **Mode d’affichage** contrôle de liste déroulante pour modifier le mode d’affichage en mode design. Essayez de faire glisser chaque le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles dans une autre zone et notez la différence de comportement basé sur les valeurs de leurs <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> propriétés.  
  
 [!code-aspx-csharp[WebParts_WebPart_AllowZoneChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/allowzonechangecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_AllowZoneChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/allowzonechangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFilter">
      <MemberSignature Language="C#" Value="public virtual string AuthorizationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AuthorizationFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthorizationFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne arbitraire pour déterminer si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est autorisé à être ajouté à une page.</summary>
        <value>Chaîne qui autorise un contrôle à être ajouté à une page Web. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le jeu de contrôles WebPart n’implémente pas un comportement par défaut pour le <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété. Toutefois, la propriété est fournie afin que vous pouvez affecter une valeur de chaîne arbitraire à personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ; cette propriété peut être vérifiée par le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôler pendant son <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> événement pour déterminer si le contrôle peut être ajouté à la page .  
  
 Dans certains cas, le <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété peut être utilisée avec la fonction de gestionnaire de rôles ASP.NET, afin que si un utilisateur est dans un rôle donné et si la valeur de chaîne du <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété répond à certaines conditions définies par le développeur, puis le contrôle peut être ajouté. Cette approche permet aux développeurs de créer des vues personnalisées d’une page basée sur une combinaison de rôles et d’autres critères d’autorisation qu’il spécifie.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété. Il montre comment définir un gestionnaire de méthode personnalisée pour le <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> événement, afin que le gestionnaire peut fournir un code de filtrage personnalisé pour la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> (méthode). Cet exemple est un moyen classique pour un développeur de pages fournir un scénario de filtrage et l’autorisation de <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles à ajouter à une page.  
  
 Dans le code de la page Web, notez que le `<asp:webpartmanager>` élément a le `OnAuthorizeWebPart` attribut avec le nom du Gestionnaire d’événements qui lui est affecté. Cette méthode vérifie si les contrôles sur la page ont leur <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> valeur de propriété `admin`et si tel est le cas, retourne `true`, ce qui signifie qu’ils seront autorisés et ajoutés à la page.  
  
> [!NOTE]
>  Notez que les contrôles qui n’ont pas de toute valeur affectée à la <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> propriété sont également ajoutés, car ils sont supposés ne pas pour faire partie d’un scénario de filtrage. Il s’agit d’une approche courante dans un scénario de filtrage : certains contrôles sont filtrés, et d’autres ne serait pas, car elles sont supposées être disponibles pour tous les utilisateurs.  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 Configuration d’utilisateurs dans les rôles étant dépasse le cadre de cette rubrique, cet exemple de code ne vérifie pas les rôles d’utilisateur dans le filtrage. Toutefois, le scénario de filtrage des contrôles en fonction des rôles d’utilisateur est susceptible d’être une des utilisations plus courantes de cette fonctionnalité de filtrage. Si vous disposez de rôles sur votre site, et que vous souhaitez vérifier les rôles d’utilisateur dans cette méthode pour filtrer les contrôles, la méthode ressemble à ce bloc de code suivant (par opposition à l’approche la plus simple dans l’exemple de code précédent qui n’utilise pas de rôles).  
  
```  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pour utiliser cette propriété, vous devez créer une personnalisée <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> de contrôle et substituer sa <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> (méthode) ou son <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" /> méthode pour gérer le contrôle de le <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> propriété.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URL d'une image qui représente un contrôle WebPart dans un catalogue de contrôles.</summary>
        <value>Chaîne qui représente l'URL d'une image, utilisée pour représenter le contrôle dans un catalogue. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir la <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> propriété pour un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, afin qu’une image s’affiche avec le contrôle dans un catalogue de contrôles. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code utilise également un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_CatalogIconImageUrl#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_CatalogIconImageUrl#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/displaymodemenuvb.ascx#5)]  
  
 Dans le balisage déclaratif de la page Web, notez le `<asp:CatalogZone>` élément. Sont imbriqués de plusieurs éléments, notamment un `<aspSample:TextDisplayWebPart>` élément. Ce jeu d’éléments permet personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle s’affiche dans un catalogue. Dans le balisage de la `<aspSample:TextDisplayWebPart>` élément, notez que le `CatalogIconImageUrl` attribut est assigné à une chaîne qui contient l’URL vers un fichier image. Charger la page dans un navigateur et d’utiliser le **Mode d’affichage** contrôle de liste déroulante pour modifier le mode d’affichage en mode catalogue. Puis utilisez l’interface utilisateur du catalogue (IU) pour ajouter des personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle à la page.  
  
 [!code-aspx-csharp[WebParts_WebPart_CatalogIconImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/catalogiconimageurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_CatalogIconImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/catalogiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le système de validation interne a déterminé que l'URL peut contenir des attaques de script.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ChromeState As PartChromeState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeState ChromeState { System::Web::UI::WebControls::WebParts::PartChromeState get(); void set(System::Web::UI::WebControls::WebParts::PartChromeState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si un contrôle Part doit s'afficher dans un état réduit ou normal.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle de pièce <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> valeur de propriété peut être normal ou réduit. La <xref:System.Web.UI.WebControls.WebParts.WebPart> classe substitue la propriété de base afin que les utilisateurs finaux peuvent personnaliser.  
  
 Pour obtenir un exemple de code qui utilise cette propriété, consultez la base de <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType ChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type de bordure qui encadre un contrôle WebPart.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle de pièce <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> propriété détermine le type de bordure qui entoure le contrôle. Les options sont afficher un titre uniquement, une bordure uniquement, un titre et une bordure, de ni ou l’option par défaut, qui utilise simplement la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> propriété.  
  
 La <xref:System.Web.UI.WebControls.WebParts.WebPart> classe substitue la propriété de base afin que les utilisateurs finaux peuvent personnaliser.  
  
 Pour obtenir un exemple de code qui utilise cette propriété, consultez la base de <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur ne fait pas partie des valeurs <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ConnectErrorMessage">
      <MemberSignature Language="C#" Value="public string ConnectErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectErrorMessage { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Permet l'affichage d'un message d'erreur pour les utilisateurs si des erreurs se produisent pendant le processus de connexion.</summary>
        <value>Chaîne qui contient le message d'erreur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contenu de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage%2A> propriété est fournie en interne par le jeu de composants WebPart.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une collection de contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personnalisés qui peuvent servir à modifier un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> lorsqu'il se trouve en mode édition.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> qui contient des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personnalisés associés à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les développeurs peuvent utiliser cette méthode pour créer des instances de personnalisés <xref:System.Web.UI.WebControls.WebParts.EditorPart> les contrôles qu’ils souhaitent associer un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. La méthode est appelée lorsqu’un utilisateur clique sur le verbe de modification sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
> [!NOTE]
>  Toute nouvelle instance d’un <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôle qui est créé dans cette méthode doit avoir une valeur assignée à sa propriété ID avant de pouvoir l’ajouter à la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> collection.  
  
 Pour obtenir un exemple de code qui utilise le <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> (méthode), consultez le <xref:System.Web.UI.WebControls.WebParts.EditorPart> vue d’ensemble de la classe.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une brève expression qui résume la fonction du contrôle Part, en vue d'une utilisation dans les info-bulles et les catalogues de contrôles Part.</summary>
        <value>Chaîne que résume brièvement les fonctionnalités du contrôle Part. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> propriété est généralement une chaîne qui est utilisée dans les catalogues qui fournissent des listes de contrôles part et comme une info-bulle dans la barre de titre du contrôle de la partie. Le contenu de la <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> propriété s’affiche dans une info-bulle lorsque vous placez le pointeur de la souris sur le texte du titre dans la barre de titre d’un contrôle de pièce. Le texte d’info-bulle est créé à partir de la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> , suivi d’un trait d’union, suivi par le <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> valeur de propriété.  
  
 Pour obtenir un exemple de code qui utilise cette propriété, consultez la base de <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> propriété.  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Direction As ContentDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ContentDirection Direction { System::Web::UI::WebControls::ContentDirection get(); void set(System::Web::UI::WebControls::ContentDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le sens horizontal vers lequel le contenu est acheminé dans le contrôle.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ContentDirection" /> qui indique le sens horizontal vers lequel le contenu sera acheminé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.UI.WebControls.WebParts.WebPart> classe remplace les valeurs de propriété de base afin que les utilisateurs finaux peuvent personnaliser la propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayTitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne qui contient le texte de titre complet affiché dans la barre de titre d'une instance du contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Chaîne qui représente le titre complet et affiché du contrôle. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> propriété retourne la valeur actuelle de la <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> propriété ou, si le contrôle ne possède pas de titre, une valeur calculée. La valeur calculée se compose d’une chaîne de ressource localisable pour les contrôles sans titre, et (s’il existe plusieurs contrôles dans la zone) un nombre basé sur l’index du contrôle dans la zone.  
  
 Personnalisée <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle où le <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> propriété a été substituée pour retourner une valeur de chaîne à utiliser comme un sous-titre, le <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> propriété est concaténée avec le sous-titre pour produire un titre complet.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> valeur de la propriété sert également partie d’une info-bulle qui apparaît lorsqu’un utilisateur positionne le pointeur de la souris sur la barre de titre d’un contrôle. L’info-bulle complète se compose de la <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> valeur, suivie d’un trait d’union, suivi par la valeur du contrôle <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="ExportMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportMode As WebPartExportMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartExportMode ExportMode { System::Web::UI::WebControls::WebParts::WebPartExportMode get(); void set(System::Web::UI::WebControls::WebParts::WebPartExportMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartExportMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si toutes, certaines ou aucune des propriétés d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, peuvent être exportées.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ne peut pas être exporté et sa <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> est définie sur <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>. Pour permettre l’exportation de toutes les propriétés pour le contrôle, définissez la <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> valeur <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>. Pour exporter uniquement certaines propriétés tout en empêchant l’exportation des propriétés qui contiennent des données sensibles, définissez la valeur de propriété <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>.  
  
 Pour exporter des descriptions de valeur de propriété pour un <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), les propriétés doivent également être marquées avec le `Personalizable` attribut dans les métadonnées pour le code source de la propriété. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>.  
  
> [!NOTE]
>  Pour activer la fonctionnalité d’exportation pour une application Web qui inclut les contrôles WebPart, dans le fichier Web.config pour votre application, vous devez ajouter un attribut à la `<webParts>` élément dans la `<system.web>` section, comme dans le balisage suivant.  
>   
>  `<webParts  enableExport="true">`  
>   
>  `</webParts>`  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> propriété. Notez que pour l’exportation exemple de code fonctionne, vous devez également mettre à jour votre fichier Web.config en ajoutant l’attribut `enableExport="true"` à la `<webParts>` élément, comme indiqué dans la section Notes.  
  
 La première partie de cet exemple contient le code pour un contrôle nommé `TextDisplayWebPart`. Ce contrôle est le même que le contrôle personnalisé se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe vue d’ensemble, à ceci près qu’il ajoute un `Personalizable` attribut le `TextDisplayWebPart.ContentText` propriété pour la propriété peut être exportée. Notez que la déclaration d’attribut contient une valeur de `true` pour la `isSensitive` paramètre, c'est-à-dire que la propriété est marquée comme des données sensibles pour l’exportation à des fins. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code suppose que vous compilez le code source dans un assembly, placez dans un sous-dossier Bin de votre application Web et référencez l’assembly avec un `Register` directive dans votre page Web. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPart_ExportMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_WebPart_ExportMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/textdisplaywebpart.vb#2)]  
  
 La deuxième partie de l’exemple indique comment référencer le `TextDisplayWebPart` contrôle dans une page Web ASP.NET. Notez que dans le balisage déclaratif, le <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> valeur de propriété est définie sur <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, ce qui signifie que que même les propriétés avec des valeurs sensibles seront exportées.  
  
 [!code-aspx-csharp[WebParts_WebPart_ExportMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/exportmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_ExportMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/exportmodevb.aspx#1)]  
  
 Charger la page Web dans un navigateur et dans le menu des verbes le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, cliquez sur le verbe d’exportation et suivez les instructions pour exporter un fichier de description contenant des données d’état et de propriété du contrôle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" />.</exception>
        <exception cref="T:System.InvalidOperationException">Le contrôle est déjà chargé et sa portée de personnalisation a la valeur de la portée <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="HasSharedData">
      <MemberSignature Language="C#" Value="public bool HasSharedData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSharedData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasSharedData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSharedData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSharedData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contient des données de personnalisation partagées qui lui sont associées.</summary>
        <value>Valeur Boolean qui indique si le contrôle contient des données de personnalisation partagées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fait référence à des données de personnalisation qui sont définies sur un contrôle dans la portée partagée, ce qui signifie que les données de personnalisation qui sont visible par tous les utilisateurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUserData">
      <MemberSignature Language="C#" Value="public bool HasUserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasUserData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasUserData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasUserData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contient des données de personnalisation de l'utilisateur qui lui sont associées.</summary>
        <value>Valeur Boolean qui indique si le contrôle contient des données de personnalisation de l'utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété fait référence aux données de personnalisation qui sont spécifique à l’utilisateur, en d’autres termes, les paramètres spécifiques par un utilisateur sur un contrôle qui sont visibles uniquement à l’utilisateur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la hauteur d'une zone.</summary>
        <value>Objet <see cref="T:System.Web.UI.WebControls.Unit" /> indiquant la hauteur de <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />. Le type par défaut de <see cref="T:System.Web.UI.WebControls.Unit" /> est pixels, comme l'indique la propriété <see cref="P:System.Web.UI.WebControls.Unit.Type" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Modes de rendu d’Internet Explorer peuvent affecter la hauteur d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle et la hauteur de la zone qui le contient. Internet Explorer affiche les pages Web en mode de compatibilité (compatibilité descendante avec les versions de navigateur antérieures) ou en mode standard (déterminé par la présence d’un `DOCTYPE` déclaration dans la page). Pour plus d’informations sur ces modes, consultez DHTML [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) propriété.  
  
 Dans certaines circonstances quand Internet Explorer affiche une page en mode standard, il ne redimensionne pas les cellules des tableaux, même lorsque le code HTML d’une cellule est `<td height="100%">`. Par conséquent, <xref:System.Web.UI.WebControls.WebParts.WebPart> rendus des contrôles et leur zone conteneur, afin que les contrôles ne prennent pas toute la hauteur de la zone.  
  
 Lorsqu’Internet Explorer est en mode standard, les contrôles ne sont pas rendent pour s’étendre sur toute leur hauteur dans les cas suivants :  
  
-   Une zone <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> est définie sur <xref:System.Web.UI.WebControls.Orientation.Vertical> et vous définissez explicitement la hauteur de la zone. Pour activer les contrôles remplir toute la hauteur de la zone, ne spécifiez pas la hauteur d’une zone orientée horizontalement.  
  
-   Une zone <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> est définie sur <xref:System.Web.UI.WebControls.Orientation.Horizontal> et vous ne définissez pas explicitement la hauteur de la zone ou des contrôles contenus. Pour activer les contrôles remplir toute la hauteur de la zone, définissez la hauteur de la zone ou des contrôles dans une zone orientée verticalement.  
  
   
  
## Examples  
 L’exemple de code suivant illustre le problème de rendu qui affecte la hauteur de <xref:System.Web.UI.WebControls.WebParts.WebPart> des contrôles dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>.  Pour illustrer ce problème, vous devez exécuter la page dans Internet Explorer.  
  
 Notez que la zone est disposé horizontalement et que la hauteur de la zone et les contrôles qu’il contient n’est pas définie explicitement.  Le résultat est que, dans le <xref:System.Web.UI.WebControls.WebParts.WebPartZone>le plus court <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ne remplit pas la hauteur de la zone lors du rendu.  Toutefois, si vous supprimez le `DOCTYPE` déclaration de la page et l’exécution de la page à nouveau, le problème ne se produit pas, car désormais le navigateur ne sera pas restituer la page en mode standard.  
  
 [!code-aspx-csharp[WebParts_WebPart_Height#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Height/CS/Defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Height#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Height/VB/Defaultvb.aspx#1)]  
  
 Pour voir comment la solution de contournement (décrite dans la section Notes) fonctionne, essayez d’ajouter un `height` d’attribut pour le `<asp:webpartzone>` élément, tout en conservant la `DOCTYPE` déclaration dans la page.  Vous pouvez utiliser le code suivant pour ajouter l’attribut à la balise :  
  
 `Height="200px"`  
  
 Exécutez la page et désormais les deux <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles s’ajustent à la hauteur déclarée explicitement de la zone.  
  
 Vous pouvez également faire des essais avec cet exemple de code pour observer le problème d’affichage en hauteur dans l’autre scénario qui se produit lorsque la zone <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> a la valeur <xref:System.Web.UI.WebControls.Orientation.Vertical>.  Supprimer existants `LayoutOrientation` attribut et sa valeur à partir de la `<asp:webpartzone>` élément, ce qui provoque l’orientation de la zone Rétablir l’orientation verticale par défaut.  Définissez l’attribut de hauteur pour le `<asp:webpartzone>` élément 200 pixels, que vous avez-fait ci-dessus, puis exécutez la page.  Hauteur de la zone recherche trop grande, et les contrôles ne sont pas dimensionnés proportionnellement à la hauteur de la zone.  Maintenant, supprimez l’attribut de hauteur et réexécutez la page.  Les contrôles affichent maintenant relative à la hauteur de la zone.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      </Docs>
    </Member>
    <Member MemberName="HelpMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpMode As WebPartHelpMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartHelpMode HelpMode { System::Web::UI::WebControls::WebParts::WebPartHelpMode get(); void set(System::Web::UI::WebControls::WebParts::WebPartHelpMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartHelpMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le type d'interface utilisateur utilisé pour afficher le contenu de l'aide pour un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> propriété pour déterminer comment un navigateur affichera le contenu de l’aide d’un contrôle. Le tableau suivant répertorie les effets des différents modes d’aide sur un navigateur lorsque aide contenu pour un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle s’affiche.  
  
|En mode d’aide|Comportement du navigateur|  
|---------------|----------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal>|Ouvre une fenêtre distincte, si le navigateur intègre cette fonctionnalité. Un utilisateur doit fermer la fenêtre avant de rétablir la page WebPart.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modeless>|Ouvre une fenêtre distincte, si le navigateur intègre cette fonctionnalité. Un utilisateur ne doit pas fermer la fenêtre avant de rétablir la page Web.|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>|Remplace la page WebPart dans la fenêtre du navigateur.|  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> propriété pour afficher l’aide d’un contrôle dans la même fenêtre de navigateur. La première partie de cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code inclut également une page HTML qui contient le contenu d’aide fictif pour le `TextDisplayWebPart` contrôle. Pour cet exemple fonctionne, vous devez enregistrer le code suivant dans un fichier appelé Textwebparthelp.htm et placez-le dans le même répertoire de votre site en tant que la page .aspx.  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 La dernière partie de l’exemple est une page Web qui indique comment référencer le `TextDisplayWebPart` contrôle. Notez que dans le balisage déclaratif, le <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> valeur de propriété est définie sur <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, et le code définit également la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> propriété le nom du fichier HTML qui contient le contenu d’aide. Chargez la page dans un navigateur, puis cliquez sur le verbe help dans le menu des verbes le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_HelpMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_HelpMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée n'est pas l'une des valeurs <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HelpUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URL d'un fichier d'aide pour un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Chaîne qui représente l'URL d'un fichier d'aide. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour activer un menu de verbes contenant un verbe help dans le menu des verbes un <xref:System.Web.UI.WebControls.WebParts.WebPart> (contrôle), vous devez fournir une valeur pour le <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> propriété. Le mode dans lequel le contenu d’aide s’affiche dans le navigateur est déterminé par la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> propriété.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> propriété. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code inclut également une page HTML qui contient le contenu d’aide fictif pour le `TextDisplayWebPart` contrôle. Pour cet exemple fonctionne, vous devez enregistrer le code suivant dans un fichier appelé Textwebparthelp.htm et placez-le dans le même répertoire de votre site en tant que la page .aspx.  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 La dernière partie de l’exemple est une page Web qui indique comment référencer le `TextDisplayWebPart` contrôle. Notez que dans le balisage déclaratif, le <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> valeur de propriété est définie sur <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, et le code définit également la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> propriété le nom du fichier HTML qui contient le contenu d’aide. Chargez la page dans un navigateur, puis cliquez sur le verbe help dans le menu des verbes le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_HelpMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_HelpMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le système de validation interne a déterminé que l'URL peut contenir des attaques de script.</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Hidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Hidden { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> s'affiche sur une page Web.</summary>
        <value>
          <see langword="false" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> s'affiche sur une page Web ; sinon, <see langword="true" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle masqué demeure dans sa zone, est restitué en fait sur sa page et participe page phases du cycle de vie tels que le `PreRender` de phase, même s’il n’est pas visible dans un navigateur. Cela est différent de <xref:System.Web.UI.WebControls.WebParts.WebPart> les contrôles sont fermés, les contrôles fermés sont même pas restitués sur une page, tandis que les contrôles masqués sont restitués et activés dans les applications WebPart, bien qu’ils pas visibles aux utilisateurs. Le masque de l’ensemble de composants WebPart la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle en définissant sa feuille de style en cascade sur la valeur `display:none`.  
  
 Même si le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> pour un contrôle est définie sur `true`, le contrôle s’affiche toujours si le mode d’affichage actuel sur la page autorise les contrôles masqués à afficher. Par exemple, modifiez le mode permet des contrôles masqués à afficher, afin que les utilisateurs peuvent modifier les. Lorsque les contrôles masqués sont visibles dans certains modes d’affichage, le titre du contrôle affiche une chaîne indiquant que le contrôle est en état masqué.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle est défini sur `false`, qui est la valeur par défaut, le contrôle est affiché sur la page. Notez que si le <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> est définie sur `false`, les utilisateurs finaux ne sont pas autorisés à modifier le <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> valeur de propriété.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> propriété personnalisée pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Notez que dans la page Web, dans le balisage déclaratif pour le `<aspSample:TextDisplayWebPart>` élément, le `Hidden` attribut a la valeur `true`. Le `TextDisplayWebPart` contrôle n’apparaît pas si la page est chargée dans un navigateur. Toutefois, le contrôle est toujours présent sur la page et dans sa zone, et il peut toujours participer aux connexions avec d’autres <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle si vous avez créé ces connexions.  
  
 [!code-aspx-csharp[WebParts_WebPart_Hidden#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Hidden/CS/hiddencs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Hidden#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Hidden/VB/hiddenvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="ImportErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ImportErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImportErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImportErrorMessage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un message d'erreur qui est utilisé si des erreurs se produisent durant l'importation d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Chaîne qui contient le message d'erreur. La valeur par défaut est un message d'erreur standard fourni par le jeu de contrôles WebPart.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> propriété vous permet de définir un message d’erreur personnalisé qui s’affiche si une erreur se produit lorsqu’un utilisateur essaie d’importer le fichier de description d’un contrôle part dans un catalogue de contrôles WebPart. Vous pouvez définir la propriété de façon déclarative sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, en ajoutant le `ImportErrorMessage` attribut au sein de la balise d’ouverture du contrôle et de lui assigner une chaîne de message d’erreur. Vous pouvez également définir la valeur de propriété par programmation.  
  
 Pour obtenir un exemple de code complet qui montre comment exporter et d’importer. Fichiers de description du composant WebPart pour <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles, qui inclut l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> propriété, consultez la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> classe.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est actuellement fermé sur une page WebPart.</summary>
        <value>Valeur Boolean qui indique si le contrôle est fermé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> n’est pas rendu sur la page de contrôle est fermé et ne participe pas aux événements de page. Toutefois, il est conservée par l’application de composants WebPart dans un catalogue de pages et peut être ajouté à la page par les utilisateurs si l’interface utilisateur (IU) est fourni. Pour plus d'informations, consultez <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est partagé, ce qui signifie qu'il est visible par tous les utilisateurs d'une page WebPart.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> a une visibilité utilisateur partagée sur une page Web ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle WebPart partagé est visible par tous les utilisateurs d’une page Web. L’inverse d’un contrôle partagé est un contrôle par l’utilisateur, qui est spécifique à l’utilisateur et est visible uniquement par l’utilisateur qui a ajouté à une page.  
  
 Si un contrôle dynamique est ajouté pendant que l’utilisateur consulte la page dans la portée de personnalisation partagée, le contrôle sera partagé. Si le contrôle est ajouté quand l’utilisateur est dans la portée de personnalisation utilisateur, la <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> valeur de propriété pour ce contrôle sera `false`.  
  
 Pour plus d’informations sur partagé et les contrôles utilisateur, consultez [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant illustre l’utilisation de la <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> propriété personnalisée pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Lorsque vous chargez la page Web dans un navigateur cliquez sur le **vérifier le partage** bouton, le code vérifie le <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> propriété sur le `TextDisplayWebPart` et la valeur de la propriété sont `true`, car le contrôle est référencé comme un contrôle statique dans le balisage déclaratif de la page.  
  
 [!code-aspx-csharp[WebParts_WebPart_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_IsShared/CS/issharedcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_IsShared/VB/issharedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      </Docs>
    </Member>
    <Member MemberName="IsStandalone">
      <MemberSignature Language="C#" Value="public bool IsStandalone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStandalone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStandalone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStandalone { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est autonome, ce qui signifie qu'il n'est pas contenu dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <value>
          <see langword="true" /> si le contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> n'est pas contenu dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est un contrôle statique, ce qui signifie que le contrôle est déclaré dans la balise d'une page WebPart et qu'il n'est pas ajouté par programme à la page.</summary>
        <value>Valeur Boolean qui indique si le contrôle est statique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Statique <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle est une tâche qui est déclaré dans le balisage d’une page WebPart. Elle s’oppose à une dynamique <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, qui est ajouté soit par programme ou par un utilisateur en sélectionnant le contrôle à partir d’un catalogue de contrôles au moment de l’exécution.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected internal virtual void OnClosing (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnClosing(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnClosing (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnClosing(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Permet aux classes dérivées de fournir une gestion personnalisée lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est fermé sur une page WebPart.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode dans la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe de base ne contient pas d’implémentation. Dérivés <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles peuvent substituer la méthode pour fournir une gestion personnalisée lorsque le contrôle est fermé. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle appelle automatiquement la <xref:System.Web.UI.WebControls.WebParts.WebPart.OnClosing%2A> méthode si vous fournissez une implémentation dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnConnectModeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnConnectModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnConnectModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnConnectModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnConnectModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Permet aux classes dérivées de fournir une gestion personnalisée lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> commence ou termine le processus de connexion à d'autres contrôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode dans la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe de base ne contient pas d’implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Un contrôle dérivé doit substituer la <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" /> (méthode). Les développeurs peuvent déclencher des événements personnalisés ou exécuter d’autres actions. La méthode est appelée par le <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> contrôle lorsque le <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" /> et <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" /> méthodes sont appelées pour établir des connexions entre les contrôles.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDeleting (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDeleting(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDeleting (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDeleting(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Permet aux classes dérivées de fournir une gestion personnalisée lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> est supprimé définitivement d'une page WebPart.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode dans la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe de base ne contient pas d’implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Un contrôle dérivé doit substituer la <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" /> (méthode). Les développeurs peuvent déclencher des événements personnalisés ou exécuter d’autres actions. La méthode est appelée lorsque le <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" /> méthode est appelée.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnEditModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEditModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Permet aux classes dérivées de fournir une gestion personnalisée lorsqu'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> active ou désactive le mode édition.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode dans la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe de base ne contient pas d’implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Un contrôle dérivé doit substituer la <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" /> méthode et l’utilisation de la méthode substituée pour déclencher un événement personnalisé. Les développeurs peuvent déclencher des événements personnalisés ou exécuter d’autres actions. La méthode est appelée lorsque le <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" /> et <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" /> méthodes sont appelées pendant la modification.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPersonalizationDirty">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Définit un indicateur qui spécifie que les données de personnalisation ont changé pour un contrôle WebPart ou un contrôle serveur placé dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit un indicateur qui signale que les données de personnalisation ont changé pour l'instance de contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> en cours.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> méthode définit un indicateur qui signale que les données d’état de contrôle ont été modifiées (personnalisées) sur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle et que le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle doit par conséquent conserver les données de personnalisation pour le stockage à long terme.  
  
 Normalement le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> rend les modifications de personnalisation sur <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles sans que les développeurs d’appeler le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> (méthode). Mais il existe deux cas dans lesquels les développeurs ont besoin d’appeler cette méthode. Le premier cas est lorsque les données d’état de contrôle sont modifiées au cours d’un HTTP `GET` demande à une page. Par défaut, les modifications pour les données d’état de contrôle pendant une `GET` demande ne sont pas rendues persistantes (pour des raisons de sécurité). Mais le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> méthode fournit un moyen de rendre persistantes des personnalisations légitimes <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle dans ce cas.  
  
 Le deuxième cas d’appeler le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> méthode se produit pendant un HTTP `POST` demande à une page. Si un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle a des propriétés personnalisables complexes (comme une propriété qui contient un <xref:System.Collections.ArrayList> objet), et contrôle les données d’état de ces propriétés sont personnalisées pendant une `POST` demande, les développeurs doivent appeler le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> méthode pour vous assurer que les modifications sont rendues persistantes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="public static void SetPersonalizationDirty (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPersonalizationDirty(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetPersonalizationDirty(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> pour lequel les données de personnalisation ont changé.</param>
        <summary>Définit un indicateur qui spécifie que les données de personnalisation ont changé pour le contrôle serveur spécifié qui réside dans une zone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=nameWithType> méthode a le même objectif que la <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=nameWithType> (méthode), qui consiste à définir un indicateur indiquant que les données d’état de contrôle a été modifiées (personnalisées) sur un contrôle serveur pendant un HTTP `GET` demande. La différence entre ces méthodes est que la <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=nameWithType> méthode est utilisée pour les contrôles serveur qui n’héritent pas de la <xref:System.Web.UI.WebControls.WebParts.WebPart> de classe, mais sont placés dans <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones devant être inclus dans les applications WebPart.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'objet contenu dans le paramètre <paramref name="control" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Le contrôle dérive de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Les contrôles qui dérivent de <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> doivent utiliser à la place la méthode <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" /> protégée.</exception>
        <exception cref="T:System.InvalidOperationException">La page associée au contrôle ne possède pas de <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public virtual string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne concaténée avec la valeur de la propriété <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" /> pour constituer le titre complet d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Chaîne qui s'utilise en tant que sous-titre pour le contrôle. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> propriété facultative pour retourner une chaîne de sous-titre standard dans votre <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle qui sera ajoutée au titre du contrôle.  
  
 Si vous fournissez une valeur pour le <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> propriété personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler, les composants WebPart contrôle automatiquement l’ajoute à la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> propriété pour créer un titre complet pour le contrôle.  
  
 La valeur de cette propriété, si la valeur, peut être enregistrée automatiquement dans un fichier de ressources à l’aide d’un outil de conception. Pour plus d’informations, consultez <xref:System.ComponentModel.LocalizableAttribute> et [globalisation et localisation](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment fournir un sous-titre pour les instances de personnalisé <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 La première partie de cet exemple contient le code pour un contrôle personnalisé nommé `TextDisplayWebPart`. Ce contrôle est le même que le contrôle personnalisé qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> classe vue d’ensemble, à ceci près qu’il remplace également le <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> propriété afin de fournir un sous-titre standard qui contient un nom de la société fictive pour les instances de le contrôle personnalisé. Pour l’exemple de code à exécuter, vous devez compiler ce code source. Vous pouvez compiler explicitement et placer l’assembly résultant dans le dossier Bin de votre site Web ou le global assembly cache. Vous pouvez également mettre le code source dans le dossier App_Code de votre site, où il sera compilé dynamiquement au moment de l’exécution. Cet exemple de code suppose que vous compilez le code source dans un assembly, placez dans un sous-dossier Bin de votre application Web et référencez l’assembly avec un `Register` directive dans votre page Web. Pour une procédure pas à pas qui montre les deux méthodes de compilation, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_WebPart_Subtitle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_WebPart_Subtitle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/textdisplaywebpart.vb#2)]  
  
 La deuxième partie de l’exemple est une page Web qui indique comment référencer le `TextDisplayWebPart` contrôle dans une page Web ASP.NET. Après le chargement de la page dans un navigateur, texte du contrôle de la barre de titre contient le titre assigné au contrôle dans le balisage déclaratif, un séparateur de trait d’union et la valeur du sous-titre personnalisé à partir de la `TextDisplayWebPart` contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_Subtitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/subtitlecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Subtitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/subtitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Pour fournir un sous-titre pour les instances de personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (contrôle), vous devez substituer la <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" /> propriété.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le titre du contrôle Part.</summary>
        <value>Chaîne représentant le titre du contrôle Part. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un développeur assigne une valeur à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> propriété, alors cette valeur détermine l’intégralité (ou au moins une partie) du texte dans la barre de titre du contrôle. Le texte du titre s’affiche également en tant que partie du texte info-bulle lorsque vous placez le pointeur de la souris sur la barre de titre d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle ou autre contrôle serveur qui s’affiche dans un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  
  
 L’intégralité du texte affiché dans la barre de titre d’un contrôle est également affecté par le <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> propriété. Si cette propriété a une valeur qui lui est affectée, la valeur est concaténée au titre. Si aucune valeur n’est affectée à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> propriété, un titre calculé s’affiche. À tout moment, les développeurs peuvent récupérer le texte intégral réel affiché dans un <xref:System.Web.UI.WebControls.WebParts.WebPart> barre de titre du contrôle en obtenant la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> propriété.  
  
 Le style du texte du titre est déterminé par le <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> propriété de la zone qui contient le contrôle de la partie.  
  
 Pour obtenir un exemple de code qui illustre l’utilisation de la propriété de base, consultez le <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URL d'une image utilisée pour représenter un contrôle WebPart dans la barre de titre du contrôle.</summary>
        <value>Chaîne qui représente l'URL d'une image utilisée pour représenter le contrôle dans sa barre de titre. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> propriété personnalisée pour les composants WebPart, afin que le contrôle s’affiche avec une image dans un catalogue de contrôles. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Dans le balisage déclaratif de la page Web, notez le `<aspSample:TextDisplayWebPart>` élément. Son `TitleIconImageUrl` attribut est assigné à une chaîne qui contient l’URL vers un fichier image. Charger la page dans un navigateur, et si vous avez fourni une URL légitime d’une image, l’image apparaît dans la barre de titre de la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_TitleIconImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/CS/titleiconimageurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_TitleIconImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/VB/titleiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le système de validation interne a déterminé que l'URL peut contenir des attaques de script.</exception>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une URL vers des informations supplémentaires relatives à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Chaîne qui représente une URL vers des informations supplémentaires relatives au contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous assignez une URL vers le <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> propriété, le titre du contrôle devient un lien vers des informations supplémentaires sur le contrôle. L’URL n’est pas rendu lorsque la page est dans un mode d’affichage où peuvent faire glisser les contrôles, tels que la création, modification ou en mode catalogue.  
  
 Cette propriété ne peut pas être définie par les thèmes ou les thèmes de feuille de style. Pour plus d’informations, consultez <xref:System.Web.UI.ThemeableAttribute> et [ASP.NET thèmes et les apparences](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 La portée de personnalisation de cette propriété a la valeur <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> et peut être modifiée que par les utilisateurs autorisés. Pour plus d’informations, consultez <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> et [Web Parts Personalization Overview](http://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment définir le <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> propriété personnalisée pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, qui se trouve dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Notez que la `<aspSample:TextDisplayWebPart>` élément contient le `TitleUrl` attribut avec une URL fictive. Si vous chargez la page dans un navigateur, le titre de la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle est désormais un lien vers la ressource vers laquelle pointé le <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> propriété.  
  
 [!code-aspx-csharp[WebParts_WebPart_TitleUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/CS/titleurlcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_TitleUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/VB/titleurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Le système de validation interne a déterminé que l'URL peut contenir des attaques de script.</exception>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Amène le contrôle à suivre les modifications apportées à son état d'affichage afin qu'elles puissent être stockées dans la propriété <see cref="P:System.Web.UI.Control.ViewState" /> de l'objet.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Verbs As WebPartVerbCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ Verbs { System::Web::UI::WebControls::WebParts::WebPartVerbCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de verbes personnalisés associée à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> qui contient des objets <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> personnalisés associés à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verbes dérivent la <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> de classe et fournissent des actions d’interface utilisateur que les utilisateurs peuvent effectuer sur utilisateur un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle. Généralement, les verbes sont représentés dans l’interface utilisateur comme des boutons, des liens ou des éléments de menu. Par défaut, les verbes WebPart courants apparaissent dans un menu de verbes déroulant dans chaque <xref:System.Web.UI.WebControls.WebParts.WebPart> barre de titre du contrôle. Il existe des verbes standards pour l’ouvrir, fermer, la modification et la réduction d’un contrôle et autres verbes pour exporter une définition pour le contrôle ou le chargement d’un fichier d’aide. Ces verbes ne sont pas inclus dans le <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> collection, car la collection contient uniquement des verbes personnalisés que vous créez et retournez en substituant cette propriété dans une classe dérivée.  
  
 Lorsque vous créez des verbes personnalisés et les ajouter à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> collection, vous pouvez ensuite accéder les verbes à partir d’un <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> propriété personnalisée pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 Notez que pour l’exemple de code fonctionne, vous devez ajouter un paramètre dans le fichier Web.config pour permettre l’exportation des fichiers de description du WebPart. Assurez-vous que vous disposez d’un fichier Web.config dans le même répertoire que la page Web pour cet exemple de code. Dans le `<system.web>` section, assurez-vous qu’il existe un `<webParts>` élément avec un `enableExport` attribut la valeur `true`, comme dans le balisage suivant.  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 Charger la page Web dans un navigateur. Lorsque vous cliquez sur le **afficher le nombre de verbe** bouton, il accède à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> propriété à obtenir le nombre de verbes personnalisés pour le `TextDisplayWebPart` contrôler et affiche le résultat dans une étiquette. Aucun des verbes personnalisés ont été ajoutés au contrôle dans ce cas, le nombre est égal à zéro.  
  
 [!code-aspx-csharp[WebParts_WebPart_Verbs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Verbs/CS/verbscs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Verbs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Verbs/VB/verbsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Classes dérivées peuvent substituer la <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" /> propriété pour permettre aux utilisateurs d’ajouter personnalisé <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objets à la collection de verbes pour un <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> contrôle.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public virtual object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence au contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, pour permettre son édition par des contrôles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> personnalisés.</summary>
        <value>
          <see cref="T:System.Object" /> qui se compose du contrôle enfant d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous créez une personnalisée <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler et également créer connexes <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles permettent aux utilisateurs de modifier le contrôle au moment de l’exécution, vous devez implémenter la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface, qui inclut le <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> propriété.  
  
 Lorsque le <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle en mode édition, le <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> propriété est appelée par une <xref:System.Web.UI.WebControls.WebParts.EditorZone> contrôle pour obtenir une référence à la <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôler et activer personnalisé <xref:System.Web.UI.WebControls.WebParts.EditorPart> contrôles pour le modifier.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property WebPartManager As WebPartManager" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManager ^ WebPartManager { System::Web::UI::WebControls::WebParts::WebPartManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence au contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> associé à une instance du contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> qui est associé à un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une page WebPart a toujours une seule instance d’un <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle effectue le suivi et gère tous les autres contrôles de composants WebPart sur une page, y compris toutes les zones qui dérivent de la base de <xref:System.Web.UI.WebControls.WebParts.WebZone> classe et tous les contrôles WebPart qui dérivent de la base de <xref:System.Web.UI.WebControls.WebParts.Part> classe.  
  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> propriété existe afin que chaque <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôle peut être associée son <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> (contrôle), à son tour, tient à jour une collection de tous les <xref:System.Web.UI.WebControls.WebParts.WebPart> contrôles sur une page dans son <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> collection.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la largeur du contrôle serveur web.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Unit" /> qui représente la largeur du contrôle. La valeur par défaut est <see cref="F:System.Web.UI.WebControls.Unit.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zone As WebPartZoneBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ Zone { System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la zone <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> qui contient actuellement un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> qui contient actuellement un contrôle WebPart sur une page Web. Si un contrôle WebPart est actuellement fermé sur une page, la valeur de retour est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans l’architecture de l’ensemble de contrôle des composants WebPart, les contrôles peuvent avoir des fonctionnalités WebPart uniquement s’ils fonctionnent au sein de <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones. La norme <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone à utiliser sur les pages Web est la <xref:System.Web.UI.WebControls.WebParts.WebPartZone> contrôle. Bien que les utilisateurs finaux peuvent déplacer les contrôles WebPart entre des zones différentes sur une page Web, une instance donnée d’un contrôle peut résider dans une seule zone à la fois. Qui lui sont associés et un contrôle WebPart <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôler, utilisez le <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> propriété pour effectuer le suivi de la zone actuellement le contrôle se trouve dans, et les caractéristiques communes de disposition et le style de la zone qui s’appliquent à tous les contenus des contrôles WebPart.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> et <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriétés personnalisé pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code inclut un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_Zone#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 La deuxième partie de l’exemple de code est la page Web. Il existe deux `<asp:webpartzone>` éléments sur la page, chacun représentant une zone WebPart. La première zone contient une norme <xref:System.Web.UI.WebControls.Calendar> (contrôle), qui agit comme un <xref:System.Web.UI.WebControls.WebParts.WebPart> , car il est dans une zone de contrôle au moment de l’exécution. La deuxième zone contient le `TextDisplayWebPart` contrôle. Lorsqu’un utilisateur clique sur le **informations de fuseau** bouton, le `Label1` contrôle affiche les valeurs de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriété du contrôle et le <xref:System.Web.UI.Control.ID%2A> propriété de la zone qui contient actuellement le contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Zone#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
    <Member MemberName="ZoneIndex">
      <MemberSignature Language="C#" Value="public int ZoneIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZoneIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ZoneIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ZoneIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la position d'index d'un contrôle <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> dans sa zone.</summary>
        <value>Ordre numérique d'un contrôle dans sa zone. Le premier contrôle présent dans une zone a une valeur d'index de zéro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriété indique un contrôle de WebPart ordre numérique (ou position ordinale) dans sa zone, par rapport à d’autres contrôles dans la zone. Le <xref:System.Web.UI.WebControls.WebParts.WebPartManager> contrôle utilise cette propriété pour suivre et gérer sa collection de contrôles WebPart sur une page Web.  
  
> [!IMPORTANT]
>  Vous ne pouvez pas supposer que la valeur de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriété pour un contrôle est égale à la valeur d’index pour le même contrôle dans le <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> collection de la zone du contrôle. Souvent d’un contrôle position relative dans sa zone (sa <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> valeur) et son index dans la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> collection de sa zone, seront des valeurs différentes, comme les contrôles sont ajoutés et supprimés des zones.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à la <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> et <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriétés personnalisé pour les composants WebPart. Cet exemple suppose l’utilisation d’un contrôle personnalisé, `TextDisplayWebPart`, créé dans la section exemple de la <xref:System.Web.UI.WebControls.WebParts.WebPart> vue d’ensemble de la classe.  
  
 L’exemple de code inclut un contrôle utilisateur personnalisé qui permet aux utilisateurs de modifier les modes d’affichage sur une page WebPart. Le contrôle utilisateur est référencé au moyen d’un `Register` directive au début de la page Web qui héberge le contrôle utilisateur. Pour obtenir une description détaillée de la création de ce contrôle utilisateur et de travailler avec les modes d’affichage, consultez [procédure pas à pas : développement et à l’aide d’un contrôle de serveur Web personnalisé](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-aspx-vb[WebParts_WebPart_Zone#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 La deuxième partie de l’exemple de code est la page Web. Il existe deux `<asp:webpartzone>` éléments sur la page, chacun représentant une zone WebPart. La première zone contient une norme <xref:System.Web.UI.WebControls.Calendar> (contrôle), qui agit comme un <xref:System.Web.UI.WebControls.WebParts.WebPart> , car il est dans une zone de contrôle au moment de l’exécution. La deuxième zone contient le `TextDisplayWebPart` contrôle. Lorsqu’un utilisateur clique sur le **informations de fuseau** bouton, le `Label1` contrôle affiche les valeurs de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> propriété du contrôle et le <xref:System.Web.UI.Control.ID%2A> propriété de la zone qui contient actuellement le contrôle.  
  
 [!code-aspx-csharp[WebParts_WebPart_Zone#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPart_Zone#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
  </Members>
</Type>