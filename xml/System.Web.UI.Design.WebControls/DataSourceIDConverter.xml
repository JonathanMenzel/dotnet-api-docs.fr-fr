<Type Name="DataSourceIDConverter" FullName="System.Web.UI.Design.WebControls.DataSourceIDConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9882b9657b877eb022e5eb468c5a4dbcd67b1055" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52235397" /></Metadata><TypeSignature Language="C#" Value="public class DataSourceIDConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceIDConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataSourceIDConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceIDConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataSourceIDConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Crée une liste de noms de sources de données sélectionnables par l'utilisateur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> classe est un <xref:System.ComponentModel.TypeConverter> objet est généralement référencé par le <xref:System.ComponentModel.TypeConverterAttribute> attribut.  
  
 La source de données noms qui sont retournés par la <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> méthode sont des composants qui sont des sources de données valides à partir du conteneur du contexte spécifié.  
  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> méthode obtient une valeur qui indique si les noms de source de données retournés sont une liste exclusive de valeurs possibles. Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> méthode obtient une valeur indiquant si les noms de source de données sont un ensemble standard de valeurs qui peuvent être sélectionnées dans une liste.  
  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> méthode convertit l’objet spécifié en type natif du convertisseur. Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> méthode obtient une valeur indiquant si ce <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> peut convertir un objet du type source spécifié en type natif.  
  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> méthode indique si le composant spécifié implémente le <xref:System.Web.UI.IDataSource> interface.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <altmember cref="T:System.Web.UI.IDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceIDConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataSourceIDConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework construit en interne une nouvelle instance de la <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> classe lorsque la classe est référencée par un <xref:System.ComponentModel.TypeConverterAttribute> attribut.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataSourceIDConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Objet implémentant <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations de contexte à un convertisseur de type afin que celui-ci puisse effectuer une conversion.</param>
        <param name="sourceType"><see cref="T:System.Type" /> de l'objet dont la conversion est demandée.</param>
        <summary>Obtient une valeur indiquant si ce convertisseur peut convertir un objet dans le type source spécifié en objet du type natif du convertisseur.</summary>
        <returns><see langword="true" /> si <paramref name="sourceType" /> est une chaîne ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> méthode peut uniquement convertir une chaîne, donc la <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> retourne uniquement `true` lorsque `sourcetype` est une chaîne.  
  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A> n’utilise pas le `context` paramètre.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataSourceIDConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Objet implémentant <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations de contexte à un convertisseur de type afin que celui-ci puisse effectuer une conversion.</param>
        <param name="culture">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie la culture du paramètre <paramref name="value" />.</param>
        <param name="value">Objet à convertir.</param>
        <summary>Convertit l'objet spécifié en type natif du convertisseur.</summary>
        <returns>Le paramètre <paramref name="value" /> est retourné sous forme de chaîne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `value` paramètre a un type de chaîne, il est retourné sous forme de chaîne. Si `value` est `null`, une chaîne vide (" ») est retournée. Sinon, une exception <xref:System.NotSupportedException> est levée.  
  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A> méthode n’utilise pas le `context` ou `culture` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><paramref name="value" /> n'est pas une chaîne ou est <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataSourceIDConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Objet implémentant <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations de contexte à un convertisseur de type afin que celui-ci puisse effectuer une conversion.</param>
        <summary>Retourne une liste des noms de sources de données disponibles.</summary>
        <returns><see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> contenant les noms des contrôles qui implémentent l'interface <see cref="T:System.Web.UI.IDataSource" /> et qui sont disponibles dans le contexte donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> méthode crée une liste des noms des composants qui sont des sources de données valides dans le conteneur de l’objet spécifié par le `context` paramètre. Il convertit ensuite cette liste pour un <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="P:System.ComponentModel.Design.IDesignerHost.RootComponent" />
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.ComponentModel.ITypeDescriptorContext.Container" />
        <altmember cref="P:System.ComponentModel.Container.Components" />
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
        <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Objet implémentant <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations de contexte à un convertisseur de type afin que celui-ci puisse effectuer une conversion.</param>
        <summary>Obtient une valeur qui indique si les noms de sources de données retournés sont une liste exclusive de valeurs possibles.</summary>
        <returns>Toujours <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous dérivez une classe à partir de la <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter> classe et substituer la <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A> méthode pour retourner une liste exclusive des noms de sources de données, également remplacer le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A> méthode pour retourner `true` lorsque la liste de nom de source de données est exclusive.  
  
 Le `context` paramètre n’est pas utilisé par le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataSourceIDConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">Objet implémentant <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit des informations de contexte à un convertisseur de type afin que celui-ci puisse effectuer une conversion.</param>
        <summary>Obtient une valeur indiquant si cet objet retourne un groupe standard de noms de sources de données qui peuvent être sélectionnés dans une liste.</summary>
        <returns>Toujours <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `context` paramètre n’est pas utilisé par le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="IsValidDataSource">
      <MemberSignature Language="C#" Value="protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsValidDataSource(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsValidDataSource (component As IComponent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsValidDataSource(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="abstract member IsValidDataSource : System.ComponentModel.IComponent -&gt; bool&#xA;override this.IsValidDataSource : System.ComponentModel.IComponent -&gt; bool" Usage="dataSourceIDConverter.IsValidDataSource component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Objet qui implémente l'interface <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Obtient une valeur qui indique si le composant spécifié est une source de données valide.</summary>
        <returns><see langword="true" /> si <paramref name="component" /> est une source de données valide ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A> méthode considère le `component` paramètre soit une source de données valide s’il implémente la <xref:System.Web.UI.IDataSource> interface.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Le <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> méthode doit être substituée par les contrôles qui doivent examiner plus avant un composant donné pour décider s’il doit être retourné dans la liste de valeurs standard. Par exemple, si un contrôle fonctionne uniquement avec <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> des sources de données, <see cref="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)" /> doit retourner <see langword="true" /> uniquement pour ces composants sont <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> objets.</para></block>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
  </Members>
</Type>