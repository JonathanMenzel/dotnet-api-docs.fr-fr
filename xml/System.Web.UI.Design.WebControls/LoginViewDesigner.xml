<Type Name="LoginViewDesigner" FullName="System.Web.UI.Design.WebControls.LoginViewDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aad0e27d486e6930c7c0791ac1d2732b3c4b3d62" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30550303" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LoginViewDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginViewDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebControls.LoginViewDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class LoginViewDesigner&#xA;Inherits ControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class LoginViewDesigner : System::Web::UI::Design::ControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit la prise en charge au moment du design dans un concepteur visuel pour le contrôle serveur web <see cref="T:System.Web.UI.WebControls.LoginView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.WebControls.LoginView> contrôle restitue l’un de ses modèles, selon qu’un utilisateur soit connecté le site Web hôte et les rôles qui contiennent le compte d’utilisateur connecté.  
  
 Dans un concepteur visuel, lorsque vous basculez de Source en mode Design, le code source du balisage qui décrit le <xref:System.Web.UI.WebControls.LoginView> contrôle est analysé et une version au moment du design du contrôle est créée sur l’aire de conception. Lorsque vous basculez en mode Source, le contrôle au moment du design est rendue persistante dans le code source du balisage et modifié dans le balisage de la page Web. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe fournit la prise en charge au moment du design pour le <xref:System.Web.UI.WebControls.LoginView> contrôle.  
  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> propriété retourne un <xref:System.ComponentModel.Design.DesignerActionListCollection> objet, qui contient généralement un objet qui est dérivé de la <xref:System.ComponentModel.Design.DesignerActionList> classe pour chaque niveau dans l’arborescence d’héritage du concepteur. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> propriété retourne une collection de groupes de modèles pour les modèles d’associé <xref:System.Web.UI.WebControls.LoginView> contrôle. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> propriété retourne toujours `true`, indiquant que le concepteur crée une copie temporaire du associé <xref:System.Web.UI.WebControls.LoginView> contrôle pour générer le balisage au moment du design.  
  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> méthodes de classe de fournissent les fonctionnalités suivantes :  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthodes retournent le balisage utilisé pour restituer associé <xref:System.Web.UI.WebControls.LoginView> contrôle au moment du design. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> méthode obtient le balisage qui restitue un espace réservé pour le contrôle associé au moment du design lorsque le modèle actuel n’est pas défini. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> méthode fournit le balisage qui restitue le contrôle associé au moment du design lorsqu’une erreur s’est produite.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> méthode retourne une copie sérialisée du modèle actuel associé au <xref:System.Web.UI.WebControls.LoginView> contrôle. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> méthode définit la région du contrôle associé à partir d’une copie sérialisée d’un modèle de contrôle.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> méthode prépare le concepteur à afficher, modifier et créer associé <xref:System.Web.UI.WebControls.LoginView> contrôle. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> méthode est appelée lors d’une modification pour le contrôle associé. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> méthode sert à supprimer, ajouter des propriétés supplémentaires ou occulter les propriétés du contrôle associé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment étendre le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier l’apparence et le comportement des contrôles qui sont dérivés de la <xref:System.Web.UI.WebControls.LoginView> contrôle au moment du design.  
  
 L’exemple dérive le `MyLoginView` contrôle depuis la <xref:System.Web.UI.WebControls.LoginView>. Le `MyLoginView` est une copie de la <xref:System.Web.UI.WebControls.LoginView> contrôle. Dérive également de l’exemple le `MyLoginViewDesigner` classe à partir de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe et applique un <xref:System.ComponentModel.DesignerAttribute> d’attribut pour le `MyLoginViewDesigner` sur la `MyLoginView` contrôle.  
  
 Le `MyLoginViewDesigner` contrôle substitue les éléments suivants <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> membres :  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> méthode pour rendre le <xref:System.Web.UI.Control.NamingContainer%2A> propriété visible dans le **propriétés** grille au moment du design.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthode pour dessiner une bordure orange autour du contrôle pour afficher son étendue.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> méthode pour générer le balisage pour un espace réservé qui inclut le message d’erreur qui est rendu en rouge, texte gras.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> méthode pour générer le balisage pour un espace réservé qui contient les noms des groupes de rôles qui sont définis pour le contrôle.  
  
-   Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> méthode pour lever une <xref:System.ArgumentException> exception, si le contrôle associé n’est pas un `MyLoginView` objet.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LoginView" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginViewDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LoginViewDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le .NET Framework construit en interne une nouvelle instance de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe lorsqu’il crée associé <xref:System.Web.UI.WebControls.LoginView> contrôle ou une copie de ce contrôle sur l’aire de conception.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.HtmlControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la collection de la liste d'actions pour ce concepteur.</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associée à ce concepteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> propriété crée un <xref:System.ComponentModel.Design.DesignerActionList> pour l’objet le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe, l’ajoute à la <xref:System.ComponentModel.Design.DesignerActionListCollection> obtenu à partir de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists%2A> propriété de base, puis retourne le <xref:System.ComponentModel.Design.DesignerActionListCollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
        <altmember cref="P:System.ComponentModel.Design.ComponentDesigner.ActionLists" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient le balisage utilisé pour afficher le contrôle <see cref="T:System.Web.UI.WebControls.LoginView" /> associé au moment de la conception.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient le balisage utilisé pour afficher le contrôle associé au moment de la conception.</summary>
        <returns>Chaîne qui contient le balisage utilisé pour rendre <see cref="T:System.Web.UI.WebControls.LoginView" /> au moment du design.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthode définit l’index du modèle associé au <xref:System.Web.UI.WebControls.LoginView> contrôle à l’index en cours au moment du design, puis associé les causes de contrôle pour recréer et données lier ses contrôles enfants, si nécessaire. Ensuite, le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> appelle la <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> méthode pour générer le balisage de base.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier l’apparence d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe au moment du design. L’exemple dessine une bordure orange autour du contrôle pour afficher son étendue.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si vous remplacez le <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" /> (méthode), veillez à appeler la <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> base, car elle finira, via plusieurs niveaux de substitution, appels de méthode sur le <see cref="T:System.Web.UI.WebControls.LoginView" /> contrôle ou une copie du contrôle pour générer le balisage.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">
          <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> à laquelle sont ajoutées des définitions des régions pouvant être sélectionnées et cliquées dans la vue design du contrôle <see cref="T:System.Web.UI.WebControls.LoginView" />.</param>
        <summary>Obtient le balisage utilisé pour afficher le contrôle associé au moment de la conception et remplit une collection de zones du concepteur.</summary>
        <returns>Chaîne qui contient le balisage utilisé pour rendre <see cref="T:System.Web.UI.WebControls.LoginView" /> au moment du design.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthode crée un <xref:System.Web.UI.Design.EditableDesignerRegion> objet pour un modèle de zone de modification sur l’aire du concepteur visuel, puis initialise en tant que modèle. Si aucun modèle n’est défini, une chaîne s’affiche vous invitant à cliquer pour commencer à modifier. Une constante prédéfinie est utilisée pour générer le balisage retourné.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier l’apparence d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe au moment du design. L’exemple dessine une bordure orange autour du contrôle pour afficher son étendue.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#4)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Cela <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> surcharge n’appelle pas sur sa méthode de base ou la <see cref="T:System.Web.UI.WebControls.LoginView" /> contrôle pour générer le balisage.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">
          <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> pour laquelle obtenir du contenu.</param>
        <summary>Retourne une copie sérialisée du modèle en cours utilisé pour restituer le contrôle associé au moment du design.</summary>
        <returns>Chaîne qui contient une copie sérialisée du modèle utilisé pour restituer le contrôle <see cref="T:System.Web.UI.WebControls.LoginView" /> associé au moment du design.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un modèle qui implémente le <xref:System.Web.UI.ITemplate> interface peut être obtenue à partir de la `region` paramètre, le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> méthode retourne le modèle persistant. Sinon, elle appelle la <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> méthode pour générer le contenu de base.  
  
 Le modèle sérialisé peut être restauré à la <xref:System.Web.UI.WebControls.LoginView> contrôle à l’aide de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient le balisage qui restitue un espace réservé au contrôle associé au moment du design lorsque le modèle en cours n'est pas défini.</summary>
        <returns>Chaîne contenant un texte de balisage qui restitue un espace réservé sur l'aire de conception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> méthode formate d’abord un message de chaîne qui spécifie le nom du modèle actuel associé au <xref:System.Web.UI.WebControls.LoginView> contrôler et spécifie également que le modèle est vide. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> génère le balisage pour un espace réservé contenant ce message.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier l’apparence d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe au moment du design. L’exemple génère le balisage d’un espace réservé qui inclut les noms de tous les <xref:System.Web.UI.WebControls.RoleGroup> objets qui sont définis pour le contrôle associé.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected override string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Exception" /> levée.</param>
        <summary>Fournit le balisage qui restitue le contrôle associé au moment du design lorsqu'une erreur est survenue.</summary>
        <returns>Chaîne qui contient le balisage utilisé pour restituer le contrôle <see cref="T:System.Web.UI.WebControls.LoginView" /> associé au moment du design lorsqu'une erreur est survenue.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Erreur au moment du design <xref:System.Web.UI.WebControls.LoginView> contrôle rendu sous la forme d’un panneau qui contient le nom de type, le nom du contrôle et des messages annonçant et décrivant l’erreur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier l’apparence d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe au moment du design. L’exemple génère le balisage pour un espace réservé qui inclut le message d’erreur, rendu en texte rouge et en gras.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.Web.UI.WebControls.LoginView" /> qui implémente <see cref="T:System.ComponentModel.IComponent" />.</param>
        <summary>Prépare le concepteur à afficher, à modifier et à créer le contrôle associé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le concepteur visuel appelle la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> méthode lorsqu’il est prêt à utiliser le concepteur pour restituer le <xref:System.Web.UI.WebControls.LoginView> contrôle. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> et ses méthodes de base configurent les propriétés et définissent les événements qui sont nécessaires au fonctionnement du concepteur.  
  
 Le `component` paramètre est la <xref:System.Web.UI.WebControls.LoginView> contrôle qui est associé à ce concepteur ou une copie de la <xref:System.Web.UI.WebControls.LoginView> contrôle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier le comportement d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe au moment du design. L’exemple lève une <xref:System.ArgumentException>, si le contrôle associé n’est pas un `MyLoginView` objet.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#6)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="component" /> n'est pas une classe <see cref="T:System.Web.UI.WebControls.LoginView" /> et n'appartient pas à une classe dérivée de <see cref="T:System.Web.UI.WebControls.LoginView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public override void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnComponentChanged (sender As Object, e As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Source de l'événement.</param>
        <param name="e">
          <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelé lorsqu'une modification est apportée au contrôle associé à ce concepteur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> méthode est appelée lorsque le <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> événement associé au <xref:System.Web.UI.WebControls.LoginView> contrôle s’exécute. En règle générale, il s’agit en réponse à une modification de propriété sur le contrôle (par exemple, un **propriétés** modification de la grille). Si le <xref:System.Web.UI.WebControls.LoginView> modèle de contrôle est modifiée, le **propriétés** grille est actualisée.  
  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged%2A> vérifie que l’index du modèle actuel est valide et qu’il appelle ensuite la <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> méthode de base.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Collection implémentant le <see cref="T:System.Collections.IDictionary" /> des propriétés ajoutées ou occultées.</param>
        <summary>Utilisé par le concepteur pour supprimer ou ajouter des propriétés s’affichant dans la grille **Properties**, ou pour occulter les propriétés du contrôle associé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Concepteurs de contrôles utilisent des méthodes qui sont dérivés de la <xref:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties%2A?displayProperty=nameWithType> méthode pour occulter diverses propriétés de contrôle avec des propriétés au moment du design correspondantes que le concepteur implémente, et pour ajouter ou supprimer des propriétés à partir de la ** Propriétés** grille.  
  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> méthode s’applique le <xref:System.ComponentModel.BrowsableAttribute> attribut de la <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> propriété afin qu’elle n’apparaît pas dans le **propriétés** grille.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties%2A> méthode dans une classe héritée de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner> classe pour modifier le **propriétés** grille d’un contrôle qui est dérivé de la <xref:System.Web.UI.WebControls.LoginView> classe lors de la conception heure. L’exemple rend le <xref:System.Web.UI.Control.NamingContainer%2A> propriété visible dans le **propriétés** grille.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/CS/LoginViewDesigner.cs#3)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginViewDesigner#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginViewDesigner/VB/LoginViewDesigner.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Remplacer la <see cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)" /> méthode pour ajouter des propriétés pour supprimer ou modifier les attributs des propriétés dans la collection de propriété au moment du design. Veillez à appeler la <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> méthode de base avant d’effectuer d’autres traitements.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">
          <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> qui fournit le nom de la région à mettre à jour.</param>
        <param name="content">Chaîne qui contient un modèle sérialisé du contrôle associé.</param>
        <summary>Définit une région du contrôle associé à partir de la copie sérialisée d'un modèle de contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent%2A> méthode analyse un modèle sérialisé associé au <xref:System.Web.UI.WebControls.LoginView> contrôle spécifié par le `content` paramètre, puis utilise le modèle de mise à jour de la région du contrôle spécifiée par le <xref:System.Web.UI.Design.DesignerObject.Name%2A> propriété de le `region` paramètre.  
  
 Le modèle actuel de la <xref:System.Web.UI.WebControls.LoginView> contrôle peut être sérialisé à l’aide de la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
        <altmember cref="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de groupes de modèles pour les champs du contrôle associé.</summary>
        <value>
          <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> contenant un élément de chaque modèle dans le contrôle <see cref="T:System.Web.UI.WebControls.LoginView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> property get un <xref:System.Web.UI.Design.TemplateGroupCollection> à partir de l’objet le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> propriété de base, puis ajoute <xref:System.Web.UI.Design.TemplateGroup> objets qui contiennent une seule <xref:System.Web.UI.Design.TemplateDefinition> objet pour le modèle anonyme (qui correspond à aucun utilisateur connecté), pour le modèle de session et pour chaque <xref:System.Web.UI.WebControls.RoleGroup> élément dans le <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> collection associé au <xref:System.Web.UI.WebControls.LoginView> le contrôle à la <xref:System.Web.UI.Design.TemplateGroupCollection>. Le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups%2A> retourne cette <xref:System.Web.UI.Design.TemplateGroupCollection> à l’appelant.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroupCollection" />
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.WebControls.RoleGroup" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected override bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le concepteur doit utiliser une copie temporaire plutôt que le contrôle associé au concepteur pour générer le balisage au moment du design.</summary>
        <value>Toujours <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que la <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> propriété est toujours `true`, le concepteur <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété retourne une copie de la <xref:System.Web.UI.WebControls.LoginView> contrôle pour générer le balisage au moment du design. Le <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> propriété crée la copie en conservant le texte réel <xref:System.Web.UI.WebControls.LoginView> contrôle, puis en analysant la chaîne du contrôle persistant. Le contrôle copié n’affecte pas de persistance pour la valeur réelle <xref:System.Web.UI.WebControls.LoginView>.  
  
 Si le <xref:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl%2A> propriété a été substituée pour retourner `false`, il utilisera associé <xref:System.Web.UI.WebControls.LoginView> contrôle lui-même pour générer le balisage au moment du design, et les modifications au moment du design du contrôle persisteront dans la source du balisage de page.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Vous pouvez remplacer le <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> propriété à retourner <see langword="false" /> ou pour déterminer sa valeur selon que le contrôle est marqué avec un niveau de la classe <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> attribut. Si le <see cref="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl" /> n’est pas substituée, le <see cref="T:System.Web.UI.WebControls.LoginView" /> ignore le <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.LoginView" />
        <altmember cref="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
  </Members>
</Type>