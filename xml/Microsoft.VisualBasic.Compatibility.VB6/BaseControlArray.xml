<Type Name="BaseControlArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aedc9914fb9ba4aac2c25d5c305e0157b1e6acf8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36660613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseControlArray : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BaseControlArray extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseControlArray&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseControlArray abstract : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type BaseControlArray = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous n’héritez généralement pas de `BaseControlArray`. Pour créer votre propre tableau de contrôles, héritent d’une des classes de tableau de contrôle dans le `Microsoft.VisualBasic.Compatibility.VB6` espace de noms.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray ();" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est généralement pas utilisée pour créer une instance de la classe, ce constructeur n’est généralement pas appelé directement mais plutôt appelé par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseControlArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method familyspecialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseControlArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray : System.ComponentModel.IContainer -&gt; Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" Usage="new Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray Container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est généralement pas utilisée pour créer une instance de la classe, ce constructeur n’est généralement pas appelé directement mais plutôt appelé par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCanExtend">
      <MemberSignature Language="C#" Value="protected bool BaseCanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseCanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseCanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseCanExtend(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="member this.BaseCanExtend : obj -&gt; bool" Usage="baseControlArray.BaseCanExtend target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">The <see cref="T:System.Windows.Forms.Control" /> to test.</param>
        <summary>Gets a value that indicates whether a control is a member of a control array.</summary>
        <returns>
          <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est pas utilisée en général pour créer une instance de la classe, cela `Protected` méthode n’est généralement pas appelée directement mais plutôt appelée par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Classes dérivées doivent s’assurer que <paramref name="target" /> est du type correct pour le tableau de contrôles.  Lorsque vous substituez <see langword="BaseCanExtend" /> dans une classe dérivée, n’appelez pas la <see langword="BaseCanExtend" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetIndex">
      <MemberSignature Language="C#" Value="protected short BaseGetIndex (object ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance int16 BaseGetIndex(object ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetIndex (ctl As Object) As Short" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; short BaseGetIndex(System::Object ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.BaseGetIndex : obj -&gt; int16" Usage="baseControlArray.BaseGetIndex ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</param>
        <summary>Gets the index of a control in a control array.</summary>
        <returns>A <see langword="Short" /> integer representing the index of the control in the control array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est pas utilisée en général pour créer une instance de la classe, cela `Protected` méthode n’est généralement pas appelée directement mais plutôt appelée par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="BaseGetIndex" /> dans une classe dérivée, n’appelez pas la <see langword="BaseGetIndex" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseGetItem">
      <MemberSignature Language="C#" Value="protected object BaseGetItem (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance object BaseGetItem(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseGetItem (Index As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ BaseGetItem(short Index);" />
      <MemberSignature Language="F#" Value="member this.BaseGetItem : int16 -&gt; obj" Usage="baseControlArray.BaseGetItem Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">An integer that represents the index of the control in the control array.</param>
        <summary>Gets the control for a specified index in a control array.</summary>
        <returns>The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est pas utilisée en général pour créer une instance de la classe, cela `Protected` méthode n’est généralement pas appelée directement mais plutôt appelée par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="BaseGetItem" /> dans une classe dérivée, n’appelez pas la <see langword="BaseGetItem" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseResetIndex">
      <MemberSignature Language="C#" Value="protected void BaseResetIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseResetIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseResetIndex (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseResetIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseResetIndex : obj -&gt; unit" Usage="baseControlArray.BaseResetIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n'est pas prise en charge.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. -  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSetIndex">
      <MemberSignature Language="C#" Value="protected void BaseSetIndex (object ctl, short Index, bool fIsDynamic = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void BaseSetIndex(object ctl, int16 Index, bool fIsDynamic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseSetIndex (ctl As Object, Index As Short, Optional fIsDynamic As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.BaseSetIndex : obj * int16 * bool -&gt; unit" Usage="baseControlArray.BaseSetIndex (ctl, Index, fIsDynamic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Object" />
        <Parameter Name="Index" Type="System.Int16" />
        <Parameter Name="fIsDynamic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</param>
        <param name="Index">A <see langword="Short" /> integer that represents the index for the control.</param>
        <param name="fIsDynamic">Optional. A <see langword="Boolean" /> specifying whether the control was created at design time (<see langword="false" />) or at run time (<see langword="true" />).</param>
        <summary>Sets the index for a control in a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est pas utilisée en général pour créer une instance de la classe, cela `Protected` méthode n’est généralement pas appelée directement mais plutôt appelée par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="BaseSetIndex" /> dans une classe dérivée, n’appelez pas la <see langword="BaseSetIndex" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BaseShouldSerializeIndex">
      <MemberSignature Language="C#" Value="protected bool BaseShouldSerializeIndex (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance bool BaseShouldSerializeIndex(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BaseShouldSerializeIndex (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool BaseShouldSerializeIndex(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="member this.BaseShouldSerializeIndex : obj -&gt; bool" Usage="baseControlArray.BaseShouldSerializeIndex o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Returns a value that indicates whether a control is a member of a control array.</summary>
        <returns>
          <see langword="true" /> if the control is a member of the control array; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0. Étant donné que cette classe n’est pas utilisée en général pour créer une instance de la classe, cela `Protected` méthode n’est généralement pas appelée directement mais plutôt appelée par une classe dérivée.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="BaseShouldSerialiazeIndex" /> dans une classe dérivée, n’appelez pas la <see langword="BaseShouldSerialiazeIndex" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="components">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.IContainer components;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.ComponentModel.IContainer components" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberSignature Language="VB.NET" Value="Protected components As IContainer " />
      <MemberSignature Language="C++ CLI" Value="protected: System::ComponentModel::IContainer ^ components;" />
      <MemberSignature Language="F#" Value="val mutable components : System.ComponentModel.IContainer" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stores the container for a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controlAddedAtDesignTime">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controlAddedAtDesignTime;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controlAddedAtDesignTime" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberSignature Language="VB.NET" Value="Protected controlAddedAtDesignTime As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controlAddedAtDesignTime;" />
      <MemberSignature Language="F#" Value="val mutable controlAddedAtDesignTime : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stores values to track whether a control in a control array was created at design time or at run time.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="controls">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable controls;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable controls" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberSignature Language="VB.NET" Value="Protected controls As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ controls;" />
      <MemberSignature Language="F#" Value="val mutable controls : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stores values that represent the controls in a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public short Count ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 Count() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public Function Count () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short Count();" />
      <MemberSignature Language="F#" Value="member this.Count : unit -&gt; int16" Usage="baseControlArray.Count " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of controls in a control array.</summary>
        <returns>A Short that contains the number of controls.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété dans un [pour... L’instruction suivante](~/docs/visual-basic/language-reference/statements/for-next-statement.md) pour effectuer une opération sur les contrôles dans un tableau de contrôles.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="baseControlArray.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        <summary>Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode). `Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le paramètre disposing la valeur `true`. <xref:System.Object.Finalize%2A> appelle `Dispose` avec la valeur du paramètre disposing `false`.  
  
 Lorsque le paramètre disposing a `true`, cette méthode libère toutes les ressources détenues par les objets managés qui fait référence à ce contrôle. Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lorsque vous substituez <see langword="Dispose(Boolean)" />, évitez de référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’un Method](~/docs/standard/garbage-collection/implementing-dispose.md) de suppression. Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, voir [nettoyage des Resources](~/docs/standard/garbage-collection/unmanaged.md) non managé et [substitution de la méthode Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="fIsEndInitCalled">
      <MemberSignature Language="C#" Value="protected bool fIsEndInitCalled;" />
      <MemberSignature Language="ILAsm" Value=".field family bool fIsEndInitCalled" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberSignature Language="VB.NET" Value="Protected fIsEndInitCalled As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected: bool fIsEndInitCalled;" />
      <MemberSignature Language="F#" Value="val mutable fIsEndInitCalled : bool" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stores a value indicating whether the initialization code for a control array's container has finished executing.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected abstract Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Type ^ GetControlInstanceType();" />
      <MemberSignature Language="F#" Value="abstract member GetControlInstanceType : unit -&gt; Type" Usage="baseControlArray.GetControlInstanceType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the type of a control in a control array.</summary>
        <returns>This method must be overridden.  The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0. Because this class is not typically used to create an instance of the class, this <see langword="Protected" /> method is usually not called directly but is instead called by a derived class.  
  
 <block subset="none" type="note"><para> Functions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implementation.  </para></block></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="GetControlInstanceType" /> dans une classe dérivée, n’appelez pas la <see langword="GetControlInstanceType" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="baseControlArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a reference to an enumerator object, which is used to iterate over a control array.</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected abstract void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void HookUpControlEvents(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="abstract member HookUpControlEvents : obj -&gt; unit" Usage="baseControlArray.HookUpControlEvents o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Adds event handlers for a control in a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode doit être substituée.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lorsque vous substituez <see langword="HookUpControlEvents" /> dans une classe dérivée, n’appelez pas la <see langword="HookUpControlEvents" /> méthode de la classe de base.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="indices">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable indices;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.Hashtable indices" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberSignature Language="VB.NET" Value="Protected indices As Hashtable " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::Hashtable ^ indices;" />
      <MemberSignature Language="F#" Value="val mutable indices : System.Collections.Hashtable" Usage="Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stores the indices for a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LBound">
      <MemberSignature Language="C#" Value="public short LBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 LBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound" />
      <MemberSignature Language="VB.NET" Value="Public Function LBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short LBound();" />
      <MemberSignature Language="F#" Value="member this.LBound : unit -&gt; int16" Usage="baseControlArray.LBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see langword="Short" /> that contains the smallest available subscript for a control array.</summary>
        <returns>A <see langword="Short" /> that contains the lower bounds of a control array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `LBound` fonction est utilisée avec la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound%2A> fonction pour déterminer la taille d’un tableau de contrôles.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Load(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(short Index);" />
      <MemberSignature Language="F#" Value="member this.Load : int16 -&gt; unit" Usage="baseControlArray.Load Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">A <see langword="Short" /> that represents the index of the new control.</param>
        <summary>Creates a new element in a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est l’équivalent de Visual Basic 6.0 `Load` fonction permettant de créer dynamiquement un élément de tableau de contrôles.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins the initialization of the control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Environnements de design utilisent généralement cette méthode pour démarrer l’initialisation d’un composant qui est utilisé sur un formulaire ou par un autre composant. Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> méthode termine l’initialisation. À l’aide de la `BeginInit` et <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23EndInit> méthodes empêche le contrôle avant son initialisation complète. L'initialisation se produit au moment de l'exécution.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ends the initialization of a control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Environnements de design utilisent généralement cette méthode pour terminer l’initialisation d’un composant qui est utilisé sur un formulaire ou par un autre composant. Le `EndInit` méthode termine l’initialisation. À l’aide de la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System%23ComponentModel%23ISupportInitialize%23BeginInit%2A> et `EndInit` méthodes empêche le contrôle avant son initialisation complète. L'initialisation se produit au moment de l'exécution.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UBound">
      <MemberSignature Language="C#" Value="public short UBound ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 UBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound" />
      <MemberSignature Language="VB.NET" Value="Public Function UBound () As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short UBound();" />
      <MemberSignature Language="F#" Value="member this.UBound : unit -&gt; int16" Usage="baseControlArray.UBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see langword="Short" /> that contains the largest available subscript for a control array.</summary>
        <returns>A <see langword="Short" /> that contains the upper bounds of a control array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `UBound` fonction est utilisée avec la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound%2A> fonction pour déterminer la taille d’un tableau de contrôles.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôles utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Unload(int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(short Index);" />
      <MemberSignature Language="F#" Value="member this.Unload : int16 -&gt; unit" Usage="baseControlArray.Unload Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">A <see langword="Short" /> that represents the index of the control to remove.</param>
        <summary>Removes a control from a control array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est l’équivalent de Visual Basic 6.0 `Unload` fonction pour la suppression dynamique d’un élément de tableau de contrôles.  
  
> [!NOTE]
>  Seuls les contrôles qui ont été ajoutés dynamiquement à l’aide de la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> méthode peut être supprimée du tableau de contrôles.  
  
 Le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray> est la classe de base pour tous les tableaux de contrôle qui sont utilisés dans les applications mises à niveau à partir de Visual Basic 6.0.  
  
> [!NOTE]
>  Les fonctions et objets de l’espace de noms <xref:Microsoft.VisualBasic.Compatibility.VB6> sont fournis pour être utilisés par les outils de mise à niveau de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d’autres espaces de noms dans le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère significativement de le [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] implémentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>