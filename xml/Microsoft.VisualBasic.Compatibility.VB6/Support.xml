<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Support.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50940bbbfdee64d0ae48fc4d7684a6abc9e7ce85b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0940bbbfdee64d0ae48fc4d7684a6abc9e7ce85b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Contains various utility functions for backward compatibility with Visual Basic 6.0.</source>
          <target state="translated">Contient différentes fonctions utilitaires pour la compatibilité descendante avec Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>The functions in this class are used during the upgrade of Visual Basic 6.0 projects to <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Les fonctions de cette classe sont utilisées pendant la mise à niveau de projets Visual Basic 6.0 vers <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Some functions replace Visual Basic 6.0 functions that are no longer supported in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>; others compensate for differences in the object models.</source>
          <target state="translated">Certaines fonctions remplacent des fonctions Visual Basic 6.0 n’est plus pris en charge dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>; d’autres compensent les différences dans les modèles d’objet.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>To use functions in this class in a <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> project, add a reference to the <ph id="ph2">`Microsoft.VisualBasic.Compatibility.VB6`</ph> namespace.</source>
          <target state="translated">Pour utiliser les fonctions de cette classe dans un <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> de projet, ajoutez une référence à la <ph id="ph2">`Microsoft.VisualBasic.Compatibility.VB6`</ph> espace de noms.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>Duplicates Visual Basic 6.0 functionality of assigning an <ph id="ph1">&lt;see langword="Array" /&gt;</ph> to a <ph id="ph2">&lt;see langword="Variant" /&gt;</ph>.</source>
          <target state="translated">Duplique la fonctionnalité de Visual Basic 6.0 permettant d'assigner un <ph id="ph1">&lt;see langword="Array" /&gt;</ph> à un <ph id="ph2">&lt;see langword="Variant" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>The array to copy.</source>
          <target state="translated">Tableau à copier.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Variant`</ph> data type is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Variant`</ph> type de données n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>The <ph id="ph1">`CopyArray`</ph> function is used by the upgrade tools to copy an <ph id="ph2">`Array`</ph> to or from a <ph id="ph3">`Variant`</ph> array.</source>
          <target state="translated">Le <ph id="ph1">`CopyArray`</ph> fonction est utilisée par les outils de mise à niveau pour copier un <ph id="ph2">`Array`</ph> vers ou depuis un <ph id="ph3">`Variant`</ph> tableau.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
          <source>To copy an array in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Array.Clone%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Array.Copy%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Array.CopyTo%2A&gt;</ph> methods of the <ph id="ph5">&lt;xref:System.Array&gt;</ph> class.</source>
          <target state="translated">Pour copier un tableau dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez le <ph id="ph2">&lt;xref:System.Array.Clone%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Array.Copy%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Array.CopyTo%2A&gt;</ph> méthodes de la <ph id="ph5">&lt;xref:System.Array&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>Returns an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object that corresponds to the specified <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph>.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE qui correspond au <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Cursor" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui représente l'objet <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`MouseIcon`</ph> property of a form or control could be used to load a custom <ph id="ph2">`MousePointer`</ph> (cursor).</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`MouseIcon`</ph> propriété d’un formulaire ou un contrôle peut servir à charger une personnalisée <ph id="ph2">`MousePointer`</ph> (curseur).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>In some cases, the image for the <ph id="ph1">`MouseIcon`</ph> was stored as a <ph id="ph2">`stdOle.IPicture`</ph>; this function is used by the upgrade tool to convert a <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> to a <ph id="ph4">`stdOle.IPicture`</ph>.</source>
          <target state="translated">Dans certains cas, l’image pour le <ph id="ph1">`MouseIcon`</ph> stockées sous la forme un <ph id="ph2">`stdOle.IPicture`</ph>; cette fonction est utilisée par l’outil de mise à niveau pour convertir un <ph id="ph3">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> à un <ph id="ph4">`stdOle.IPicture`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
          <source>To convert a <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use the <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> class.</source>
          <target state="translated">Pour convertir un <ph id="ph1">&lt;xref:System.Windows.Forms.Cursor&gt;</ph> dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez le <ph id="ph3">&lt;xref:System.Windows.Forms.AxHost.GetIPictureFromCursor%2A&gt;</ph> méthode de la <ph id="ph4">&lt;xref:System.Windows.Forms.AxHost&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Performs a logical equivalence on two expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two expressions are equal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si les deux expressions sont égales ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>If either expression is <ph id="ph1">`Null`</ph>, result is also <ph id="ph2">`Null`</ph>.</source>
          <target state="translated">Si des expressions sont <ph id="ph1">`Null`</ph>, il en résulte également <ph id="ph2">`Null`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>When neither expression is <ph id="ph1">`Null`</ph>, result is determined according to the following table:</source>
          <target state="translated">Lorsqu’aucune expression n’est <ph id="ph1">`Null`</ph>, résultat est déterminé selon le tableau suivant :</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>If expression1 is</source>
          <target state="translated">Si expression1 est</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>And expression2 is</source>
          <target state="translated">Et expression2 est</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>The result is</source>
          <target state="translated">Le résultat est</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the Visual Basic language; use the equals (=) comparison operator in place of <ph id="ph3">`Eqv`</ph> for logical evaluations.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie du langage Visual Basic ; utilisez l’opérateur de comparaison égal à (=) à la place de <ph id="ph3">`Eqv`</ph> pour les évaluations logiques.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the result of the bitwise comparison.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le résultat de la comparaison de bits.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>The <ph id="ph1">`Eqv`</ph> operator performs a bitwise comparison of identically positioned bits in two numeric expressions and sets the corresponding bit according to the following table:</source>
          <target state="translated">Le <ph id="ph1">`Eqv`</ph> opérateur effectue une comparaison au niveau du bit de position identique dans deux expressions numériques et définit le bit conformément au tableau suivant correspondant :</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>If bit in expression1 is</source>
          <target state="translated">Si le bit dans expression1 est</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>And bit in expression2 is</source>
          <target state="translated">Et le bit dans expression2 est</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>The result is</source>
          <target state="translated">Le résultat est</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the Visual Basic language; for bitwise evaluations use the <ph id="ph3">`Not`</ph> and <ph id="ph4">`XOr`</ph> operators.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie du langage Visual Basic ; pour l’utilisation de l’évaluation au niveau du bit le <ph id="ph3">`Not`</ph> et <ph id="ph4">`XOr`</ph> opérateurs.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> that contains the result of the comparison.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> qui contient le résultat de la comparaison.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the Visual Basic language; for bitwise evaluations use the <ph id="ph3">`Not`</ph> and <ph id="ph4">`XOr`</ph> operators.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie du langage Visual Basic ; pour l’utilisation de l’évaluation au niveau du bit le <ph id="ph3">`Not`</ph> et <ph id="ph4">`XOr`</ph> opérateurs.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> that contains the result of the comparison.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> qui contient le résultat de la comparaison.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> language; for bitwise evaluations use the <ph id="ph4">`Not`</ph> and <ph id="ph5">`XOr`</ph> operators.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie de la <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> langue ; pour les évaluations de bits, utilisez le <ph id="ph4">`Not`</ph> et <ph id="ph5">`XOr`</ph> opérateurs.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> that contains the result of the comparison.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> qui contient le résultat de la comparaison.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> language; for bitwise evaluations use the <ph id="ph4">`Not`</ph> and <ph id="ph5">`XOr`</ph> operators.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie de la <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> langue ; pour les évaluations de bits, utilisez le <ph id="ph4">`Not`</ph> et <ph id="ph5">`XOr`</ph> opérateurs.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à comparer.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
          <source>Performs a logical equivalence on two <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une équivalence logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the result of the comparison.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient le résultat de la comparaison.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`Eqv`</ph> operator is no longer a part of the <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> language; for bitwise evaluations use the <ph id="ph4">`Not`</ph> and <ph id="ph5">`XOr`</ph> operators.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`Eqv`</ph> opérateur n’est plus une partie de la <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> langue ; pour les évaluations de bits, utilisez le <ph id="ph4">`Not`</ph> et <ph id="ph5">`XOr`</ph> opérateurs.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Bold" /&gt;</ph> style bit; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour définir le bit de style <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Bold" /&gt;</ph> ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source>Changes the <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Bold" /&gt;</ph> style bit for a font.</source>
          <target state="translated">Modifie le bit de style <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Bold" /&gt;</ph> pour une police.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> with the new style applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> avec le nouveau style appliqué.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source>In Visual Basic 6.0, font styles were applied by setting properties; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> font styles are applied by using a <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> enumeration.</source>
          <target state="translated">Dans Visual Basic 6.0, les styles de police ont été appliquées en définissant des propriétés ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> styles de police sont appliqués en utilisant un <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
          <source>This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour traduire les propriétés de Visual Basic 6.0 en nouvelles énumérations.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>A byte value that specifies the GDI character set to use.</source>
          <target state="translated">Valeur d'octet qui spécifie le jeu de caractères GDI à utiliser.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>Returns a font for a specified GDI character set.</source>
          <target state="translated">Retourne une police pour un jeu de caractères GDI spécifié.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> for the specified GDI character set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> pour le jeu de caractères GDI spécifié.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`stdFont`</ph> object had a <ph id="ph2">`CharSet`</ph> property that specified the GDI character set for a font.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`stdFont`</ph> objet avait une <ph id="ph2">`CharSet`</ph> jeu pour une police de caractères de propriété spécifié de l’interface GDI.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the character set is specified as an optional of a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> constructor.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le jeu de caractères est spécifié comme une option d’un <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
          <source>This function is used by the upgrade tools to convert a <ph id="ph1">`stdFont`</ph> to a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir un <ph id="ph1">`stdFont`</ph> à un <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Italic" /&gt;</ph> style bit; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour définir le bit de style <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Italic" /&gt;</ph> ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source>Changes the <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Italic" /&gt;</ph> style bit for a font.</source>
          <target state="translated">Modifie le bit de style <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Italic" /&gt;</ph> pour une police.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> with the new style applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> avec le nouveau style appliqué.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source>In Visual Basic 6.0, font styles were applied by setting properties; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> font styles are applied by using a <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> enumeration.</source>
          <target state="translated">Dans Visual Basic 6.0, les styles de police ont été appliquées en définissant des propriétés ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> styles de police sont appliqués en utilisant un <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
          <source>This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour traduire les propriétés de Visual Basic 6.0 en nouvelles énumérations.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="Font" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph> qui représente la propriété <ph id="ph2">&lt;see langword="Font" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> for a given Visual Basic 6.0 <ph id="ph2">&lt;see langword="Font" /&gt;</ph>.</source>
          <target state="translated">Retourne un nouveau <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> pour un <ph id="ph2">&lt;see langword="Font" /&gt;</ph> de Visual Basic 6.0 donné.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that matches the Visual Basic 6.0 <ph id="ph2">&lt;see langword="Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> qui correspond au <ph id="ph2">&lt;see langword="Font" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>In Visual Basic 6.0, the name of a font was specified by the <ph id="ph1">`Font`</ph> property; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph3">&lt;xref:System.Drawing.Font.Name%2A&gt;</ph> is a property of the <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
          <target state="translated">Dans Visual Basic 6.0, le nom de la police a été spécifié par le <ph id="ph1">`Font`</ph> propriété ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph3">&lt;xref:System.Drawing.Font.Name%2A&gt;</ph> est une propriété de la <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
          <source>This function is used by the upgrade tools to convert a Visual Basic 6.0 <ph id="ph1">`Font`</ph> to a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir un Visual Basic 6.0 <ph id="ph1">`Font`</ph> à un <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>A <ph id="ph1">&lt;see langword="Single" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="FontSize" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Single" /&gt;</ph> qui représente la propriété <ph id="ph2">&lt;see langword="FontSize" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>Changes the <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Size" /&gt;</ph> property for a font.</source>
          <target state="translated">Modifie la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Font.Size" /&gt;</ph> pour une police.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> that matches the Visual Basic 6.0 <ph id="ph2">&lt;see langword="FontSize" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> qui correspond au <ph id="ph2">&lt;see langword="FontSize" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>In Visual Basic 6.0, the size of a font was specified by the <ph id="ph1">`FontSize`</ph> property; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph3">&lt;xref:System.Drawing.Font.Size%2A&gt;</ph> is a property of the <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
          <target state="translated">Dans Visual Basic 6.0, la taille de la police a été spécifiée par le <ph id="ph1">`FontSize`</ph> propriété ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, <ph id="ph3">&lt;xref:System.Drawing.Font.Size%2A&gt;</ph> est une propriété de la <ph id="ph4">&lt;xref:System.Drawing.Font&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
          <source>This function is used by the upgrade tools to convert a Visual Basic 6.0 <ph id="ph1">`Font`</ph> to a <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir un Visual Basic 6.0 <ph id="ph1">`Font`</ph> à un <ph id="ph2">&lt;xref:System.Drawing.Font&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Strikeout" /&gt;</ph> style bit; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour définir le bit de style <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Strikeout" /&gt;</ph> ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source>Changes the <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Strikeout" /&gt;</ph> style bit for a font.</source>
          <target state="translated">Modifie le bit de style <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Strikeout" /&gt;</ph> pour une police.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> with the new style applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> avec le nouveau style appliqué.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source>In Visual Basic 6.0, font styles were applied by setting properties; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> font styles are applied by using a <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> enumeration.</source>
          <target state="translated">Dans Visual Basic 6.0, les styles de police ont été appliquées en définissant des propriétés ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> styles de police sont appliqués en utilisant un <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
          <source>This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour traduire les propriétés de Visual Basic 6.0 en nouvelles énumérations.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Underline" /&gt;</ph> style bit; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour définir le bit de style <ph id="ph2">&lt;see cref="F:System.Drawing.FontStyle.Underline" /&gt;</ph> ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source>Changes the <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Underline" /&gt;</ph> style bit for a font.</source>
          <target state="translated">Modifie le bit de style <ph id="ph1">&lt;see cref="F:System.Drawing.FontStyle.Underline" /&gt;</ph> pour une police.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> with the new style applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> avec le nouveau style appliqué.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source>In Visual Basic 6.0, font styles were applied by setting properties; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> font styles are applied by using a <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> enumeration.</source>
          <target state="translated">Dans Visual Basic 6.0, les styles de police ont été appliquées en définissant des propriétés ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> styles de police sont appliqués en utilisant un <ph id="ph2">&lt;xref:System.Drawing.FontStyle&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
          <source>This function is used by the upgrade tools to translate the Visual Basic 6.0 properties to the new enumerations.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour traduire les propriétés de Visual Basic 6.0 en nouvelles énumérations.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> to a Visual Basic 6.0 <ph id="ph2">&lt;see langword="stdFont" /&gt;</ph> object.</source>
          <target state="translated">Convertit un <ph id="ph1">&lt;see cref="T:System.Drawing.Font" /&gt;</ph> en un objet <ph id="ph2">&lt;see langword="stdFont" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
          <source>A <ph id="ph1">&lt;see langword="stdFont" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see langword="stdFont" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
          <source>The Visual Basic 6.0 <ph id="ph1">`stdFont`</ph> object was COM-based and has no equivalent in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`stdFont`</ph> objet a été basé sur COM et n’a pas d’équivalent <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
          <source>This function is used by the upgrade tools to convert between a <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> and a <ph id="ph2">`stdFont`</ph> during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> et un <ph id="ph2">`stdFont`</ph> au cours de la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> expression to convert.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à convertir.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents a date format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui représente un format de date.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /&gt;</ph> enumeration.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /&gt;</ph> enumeration.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>Converts the Visual Basic 6.0 <ph id="ph1">&lt;see langword="Format" /&gt;</ph> function to be compatible with <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Convertit la fonction <ph id="ph1">&lt;see langword="Format" /&gt;</ph> de Visual Basic 6.0 pour être compatible avec <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the formatted data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient les données mises en forme.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Format`</ph> function could operate on a <ph id="ph2">`Variant`</ph> data type; in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> the <ph id="ph4">`Variant`</ph> data type no longer exists.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Format`</ph> fonction peut fonctionner sur un <ph id="ph2">`Variant`</ph> type de données ; dans <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> le <ph id="ph4">`Variant`</ph> type de données n’existe plus.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
          <source>This function is used by the upgrade tools to convert a <ph id="ph1">`Variant`</ph> formatted by using the <ph id="ph2">`Format`</ph> function to a common language runtime-compliant type.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir un <ph id="ph1">`Variant`</ph> mis en forme à l’aide de la <ph id="ph2">`Format`</ph> fonction à un type conforme à l’exécution de common language.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the height.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la hauteur.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the height in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la hauteur en pixels.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleHeight" /&gt;</ph> measurement.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure <ph id="ph1">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the width.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la largeur.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the width in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la largeur en pixels.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleWidth" /&gt;</ph> measurement.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure <ph id="ph1">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the X coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée X.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the width in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la largeur en pixels.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleLeft" /&gt;</ph> measurement.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure <ph id="ph1">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the X coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée X.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the height in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la hauteur en pixels.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleTop" /&gt;</ph> measurement.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure <ph id="ph1">&lt;see langword="ScaleTop" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the X coordinate in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée X en pixels.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> enumeration that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> to convert to.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> qui représente la propriété <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> Visual Basic 6.0 vers laquelle effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph>.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure Visual Basic 6.0 pour un <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the Visual Basic 6.0 value for the specified <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient la valeur Visual Basic 6.0 pour le <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Y coordinate in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée Y en pixels.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> enumeration that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> to convert to.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> qui représente la propriété <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> Visual Basic 6.0 vers laquelle effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph>.</source>
          <target state="translated">Convertit une mesure en pixels en une mesure Visual Basic 6.0 pour un <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the Visual Basic 6.0 value for the specified <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient la valeur Visual Basic 6.0 pour le <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
          <source>Gets the control that currently has focus.</source>
          <target state="translated">Obtient le contrôle qui a actuellement le focus.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
          <source>The control that currently has focus.</source>
          <target state="translated">Contrôle qui détient actuellement le focus.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
          <source>This function is used by the upgrade tools to replace the Visual Basic 6.0 <ph id="ph1">`Screen.ActiveControl`</ph> property.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le Visual Basic 6.0 <ph id="ph1">`Screen.ActiveControl`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
          <source>It is the equivalent of calling <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Il est l’équivalent de l’appel de <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control.</source>
          <target state="translated">un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
          <source>Gets a value that indicates whether a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> is the cancel button on a form.</source>
          <target state="translated">Obtient ou définit une valeur qui indique si un <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> est le bouton Annuler d'un formulaire.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="btn" /&gt;</ph> is the cancel button; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;paramref name="btn" /&gt;</ph> est le bouton Annuler ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
          <source>This function is the equivalent of checking the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Cette fonction est l’équivalent de la vérification de la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control.</source>
          <target state="translated">un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
          <source>Gets sets a value that determines whether a <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> control is the default button on a form.</source>
          <target state="translated">Obtient ou définit une valeur qui détermine si un contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph> est le bouton par défaut sur un formulaire.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="btn" /&gt;</ph> is the default button; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="btn" /&gt;</ph> est le bouton par défaut ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
          <source>This function is the equivalent of checking the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Cette fonction est l’équivalent de la vérification de la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName">
          <source>Gets the name of the executable file (.exe) for the current application.</source>
          <target state="translated">Obtient le nom du fichier exécutable (.exe) pour l'application actuelle.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the name without a file name extension.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient le nom sans extension de nom de fichier.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance">
          <source>Gets the instance handle (HINSTANCE) for the current application.</source>
          <target state="translated">Obtient le handle d'instance (HINSTANCE) pour l'application actuelle.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> for the current application instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> pour l'instance de l'application actuelle.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance">
          <source>This function is the equivalent of calling <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A&gt;</ph>.</source>
          <target state="translated">Cette fonction est l’équivalent de l’appel de <ph id="ph1">&lt;xref:System.Runtime.InteropServices.Marshal.GetHINSTANCE%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> control.</source>
          <target state="translated">Contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the index of the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente l'index de <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>Gets an <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> associated with a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> item.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> associé à un élément <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`ItemData`</ph> property for a <ph id="ph2">`ListBox`</ph> or <ph id="ph3">`ComboBox`</ph> control could be set at design time in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window to associate an <ph id="ph4">`Integer`</ph> with a <ph id="ph5">`ListBox`</ph> or <ph id="ph6">`ComboBox`</ph> item.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`ItemData`</ph> propriété pour un <ph id="ph2">`ListBox`</ph> ou <ph id="ph3">`ComboBox`</ph> contrôle peut être défini au moment du design dans le <bpt id="p1">**</bpt>propriétés<ept id="p1">**</ept> pour associer un <ph id="ph4">`Integer`</ph> avec un <ph id="ph5">`ListBox`</ph> ou <ph id="ph6">`ComboBox`</ph> élément.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`ItemData`</ph> property no longer exists; the <ph id="ph3">`GetItemData`</ph> and <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A&gt;</ph> methods can be used to emulate the behavior of <ph id="ph5">`ItemData`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`ItemData`</ph> propriété n’existe plus ; le <ph id="ph3">`GetItemData`</ph> et <ph id="ph4">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData%2A&gt;</ph> méthodes peuvent être utilisées pour émuler le comportement de <ph id="ph5">`ItemData`</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> control.</source>
          <target state="translated">Contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the index of the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente l'index de <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> associated with a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> item.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> associé à un élément <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> associé au <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>This function is used by the upgrade tools to emulate the Visual Basic 6.0 <ph id="ph1">`List`</ph> property.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour émuler le Visual Basic 6.0 <ph id="ph1">`List`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox.Items%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox.Items%2A&gt;</ph> property instead.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez le <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox.Items%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox.Items%2A&gt;</ph> propriété à la place.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath">
          <source>Gets the current path for the application.</source>
          <target state="translated">Obtient le chemin actuel de l’application.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the path of the currently executing assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient le chemin d'accès à l'assembly en cours d'exécution.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
          <source>Gets an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object for a given <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE pour un <ph id="ph2">&lt;see cref="T:System.Drawing.Icon" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> représentant l’objet OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
          <source>In Visual Basic 6.0, an OLE <ph id="ph1">`IPicture`</ph> object could be used to specify an icon; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the OLE <ph id="ph3">`IPicture`</ph> format is no longer supported.</source>
          <target state="translated">Dans Visual Basic 6.0, OLE <ph id="ph1">`IPicture`</ph> objet peut être utilisé pour spécifier une icône ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, OLE <ph id="ph3">`IPicture`</ph> format n’est plus pris en charge.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
          <source>This function is used by the upgrade tools to convert between an <ph id="ph1">`IPicture`</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">`IPicture`</ph> et un <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains a Visual Basic 6.0 <ph id="ph2">&lt;see langword="stdFont" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient un <ph id="ph2">&lt;see langword="stdFont" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
          <source>Converts a Visual Basic 6.0 <ph id="ph1">&lt;see langword="stdFont" /&gt;</ph> object to a <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</source>
          <target state="translated">Convertit un objet <ph id="ph1">&lt;see langword="stdFont" /&gt;</ph> de Visual Basic 6.0 en un <ph id="ph2">&lt;see cref="T:System.Drawing.Font" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
          <source>A specified object to convert.</source>
          <target state="translated">Objet spécifié à convertir.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
          <source>The Visual Basic 6.0 <ph id="ph1">`stdFont`</ph> object was COM-based and has no equivalent in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`stdFont`</ph> objet a été basé sur COM et n’a pas d’équivalent <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
          <source>This function is used by the upgrade tools to convert between a <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> and a <ph id="ph2">`stdFont`</ph> during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> et un <ph id="ph2">`stdFont`</ph> au cours de la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
          <source>Gets an OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object for a given <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE pour un <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> représentant l’objet OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
          <source>In Visual Basic 6.0, an OLE <ph id="ph1">`IPicture`</ph> object could be used to specify an image; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the OLE <ph id="ph3">`IPicture`</ph> format is no longer supported.</source>
          <target state="translated">Dans Visual Basic 6.0, OLE <ph id="ph1">`IPicture`</ph> objet peut être utilisé pour spécifier une image ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, OLE <ph id="ph3">`IPicture`</ph> format n’est plus pris en charge.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
          <source>This function is used by the upgrade tools to convert between an <ph id="ph1">`IPicture`</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">`IPicture`</ph> et un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
          <source>Gets an OLE <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> object for a given <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> OLE pour un <ph id="ph2">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> représentant l’objet OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
          <source>In Visual Basic 6.0, an OLE <ph id="ph1">`IPictureDisp`</ph> object could be used to specify an image; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the OLE <ph id="ph3">`IPicture`</ph> format is no longer supported.</source>
          <target state="translated">Dans Visual Basic 6.0, OLE <ph id="ph1">`IPictureDisp`</ph> objet peut être utilisé pour spécifier une image ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, OLE <ph id="ph3">`IPicture`</ph> format n’est plus pris en charge.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
          <source>This function is used by the upgrade tools to convert between an <ph id="ph1">`IPicture`</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">`IPicture`</ph> et un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Performs a logical implication on two expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> instead of <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> au lieu de <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> to replace <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> remplacer <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see langword="Short" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Short" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see langword="Short" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Short" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>A <ph id="ph1">&lt;see langword="Short" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Short" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> to replace <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> remplacer <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> to replace <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> remplacer <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see langword="Long" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see langword="Long" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see langword="Long" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>A <ph id="ph1">&lt;see langword="Long" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Long" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> to replace <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> remplacer <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> expression.</source>
          <target state="translated">Expression <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>Performs a logical implication on two <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> expressions.</source>
          <target state="translated">Exécute une implication logique sur deux expressions <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient le résultat.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>The Visual Basic 6.0 <ph id="ph1">`Imp`</ph> operator is no longer supported in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Visual Basic 6.0 <ph id="ph1">`Imp`</ph> opérateur n’est plus pris en charge dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>This function is used by the upgrade tools to replace the <ph id="ph1">`Imp`</ph> operator during project upgrade.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour remplacer le <ph id="ph1">`Imp`</ph> opérateur pendant la mise à niveau du projet.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>During upgrade, the Variant data type is upgraded to <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Au cours de la mise à niveau, le type de données Variant est mis à niveau vers <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use <ph id="ph2">`Not`</ph> and <ph id="ph3">`XOr`</ph> to replace <ph id="ph4">`Imp`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez <ph id="ph2">`Not`</ph> et <ph id="ph3">`XOr`</ph> remplacer <ph id="ph4">`Imp`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
          <source>An OLE <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see langword="IPictureDisp" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> for a given OLE <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> object.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pour un objet <ph id="ph2">&lt;see langword="IPictureDisp" /&gt;</ph> OLE donné.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
          <source>An image object.</source>
          <target state="translated">Objet image.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
          <source>In Visual Basic 6.0, an OLE <ph id="ph1">`IPictureDisp`</ph> object could be used to specify an image; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the OLE <ph id="ph3">`IPicture`</ph> format is no longer supported.</source>
          <target state="translated">Dans Visual Basic 6.0, OLE <ph id="ph1">`IPictureDisp`</ph> objet peut être utilisé pour spécifier une image ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, OLE <ph id="ph3">`IPicture`</ph> format n’est plus pris en charge.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
          <source>This function is used by the upgrade tools to convert between an <ph id="ph1">`IPictureDisp`</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">`IPictureDisp`</ph> et un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
          <source>An OLE <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see langword="IPicture" /&gt;</ph> OLE.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> for a given OLE <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> object.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> pour un objet <ph id="ph2">&lt;see langword="IPicture" /&gt;</ph> OLE donné.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
          <source>A converted object to image.</source>
          <target state="translated">Objet converti en image.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
          <source>In Visual Basic 6.0, an OLE <ph id="ph1">`IPicture`</ph> object could be used to specify an image; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the OLE <ph id="ph3">`IPicture`</ph> format is no longer supported.</source>
          <target state="translated">Dans Visual Basic 6.0, OLE <ph id="ph1">`IPicture`</ph> objet peut être utilisé pour spécifier une image ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, OLE <ph id="ph3">`IPicture`</ph> format n’est plus pris en charge.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
          <source>This function is used by the upgrade tools to convert between an <ph id="ph1">`IPicture`</ph> and a <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre un <ph id="ph1">`IPicture`</ph> et un <ph id="ph2">&lt;xref:System.Drawing.Image&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Loads data of several possible types from a resource (.res) file and returns a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated">Charge des données de plusieurs types à partir d'un fichier de ressources (.res) et retourne un tableau <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the resource type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie le type de ressource.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>Loads data of several possible types from a resource (.res) file.</source>
          <target state="translated">Charge des données de plusieurs types à partir d'un fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the resource type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie le type de ressource.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object that specifies the locale.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> qui spécifie les paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>Loads data of several possible types from a resource (.res) file, specifying a locale.</source>
          <target state="translated">Charge des données de plusieurs types à partir d'un fichier de ressources (.res), en spécifiant des paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Loads a bitmap, icon, or cursor from a resource (.res) file.</source>
          <target state="translated">Charge une bitmap, une icône ou un curseur à partir d'un fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /&gt;</ph> enumeration that specifies the resource type.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /&gt;</ph> qui spécifie le type de ressource.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>Loads a bitmap, icon, or cursor from a resource (.res) file.</source>
          <target state="translated">Charge une bitmap, une icône ou un curseur à partir d'un fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /&gt;</ph> enumeration that specifies the resource type.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /&gt;</ph> qui spécifie le type de ressource.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object that specifies the locale.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> qui spécifie les paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</source>
          <target state="translated">Charge une bitmap, une icône ou un curseur à partir d'un fichier de ressources (.res), en spécifiant des paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Loads a string from a resource (.res) file.</source>
          <target state="translated">Charge une chaîne à partir d'un fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>Loads a string from a resource (.res) file.</source>
          <target state="translated">Charge une chaîne à partir d'un fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that specifies the data in the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui spécifie les données dans le fichier de ressources.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> object that specifies the locale.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> qui spécifie les paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>Loads a string from a resource (.res) file, specifying a locale.</source>
          <target state="translated">Charge une chaîne à partir d'un fichier de ressources (.res), en spécifiant des paramètres régionaux.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient la ressource.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>In Visual Basic 6.0, international versions of an application were created by putting all localizable information, such as strings, into a separate resource file (.res) for each language.</source>
          <target state="translated">Dans Visual Basic 6.0, les versions internationales d’une application ont été créées en plaçant toutes les informations localisables, telles que des chaînes, dans un fichier de ressources distinct (.res) pour chaque langue.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>At run time, locale-specific resources were loaded from the resource file by calling the <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, and <ph id="ph3">`LoadResData`</ph> functions.</source>
          <target state="translated">Au moment de l’exécution des ressources spécifiques aux paramètres régionaux étaient chargées à partir du fichier de ressources en appelant le <ph id="ph1">`LoadResString`</ph>, <ph id="ph2">`LoadResPicture`</ph>, et <ph id="ph3">`LoadResData`</ph> fonctions.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, international versions of an application are created by changing the <ph id="ph2">`Language`</ph> property of a form at design time.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, versions internationales d’une application sont créées en modifiant le <ph id="ph2">`Language`</ph> propriété d’un formulaire au moment du design.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>A separate resource file (.resx) is automatically created for each locale selected.</source>
          <target state="translated">Un fichier de ressources distinct (.resx) est automatiquement créé pour chaque paramètre régional sélectionné.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>You no longer have to explicitly load resources from code; resources are automatically loaded based on the user's locale.</source>
          <target state="translated">Vous n’avez plus de charger explicitement des ressources à partir du code ; ressources sont chargées automatiquement en fonction des paramètres régionaux de l’utilisateur.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
          <source>For more information, see <bpt id="p1">[</bpt>Globalizing Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>globalisation des Windows Forms<ept id="p1">](~/docs/framework/winforms/advanced/globalizing-windows-forms.md)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the X coordinate to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée X à convertir.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
          <source>Converts an X coordinate from pixels to twips.</source>
          <target state="translated">Convertit une coordonnée X de pixels en twips.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the X coordinate expressed in twips.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée X exprimée en twips.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the Y coordinate to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée Y à convertir.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
          <source>Converts a Y coordinate from pixels to twips.</source>
          <target state="translated">Convertit une coordonnée Y de pixels en twips.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the Y coordinate expressed in twips.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée Y exprimée en twips.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the key values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient les valeurs de clé.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to process keystrokes before control is returned to the procedure; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour traiter des séquences de touches avant que le contrôle soit retourné à la procédure ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
          <source>Sends one or more keystrokes to the active window as if typed at the keyboard.</source>
          <target state="translated">Envoie une ou plusieurs séquences de touches à la fenêtre active, comme si elle était tapée sur le clavier.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
          <source>This function is used by the upgrade tools to emulate the Visual Basic 6.0 <ph id="ph1">`SendKeys`</ph> method.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour émuler le Visual Basic 6.0 <ph id="ph1">`SendKeys`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use the <ph id="ph2">`My.Computer.Keyboard.SendKeys`</ph> method instead.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez la <ph id="ph2">`My.Computer.Keyboard.SendKeys`</ph> méthode à la place.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the Visual Basic 6.0 <ph id="ph2">&lt;see langword="CommandButton" /&gt;</ph> control's <ph id="ph3">&lt;see langword="Cancel" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true" /&gt;</ph>; otherwise <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété <ph id="ph2">&lt;see langword="CommandButton" /&gt;</ph> du contrôle <ph id="ph3">&lt;see langword="Cancel" /&gt;</ph> de Visual Basic 6.0 est <ph id="ph4">&lt;see langword="true" /&gt;</ph> ; sinon <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.CancelButton" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.CancelButton" /&gt;</ph> d'un <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>In Visual Basic 6.0, the Boolean <ph id="ph1">`Default`</ph> and <ph id="ph2">`Cancel`</ph> properties of a <ph id="ph3">`CommandButton`</ph> control determine whether the control responds to the ENTER or ESC keys, respectively.</source>
          <target state="translated">Dans Visual Basic 6.0, la valeur booléenne <ph id="ph1">`Default`</ph> et <ph id="ph2">`Cancel`</ph> propriétés d’un <ph id="ph3">`CommandButton`</ph> contrôle déterminer si le contrôle répond respectivement aux touches entrée ou ÉCHAP.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control no longer has <ph id="ph3">`Default`</ph> or <ph id="ph4">`Cancel`</ph> properties.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> contrôle n’a plus de <ph id="ph3">`Default`</ph> ou <ph id="ph4">`Cancel`</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> object has <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> properties that provide the same functionality; these properties take the name of a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control as an argument.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> objet a <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> propriétés qui fournissent les mêmes fonctionnalités ; ces propriétés prennent le nom d’un <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> contrôle en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
          <source>This function is used by the upgrade tools to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.based on the <ph id="ph3">`Cancel`</ph> property of an upgraded Visual Basic 6.0 <ph id="ph4">`CommandButton`</ph> control.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour définir la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>en fonction de la <ph id="ph3">`Cancel`</ph> propriété d’une mise à niveau de Visual Basic 6.0 <ph id="ph4">`CommandButton`</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Button" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the Visual Basic 6.0 <ph id="ph2">&lt;see langword="CommandButton" /&gt;</ph> control's <ph id="ph3">&lt;see langword="Default" /&gt;</ph> property is <ph id="ph4">&lt;see langword="true" /&gt;</ph>; otherwise <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété <ph id="ph2">&lt;see langword="CommandButton" /&gt;</ph> du contrôle <ph id="ph3">&lt;see langword="Default" /&gt;</ph> de Visual Basic 6.0 est <ph id="ph4">&lt;see langword="true" /&gt;</ph> ; sinon <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>Sets the <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AcceptButton" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="P:System.Windows.Forms.Form.AcceptButton" /&gt;</ph> d'un <ph id="ph2">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>In Visual Basic 6.0, the Boolean <ph id="ph1">`Default`</ph> and <ph id="ph2">`Cancel`</ph> properties of a <ph id="ph3">`CommandButton`</ph> control determine whether the control responds to the ENTER or ESC keys, respectively.</source>
          <target state="translated">Dans Visual Basic 6.0, la valeur booléenne <ph id="ph1">`Default`</ph> et <ph id="ph2">`Cancel`</ph> propriétés d’un <ph id="ph3">`CommandButton`</ph> contrôle déterminer si le contrôle répond respectivement aux touches entrée ou ÉCHAP.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> control no longer has <ph id="ph3">`Default`</ph> or <ph id="ph4">`Cancel`</ph> properties.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">&lt;xref:System.Windows.Forms.Button&gt;</ph> contrôle n’a plus de <ph id="ph3">`Default`</ph> ou <ph id="ph4">`Cancel`</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> object has <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> properties that provide the same functionality; these properties take the name of a <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> control as an argument.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> objet a <ph id="ph2">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> propriétés qui fournissent les mêmes fonctionnalités ; ces propriétés prennent le nom d’un <ph id="ph4">&lt;xref:System.Windows.Forms.Button&gt;</ph> contrôle en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
          <source>This function is used by the upgrade tools to set the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.based on the <ph id="ph3">`Default`</ph> property of an upgraded Visual Basic 6.0 <ph id="ph4">`CommandButton`</ph> control.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour définir la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> propriété d’un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>en fonction de la <ph id="ph3">`Default`</ph> propriété d’une mise à niveau de Visual Basic 6.0 <ph id="ph4">`CommandButton`</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> control.</source>
          <target state="translated">Contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see langword="Index" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Index" /&gt;</ph> du <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> to assign to the <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> à assigner à la propriété <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>Sets the <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /&gt;</ph> property for a <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /&gt;</ph> d'un <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`ItemData`</ph> property for a <ph id="ph2">`ListBox`</ph> or <ph id="ph3">`ComboBox`</ph> control could be set at design time in the <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window to associate an <ph id="ph4">`Integer`</ph> with a <ph id="ph5">`ListBox`</ph> or <ph id="ph6">`ComboBox`</ph> item.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`ItemData`</ph> propriété pour un <ph id="ph2">`ListBox`</ph> ou <ph id="ph3">`ComboBox`</ph> contrôle peut être défini au moment du design dans le <bpt id="p1">**</bpt>propriétés<ept id="p1">**</ept> pour associer un <ph id="ph4">`Integer`</ph> avec un <ph id="ph5">`ListBox`</ph> ou <ph id="ph6">`ComboBox`</ph> élément.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`ItemData`</ph> property no longer exists; the <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A&gt;</ph> and <ph id="ph4">`SetItemData`</ph> methods can be used to emulate the behavior of <ph id="ph5">`ItemData`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`ItemData`</ph> propriété n’existe plus ; le <ph id="ph3">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData%2A&gt;</ph> et <ph id="ph4">`SetItemData`</ph> méthodes peuvent être utilisées pour émuler le comportement de <ph id="ph5">`ItemData`</ph>.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph><ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph> control.</source>
          <target state="translated">Contrôle <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> <ph id="ph2">&lt;see cref="T:System.Windows.Forms.ListBox" /&gt;</ph> ou <ph id="ph3">&lt;see cref="T:System.Windows.Forms.ComboBox" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;see langword="Index" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Index" /&gt;</ph> du <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> to assign to the <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> à assigner à la propriété <ph id="ph2">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>Sets the <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /&gt;</ph> property for a <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</source>
          <target state="translated">Définit la propriété <ph id="ph1">&lt;see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /&gt;</ph> d'un <ph id="ph2">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>This function is used by the upgrade tools to emulate the Visual Basic 6.0 <ph id="ph1">`List`</ph> property.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour émuler le Visual Basic 6.0 <ph id="ph1">`List`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox.Items%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox.Items%2A&gt;</ph> property instead.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, utilisez le <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox.Items%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.ListBox.Items%2A&gt;</ph> propriété à la place.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
          <source>Assigns the name of a Visual Basic 6.0 resource file to the Visual Basic project namespace.</source>
          <target state="translated">Attribue le nom d’un fichier de ressources Visual Basic 6.0 à l’espace de noms du projet Visual Basic.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
          <source>A resource file (.res).</source>
          <target state="translated">Fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
          <source>Assigns the name of a Visual Basic 6.0 resource file to the current <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> project namespace.</source>
          <target state="translated">Assigne le nom d'un fichier de ressources Visual Basic 6.0 à l'espace de noms du projet <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> actuel.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
          <source>Resource handling is different for Visual Basic 6.0 and <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Gestion des ressources est différente pour Visual Basic 6.0 et <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
          <source>This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour ajouter un fichier de ressources Visual Basic 6.0 à un projet.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the <ph id="ph2">&lt;see langword="Namespace" /&gt;</ph> for the resource file.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="Namespace" /&gt;</ph> du fichier de ressources.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
          <source>A resource file (.res).</source>
          <target state="translated">Fichier de ressources (.res).</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
          <source>Assigns the name of a Visual Basic 6.0 resource file to a <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> project namespace.</source>
          <target state="translated">Assigne le nom d'un fichier de ressources Visual Basic 6.0 à un espace de noms du projet <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
          <source>Resource handling is different for Visual Basic 6.0 and <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Gestion des ressources est différente pour Visual Basic 6.0 et <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
          <source>This function is used by the upgrade tools to add a Visual Basic 6.0 resource file to a project.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour ajouter un fichier de ressources Visual Basic 6.0 à un projet.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> to display.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph> à afficher.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /&gt;</ph> enumeration that specifies modality.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /&gt;</ph> qui spécifie la modalité.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>Optional.</source>
          <target state="translated">Optionnel.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>owner<ept id="p1">&lt;/c&gt;</ept> parameter of the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.ShowDialog" /&gt;</ph> method.</source>
          <target state="translated">Paramètre <bpt id="p1">&lt;c&gt;</bpt>owner<ept id="p1">&lt;/c&gt;</ept> de la méthode <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Form.ShowDialog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>Displays a form by calling either the <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Show" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.ShowDialog" /&gt;</ph> method.</source>
          <target state="translated">Affiche un formulaire en appelant la méthode <ph id="ph1">&lt;see cref="M:System.Windows.Forms.Control.Show" /&gt;</ph> ou <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Form.ShowDialog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`Show`</ph> method specified whether a Form would be displayed modally; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> it is replaced by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> methods.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`Show`</ph> méthode spécifié si un formulaire présentait un affichage modal ; dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> il est remplacé par le <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
          <source>This function is used by the upgrade tools to map the Visual Basic 6.0 <ph id="ph1">`Show`</ph> method to either the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour mapper le Visual Basic 6.0 <ph id="ph1">`Show`</ph> méthode soit le <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
          <source>An expression or list of expressions to print.</source>
          <target state="translated">Expression ou liste d'expressions à imprimer.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
          <source>Formats strings to simulate the Visual Basic 6.0 <ph id="ph1">&lt;see langword="Debug.Print" /&gt;</ph> functionality.</source>
          <target state="translated">Met en forme des chaînes pour simuler les fonctionnalités <ph id="ph1">&lt;see langword="Debug.Print" /&gt;</ph> de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
          <source>A formatted <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> mis en forme.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
          <source>In Visual Basic 6.0, the <ph id="ph1">`Debug.Print`</ph> method had an <ph id="ph2">`outputlist`</ph> parameter that specified how output was formatted in the <bpt id="p1">**</bpt>Immediate<ept id="p1">**</ept> window.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`Debug.Print`</ph> méthode comportait un <ph id="ph2">`outputlist`</ph> paramètre qui spécifié la sortie a été mise en forme dans le <bpt id="p1">**</bpt>exécution<ept id="p1">**</ept> fenêtre.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
          <source>This function is used by the upgrade tools to translate the <ph id="ph1">`outputlist`</ph> parameter into a string for display in the <bpt id="p1">**</bpt>Immediate<ept id="p1">**</ept> window.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour traduire le <ph id="ph1">`outputlist`</ph> paramètre dans une chaîne à afficher dans le <bpt id="p1">**</bpt>exécution<ept id="p1">**</ept> fenêtre.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the height.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la hauteur.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the height in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la hauteur en pixels.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>Converts a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleHeight" /&gt;</ph> measurement to a pixel measurement.</source>
          <target state="translated">Convertit une mesure <ph id="ph1">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 en une mesure en pixels.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the width.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la largeur.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the width in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la largeur en pixels.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>Converts a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleWidth" /&gt;</ph> measurement to a pixel measurement.</source>
          <target state="translated">Convertit une mesure <ph id="ph1">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 en une mesure en pixels.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the X coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée X.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleWidth" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the width in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la largeur en pixels.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>Converts a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleLeft" /&gt;</ph> measurement to a pixel measurement.</source>
          <target state="translated">Convertit une mesure <ph id="ph1">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 en une mesure en pixels.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Y coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée Y.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleTop" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> for the current <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente le <ph id="ph2">&lt;see langword="ScaleHeight" /&gt;</ph> de Visual Basic 6.0 pour le <ph id="ph3">&lt;see langword="ScaleMode" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>An <ph id="ph1">&lt;see langword="Integer" /&gt;</ph> that represents the height in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Integer" /&gt;</ph> qui représente la hauteur en pixels.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>Converts a Visual Basic 6.0 <ph id="ph1">&lt;see langword="ScaleTop" /&gt;</ph> measurement to a pixel measurement.</source>
          <target state="translated">Convertit une mesure <ph id="ph1">&lt;see langword="ScaleTop" /&gt;</ph> de Visual Basic 6.0 en une mesure en pixels.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the converted Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient le <ph id="ph2">&lt;see langword="ScaleLeft" /&gt;</ph> de Visual Basic 6.0 converti.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the X coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée X.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> enumeration that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> to convert from.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> qui représente le Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> à partir duquel effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph>.</source>
          <target state="translated">Convertit une mesure Visual Basic 6.0 en une mesure en pixels pour un <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the pixel value for the specified <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient la valeur en pixels de <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the Y coordinate.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui représente la coordonnée Y.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> enumeration that represents the Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> to convert from.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> qui représente le Visual Basic 6.0 <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> à partir duquel effectuer la conversion.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph>.</source>
          <target state="translated">Convertit une mesure Visual Basic 6.0 en une mesure en pixels pour un <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /&gt;</ph> donné.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that contains the pixel value for the specified <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> qui contient la valeur en pixels de <ph id="ph2">&lt;see langword="ScaleMode" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>Visual Basic 6.0 supported multiple coordinate systems defined by a <ph id="ph1">`ScaleMode`</ph> property.</source>
          <target state="translated">Visual Basic 6.0 pris en charge plusieurs systèmes de coordonnées définies par un <ph id="ph1">`ScaleMode`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This included a user-defined value.</source>
          <target state="translated">Cette partie d’une valeur définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> only supports a coordinate system that is based on pixels.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> prend uniquement en charge un système de coordonnées basé sur les pixels.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
          <source>This function is used by the upgrade tools to convert between pixels and a user-defined scale value.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour convertir entre pixels et une valeur d’échelle définie par l’utilisateur.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
          <source>Gets a value that is used to convert twips to pixels based on screen settings.</source>
          <target state="translated">Obtient une valeur utilisée pour convertir des twips en pixels selon les paramètres d'écran.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the conversion factor.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient le facteur de conversion.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
          <source>Gets a value that is used to convert twips to pixels based on screen settings.</source>
          <target state="translated">Obtient une valeur utilisée pour convertir des twips en pixels selon les paramètres d'écran.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the conversion factor.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient le facteur de conversion.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the X coordinate to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée X à convertir.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
          <source>Converts an X coordinate from twips to pixels.</source>
          <target state="translated">Convertit une coordonnée X de twips en pixels.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the X coordinate expressed in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée X exprimée en pixels.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the X coordinate to convert.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée X à convertir.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
          <source>Converts a Y coordinate from twips to pixels.</source>
          <target state="translated">Convertit une coordonnée Y de twips en pixels.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
          <source>A <ph id="ph1">&lt;see langword="Double" /&gt;</ph> that contains the Y coordinate expressed in pixels.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Double" /&gt;</ph> qui contient la coordonnée Y exprimée en pixels.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
          <source>In Visual Basic 6.0, coordinates were expressed in twips; in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> they are expressed in pixels.</source>
          <target state="translated">Dans Visual Basic 6.0, les coordonnées sont exprimées en twips ; dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elles sont exprimées en pixels.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
          <source>This function is used by the upgrade tools to convert between the two coordinate systems.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour effectuer une conversion entre les deux systèmes de coordonnées.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> where the control is parented.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.ContainerControl" /&gt;</ph> où le contrôle est apparenté.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
          <source>Emulates the behavior of the Visual Basic 6.0 <ph id="ph1">&lt;see langword="ValidateControls" /&gt;</ph> method.</source>
          <target state="translated">Émule le comportement de la méthode <ph id="ph1">&lt;see langword="ValidateControls" /&gt;</ph> Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`ValidateControls`</ph> method was used to force the <ph id="ph2">`Validate`</ph> event for the control that has focus when a form is closed; if the <ph id="ph3">`Validate`</ph> event fails, an error was raised.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`ValidateControls`</ph> méthode a été utilisée pour forcer la <ph id="ph2">`Validate`</ph> événement pour le contrôle qui a le focus lorsqu’un formulaire est fermé ; si le <ph id="ph3">`Validate`</ph> événement échoue, une erreur est survenue.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, the <ph id="ph2">`ValidateControls`</ph> method is replaced by the <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> method, which returns <ph id="ph4">`true`</ph> or <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Dans <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>, le <ph id="ph2">`ValidateControls`</ph> méthode est remplacée par la <ph id="ph3">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> (méthode), qui retourne <ph id="ph4">`true`</ph> ou <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
          <source>This function is used by the upgrade tools to emulate the Visual Basic 6.0 behavior.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour émuler le comportement de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Form" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
          <source>Displays pop-up Help for a form upgraded from Visual Basic 6.0.</source>
          <target state="translated">Affiche l'aide contextuelle pour un formulaire mis à niveau à partir de Visual Basic 6.0.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
          <source>Pop-up Help in Visual Basic 6.0 was implemented by using the <ph id="ph1">`WhatsThisButton`</ph> and <ph id="ph2">`WhatsThisHelp`</ph> properties of a form; pop-up Help in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> is implemented by using the <ph id="ph4">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property of a form.</source>
          <target state="translated">Aide contextuelle dans Visual Basic 6.0 était implémentée à l’aide de la <ph id="ph1">`WhatsThisButton`</ph> et <ph id="ph2">`WhatsThisHelp`</ph> propriétés d’un formulaire ; dans l’aide contextuelle <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> est implémentée à l’aide de la <ph id="ph4">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> propriété d’un formulaire.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
          <source>This function is used by the upgrade tools to change the method of displaying pop-up Help in an upgraded application.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour modifier la méthode d’affichage de l’aide contextuelle dans une application mise à niveau.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Control" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /&gt;</ph> enumeration.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
          <source>Converts the Visual Basic <ph id="ph1">&lt;see langword="ZOrder" /&gt;</ph> method for use in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
          <target state="translated">Convertit la méthode <ph id="ph1">&lt;see langword="ZOrder" /&gt;</ph> de Visual Basic pour une utilisation dans <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
          <source>In Visual Basic 6.0, the <ph id="ph1">`ZOrder`</ph> method was used to specify the layering of controls; in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> .it is replaced by the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> methods.</source>
          <target state="translated">Dans Visual Basic 6.0, le <ph id="ph1">`ZOrder`</ph> méthode a été utilisée pour spécifier la superposition de contrôles ; <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> elle est remplacée par la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BringToFront%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.Windows.Forms.Control.SendToBack%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
          <source>This function is used by the upgrade tools to map between the methods.</source>
          <target state="translated">Cette fonction est utilisée par les outils de mise à niveau pour le mappage entre les méthodes.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>