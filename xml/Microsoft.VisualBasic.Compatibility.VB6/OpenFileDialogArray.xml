<Type Name="OpenFileDialogArray" FullName="Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="770980a0411035c2e834aec025476f3d9351a534" />
    <Meta Name="ms.sourcegitcommit" Value="1b899505ed6d42225f2b3c9150bfdc080d0d1f9b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/28/2018" />
    <Meta Name="ms.locfileid" Value="32088058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OpenFileDialogArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi OpenFileDialogArray extends Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray implements class System.ComponentModel.IExtenderProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />
  <TypeSignature Language="VB.NET" Value="Public Class OpenFileDialogArray&#xA;Inherits BaseControlArray&#xA;Implements IExtenderProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialogArray : Microsoft::VisualBasic::Compatibility::VB6::BaseControlArray, System::ComponentModel::IExtenderProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IExtenderProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.OpenFileDialog))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un tableau de contrôles des contrôles <see cref="T:System.Windows.Forms.OpenFileDialog" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `OpenFileDialogArray` classe fournit un équivalent pour les fonctionnalités de runtime de Visual Basic 6.0 `OpenFileDialog` tableau. Il ne fournit pas les fonctionnalités au moment du design d’un tableau de contrôles Visual Basic 6.0.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialogArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialogArray();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous instanciez une <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray>, vous devez également appeler la <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex%2A> méthode pour créer l’élément initial dans le tableau.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialogArray (System.ComponentModel.IContainer Container);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer Container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialogArray(System::ComponentModel::IContainer ^ Container);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="Container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="Container">
          <see cref="T:System.ComponentModel.IContainer" /> qui hébergera le tableau de contrôles.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />, en spécifiant son conteneur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous instanciez une <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray>, vous devez également appeler la <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex%2A> méthode pour créer l’élément initial dans le tableau.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExtend">
      <MemberSignature Language="C#" Value="public bool CanExtend (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance bool CanExtend(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.CanExtend(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExtend (target As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExtend(System::Object ^ target) = System::ComponentModel::IExtenderProvider::CanExtend;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">Contrôle <see cref="T:System.Windows.Forms.OpenFileDialog" />.</param>
        <summary>Obtient une valeur qui détermine si un contrôle est membre d'un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <returns>
          <see langword="true" /> si <paramref name="target" /> est membre du tableau de contrôles ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `CanExtend` méthode peut être utilisée pour déterminer si un spécifique <xref:System.Windows.Forms.OpenFileDialog> contrôle est l’élément de base du tableau de contrôles à partir de laquelle les autres éléments ont été clonés.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileOk">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler FileOk;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler FileOk" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.FileOk" />
      <MemberSignature Language="VB.NET" Value="Public Event FileOk As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ FileOk;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur clique sur le bouton <see langword="Open" /> ou <see langword="Save" /> dans une boîte de dialogue <see cref="T:System.Windows.Forms.OpenFileDialog" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlInstanceType">
      <MemberSignature Language="C#" Value="protected override Type GetControlInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type GetControlInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetControlInstanceType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetControlInstanceType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Type ^ GetControlInstanceType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Substitue <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
        <returns>Type d'un contrôle d'un tableau de contrôles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne peut pas être appelée à partir du code de votre application. Utilisez plutôt la méthode <xref:System.Object.GetType%2A>.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndex">
      <MemberSignature Language="C#" Value="public short GetIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance int16 GetIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndex (o As OpenFileDialog) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; short GetIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Forms.OpenFileDialog" /> du tableau de contrôles.</param>
        <summary>Obtient l'index d'un <see cref="T:System.Windows.Forms.OpenFileDialog" /> dans un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <returns>
          <see langword="Short" /> qui représente l'index du <see cref="T:System.Windows.Forms.OpenFileDialog" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée pour récupérer l’index spécifié <xref:System.Windows.Forms.OpenFileDialog>.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpRequest">
      <MemberSignature Language="C#" Value="public event EventHandler HelpRequest;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HelpRequest" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HelpRequest" />
      <MemberSignature Language="VB.NET" Value="Public Event HelpRequest As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HelpRequest;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'utilisateur clique sur le bouton <see langword="Help" /> dans une boîte de dialogue <see cref="T:System.Windows.Forms.OpenFileDialog" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookUpControlEvents">
      <MemberSignature Language="C#" Value="protected override void HookUpControlEvents (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HookUpControlEvents(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HookUpControlEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HookUpControlEvents (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HookUpControlEvents(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Élément <see cref="T:System.Object" />.</param>
        <summary>Substitue <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne peut pas être appelée à partir du code de votre application. Utilisez `AddHandler` pour raccorder des événements pour les contrôles qui sont ajoutés à l’aide de la <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> (méthode).  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.OpenFileDialog this[short Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.OpenFileDialog Item(int16)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.Item(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Short) As OpenFileDialog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::OpenFileDialog ^ default[short] { System::Windows::Forms::OpenFileDialog ^ get(short Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OpenFileDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="Index">
          <see langword="Short" /> qui spécifie la position d'un élément du tableau de contrôles.</param>
        <summary>Obtient un élément spécifique d'un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> par index. Lecture seule.</summary>
        <value>
          <see cref="T:System.Windows.Forms.OpenFileDialog" /> au niveau de l'<paramref name="Index" /> spécifié dans le tableau de contrôles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Item` propriété est la propriété par défaut pour un tableau de contrôles. Par conséquent, les lignes de code suivantes sont équivalentes.  
  
```vb  
MsgBox(CStr(OpenFileDialogArray.Item(1).Text))  
MsgBox(CStr(OpenFileDialogArray(1).Text))  
```  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetIndex">
      <MemberSignature Language="C#" Value="public void ResetIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ResetIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ResetIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetIndex (o As OpenFileDialog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Forms.Control" />
        </param>
        <summary>La méthode <see langword="ResetIndex" /> n'est pas prise en charge dans la classe <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas prise en charge et l’appeler ne déclenche pas une exception.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIndex">
      <MemberSignature Language="C#" Value="public void SetIndex (System.Windows.Forms.OpenFileDialog o, short Index);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetIndex(class System.Windows.Forms.OpenFileDialog o, int16 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex(System.Windows.Forms.OpenFileDialog,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIndex (o As OpenFileDialog, Index As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIndex(System::Windows::Forms::OpenFileDialog ^ o, short Index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
        <Parameter Name="Index" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Forms.OpenFileDialog" /> du tableau de contrôles.</param>
        <param name="Index">
          <see langword="Short" /> qui représente l'index du <see cref="T:System.Windows.Forms.OpenFileDialog" /> spécifié.</param>
        <summary>Définit l'index du <see cref="T:System.Windows.Forms.OpenFileDialog" /> initial dans un <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `SetIndex` méthode doit uniquement être appelée lorsque vous créez l’élément initial du tableau de contrôles. Pour ajouter les éléments suivants, appelez le <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> (méthode) et spécifiez la `Index`.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeIndex">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeIndex (System.Windows.Forms.OpenFileDialog o);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool ShouldSerializeIndex(class System.Windows.Forms.OpenFileDialog o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.OpenFileDialog)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeIndex (o As OpenFileDialog) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeIndex(System::Windows::Forms::OpenFileDialog ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Compatibility</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Windows.Forms.OpenFileDialog" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Forms.OpenFileDialog" /> du tableau de contrôles.</param>
        <summary>Retourne une valeur qui indique si un <see cref="T:System.Windows.Forms.OpenFileDialog" /> est membre de ce <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
        <returns>
          <see langword="true" /> si <paramref name="o" /> est membre de ce tableau de contrôles ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Windows.Forms.OpenFileDialog> spécifié est membre d’un <xref:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray> différent, `ShouldSerializeIndex` retourne `false`.  
  
> [!NOTE]
>  Fonctions et objets de la <xref:Microsoft.VisualBasic.Compatibility.VB6> espace de noms sont fournis pour une utilisation par les outils de mise à niveau à partir de Visual Basic 6.0 vers Visual Basic. Dans la plupart des cas, ces fonctions et objets dupliquent les fonctionnalités que vous pouvez trouver dans d'autres espaces de noms du [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]. Ils sont nécessaires uniquement lorsque le modèle de code Visual Basic 6.0 diffère considérablement de l'implémentation [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>