<Type Name="ITextProvider" FullName="System.Windows.Automation.Provider.ITextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12cb0908a2fbabaa2316da0be35971ca1a429419" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31910204" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("3589c92c-63f3-4367-99bb-ada653b77cf2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Expose des méthodes et des propriétés pour prendre en charge l’accès client UI Automation aux contrôles qui contiennent du texte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentée sur un fournisseur UI Automation qui doit prendre en charge la <xref:System.Windows.Automation.TextPattern> modèle de contrôle.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TextPattern" />
  </Docs>
  <Members>
    <Member MemberName="DocumentRange">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider DocumentRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.ITextRangeProvider DocumentRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentRange As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::ITextRangeProvider ^ DocumentRange { System::Windows::Automation::Provider::ITextRangeProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une plage de texte qui englobe le texte principal d'un document.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Texte tels que des en-têtes, des pieds de page ou des annotations auxiliaire ne peut pas être inclus.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetSelection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelection () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetSelection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère une collection de plages de texte disjointes associées à la sélection ou aux sélections de texte actuelles.</summary>
        <returns>Collection de plages de texte disjointes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour les fournisseurs UI Automation qui prennent en charge la sélection de texte, le fournisseur doit implémenter cette méthode et également retourner un <xref:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection%2A> valeur.  
  
 Si aucun texte n’est sélectionné, <xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A> retourne la plage de texte dégénérée (plage vide) à la position du curseur système (point d’insertion de texte).  
  
 Si le curseur système (point d’insertion de texte) n’est pas présent, <xref:System.Windows.Automation.Provider.ITextProvider.GetSelection%2A> peut retourner une référence null (`Nothing` en Visual Basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Si le fournisseur UI Automation ne prend pas en charge la sélection de texte.</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetVisibleRanges">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider[] GetVisibleRanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.GetVisibleRanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVisibleRanges () As ITextRangeProvider()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::ITextRangeProvider ^&gt; ^ GetVisibleRanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère un tableau de plages de texte disjointes à partir d'un conteneur de texte où chaque plage de texte commence à la première ligne partiellement visible et se termine à la dernière ligne partiellement visible.</summary>
        <returns>Collection de plages de texte visibles dans le conteneur ou un tableau vide. Une référence null (<see langword="Nothing" /> en Visual Basic) n’est jamais retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fournisseurs UI Automation doivent veiller à retourner, au maximum, les plages de texte qui sont visibles dans le conteneur.  
  
 Disjointes plages peuvent se produire lorsque tout le contenu d’un conteneur de texte est masqué par une fenêtre superposée ou un autre objet, ou un conteneur de texte avec une disposition possède une ou plusieurs colonnes défilent partiellement hors de l’affichage de texte.  
  
 Si aucun texte n’est visible, une plage de texte dégénérée (vide) est retournée. Cette plage vide peut être retournée si le conteneur de texte est vide ou lorsque tout le texte défile hors de l’affichage.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild (System.Windows.Automation.Provider.IRawElementProviderSimple childElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromChild(class System.Windows.Automation.Provider.IRawElementProviderSimple childElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromChild(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromChild (childElement As IRawElementProviderSimple) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromChild(System::Windows::Automation::Provider::IRawElementProviderSimple ^ childElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childElement" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="childElement">Objet incorporé.</param>
        <summary>Récupère une plage de texte englobant un élément enfant tel qu’une image, un lien hypertexte ou un autre objet incorporé.</summary>
        <returns>Plage qui couvre l'élément enfant.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fournisseur UI Automation doit vérifier que l’élément passé est un enfant du conteneur de texte.  
  
 Si aucun texte n’est dans la plage où se trouve l’élément enfant, une plage dégénérée (vide) est retournée.  
  
 Le `childElement` paramètre est un enfant de la <xref:System.Windows.Automation.AutomationElement> associé à un <xref:System.Windows.Automation.TextPattern> ou à partir du tableau des enfants d’un <xref:System.Windows.Automation.Text.TextPatternRange>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si l’élément enfant est une référence null (<see langword="Nothing" /> en Visual Basic).</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="RangeFromPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint (System.Windows.Point screenLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider RangeFromPoint(valuetype System.Windows.Point screenLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function RangeFromPoint (screenLocation As Point) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ RangeFromPoint(System::Windows::Point screenLocation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenLocation" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="screenLocation">Emplacement dans les coordonnées d'écran.</param>
        <summary>Retourne la plage de texte dégénérée (vide) la plus proche des coordonnées d'écran spécifiées.</summary>
        <returns>Plage dégénérée la plus proche de l'emplacement spécifié. Une référence null (<see langword="Nothing" /> en Visual Basic) n’est jamais retournée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une plage de texte qui englobe un objet enfant est retournée si les coordonnées d’écran sont incluses dans les coordonnées d’une image, un lien hypertexte ou tout autre objet incorporé.  
  
 Texte masqué n’étant pas ignoré par <xref:System.Windows.Automation.Provider.ITextProvider.RangeFromPoint%2A> une plage dégénérée le texte visible le plus proche du point donné est retournée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Si un point donné se trouve à l'extérieur de l'élément [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] associé au modèle de texte.</exception>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
    <Member MemberName="SupportedTextSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.SupportedTextSelection SupportedTextSelection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.SupportedTextSelection SupportedTextSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedTextSelection As SupportedTextSelection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::SupportedTextSelection SupportedTextSelection { System::Windows::Automation::SupportedTextSelection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.SupportedTextSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui spécifie si un fournisseur de texte prend en charge la sélection et, si c'est le cas, le type de sélection pris en charge.</summary>
        <value>L'une des valeurs <see langword="None" />, <see langword="Single" /> ou <see langword="Multiple" /> provenant de <see cref="T:System.Windows.Automation.SupportedTextSelection" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />
      </Docs>
    </Member>
  </Members>
</Type>