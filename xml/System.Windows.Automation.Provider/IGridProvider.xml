<Type Name="IGridProvider" FullName="System.Windows.Automation.Provider.IGridProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6dea9dcc9b9aa12c549200565d53b582263c289b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30618773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IGridProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGridProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IGridProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGridProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IGridProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b17d6187-0907-464b-a168-0ef17a1572b1")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Expose des méthodes et des propriétés pour prendre en charge l’accès client UI Automation aux contrôles qui jouent le rôle de conteneurs pour une collection d’éléments enfants. Les enfants de cet élément doivent implémenter <see cref="T:System.Windows.Automation.Provider.IGridItemProvider" /> et être organisés dans un système de coordonnées logiques à deux dimensions qui peut être parcouru (autrement dit, un client UI Automation peut se déplacer vers les contrôles adjacents) à l’aide du clavier.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implémentée sur un fournisseur UI Automation qui doit prendre en charge la <xref:System.Windows.Automation.GridPattern> modèle de contrôle.  
  
 <xref:System.Windows.Automation.Provider.IGridProvider> n’active pas la manipulation active d’une grille. <xref:System.Windows.Automation.Provider.ITransformProvider> doit être implémenté pour activer cette fonctionnalité.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.GridPattern" />
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre total de colonnes dans une grille.</summary>
        <value>Nombre total de colonnes dans une grille.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lignes et colonnes, en fonction de l’implémentation du fournisseur, masquées peuvent être chargées dans le [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence et sont donc reflétées dans les <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> et <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> propriétés. Si les lignes et colonnes masquées n’ont pas encore été chargés, ils ne seront pas comptés.  
  
   
  
## Examples  
 L’exemple de code suivant retourne la valeur de propriété.  
  
 [!code-csharp[UIAMiscPatternProviders_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#102)]
 [!code-vb[UIAMiscPatternProviders_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetItem (int row, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetItem(int32 row, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IGridProvider.GetItem(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (row As Integer, column As Integer) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetItem(int row, int column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="row">Numéro ordinal de la ligne concernée.</param>
        <param name="column">Numéro ordinal de la colonne concernée.</param>
        <summary>Récupère le fournisseur UI Automation pour la cellule spécifiée.</summary>
        <returns>Fournisseur UI Automation pour la cellule spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   Les coordonnées de grille sont de base zéro avec le coin supérieur gauche (ou cellule de droite supérieure en fonction des paramètres régionaux) ayant pour coordonnées (0,0).  
  
-   Si une cellule est vide un fournisseur UI Automation doit encore être retourné pour prendre en charge le <xref:System.Windows.Automation.Provider.IGridItemProvider.ContainingGrid%2A> propriété de cette cellule. Cela est possible lorsque la disposition des éléments enfants dans la grille est semblable à un tableau non justifié.  
  
 ![Permet d’afficher l’Explorateur Windows montrant une disposition irrégulière. ] (~/add/media/uia-gridpattern-ragged-array.PNG "L’Explorateur Windows vue montrant une disposition irrégulière.")  
Exemple de contrôle Grid avec des coordonnées vides  
  
-   Lignes et colonnes, en fonction de l’implémentation du fournisseur, masquées peuvent être chargées dans le [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] arborescence et sont donc reflétées dans les <xref:System.Windows.Automation.Provider.IGridProvider.RowCount%2A> et <xref:System.Windows.Automation.Provider.IGridProvider.ColumnCount%2A> propriétés. Si les lignes et colonnes masquées n’ont pas encore été chargés qu’ils ne doivent pas être comptabilisées.  
  
   
  
## Examples  
 Le code suivant est un exemple d’implémentation de cette méthode qui retourne un objet qui représente l’élément à l’emplacement spécifié.  
  
 [!code-csharp[UIAMiscPatternProviders_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#101)]
 [!code-vb[UIAMiscPatternProviders_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowCount">
      <MemberSignature Language="C#" Value="public int RowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IGridProvider.RowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RowCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre total de lignes dans une grille.</summary>
        <value>Nombre total de lignes dans une grille.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lignes et colonnes, en fonction de l’implémentation du fournisseur, masquées peuvent être chargées dans l’arborescence logique et sont donc reflétées dans les <xref:System.Windows.Automation.GridPattern.GridPatternInformation.RowCount%2A> et <xref:System.Windows.Automation.GridPattern.GridPatternInformation.ColumnCount%2A> propriétés. Si les lignes et colonnes masquées n’ont pas encore été chargés, ils ne seront pas comptés.  
  
   
  
## Examples  
 L’exemple de code suivant retourne la valeur de propriété.  
  
 [!code-csharp[UIAMiscPatternProviders_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/CSharp/CustomGrid.cs#103)]
 [!code-vb[UIAMiscPatternProviders_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAMiscPatternProviders_snip/visualbasic/customgrid.vb#103)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>