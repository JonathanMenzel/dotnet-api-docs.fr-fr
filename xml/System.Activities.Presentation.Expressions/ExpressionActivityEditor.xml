<Type Name="ExpressionActivityEditor" FullName="System.Activities.Presentation.Expressions.ExpressionActivityEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f5f89b74c49bd8d7bc5d66ed153a4f02cdbec5e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36722277" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionActivityEditor : System.Windows.Controls.UserControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionActivityEditor extends System.Windows.Controls.UserControl" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionActivityEditor&#xA;Inherits UserControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionActivityEditor abstract : System::Windows::Controls::UserControl" />
  <TypeSignature Language="F#" Value="type ExpressionActivityEditor = class&#xA;    inherit UserControl" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.UserControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="96af1-101">Représente un éditeur d'activité d'expression.</span>
      <span class="sxs-lookup">
        <span data-stu-id="96af1-101">Represents an expression activity editor.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionActivityEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionActivityEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96af1-102">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-102">Initializes a new instance of the <see cref="T:System.Activities.Presentation.Expressions.ExpressionActivityEditor" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-103">Obtient ou définit une valeur qui indique si l'activité d'expression accepte les retours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-103">Gets or sets a value that indicates whether the expression activity accepts returns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-104">
            <see langword="True" /> si l'activité d'expression accepte les retours ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-104">
              <see langword="True" /> if the expression activity accepts returns; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-105">Représente la propriété de dépendance AcceptsReturn.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-105">Represents the AcceptsReturn dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-106">Obtient ou définit une valeur qui indique si l'activité d'expression accepte les tabulations.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-106">Gets or sets a value that indicates whether the expression activity accepts tabs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-107">
            <see langword="True" /> si l'activité d'expression accepte les tabulations ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-107">
              <see langword="True" /> if the expression activity accepts tabs; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-108">Représente la propriété de dépendance AcceptsTab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-108">Represents the AcceptsTab dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; unit&#xA;override this.BeginEdit : unit -&gt; unit" Usage="expressionActivityEditor.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96af1-109">Commence une modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-109">Begins an edit.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCommit">
      <MemberSignature Language="C#" Value="public virtual bool CanCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.CanCommit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanCommit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanCommit();" />
      <MemberSignature Language="F#" Value="abstract member CanCommit : unit -&gt; bool&#xA;override this.CanCommit : unit -&gt; bool" Usage="expressionActivityEditor.CanCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="96af1-110">Indique si l'éditeur d'activité d'expression peut être validé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-110">Indicates whether the expression activity editor can be committed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96af1-111">
            <see langword="true" /> si l'éditeur d'activité d'expression peut être validé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-111">
              <see langword="true" /> if the expression activity editor can be committed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public abstract bool Commit (bool isExplicitCommit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Commit(bool isExplicitCommit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Commit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Commit (isExplicitCommit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Commit(bool isExplicitCommit);" />
      <MemberSignature Language="F#" Value="abstract member Commit : bool -&gt; bool" Usage="expressionActivityEditor.Commit isExplicitCommit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isExplicitCommit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isExplicitCommit">
          <span data-ttu-id="96af1-112">
            <see langword="true" /> pour indiquer que la validation est explicite ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-112">
              <see langword="true" /> to indicate that the commit is explicit; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96af1-113">Indique si l'éditeur d'activité d'expression est validé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-113">Indicates whether the expression activity editor is committed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96af1-114">
            <see langword="true" /> si l'éditeur d'activité d'expression est validé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-114">
              <see langword="true" /> if the expression activity editor is committed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Activities.Presentation.EditingContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.EditingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As EditingContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Activities::Presentation::EditingContext ^ Context { System::Activities::Presentation::EditingContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Activities.Presentation.EditingContext" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.EditingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-115">Obtient le contexte d'édition de l'activité d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-115">Gets the editing context of the expression activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-116">Contexte d'édition de l'activité d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-116">The editing context of the expression activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommit">
      <MemberSignature Language="C#" Value="public bool ExplicitCommit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExplicitCommit" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommit" />
      <MemberSignature Language="VB.NET" Value="Public Property ExplicitCommit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExplicitCommit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExplicitCommit : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-117">Obtient ou définit une valeur qui indique si la validation est explicite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-117">Gets or sets a value that indicates whether the commit is explicit.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-118">
            <see langword="True" /> si la validation est explicite ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-118">
              <see langword="True" /> if the commit is explicit; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitCommitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExplicitCommitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExplicitCommitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExplicitCommitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExplicitCommitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExplicitCommitProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExplicitCommitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-119">Représente la propriété de dépendance ExplicitCommit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-119">Represents the ExplicitCommit dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Expression { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-120">Obtient ou définit l'activité d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-120">Gets or sets the expression activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-121">Activité d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-121">The expression activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-122">Représente la propriété de dépendance Expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-122">Represents the Expression dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionType">
      <MemberSignature Language="C#" Value="public Type ExpressionType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExpressionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ExpressionType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionType : Type with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-123">Obtient ou définit l'activité du type d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-123">Gets or sets the expression type activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-124">Activité du type d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-124">The expression type activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ExpressionTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ExpressionTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpressionTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ExpressionTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpressionTypeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.ExpressionTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-125">Représente la propriété de dépendance ExpressionType.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-125">Represents the ExpressionType dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static string GetExpressionActivityEditor (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExpressionActivityEditor(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.GetExpressionActivityEditor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExpressionActivityEditor (target As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExpressionActivityEditor(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="static member GetExpressionActivityEditor : obj -&gt; string" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.GetExpressionActivityEditor target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="96af1-126">Propriété de l'éditeur à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-126">The property of the editor to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96af1-127">Obtient l'éditeur d'activité d'expression à l'aide de la cible spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-127">Gets the expression activity editor using the specified target.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="96af1-128">Éditeur d'activité d'expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-128">The expression activity editor.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HintText : string with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-129">Obtient ou définit le texte de l'indication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-129">Gets or sets the hint text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-130">Texte de l'indication.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-130">The hint text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HintTextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HintTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-131">Représente la propriété de dépendance HintText.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-131">Represents the HintText dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-132">Obtient ou définit la visibilité de la barre de défilement horizontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-132">Gets or sets the horizontal scroll bar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-133">Visibilité de la barre de défilement horizontale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-133">The horizontal scroll bar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-134">Représente la propriété de dépendance HorizontalScrollBarVisibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-134">Represents the HorizontalScrollBarVisibility dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndependentExpression">
      <MemberSignature Language="C#" Value="public bool IsIndependentExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIndependentExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsIndependentExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIndependentExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsIndependentExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-135">Obtient ou définit une valeur qui indique si l'activité d'expression est une expression indépendante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-135">Gets or sets a value that indicates whether the expression activity is an independent expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-136">
            <see langword="true" /> si l'activité d'expression est une expression indépendante ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-136">
              <see langword="true" /> if the expression activity is an independent expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndependentExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsIndependentExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsIndependentExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsIndependentExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsIndependentExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsIndependentExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsIndependentExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-137">Représente la propriété de dépendance IsIndependentExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-137">Represents the IsIndependentExpression dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-138">Obtient ou définit une valeur qui indique si l'activité d'expression est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-138">Gets or sets a value that indicates whether the expression activity is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-139">
            <see langword="True" /> si l'activité d'expression est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-139">
              <see langword="True" /> if the expression activity is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-140">Représente la propriété de dépendance IsReadOnly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-140">Represents the IsReadOnly dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpression">
      <MemberSignature Language="C#" Value="public bool IsSupportedExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSupportedExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSupportedExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSupportedExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSupportedExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-141">Obtient ou définit une valeur qui indique si l'expression est prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-141">Gets or sets a value that indicates whether the expression is supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-142">
            <see langword="True" /> si l'expression est prise en charge ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-142">
              <see langword="True" /> if the expression is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSupportedExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSupportedExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSupportedExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSupportedExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSupportedExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.IsSupportedExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-143">Représente la propriété de dépendance IsSupportedExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-143">Represents the IsSupportedExpression dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivity">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem OwnerActivity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem OwnerActivity" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivity" />
      <MemberSignature Language="VB.NET" Value="Public Property OwnerActivity As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ OwnerActivity { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OwnerActivity : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-144">Obtient ou définit l'activité propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-144">Gets or sets the owner activity.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-145">Activité propriétaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-145">The owner activity.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwnerActivityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OwnerActivityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OwnerActivityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OwnerActivityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OwnerActivityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OwnerActivityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.OwnerActivityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-146">Représente la propriété de dépendance OwnerActivity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-146">Represents the OwnerActivity dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgument">
      <MemberSignature Language="C#" Value="public string PathToArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToArgument" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property PathToArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathToArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PathToArgument : string with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-147">Obtient ou définit le chemin d'accès à l'argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-147">Gets or sets the path to argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-148">Chemin d'accès de l'argument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-148">The path to argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToArgumentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PathToArgumentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PathToArgumentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgumentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PathToArgumentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PathToArgumentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PathToArgumentProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.PathToArgumentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-149">Représente la propriété de dépendance PathToArgument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-149">Represents the PathToArgument dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExpressionActivityEditor">
      <MemberSignature Language="C#" Value="public static void SetExpressionActivityEditor (object target, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetExpressionActivityEditor(object target, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Expressions.ExpressionActivityEditor.SetExpressionActivityEditor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetExpressionActivityEditor (target As Object, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetExpressionActivityEditor(System::Object ^ target, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member SetExpressionActivityEditor : obj * string -&gt; unit" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.SetExpressionActivityEditor (target, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="96af1-150">Propriété de l'éditeur à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-150">The property of the editor to set.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="96af1-151">Nom de l'éditeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-151">The name of the editor.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="96af1-152">Définit l'éditeur d'activité d'expression à l'aide de la cible et du nom spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-152">Sets the expression activity editor using the specified target and name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpression">
      <MemberSignature Language="C#" Value="public bool UseLocationExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLocationExpression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLocationExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLocationExpression { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLocationExpression : bool with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-153">Obtient ou définit une valeur qui indique si l'instance utilise l'expression d'emplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-153">Gets or sets a value that indicates whether the instance uses the location expression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-154">
            <see langword="True" /> si l'instance utilise l'expression d'emplacement ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-154">
              <see langword="True" /> if the instance uses the location expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLocationExpressionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLocationExpressionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLocationExpressionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpressionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLocationExpressionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLocationExpressionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UseLocationExpressionProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.UseLocationExpressionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-155">Représente la propriété de dépendance UseLocationExpression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-155">Represents the UseLocationExpression dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-156">Obtient ou définit la visibilité de la barre de défilement verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-156">Gets or sets the vertical scrollbar visibility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="96af1-157">Visibilité de la barre de défilement verticale.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-157">The vertical scrollbar visibility.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Expressions.ExpressionActivityEditor.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="96af1-158">Représente la propriété de dépendance VerticalScrollBarVisibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="96af1-158">Represents the VerticalScrollBarVisibility dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>