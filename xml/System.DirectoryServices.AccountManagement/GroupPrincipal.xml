<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9199792237c4efced39a7ba99dff2e2cc1a18e24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f2565-101">Encapsule des comptes de groupes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2565-101">Encapsulates group accounts.</span>
      </span>
      <span data-ttu-id="f2565-102">Les comptes de groupes peuvent être des collections arbitraires d'objets Principal (entité de sécurité) ou des comptes créés pour des raisons administratives.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f2565-102">Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-103">Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-103">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f2565-104">Le <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> qui spécifie le serveur ou le domaine sur lequel les opérations sont exécutées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-104">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2565-105">Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> à l'aide du contexte spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-105">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class by using the specified context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-106">Le compte du groupe principal n’est pas conservé lors de sa création.</span><span class="sxs-lookup"><span data-stu-id="f2565-106">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="f2565-107">Pour rendre persistant le compte, appelez le <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f2565-107">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f2565-108">Le <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> qui spécifie le serveur ou le domaine sur lequel les opérations sont exécutées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-108">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="samAccountName">
          <span data-ttu-id="f2565-109">Nom du compte SAM de cette entité de sécurité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-109">The SAM account name for this principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2565-110">Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> et l'assigne au contexte spécifié et au nom de compte SAM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-110">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class and assigns it to the specified context and SAM account name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-111">Le compte du groupe principal n’est pas conservé lors de sa création.</span><span class="sxs-lookup"><span data-stu-id="f2565-111">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="f2565-112">Pour rendre persistant le compte, appelez le <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="f2565-112">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2565-113">Élimine l'instance actuelle de l'objet <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-113">Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-114">Retourne un objet Principal de groupe qui correspond à la valeur d'identité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-114">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f2565-115">Le <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> qui spécifie le serveur ou le domaine sur lequel les opérations sont exécutées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-115">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="f2565-116">Identité de l'entité de sécurité du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-116">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="f2565-117">Ce paramètre peut avoir n’importe quel format contenu dans l’énumération <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-117">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2565-118">Retourne un objet Principal de groupe qui correspond à la valeur d'identité spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-118">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2565-119">Objet <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> qui correspond à la valeur et au type d’identité spécifiés ou qui a la valeur Null si aucune correspondance n’est trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-119">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="f2565-120">Plusieurs objets Principal de groupe correspondant à l'objet de groupe actuel ont été trouvés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-120">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f2565-121">Le <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> qui spécifie le serveur ou le domaine sur lequel les opérations sont exécutées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-121">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityType">
          <span data-ttu-id="f2565-122">Valeur d’énumération <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> qui spécifie le format du paramètre <c>identityValue</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-122">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <c>identityValue</c> parameter.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="f2565-123">Identité de l'entité de sécurité du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-123">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="f2565-124">Ce paramètre peut avoir n’importe quel format contenu dans l’énumération <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-124">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2565-125">Retourne un objet Principal de groupe qui correspond au type et à la valeur d'identité spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-125">Returns a group principal object that matches the specified identity type, and value.</span>
          </span>
          <span data-ttu-id="f2565-126">Cette version de la méthode <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> détermine le format de la valeur d’identité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-126">This version of the <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> method determines the format of the identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2565-127">
            <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> correspondant à la valeur et au type d'identité spécifiés ou null si aucune correspondance n'est trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-127">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="f2565-128">Plusieurs objets Principal de groupe correspondant à l'objet de groupe actuel ont été trouvés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-128">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">
          <span data-ttu-id="f2565-129">La valeur d’identité n’est pas une valeur d’énumération <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-129">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-130">Retourne une collection des objets Principal qui est contenue dans le groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-130">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f2565-131">Retourne une collection des objets Principal qui est contenue dans le groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-131">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2565-132">Objet <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> qui contient les objets Principal qui sont membres du groupe ou une collection vide si le groupe n'a pas de membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-132">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-133">Cette méthode ne recherche pas le groupe actuel de manière récursive.</span><span class="sxs-lookup"><span data-stu-id="f2565-133">This method does not search the current group recursively.</span></span> <span data-ttu-id="f2565-134">Par conséquent, les objets de groupe peuvent être retournées dans la collection d’objets principal.</span><span class="sxs-lookup"><span data-stu-id="f2565-134">Therefore, group objects may be returned in the principal object collection.</span></span>  
  
 <span data-ttu-id="f2565-135">Les membres sont retournés sans tenir compte du contexte.</span><span class="sxs-lookup"><span data-stu-id="f2565-135">Members are returned without respect to the context.</span></span> <span data-ttu-id="f2565-136">Par exemple, si un contexte de domaine Active Directory basé sur « CN = soient en dehors, DC = Fabrikam, DC = com », l’ensemble PrincipalFindResult inclura les membres du groupe qui sont trouvent sous « CN = NormalUsers, DC = Fabrikam, DC = com » également, même si elles se trouvent dans une étendue qui n’est pas dans le cadre du contexte qui est recherché.</span><span class="sxs-lookup"><span data-stu-id="f2565-136">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="f2565-137">La collection principale retournée peut également contenir des membres qui sont trouvent dans un magasin différent de celui du groupe.</span><span class="sxs-lookup"><span data-stu-id="f2565-137">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="f2565-138">Valeur de type booléen spécifiant si la recherche dans le groupe doit être effectuée de manière récursive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-138">A Boolean value that specifies whether the group is searched recursively.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f2565-139">Retourne une collection des objets Principal qui est contenue dans le groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-139">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
          <span data-ttu-id="f2565-140">Lorsque l'indicateur recursive a la valeur true, cette méthode effectue une recherche dans le groupe actuel de manière récursive et retourne tous les membres de groupe imbriqués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-140">When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f2565-141">Objet <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> qui contient les objets Principal qui sont membres du groupe ou une collection vide si le groupe n'a pas de membres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-141">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-142">La collection principale retournée ne contient pas les objets de groupe lorsque l’indicateur recursive a la valeur `true`; seuls les nœuds terminaux sont retournés.</span><span class="sxs-lookup"><span data-stu-id="f2565-142">The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned.</span></span> <span data-ttu-id="f2565-143">Par exemple, lorsqu’un groupe qui contient un objet ordinateur et un objet de groupe (avec uniquement les principaux d’utilisateur) est effectuée de manière récursive, la collection retournée contient l’objet ordinateur et les objets principal d’utilisateur dans le groupe imbriqué.</span><span class="sxs-lookup"><span data-stu-id="f2565-143">For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group.</span></span> <span data-ttu-id="f2565-144">Étant donné que l’objet de groupe n’est pas un nœud terminal, même lorsqu’elle est vide, il n'est pas retourné dans la recherche récursive.</span><span class="sxs-lookup"><span data-stu-id="f2565-144">Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.</span></span>  <span data-ttu-id="f2565-145">Lorsque l’indicateur recursive a la valeur `false`, la collection retournée peut contenir des objets de groupe.</span><span class="sxs-lookup"><span data-stu-id="f2565-145">When the recursive flag is set to `false`, the returned collection may contain group objects.</span></span>  
  
 <span data-ttu-id="f2565-146">Les membres sont retournés sans tenir compte du contexte.</span><span class="sxs-lookup"><span data-stu-id="f2565-146">Members are returned without respect to the context.</span></span> <span data-ttu-id="f2565-147">Par exemple, si un contexte de domaine Active Directory basé sur « CN = soient en dehors, DC = Fabrikam, DC = com », l’ensemble PrincipalFindResult inclura les membres du groupe qui sont trouvent sous « CN = NormalUsers, DC = Fabrikam, DC = com » également, même si elles se trouvent dans une étendue qui n’est pas dans le cadre du contexte qui est recherché.</span><span class="sxs-lookup"><span data-stu-id="f2565-147">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="f2565-148">La collection principale retournée peut également contenir des membres qui sont trouvent dans un magasin différent de celui du groupe.</span><span class="sxs-lookup"><span data-stu-id="f2565-148">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2565-149">Le code suivant se connecte au domaine LDAP « fabrikam.com » avec le nom d’utilisateur a la valeur « administrateur » et le mot de passe défini à « SecretPwd123 » dans la <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructeur.</span><span class="sxs-lookup"><span data-stu-id="f2565-149">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="f2565-150">Une recherche est effectuée pour trouver le groupe qui porte le nom « Admins du domaine » sous le conteneur spécifié dans le <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructeur « DC = fabrikam, DC = com. »</span><span class="sxs-lookup"><span data-stu-id="f2565-150">A search is performed to find the group that has the name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="f2565-151">Si le groupe est trouvé, toutes les entités qui sont membres de ce groupe, ce qui inclut des membres récursifs, sont alors énumérées.</span><span class="sxs-lookup"><span data-stu-id="f2565-151">If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-152">Obtient ou définit une énumération <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> Nullable qui spécifie la portée de l'entité de sécurité de ce groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-152">Gets or sets a Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration that specifies the scope for this group principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2565-153">Valeur d'énumération <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> Nullable qui spécifie la portée de ce groupe ou null si aucune portée n'a été définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-153">A nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration value that specifies the scope of this group or null if no scope has been set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2565-154">L'application ne peut pas affecter la valeur null à cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-154">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-155">Obtient ou définit une valeur booléenne Nullable qui indique si la sécurité est activée pour ce groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-155">Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2565-156">
            <see langword="true" /> si la sécurité est activée pour ce groupe ou null si le groupe n'a pas été rendu persistant ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-156">
              <see langword="true" /> if the group is security enabled, or null if the group has not been persisted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-157">Lorsque cette propriété retourne la valeur false, le groupe est temporairement pas sécurité activée.</span><span class="sxs-lookup"><span data-stu-id="f2565-157">When this property returns false, the group is temporarily not security-enabled.</span></span> <span data-ttu-id="f2565-158">Lorsque le <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> est réinitialisée en propriété true ultérieurement, le groupe ont les mêmes propriétés qu’avant qu’il a été défini sur false.</span><span class="sxs-lookup"><span data-stu-id="f2565-158">When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.</span></span>  
  
 <span data-ttu-id="f2565-159">Si l’entité de sécurité n’a pas été rendu persistant dans le magasin, cette propriété retourne la valeur null.</span><span class="sxs-lookup"><span data-stu-id="f2565-159">If the principal has not been persisted in the store, this property returns null.</span></span> <span data-ttu-id="f2565-160">Une fois que le principal est rendu persistant, la valeur par défaut sécurisée dépend du magasin.</span><span class="sxs-lookup"><span data-stu-id="f2565-160">After the principal is persisted, the default security-enabled setting depends on the store.</span></span> <span data-ttu-id="f2565-161">Les magasins AD DS et AD LDS désactiver les nouvelles entités lorsqu’elles sont persistantes, alors que SAM Active les nouvelles entités lorsqu’elles sont persistantes.</span><span class="sxs-lookup"><span data-stu-id="f2565-161">The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f2565-162">L'application ne peut pas affecter la valeur null à cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-162">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f2565-163">Obtient une collection d'objets Principal qui représentent les membres du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-163">Gets a collection of principal objects that represent the members of the group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f2565-164">Objet <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> contenant les objets Principal qui représentent les membres du groupe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f2565-164">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object that contains the principal objects that represent the members of the group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2565-165">Pour les groupes de domaine Active Directory, le <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> propriété inclut les principaux d’utilisateur qui sont membres du groupe de leur attribut primaryId.</span><span class="sxs-lookup"><span data-stu-id="f2565-165">For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute.</span></span> <span data-ttu-id="f2565-166">Lorsque le groupe contient ces types de membres, les restrictions suivantes s’appliquent :</span><span class="sxs-lookup"><span data-stu-id="f2565-166">When the group contains these types of members, the following restrictions apply:</span></span>  
  
-   <span data-ttu-id="f2565-167">Le <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> méthode ne peut pas être utilisée pour supprimer des membres qui font partie du groupe de leur attribut primaryId.</span><span class="sxs-lookup"><span data-stu-id="f2565-167">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> method cannot be used to remove members that are part of the group because of their primaryId Attribute.</span></span>  
  
-   <span data-ttu-id="f2565-168">Le <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> méthode ne peut pas être utilisée pour effacer des membres qui font partie du groupe de leur attribut primaryId.</span><span class="sxs-lookup"><span data-stu-id="f2565-168">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> method cannot be used to clear members that are part of the group because of their primaryId Attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2565-169">Le code suivant se connecte au domaine LDAP « fabrikam.com » avec le nom d’utilisateur a la valeur « administrateur » et le mot de passe défini à « SecretPwd123 » dans la <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructeur.</span><span class="sxs-lookup"><span data-stu-id="f2565-169">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="f2565-170">Une recherche est effectuée pour trouver le groupe qui a le nom « Admins du domaine » sous le conteneur spécifié dans le <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructeur, « DC = fabrikam, DC = com. »</span><span class="sxs-lookup"><span data-stu-id="f2565-170">A search is performed to find the group that has name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="f2565-171">Si le groupe est trouvé, l’utilisateur qui a le nom « John Smith » est supprimé du groupe et l’utilisateur qui a le nom « Jim Daly » est ajouté au groupe</span><span class="sxs-lookup"><span data-stu-id="f2565-171">If the group is found, the user who has name "John Smith" is removed from the group and the user who has name "Jim Daly" is added to the group</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>