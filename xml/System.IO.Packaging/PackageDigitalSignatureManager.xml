<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b42e7f7848a011f34659ff6beacef6553b43b89e" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48678283" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PackageDigitalSignatureManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageDigitalSignatureManager sealed" />
  <TypeSignature Language="F#" Value="type PackageDigitalSignatureManager = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe utilitaire pour la création et la vérification de signatures numériques dans un <see cref="T:System.IO.Packaging.Package" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager> s’appuie sur l’architecture de .NET Framework des classes de signature numérique et fournit une classe utilitaire pour effectuer des tâches courantes à l’aide de signatures numériques avec <xref:System.IO.Packaging.Package> éléments.  
  
 Pour plus d’informations sur les signatures numériques de package, consultez l’article MSDN infrastructure de signature numérique des Open Packaging Conventions disponible à l’adresse [ http://go.microsoft.com/fwlink/?LinkId=74494 ](http://go.microsoft.com/fwlink/?LinkId=74494).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackageDigitalSignatureManager>.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=159966">Création d’un Package avec un Signature numérique, exemple</related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions (OPC)</related>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PackageDigitalSignatureManager(System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackageDigitalSignatureManager : System.IO.Packaging.Package -&gt; System.IO.Packaging.PackageDigitalSignatureManager" Usage="new System.IO.Packaging.PackageDigitalSignatureManager package" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">Package associé à ce gestionnaire de signature.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> à utiliser avec le <see cref="T:System.IO.Packaging.Package" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le package cible associé au Gestionnaire de signature est défini lors de l’initialisation. Quand il est défini, le package associé au Gestionnaire de signature ne peut pas être modifié. Créer une nouvelle signature de gestionnaire pour chaque package en fonction des besoins.  
  
   
  
## Examples  
 L'exemple suivant montre comment utiliser ce constructeur.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberSignature Language="VB.NET" Value="Public Property CertificateOption As CertificateEmbeddingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CertificateEmbeddingOption CertificateOption { System::IO::Packaging::CertificateEmbeddingOption get(); void set(System::IO::Packaging::CertificateEmbeddingOption value); };" />
      <MemberSignature Language="F#" Value="member this.CertificateOption : System.IO.Packaging.CertificateEmbeddingOption with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’option d’incorporation du certificat X.509 utilisée par la méthode <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> pour signer numériquement des parties de package.</summary>
        <value>Une des valeurs de <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété spécifie où sera stocké le certificat X.509 du signataire lors de la signature numérique d’une partie.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir cette propriété dans la préparation pour signer numériquement les parties dans un package.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Contresigne toutes les signatures dans le package avec un certificat X.509 spécifié.</summary>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign () As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign();" />
      <MemberSignature Language="F#" Value="member this.Countersign : unit -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Contresigne toutes les signatures dans le package avec un certificat X.509 sélectionné par l’utilisateur.</summary>
        <returns>Signature qui a été ajoutée comme contre-signature ; ou <see langword="null" /> si aucun certificat n’a été trouvé ou si l’utilisateur a annulé la boîte de dialogue de sélection de certificat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucun certificat X.509 n’est spécifié dans l’appel, cette méthode ouvre une boîte de dialogue de sélection de certificat qui invite l’utilisateur à choisir un certificat à utiliser pour la signature.  
  
 Définir le handle de fenêtre dans le <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propriété avant d’appeler <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> pour rendre la boîte de dialogue modale dans la fenêtre donnée.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificat X.509 à ajouter comme contre-signature.</param>
        <summary>Contresigne toutes les signatures dans le package avec un certificat X.509 spécifié.</summary>
        <returns>Signature ajoutée comme contre-signature.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> a la valeur <see langword="null" />.</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Countersign (certificate As X509Certificate, signatures As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Countersign(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ signatures);" />
      <MemberSignature Language="F#" Value="member this.Countersign : System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Countersign (certificate, signatures)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificat X.509 utilisé pour contresigner chacun des <c>signatures</c> spécifiés.</param>
        <param name="signatures">Liste des signatures à contresigner.</param>
        <summary>Contresigne une liste de signatures avec un certificat X.509 donné.</summary>
        <returns>Signature numérique utilisée pour contresigner chacun des <paramref name="signatures" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="certificate" /> ou le paramètre <paramref name="signatures" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Le package ne contient pas d’objets <see cref="T:System.IO.Packaging.PackagePart" /> signés.</exception>
        <exception cref="T:System.ArgumentException">Le package ne contient pas de composants <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> signés.</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultHashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultHashAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultHashAlgorithm : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifiant l’algorithme de hachage utilisé par défaut pour créer et vérifier des signatures.</summary>
        <value>Chaîne [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifiant l'algorithme de hachage utilisé par défaut pour créer et vérifier des signatures.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’algorithme de hachage par défaut pour la norme <xref:System.IO.Packaging.PackageDigitalSignatureManager> classe est <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).  
  
 Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propriété obtient ou définit l’algorithme de hachage que cela est utilisé pour créer et vérifier des signatures.  
  
 Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> propriété est généralement utilisée pour réinitialiser le <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> par défaut après une modification temporaire de la propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature (signatureUri As Uri) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ GetSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.GetSignature : Uri -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.GetSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la signature numérique à retourner.</param>
        <summary>Retourne la signature numérique pour un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de signature donné.</summary>
        <returns>Signature numérique du <paramref name="signatureUri" /> spécifié ou <see langword="null" /> si une signature pour le <paramref name="signatureUri" /> donné ne peut pas être trouvée.</returns>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’identificateur [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de l’instance <see cref="T:System.Security.Cryptography.HashAlgorithm" /> utilisée pour créer et vérifier des signatures.</summary>
        <value>Le <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identificateur pour le <see cref="T:System.Security.Cryptography.HashAlgorithm" /> instance utilisée pour créer et vérifier des signatures.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’identificateur d’algorithme de hachage par défaut pour le Gestionnaire de signature numérique standard est <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>— Secure Hash Algorithm version 1.0).  
  
 À moins qu’explicitement définie autrement, cette propriété obtient la même valeur que <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.  
  
 Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> propriété n’est généralement pas modifiée la valeur par défaut. Cette propriété doit être modifiée uniquement si une signature qui utilise un autre connu et accessible <xref:System.Security.Cryptography.HashAlgorithm> est rencontrée.  Lorsque vous avez terminé avec la signature qui utilise un algorithme de hachage différent, appelez <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> pour réinitialiser le <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> par défaut de la propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La chaîne de l'identificateur [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]à définir est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La chaîne de l'identificateur [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]à définir est vide.</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Event InvalidSignatureEvent As InvalidSignatureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Packaging::InvalidSignatureEventHandler ^ InvalidSignatureEvent;" />
      <MemberSignature Language="F#" Value="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " Usage="member this.InvalidSignatureEvent : System.IO.Packaging.InvalidSignatureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> rencontre une signature non valide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le package contient des signatures.</summary>
        <value>
          <see langword="true" /> si le package contient des signatures ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propriété n’effectue pas de validations de signature. Si les signatures sont présentes et <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> est `true`, un ou plusieurs des signatures ne peuvent pas être valide.  Appelez <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> pour vérifier que les signatures sont valides et n’ont pas changé.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> propriété afin de déterminer si un package contient des signatures numériques.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=71255">Spécification Open Packaging Conventions (OPC)</related>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un handle vers la fenêtre parente pour l'affichage d'une boîte de dialogue de sélection de certificat.</summary>
        <value>Handle de la fenêtre parente à utiliser pour afficher la boîte de dialogue de sélection du certificat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une boîte de dialogue de sélection de certificat n’apparaît que si un <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> appel ne contient aucun certificat. Si aucun certificat n’est spécifié, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> affichera une boîte de dialogue de sélection de certificat qui permet à l’utilisateur de choisir le certificat à utiliser pour la signature.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllSignatures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllSignatures();" />
      <MemberSignature Language="F#" Value="member this.RemoveAllSignatures : unit -&gt; unit" Usage="packageDigitalSignatureManager.RemoveAllSignatures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime toutes les signatures numériques du package.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode supprime également tous les certificats X.509 à partir du package.  Après avoir supprimé toutes les signatures et les certificats, appelez <xref:System.IO.Packaging.Package.Flush%2A> pour conserver toutes les modifications dans le magasin.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (signatureUri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(Uri ^ signatureUri);" />
      <MemberSignature Language="F#" Value="member this.RemoveSignature : Uri -&gt; unit" Usage="packageDigitalSignatureManager.RemoveSignature signatureUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> à supprimer.</param>
        <summary>Supprime la signature numérique d'un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de signature donné.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode supprime également le certificat X.509 associé s’il n’est pas référencé par aucune autre signature numérique.  
  
 Après avoir supprimé une signature, appelez <xref:System.IO.Packaging.Package.Flush%2A> pour enregistrer la modification dans le magasin.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Signe une liste de parties de package avec un certificat X.509 spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment signer numériquement une liste de parties dans un <xref:System.IO.Packaging.Package>.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign parts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Liste d'identificateurs [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] des éléments <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
        <summary>Invite l’utilisateur à fournir un certificat X.509, qui est ensuite utilisé pour signer numériquement une liste spécifiée de parties du package.</summary>
        <returns>Signature numérique utilisée pour signer la liste de <paramref name="parts" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour que la boîte de dialogue de sélection de certificat modale à une fenêtre particulière, définissez la <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> propriété avant d’appeler <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> ne demande pas des certificats s’il en existe aucun dans le magasin de certificats par défaut.  
  
   
  
## Examples  
 L’exemple suivant montre comment signer numériquement une liste de parties de package.  Pour obtenir un exemple complet, consultez la [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">Liste d'identificateurs [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] des éléments <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
        <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des <c>parts</c> spécifiés.</param>
        <summary>Signe une liste de parties de package avec un certificat X.509 donné.</summary>
        <returns>Signature numérique utilisée pour signer la liste donnée de <paramref name="parts" /> ; ou <see langword="null" /> si aucun certificat n'est trouvé ou si l'utilisateur a cliqué sur « Annuler » dans la boîte de dialogue de sélection du certificat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment signer numériquement une liste de parties dans un <xref:System.IO.Packaging.Package>.  Pour obtenir un exemple complet, consultez la [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Liste d’[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
        <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
        <param name="relationshipSelectors">Liste des objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
        <summary>Signe une liste de parties et de relations de package avec un certificat X.509 donné.</summary>
        <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entre `parts` et `relationshipSelectors` qu’il doit y avoir au moins un élément à signer.  
  
   
  
## Examples  
 L’exemple suivant montre comment signer numériquement une liste de parties de package.  Pour obtenir un exemple complet, consultez la [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifie d'objet à signer.</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">Liste d’[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
        <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
        <param name="relationshipSelectors">Liste des objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
        <param name="signatureId">Chaîne d’identification à associer à la signature.</param>
        <summary>Signe une liste de parties de package et de relations de package avec un certificat X.509 et un [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] donnés.</summary>
        <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `parts` liste peut être vide ou `null` si `relationshipSelectors` contient au moins une entrée.  
  
 Le `relationshipSelectors` liste peut être vide ou `null` si `parts` contient au moins une entrée.  
  
 Entre le `parts` liste et `relationshipSelectors` qu’il doit y avoir au moins un élément à signer.  
  
   
  
## Examples  
 L’exemple suivant montre comment signer numériquement une liste de parties de package.  Pour obtenir un exemple complet, consultez la [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" /> ni <paramref name="relationshipSelectors" /> ne spécifie d'élément à signer.</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberSignature Language="VB.NET" Value="Public Function Sign (parts As IEnumerable(Of Uri), certificate As X509Certificate, relationshipSelectors As IEnumerable(Of PackageRelationshipSelector), signatureId As String, signatureObjects As IEnumerable(Of DataObject), objectReferences As IEnumerable(Of Reference)) As PackageDigitalSignature" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageDigitalSignature ^ Sign(System::Collections::Generic::IEnumerable&lt;Uri ^&gt; ^ parts, System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate, System::Collections::Generic::IEnumerable&lt;System::IO::Packaging::PackageRelationshipSelector ^&gt; ^ relationshipSelectors, System::String ^ signatureId, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::DataObject ^&gt; ^ signatureObjects, System::Collections::Generic::IEnumerable&lt;System::Security::Cryptography::Xml::Reference ^&gt; ^ objectReferences);" />
      <MemberSignature Language="F#" Value="member this.Sign : seq&lt;Uri&gt; * System.Security.Cryptography.X509Certificates.X509Certificate * seq&lt;System.IO.Packaging.PackageRelationshipSelector&gt; * string * seq&lt;System.Security.Cryptography.Xml.DataObject&gt; * seq&lt;System.Security.Cryptography.Xml.Reference&gt; -&gt; System.IO.Packaging.PackageDigitalSignature" Usage="packageDigitalSignatureManager.Sign (parts, certificate, relationshipSelectors, signatureId, signatureObjects, objectReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">Liste d’[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] pour les objets <see cref="T:System.IO.Packaging.PackagePart" /> à signer.</param>
        <param name="certificate">Certificat X.509 à utiliser pour signer numériquement chacun des composants et des relations spécifiés.</param>
        <param name="relationshipSelectors">Liste des objets <see cref="T:System.IO.Packaging.PackageRelationship" /> à signer.</param>
        <param name="signatureId">Chaîne d’identification à associer à la signature.</param>
        <param name="signatureObjects">Liste d’objets de données personnalisés à signer.</param>
        <param name="objectReferences">Liste de références aux objets personnalisés à signer.</param>
        <summary>Signe une liste de parties de package, de relations de package ou d’objets personnalisés avec un certificat X.509 et un [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] de signature spécifiés.</summary>
        <returns>Signature numérique utilisée pour signer les éléments spécifiés dans les listes <paramref name="parts" /> et <paramref name="relationshipSelectors" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il doit y avoir au moins un élément pour vous connecter `parts`, `relationshipSelectors`, `signatureObjects`, ou `objectReferences`.  
  
> [!NOTE]
>  Les termes du contrat `Object`, `Manifest`, `Reference`, `SignatureProperties`, et `Transform` dans le code suivant, deux remarques font référence aux types d’éléments et les étiquettes définies par la spécification W3C XML-Signature Syntax and Processing, consultez [ https://www.w3.org/TR/xmldsig-core/ ](https://www.w3.org/TR/xmldsig-core/).  
  
 Cette et autres <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> surcharges de méthode utiliser actuel <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionnaire qui définit un `Transform` à appliquer en fonction de la partie de package <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  La spécification Microsoft Open Packaging Conventions (OPC) autorise actuellement que deux valide `Transform` algorithmes : C14 et C14N.  La norme W3C XML-Signature Syntax and Processing n’autorise pas vide `Manifest` balises.  La spécification Open Packaging Conventions requiert également un <xref:System.IO.Packaging.Package>-spécifiques `Object` balise qui contient à la fois `Manifest` et `SignatureProperties` balises.  Chaque `Manifest` balise en outre également inclure au moins un `Reference` balise.  Ces balises requièrent que chaque signature signe au moins un <xref:System.IO.Packaging.PackagePart> (balise parties non vides) ou <xref:System.IO.Packaging.PackageRelationship> (non vide `relationshipSelectors`) même si la signature est requise uniquement pour signer les `signatureObjects` ou `objectReferences`.  
  
 Cela <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> méthode ignore la <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> propriété associée à chaque <xref:System.Security.Cryptography.Xml.Reference> défini dans `objectReferences`.  
  
 Cela <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> surcharge prend en charge pour la génération de [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures nécessitant personnalisé `Object` balises.  Pour toute fourni `Object` balise soient signés, correspondante `Reference` doit être fourni avec un [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] qui spécifie le `Object` balise dans la syntaxe de fragment de code local.  Par exemple si le `Object` balise a un ID « myObject », l’URI dans le `Reference` balise sera « #myObject ».  Pour les objets non signés, ne `Reference` est requis.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ni <paramref name="parts" />, <paramref name="relationshipSelectors" />, <paramref name="signatureObjects" /> ni <paramref name="objectReferences" /> ne spécifie d'élément à signer.</exception>
        <exception cref="T:System.InvalidOperationException">Un <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> d'une partie en cours de signature fait référence à un <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> vide, <see langword="null" /> ou  non défini.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="signatureId" /> n’a pas la valeur <see langword="null" /> et n’est pas un ID de schéma [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] valide (par exemple, il commence par un chiffre).</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureOrigin As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SignatureOrigin { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOrigin : Uri" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] de la partie d'origine de la signature.</summary>
        <value>Identificateur [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la partie d'origine de la signature.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] peut varier selon le package car le nom n’est pas formellement défini. Bien que cette implémentation utilise habituellement la même valeur par défaut, la valeur retournée par cette propriété sera reflète l’origine déjà présent dans le courant <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignatureOriginRelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ SignatureOriginRelationshipType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SignatureOriginRelationshipType : string" Usage="System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de la relation d'origine de la signature par défaut.</summary>
        <value>Type de la relation d'origine de la signature par défaut.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signatures As ReadOnlyCollection(Of PackageDigitalSignature)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ Signatures { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Packaging::PackageDigitalSignature ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Signatures : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de toutes les signatures contenues dans le package.</summary>
        <value>Collection de tous les objets <see cref="T:System.IO.Packaging.PackageDigitalSignature" />.</value>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TimeFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TimeFormat : string with get, set" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</summary>
        <value>Format date/heure utilisé pour créer une signature <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> est « AAAA-MM-DDThh:mm:ss.sTZD ».  
  
 Date/heure formats suivent la syntaxe de la spécification « W3C Date and Time Formats » à [ http://www.w3.org/TR/Note-datetime.html ](http://www.w3.org/TR/Note-datetime.html). Les composants ci-dessous doivent être présent et utiliser la syntaxe et la ponctuation tel que défini.  
  
|TimeFormat|Description |Exemple|  
|----------------|-----------------|-------------|  
|AAAA|Année|2005|  
|AAAA-MM|Année et mois|2005-07|  
|AAAA-MM-JJ|Date d’achèvement|2005-07-28|  
|AAAA-MM-DDThh:mmTZD|Date d’achèvement plus les heures et minutes|2005-07-28T19:20-01:00|  
|AAAA-MM-DDThh:mm:ssTZD|Terminer la date et heures, minutes et secondes|2005-07-28T19:20:45-01:00|  
|AAAA-MM-DDThh:mm:ss.sTZD|Date d’achèvement plus heures, minutes et secondes avec une fraction décimale|2005-07-28T19:20:45.75-01:00|  
  
 où :  
  
|||  
|-|-|  
|AAAA|année à quatre chiffres (par exemple, 2005)|  
|MM|mois à deux chiffres (01 = janvier)|  
|DD|jour à deux chiffres du mois (01 à 31)|  
|Thh|heure à deux chiffres (de 00 à 23, 24 heures)|  
|mm|deux chiffres des minutes (de 00 à 59)|  
|ss|deux chiffres des secondes (de 00 à 59)|  
|s|un ou plusieurs chiffres représentant une fraction décimale d’une seconde|  
|TZD|indicateur de fuseau horaire (Z ou + hh : mm ou - hh : mm)|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransformMapping As Dictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ TransformMapping { System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformMapping : System.Collections.Generic.Dictionary&lt;string, string&gt;" Usage="System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un dictionnaire contenant chaque <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> défini et son identificateur <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] associé .</summary>
        <value>Un dictionnaire contenant chaque défini <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> et elle est associée [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pendant une opération de connexion, l’algorithme transform associé pour chaque type de contenu est appliqué avant la <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> est exécutée.  
  
 Les mappages de transformation et de contenu par défaut sont les suivantes :  
  
|Contenu|ContentType|Identificateur d’algorithme de transformation|  
|-------------|-----------------|------------------------------------|  
|Relationship|« application/vnd.openxmlformats-package.relationships+xml »|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|Signature numérique|« application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml »|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyCertificate (certificate As X509Certificate) As X509ChainStatusFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ChainStatusFlags VerifyCertificate(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberSignature Language="F#" Value="static member VerifyCertificate : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Security.Cryptography.X509Certificates.X509ChainStatusFlags" Usage="System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificat X.509 à vérifier.</param>
        <summary>Vérifie un certificat X.509 donné.</summary>
        <returns>
          <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> (valeur 0) si le certificat a été vérifié avec succès ; sinon, énumération de combinaisons de bits indicateurs d'erreur.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifySignatures (exitOnFailure As Boolean) As VerifyResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::VerifyResult VerifySignatures(bool exitOnFailure);" />
      <MemberSignature Language="F#" Value="member this.VerifySignatures : bool -&gt; System.IO.Packaging.VerifyResult" Usage="packageDigitalSignatureManager.VerifySignatures exitOnFailure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">
          <see langword="true" /> pour quitter au premier échec ; sinon, <see langword="false" /> pour continuer de vérifier toutes les signatures.</param>
        <summary>Vérifie les signatures sur tous les composants signés dans le package.</summary>
        <returns>
          <see cref="F:System.IO.Packaging.VerifyResult.Success" /> (valeur 0) si toutes les signatures sont vérifiées avec succès ; sinon, énumération identifiant l'erreur.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode vérifie uniquement les signatures numériques ; Il ne vérifie pas les certificats X.509 associés.  Le <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> méthode peut être utilisée pour vérifier les certificats X.509.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser cette méthode pour valider tous les composants signés dans un package.  Pour obtenir un exemple complet, consultez [création d’un Package avec une Signature numérique, exemple](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
 [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkId=74494">Infrastructure de signature numérique des Open Packaging Conventions</related>
      </Docs>
    </Member>
  </Members>
</Type>