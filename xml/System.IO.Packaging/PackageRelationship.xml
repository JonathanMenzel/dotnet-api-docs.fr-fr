<Type Name="PackageRelationship" FullName="System.IO.Packaging.PackageRelationship">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4a6fa63b1c921255feabb5f4e944de73cd92bf24" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33679709" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PackageRelationship" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PackageRelationship extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageRelationship" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageRelationship" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageRelationship" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une association entre un <see cref="T:System.IO.Packaging.Package" /> ou une <see cref="T:System.IO.Packaging.PackagePart" />, source et un objet cible qui peut être une <see cref="T:System.IO.Packaging.PackagePart" /> ou une ressource externe.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackageRelationship> définit une association entre un *source* <xref:System.IO.Packaging.Package> ou <xref:System.IO.Packaging.PackagePart> à un *cible* <xref:System.IO.Packaging.PackagePart> ou une ressource externe.  L’objet source est considéré comme « propriétaire » de la relation.  
  
 La <xref:System.IO.Packaging.PackageRelationship> classe n’a aucun constructeur public ; au lieu de cela, deux méthodes Create sont utilisées :  
  
|||  
|-|-|  
|<xref:System.IO.Packaging.Package>.<xref:System.IO.Packaging.Package.CreateRelationship%2A>|Crée une relation « au niveau du package », à partir d’un package à une partie ou la ressource externe.|  
|<xref:System.IO.Packaging.PackagePart>.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A>|Crée une relation « au niveau du composant », à partir d’une part à un autre composant ou une ressource externe.|  
  
 Le package source ou une partie est identifié par le <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> la propriété de la relation.  Le composant cible ou la ressource externe est identifiée par le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> la propriété de la relation.  
  
 Création ou suppression d’une relation n’affecte pas les objets source ou cible en aucune façon.  
  
 Si un objet source est supprimé, toutes les relations appartienne à l’objet sont également supprimées.  
  
 Les relations permettent la navigation dans un document et entre des documents.  Les relations prennent également en charge les services de modèle d’objet de document, tels que la liaison d’un <xref:System.Printing.PrintTicket> à des éléments de document spécifique lors de l’impression.  
  
 Pour plus d’informations sur <xref:System.IO.Packaging.PackageRelationship> éléments consultez la Section 1.3 intitulée « Relations » dans le *Open Packaging Conventions* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une chaîne qui identifie la relation.</summary>
        <value>Chaîne qui identifie la relation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageRelationship.Id%2A> chaîne de la propriété est unique pour toutes les relations possédées par le <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> package ou le composant.  
  
 Le <xref:System.IO.Packaging.PackageRelationship.Id%2A> est spécifié dans l’appel à la **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode qui a créé la relation.  Une fois que la relation est créée, le <xref:System.IO.Packaging.PackageRelationship.Id%2A> ne peut pas être modifié.  
  
 Le <xref:System.IO.Packaging.PackageRelationship.Id%2A> chaîne de propriété est un identificateur XML valide. Le <xref:System.IO.Packaging.PackageRelationship.Id%2A> type est xsd : ID et doit respecter les conventions d’affectation de noms indiquées dans le *XML Schema Part 2 : Datatypes* spécification (consultez [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.IO.Packaging.Package" /> qui contient cette relation.</summary>
        <value>Package qui contient cette relation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur <xref:System.IO.Packaging.Package> les éléments, consultez la *Open Packaging Conventions* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de type qualifié de la relation.</summary>
        <value>Nom de type qualifié de la relation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> est spécifié dans l’appel à la **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode qui a créé la relation.  Une fois que la relation est créée, le <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> ne peut pas être modifié.  
  
 <xref:System.IO.Packaging.PackageRelationship.RelationshipType%2A> est défini dans une syntaxe de type URI et identifie le rôle de la relation. Par exemple, «http://schemas.microsoft.com/xps/2005/06/required-resource» identifie la relation à une partie de la cible qui est un « required-resource. »  
  
 **Types de relations de package à l’échelle**  
  
|Description |Type de relation|  
|-----------------|-----------------------|  
|Propriétés principales|http://schemas.microsoft.com/package/2006/relationships/metadata/core-properties|  
|Signature numérique|http://schemas.microsoft.com/package/2006/relationships/digital-signature/signature|  
|Certificat de Signature numérique|http://schemas.microsoft.com/package/2006/relationships/digital-signature/certificate|  
|Origine de la Signature numérique|http://schemas.microsoft.com/package/2006/relationships/digital-signature/origin|  
|Miniature|http://schemas.microsoft.com/package/2006/relationships/metadata/thumbnail|  
  
 Pour plus d’informations sur la relation de package types, consultez le chapitre 3 et annexe I le *Open Packaging Conventions* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.Id" />
      </Docs>
    </Member>
    <Member MemberName="SourceUri">
      <MemberSignature Language="C#" Value="public Uri SourceUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ SourceUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l’[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du package ou du composant propriétaire de la relation.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] du <see cref="T:System.IO.Packaging.Package" /> ou du <see cref="T:System.IO.Packaging.PackagePart" /> propriétaire de la relation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la relation est possédée par un <xref:System.IO.Packaging.Package>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> retourne un URI de « / ».  
  
 Si la relation est possédée par un <xref:System.IO.Packaging.PackagePart>, <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> retourne l’URI de la partie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetMode">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.TargetMode TargetMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.TargetMode TargetMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetMode As TargetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::TargetMode TargetMode { System::IO::Packaging::TargetMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.TargetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la cible de la relation est <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> pour le <see cref="T:System.IO.Packaging.Package" />.</summary>
        <value>Valeur d'énumération qui indique si <see cref="P:System.IO.Packaging.PackageRelationship.TargetUri" /> référence une ressource <see cref="F:System.IO.Packaging.TargetMode.Internal" /> ou <see cref="F:System.IO.Packaging.TargetMode.External" /> pour le <see cref="T:System.IO.Packaging.Package" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> est spécifié dans l’appel à la **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode qui a créé la relation. Après avoir créé la relation le <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> ne peut pas être modifié.  
  
 Lorsque <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> est <xref:System.IO.Packaging.TargetMode.Internal>, la <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> doit être une référence relative.  Pour une relation au niveau du package, la référence relative de la <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est résolue par rapport à l’URI à en-tête pack du package source qui possède et contient la relation.  (Exemple d’URI pack de package source : « pack://http :,, www.adatum.com, datapak.package / ».)  Pour une relation au niveau du composant, le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est résolu en fonction du composant source qui possède la relation (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est interprété en fonction <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Lorsque <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> est <xref:System.IO.Packaging.TargetMode.External>, le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> peut être une référence relative ou un URI qualifié complet.  Si le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est une référence relative, la référence est interprétée comme étant relatif à l’emplacement de la <xref:System.IO.Packaging.Package> qui contient cette relation.  
  
 Pour plus d’informations sur <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> voir Section 1.3.3 « Relation Markup » de la *Open Packaging Conventions* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
      </Docs>
    </Member>
    <Member MemberName="TargetUri">
      <MemberSignature Language="C#" Value="public Uri TargetUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri TargetUri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageRelationship.TargetUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ TargetUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la ressource cible de la relation.</summary>
        <value>[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la ressource cible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est spécifié dans l’appel à la **Package**.<xref:System.IO.Packaging.Package.CreateRelationship%2A> ou **PackagePart**.<xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode qui a créé la relation. Après avoir créé la relation le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> ne peut pas être modifié.  
  
 Lorsque <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> est <xref:System.IO.Packaging.TargetMode.Internal>, la <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> doit être une référence relative.  Pour une relation au niveau du package, la référence relative de la <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est résolue par rapport à l’URI à en-tête pack du package source qui possède et contient la relation.  (Exemple d’URI pack de package source : « pack://http :,, www.adatum.com, datapak.package / ».)  Pour une relation au niveau du composant, le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est résolu en fonction du composant source qui possède la relation (<xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est interprété en fonction <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>).  
  
 Lorsque <xref:System.IO.Packaging.PackageRelationship.TargetMode%2A> est <xref:System.IO.Packaging.TargetMode.External>, le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> peut être une référence relative ou un URI qualifié complet.  Si le <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> est une référence relative, la référence est interprétée comme étant relatif à l’emplacement de la <xref:System.IO.Packaging.Package> qui contient cette relation.  
  
 Pour plus d’informations sur <xref:System.IO.Packaging.PackageRelationship.TargetUri%2A> voir Section 1.3.3 « Relation Markup » de la *Open Packaging Conventions* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageRelationship.SourceUri" />
        <altmember cref="P:System.IO.Packaging.PackageRelationship.TargetMode" />
      </Docs>
    </Member>
  </Members>
</Type>