<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedPackageEnvelope.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d13de0354f15e43fe6e836cca6df2e57f369e866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13de0354f15e43fe6e836cca6df2e57f369e866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">Représente un fichier composé OLE qui contient un package chiffré.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> has no public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> ne possède aucun constructeur public.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>An <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> is created by use of the static <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> methods.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> est créé à l’aide de la méthode statique <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, ou <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">Ferme le package chiffré et le fichier composé OLE qui le contient.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>The following example shows how to use this method to close an <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour fermer une <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">Flux de données sur lequel créer le fichier.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Licence de publication incorporée dans le fichier composé.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> on the specified stream.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> sur le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> nouvellement créé.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">L’utilisateur actuel a accès en lecture/écriture sur le nouveau fichier.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> ne fournit pas d'accès en lecture/écriture.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">Nom du fichier composé OLE.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Licence de publication incorporée dans le fichier composé.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and gives it the specified file name.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> et lui donne le nom de fichier spécifié.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> nouvellement créé.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">L’utilisateur actuel a accès en lecture/écriture au fichier.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses an existing unencrypted package as the source of its content.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> qui utilise un package non chiffré existant comme la source de son contenu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> méthode pour instancier un <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">Flux de données sur lequel créer le fichier.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">Flux de données qui représente le package non chiffré existant.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Licence de publication incorporée dans le fichier composé.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (sur le flux de données spécifié) qui utilise le package non chiffré spécifié comme son contenu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> nouvellement créé.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">L’utilisateur actuel a accès en lecture/écriture sur le nouveau fichier.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> méthode pour instancier un <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> ne fournit pas d'accès en lecture/écriture.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">Nom du fichier composé OLE.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">Flux de données qui représente le package non chiffré existant.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Licence de publication incorporée dans le fichier composé.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">Crée et retourne une <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> qui utilise le package non chiffré spécifié comme son contenu et lui donne le nom de fichier spécifié.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> nouvellement créé.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">L’utilisateur actuel a accès en lecture/écriture au fichier.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> méthode pour instancier un <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> when finished with a <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> une fois terminé avec un <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> rend le <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> de l'objet <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Cette méthode est appelée par le public <ph id="ph1">`Dispose()`</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> appelle la méthode protégée <ph id="ph2">`Dispose(Boolean)`</ph> méthode avec la <ph id="ph3">`disposing`</ph> paramètre la valeur <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> appelle <ph id="ph2">`Dispose`</ph> avec <ph id="ph3">`disposing`</ph> la valeur <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> references.</source>
          <target state="translated">Lorsque le <ph id="ph1">`disposing`</ph> paramètre a la valeur true, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> références.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">`Dispose()`</ph> de chaque objet référencé.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> peut être appelée plusieurs fois par d'autres objets.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Lors de la substitution <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’implémentation <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consultez <bpt id="p1">[</bpt>implémentant une méthode de suppression<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Pour plus d’informations sur <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>substitution de la méthode Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">Obtient une valeur qui spécifie si le fichier s'est ouvert avec accès en lecture, en écriture ou les deux.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> value that was used to open the file.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> utilisée pour ouvrir le fichier.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
          <source>Flush the stream for both the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and its package content.</source>
          <target state="translated">Videz le flux de données pour l'<ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> et le contenu de son package à la fois.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>Gets the encrypted package inside the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Obtient le package chiffré à l'intérieur de l'<ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> in the envelope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> dans l'enveloppe.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</source>
          <target state="translated">Obtient une valeur qui spécifie si le fichier est un fichier composé OLE avec un flux de données de package chiffré.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>The stream that is tested.</source>
          <target state="translated">Flux de données testé.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">Obtient une valeur qui spécifie si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The file that is tested.</source>
          <target state="translated">Fichier testé.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">Obtient une valeur qui spécifie si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The following example shows how to use this method to test for encryption.</source>
          <target state="translated">L’exemple suivant montre comment utiliser cette méthode pour tester le chiffrement.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Opens the encrypted package in an OLE compound file.</source>
          <target state="translated">Ouvre le package chiffré dans un fichier composé OLE.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">Flux de données qui contient le package chiffré.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">Ouvrez le package chiffré dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ouverte.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">Le flux doit avoir un package chiffré.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Fichier contenant le package chiffré.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">Ouvrez uniquement le package chiffré dans le fichier spécifié en lecture seule et sans partage.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ouverte.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Le fichier doit avoir un package chiffré.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">Le fichier ouvert est en lecture seule et non partagé.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Fichier contenant le package chiffré.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The type of access.</source>
          <target state="translated">Type d'accès.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">Ouvre uniquement le package chiffré dans le fichier spécifié avec l'accès spécifié et sans partage.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ouverte.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Le fichier doit avoir un package chiffré.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The opened file is unshared.</source>
          <target state="translated">Le fichier ouvert est partagé ou non.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Fichier contenant le package chiffré.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of access.</source>
          <target state="translated">Type d'accès.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of sharing.</source>
          <target state="translated">Type de partage.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">Ouvre le package chiffré dans le fichier spécifié et lui donne l'accès et le niveau de partage spécifié.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ouverte.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Le fichier doit avoir un package chiffré.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">Obtient les propriétés principales de package (telles que le titre et le sujet) du document managé par des droits.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> for the package.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> pour le package.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">Ces propriétés principales sont stockées dans les flux de propriété OLE standard (\005SummaryInformation et \005DocumentSummaryInformation).</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">Les propriétés principales sont également stockées dans le package lui-même.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">Il incombe à l’application pour conserver les deux ensembles de propriétés synchronisés.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>Gets the rights management information stored in the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>; specifically, the <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated">Obtient les informations de gestion des droits stockées dans l'<ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ; en particulier, la <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> et la <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph> stockées dans le fichier composé OLE qui personnifie le package protégé de gestion des droits. </target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> for the package.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> pour le package.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The following example shows how to obtain <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> for an encrypted package by use the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple suivant montre comment obtenir <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> pour un package chiffré à l’aide du <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">Obtient un objet qui fournit l'accès au flux de données du fichier composé à l'extérieur du package chiffré.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> représentant les flux de données dans le fichier composé OLE qui sont à l'extérieur du package chiffré.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>