<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03139be139110d634a13c4feea2e86d97d1e4851" />
    <Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/04/2018" />
    <Meta Name="ms.locfileid" Value="43569302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7a50e-101">Représente un fichier composé OLE qui contient un package chiffré.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7a50e-101">Represents an OLE compound file that contains an encrypted package.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> n’a aucun constructeur public.</span><span class="sxs-lookup"><span data-stu-id="7a50e-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="7a50e-103">Un <xref:System.IO.Packaging.EncryptedPackageEnvelope> est créé à l’aide de la méthode statique <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, ou <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="7a50e-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-104">Ferme le package chiffré et le fichier composé OLE qui le contient.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-104">Closes the encrypted package and the OLE compound file that holds it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a50e-105">L’exemple suivant montre comment utiliser cette méthode pour fermer une <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-106">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="7a50e-107">Flux de données sur lequel créer le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-107">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="7a50e-108">Licence de publication incorporée dans le fichier composé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-108">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="7a50e-109">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-110">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> sur le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-111">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-112">L’utilisateur actuel a accès en lecture/écriture au nouveau fichier.</span><span class="sxs-lookup"><span data-stu-id="7a50e-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-113">
            <paramref name="envelopeStream" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-113">
              <paramref name="envelopeStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a50e-114">
            <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-114">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="7a50e-115">Nom du fichier composé OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-115">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="7a50e-116">Licence de publication incorporée dans le fichier composé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-116">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="7a50e-117">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-118">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et lui donne le nom de fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-119">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-120">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="7a50e-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="7a50e-121">L’utilisateur actuel a accès en lecture/écriture au fichier.</span><span class="sxs-lookup"><span data-stu-id="7a50e-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-122">
            <paramref name="envelopeFileName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-122">
              <paramref name="envelopeFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-123">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> qui utilise un package non chiffré existant comme la source de son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a50e-124">L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> méthode pour instancier un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="7a50e-125">Flux de données sur lequel créer le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-125">The stream on which to create the file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="7a50e-126">Flux de données qui représente le package non chiffré existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-126">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="7a50e-127">Licence de publication incorporée dans le fichier composé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-127">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="7a50e-128">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-129">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (sur le flux de données spécifié) qui utilise le package non chiffré spécifié comme son contenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-130">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-131">L’utilisateur actuel a accès en lecture/écriture au nouveau fichier.</span><span class="sxs-lookup"><span data-stu-id="7a50e-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a50e-132">L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> méthode pour instancier un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-133">
            <paramref name="envelopeStream" /> ou <paramref name="packageStream" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-133">
              <paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7a50e-134">
            <paramref name="envelopeStream" /> ne fournit pas d'accès en lecture/écriture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-134">
              <paramref name="envelopeStream" /> does not provide read/write access.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="7a50e-135">Nom du fichier composé OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-135">The name of the OLE compound file.</span>
          </span>
        </param>
        <param name="packageStream">
          <span data-ttu-id="7a50e-136">Flux de données qui représente le package non chiffré existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-136">The stream representing the existing unencrypted package.</span>
          </span>
        </param>
        <param name="publishLicense">
          <span data-ttu-id="7a50e-137">Licence de publication incorporée dans le fichier composé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-137">The publish license that is embedded in the compound file.</span>
          </span>
        </param>
        <param name="cryptoProvider">
          <span data-ttu-id="7a50e-138">Objet qui détermine quelles opérations l'utilisateur actuel est autorisé à exécuter sur le contenu chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-139">Crée et retourne une <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> qui utilise le package non chiffré spécifié comme son contenu et lui donne le nom de fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-140">Objet <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> nouvellement créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-141">Si un fichier portant le nom spécifié existe déjà, il est remplacé.</span><span class="sxs-lookup"><span data-stu-id="7a50e-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="7a50e-142">L’utilisateur actuel a accès en lecture/écriture au fichier.</span><span class="sxs-lookup"><span data-stu-id="7a50e-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7a50e-143">L’exemple suivant montre comment utiliser le <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> méthode pour instancier un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-144">
            <paramref name="envelopeFileName" /> ou <paramref name="packageStream" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-144">
              <paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-145">Libère les ressources utilisées par le <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-146">Libère toutes les ressources utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-147">Appelez <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> une fois terminé avec un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="7a50e-148">La méthode <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> rend le <xref:System.IO.Packaging.EncryptedPackageEnvelope> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="7a50e-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="7a50e-149">Après avoir appelé <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.IO.Packaging.EncryptedPackageEnvelope> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.IO.Packaging.EncryptedPackageEnvelope> occupée.</span><span class="sxs-lookup"><span data-stu-id="7a50e-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="7a50e-150">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="7a50e-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7a50e-151">Appelez toujours <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> avant de libérer votre dernière référence à <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="7a50e-152">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.IO.Packaging.EncryptedPackageEnvelope> de l'objet <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="7a50e-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7a50e-153">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-154">Libère les ressources non managées utilisées par <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-155">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7a50e-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7a50e-156">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec le `disposing` paramètre défini sur `true`.</span><span class="sxs-lookup"><span data-stu-id="7a50e-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7a50e-157"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` défini sur `false`.</span><span class="sxs-lookup"><span data-stu-id="7a50e-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7a50e-158">Lorsque le `disposing` paramètre est true, cette méthode libère toutes les ressources détenues par les objets managés par ce <xref:System.IO.Packaging.EncryptedPackageEnvelope> références.</span><span class="sxs-lookup"><span data-stu-id="7a50e-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="7a50e-159">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="7a50e-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="7a50e-160">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution <see langword="Dispose(Boolean)" /> veillez à ne pas référencer des objets qui ont été supprimés lors d’un appel précédent à <see langword="Dispose" />. Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-160">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-161">Obtient une valeur qui spécifie si le fichier s'est ouvert avec accès en lecture, en écriture ou les deux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-161">Gets a value that specifies whether the file was opened with access to read, write, or both.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a50e-162">Valeur <see cref="T:System.IO.FileAccess" /> utilisée pour ouvrir le fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-162">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-163">Videz le flux de données pour l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> et le contenu de son package à la fois.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-163">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-164">Obtient le package chiffré à l'intérieur de l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-164">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-165">
            <see cref="T:System.IO.Packaging.Package" /> dans l'enveloppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-165">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-166">Obtient une valeur qui spécifie si le fichier est un fichier composé OLE avec un flux de données de package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-166">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="7a50e-167">Flux de données testé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-167">The stream that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-168">Obtient une valeur qui spécifie si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-168">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-169">
            <see langword="true" /> si le flux de données spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-169">
              <see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-170">
            <paramref name="stream" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-170">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="7a50e-171">Fichier testé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-171">The file that is tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-172">Obtient une valeur qui spécifie si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-172">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-173">
            <see langword="true" /> si le fichier spécifié est un fichier composé OLE avec un flux de données de package chiffré ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-173">
              <see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a50e-174">L’exemple suivant montre comment utiliser cette méthode pour tester le chiffrement.</span><span class="sxs-lookup"><span data-stu-id="7a50e-174">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7a50e-175">
            <paramref name="fileName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-175">
              <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-176">Ouvre le package chiffré dans un fichier composé OLE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-176">Opens the encrypted package in an OLE compound file.</span>
          </span>
        </summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream">
          <span data-ttu-id="7a50e-177">Flux de données qui contient le package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-177">The stream containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-178">Ouvrez le package chiffré dans le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-178">Open the encrypted package in the specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-179">
            <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-179">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-180">Le flux doit avoir un package chiffré.</span><span class="sxs-lookup"><span data-stu-id="7a50e-180">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="7a50e-181">Fichier contenant le package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-181">The file containing the encrypted package.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-182">Ouvrez uniquement le package chiffré dans le fichier spécifié en lecture seule et sans partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-182">Open the encrypted package in the specified file as read only and unshared.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-183">
            <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-183">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-184">Le fichier doit avoir un package chiffré.</span><span class="sxs-lookup"><span data-stu-id="7a50e-184">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="7a50e-185">Le fichier ouvert est en lecture seule et non partagé.</span><span class="sxs-lookup"><span data-stu-id="7a50e-185">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="7a50e-186">Fichier contenant le package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-186">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="7a50e-187">Type d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-187">The type of access.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-188">Ouvre uniquement le package chiffré dans le fichier spécifié avec l'accès spécifié et sans partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-188">Open the encrypted package in the specified file as unshared and with the specified access.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-189">
            <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-189">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-190">Le fichier doit avoir un package chiffré.</span><span class="sxs-lookup"><span data-stu-id="7a50e-190">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="7a50e-191">Le fichier ouvert est partagée ou non.</span><span class="sxs-lookup"><span data-stu-id="7a50e-191">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName">
          <span data-ttu-id="7a50e-192">Fichier contenant le package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-192">The file containing the encrypted package.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="7a50e-193">Type d'accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-193">The type of access.</span>
          </span>
        </param>
        <param name="sharing">
          <span data-ttu-id="7a50e-194">Type de partage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-194">The type of sharing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7a50e-195">Ouvre le package chiffré dans le fichier spécifié et lui donne l'accès et le niveau de partage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-195">Open the encrypted package in the specified file and gives it the specified access and sharing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7a50e-196">
            <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ouverte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-196">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-197">Le fichier doit avoir un package chiffré.</span><span class="sxs-lookup"><span data-stu-id="7a50e-197">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-198">Obtient les propriétés principales de package (telles que le titre et le sujet) du document managé par des droits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-198">Gets the core package properties (such as Title and Subject) of the rights managed document.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a50e-199">
            <see cref="T:System.IO.Packaging.PackageProperties" /> pour le package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-199">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7a50e-200">Ces propriétés principales sont stockées dans les flux de propriété OLE standard (\005SummaryInformation et \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="7a50e-200">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="7a50e-201">Les propriétés principales sont également stockées dans le package lui-même.</span><span class="sxs-lookup"><span data-stu-id="7a50e-201">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="7a50e-202">Il incombe à l’application pour conserver les deux ensembles de propriétés synchronisées.</span><span class="sxs-lookup"><span data-stu-id="7a50e-202">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-203">Obtient les informations de gestion des droits stockées dans l'<see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ; en particulier, la <see cref="T:System.Security.RightsManagement.PublishLicense" /> et la <see cref="T:System.Security.RightsManagement.UseLicense" /> stockées dans le fichier composé OLE qui personnifie le package protégé de gestion des droits. </span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-203">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a50e-204">
            <see cref="T:System.IO.Packaging.RightsManagementInformation" /> pour le package.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-204">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7a50e-205">L’exemple suivant montre comment obtenir <xref:System.IO.Packaging.RightsManagementInformation> pour un package chiffré à l’aide du <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="7a50e-205">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7a50e-206">Obtient un objet qui fournit l'accès au flux de données du fichier composé à l'extérieur du package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-206">Gets an object that provides access to the compound file streams outside the encrypted package.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7a50e-207">
            <see cref="T:System.IO.Packaging.StorageInfo" /> représentant les flux de données dans le fichier composé OLE qui sont à l'extérieur du package chiffré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7a50e-207">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>