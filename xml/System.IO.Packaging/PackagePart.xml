<Type Name="PackagePart" FullName="System.IO.Packaging.PackagePart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5869d9b142d5c385181a89ccc26ced1661fe91eb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36562013" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PackagePart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackagePart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackagePart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PackagePart" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackagePart abstract" />
  <TypeSignature Language="F#" Value="type PackagePart = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a base class for parts stored in a <see cref="T:System.IO.Packaging.Package" />.  This class is abstract.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.IO.Packaging.PackagePart> se compose de trois éléments de base :  
  
|Accès|Description|  
|------------|-----------------|  
|<xref:System.IO.Packaging.PackagePart.Uri%2A>|Le [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] de la partie.|  
|<xref:System.IO.Packaging.PackagePart.ContentType%2A>|Le [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type de flux de contenu.|  
|<xref:System.IO.Packaging.PackagePart.GetStream%2A>|Le flux de données de contenu de la partie.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [URI à en-tête pack dans WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Spécification Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" /> and part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` doit être valide <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification et la [Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkID=71255) spécification.  
  
 Utilisez ce constructeur lorsque la <xref:System.IO.Packaging.PackagePart.ContentType%2A> de la partie n’est pas connu immédiatement et sera défini ultérieurement lorsque <xref:System.IO.Packaging.Package.CreatePart%2A> est appelée.  
  
 Par défaut, le <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriété du composant est initialisée à <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <param name="contentType">The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type of the part data stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" />, part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], and [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` doit être valide <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification et la [Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkID=71255) spécification.  
  
 Par défaut, le <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriété du composant est initialisée à <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 `contentType` doit être un [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type formé conformément à la [le document RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Section 3.7.  Le tableau suivant montre un exemple du contenu [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] types utilisés dans [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documents.  
  
|Description|Type de contenu|  
|-----------------|------------------|  
|Police|application/vnd.ms-opentype|  
|Profil ICC|application/vnd.ms-Color.iccprofile|  
|Image JPEG|image/jpeg|  
|Police obfusquées|application/vnd.ms-package.obfuscated-OpenType|  
|Image PNG|image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|Image TIFF|tiff/image|  
|Image Photo de support de Windows|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberSignature Language="F#" Value="new System.IO.Packaging.PackagePart : System.IO.Packaging.Package * Uri * string * System.IO.Packaging.CompressionOption -&gt; System.IO.Packaging.PackagePart" Usage="new System.IO.Packaging.PackagePart (package, partUri, contentType, compressionOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">The parent <see cref="T:System.IO.Packaging.Package" /> of the part.</param>
        <param name="partUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part, relative to the parent <see cref="T:System.IO.Packaging.Package" /> root.</param>
        <param name="contentType">The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type of the part's data stream.</param>
        <param name="compressionOption">The compression option of the part data stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.IO.Packaging.PackagePart" /> class with a specified parent <see cref="P:System.IO.Packaging.PackagePart.Package" />, part [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] content type, and <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` doit être valide <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification et la [Open Packaging Conventions](http://go.microsoft.com/fwlink/?LinkID=71255) spécification.  
  
 `contentType` doit être un [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type formé conformément à la [le document RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Section 3.7.  Le tableau suivant montre un exemple du contenu [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] types utilisés dans [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documents.  
  
|Description|Type de contenu|  
|-----------------|------------------|  
|Police|application/vnd.ms-opentype|  
|Profil ICC|application/vnd.ms-Color.iccprofile|  
|Image JPEG|image/jpeg|  
|Police obfusquées|application/vnd.ms-package.obfuscated-OpenType|  
|Image PNG|image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|Image TIFF|tiff/image|  
|Image Photo de support de Windows|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> or <paramref name="partUri" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> is not a valid <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="compressionOption" /> value is not valid.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberSignature Language="F#" Value="member this.CompressionOption : System.IO.Packaging.CompressionOption" Usage="System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the compression option of the part content stream.</summary>
        <value>L’option de compression, la partie du flux de contenu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> est une propriété en lecture seule qui est accessible uniquement lorsque le parent <xref:System.IO.Packaging.Package> est ouvert.  
  
 Le <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> propriété est automatiquement définie par le <xref:System.IO.Packaging.PackagePart.%23ctor%2A> constructeur.  Quand il est défini par le constructeur, le <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> ne peut pas être modifié.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.IO.Packaging.PackagePart.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the content stream.</summary>
        <value>Le [ ! Type de include[TLA2#tla_mime](~/Includes/tla2sharptla-MIME-MD.MD)] du flux de données de contenu de la partie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> est une propriété en lecture seule qui est accessible uniquement lorsque le parent <xref:System.IO.Packaging.Package> est ouvert.  
  
 Le <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriété est automatiquement définie par le <xref:System.IO.Packaging.PackagePart.%23ctor%2A> constructeur.  Quand il est défini par le constructeur, le <xref:System.IO.Packaging.PackagePart.ContentType%2A> ne peut pas être modifié.  
  
 Le <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriété est un [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type formé conformément à la [le document RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Section 3.7.  Le tableau suivant montre un exemple du contenu [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] types utilisés dans [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] documents.  
  
|Description|Type de contenu|  
|-----------------|------------------|  
|Police|application/vnd.ms-opentype|  
|Profil ICC|application/vnd.ms-Color.iccprofile|  
|Image JPEG|image/jpeg|  
|Police obfusquées|application/vnd.ms-package.obfuscated-OpenType|  
|Image PNG|image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|Image TIFF|tiff/image|  
|Image Photo de support de Windows|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).  -or-  The string returned by the derived class <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> method is empty.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une relation au niveau du composant définit une association entre cette partie et une partie de la cible ou une ressource.  Une relation au niveau du composant peut être une des deux formes.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une cible <xref:System.IO.Packaging.PackagePart> à l’intérieur de la <xref:System.IO.Packaging.Package>.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une ressource cible en dehors du package.  
  
 Dans une relation, la partie de la source est considéré comme « propriétaire » de la relation.  Lorsque la partie de la source est supprimée, toutes les relations appartienne à la partie sont également supprimées.  Le processus de création ou de suppression de la relation ne modifie pas physiquement le composant cible ou la ressource en aucune façon.  
  
 Le <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode ne modifie pas physiquement le composant source, ou le composant cible ou ressource en aucune façon.  
  
 La cible d’une relation ne peut pas être une autre relation.  
  
 Pour plus d’informations sur les relations de package, consultez la section 1.3 de la *Open Packaging Conventions (OPC)* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Pour plus d’informations sur XPS documents voir le *ouvrir XPS XML Paper Specification ()* disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target part.</param>
        <param name="targetMode">One of the enumeration values. For example, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> if the target part is inside the <see cref="T:System.IO.Packaging.Package" />; or <see cref="F:System.IO.Packaging.TargetMode.External" /> if the target is a resource outside the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">The role of the relationship.</param>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <returns>The part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to the target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une relation au niveau du composant définit une association entre cette partie et une partie de la cible ou une ressource.  Une relation au niveau du composant peut être une des deux formes.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une cible <xref:System.IO.Packaging.PackagePart> à l’intérieur de la <xref:System.IO.Packaging.Package>.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une ressource cible en dehors du package.  
  
 Dans une relation, la partie de la source est considéré comme « propriétaire » de la relation.  Lorsque la partie de la source est supprimée, toutes les relations appartienne à la partie sont également supprimées.  Le processus de création ou de suppression de la relation ne modifie pas physiquement le composant cible ou la ressource en aucune façon.  
  
 Le <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode ne modifie pas physiquement le composant source, ou le composant cible ou ressource en aucune façon.  
  
 La cible d’une relation ne peut pas être une autre relation.  
  
 Si `targetMode` est spécifié en tant que <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` doit être un URI relatif qui est formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  L’URI relatif interne peut être un chemin absolu qui commence par une barre oblique (« / ») caractère tel que « / page1.xaml » ou « / /images/picture4.jpg », ou un chemin relatif tel que «.. / imagespicture1.jpg » qui est résolue par rapport à la racine du package (« / ») comme URI de base.  
  
 Si `targetMode` est spécifié en tant que <xref:System.IO.Packaging.TargetMode.External>, `targetUri` peut être soit absolu ou un URI relatif formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  «http://www.microsoft.com/page2.xml» est un exemple d’un URI absolu qui fait référence à une ressource cible externe « page2.xm ».  « images/picture1.jpg » est un exemple d’URI relatif qui fait également référence à une cible externe ressource « 1.jpg », mais qui est résolue par rapport à l’URI du package lui-même.  
  
 `relationshipType` doit être un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  Différents types de package peuvent définir des types de l’autre relation au niveau du composant.  Le tableau suivant indique le niveau de la partie `relationshipType` URI définis pour les documents qui se conforment à la *ouvrir XPS XML Paper Specification ()*.  
  
|Relation de niveau de la partie de Document XPS|URI de Type de relation|  
|-------------------------------------------|---------------------------|  
|Définitions de Signature numérique|[http://schemas.microsoft.com/xps/2005/06/signature-definitions](http://schemas.microsoft.com/xps/2005/06/signature-definitions)|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Ressource requise|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Police restreinte|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Pour plus d’informations sur les relations de package, consultez la section 1.3 de la *Open Packaging Conventions (OPC)* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Pour plus d’informations sur XPS documents voir le *ouvrir XPS XML Paper Specification ()* disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="targetMode" /> parameter is not a valid <see cref="T:System.IO.Packaging.TargetMode" /> enumeration value.</exception>
        <exception cref="T:System.ArgumentException">The part identified by the <paramref name="targetUri" /> is a relationship (the target of a relationship cannot be another relationship).  -or-  <paramref name="targetMode" /> is specified as <see cref="F:System.IO.Packaging.TargetMode.Internal" /> but <paramref name="targetUri" /> is an absolute external [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (a new relationship cannot be added).</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.CreateRelationship : Uri * System.IO.Packaging.TargetMode * string * string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.CreateRelationship (targetUri, targetMode, relationshipType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the target part.</param>
        <param name="targetMode">One of the enumeration values. For example, <see cref="F:System.IO.Packaging.TargetMode.Internal" /> if the target part is inside the <see cref="T:System.IO.Packaging.Package" />; or <see cref="F:System.IO.Packaging.TargetMode.External" /> if the target is a resource outside the <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="relationshipType">The role of the relationship.</param>
        <param name="id">A unique ID for the relationship.</param>
        <summary>Creates a part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to a specified target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</summary>
        <returns>The part-level relationship between this <see cref="T:System.IO.Packaging.PackagePart" /> to the target <see cref="T:System.IO.Packaging.PackagePart" /> or external resource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une relation au niveau du composant définit une association entre cette partie et une partie de la cible ou une ressource.  Une relation au niveau du composant peut être une des deux formes.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une cible <xref:System.IO.Packaging.PackagePart> à l’intérieur de la <xref:System.IO.Packaging.Package>.  
  
-   Entre une source de <xref:System.IO.Packaging.PackagePart> à une ressource cible en dehors du package.  
  
 Dans une relation, la partie de la source est considéré comme « propriétaire » de la relation.  Lorsque la partie de la source est supprimée, toutes les relations appartienne à la partie sont également supprimées.  Le processus de création ou de suppression de la relation ne modifie pas physiquement le composant cible ou la ressource en aucune façon.  
  
 `id` doit être un identificateur XML valide.  Le `id` type est xsd : ID et doit respecter les conventions d’affectation de noms indiquées dans le *XML Schema Part 2 : Datatypes* spécification (consultez [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Le <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> méthode ne modifie pas physiquement le composant source, ou le composant cible ou ressource en aucune façon.  
  
 La cible d’une relation ne peut pas être une autre relation.  
  
 Si `targetMode` est spécifié en tant que <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` doit être un URI relatif qui est formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  L’URI relatif interne peut être un chemin absolu qui commence par une barre oblique (« / ») caractère tel que « / page1.xaml » ou « / /images/picture4.jpg », ou un chemin relatif tel que «.. / imagespicture1.jpg » qui est résolue par rapport à la racine du package (« / ») comme URI de base.  
  
 Si `targetMode` est spécifié en tant que <xref:System.IO.Packaging.TargetMode.External>, `targetUri` peut être soit absolu ou un URI relatif formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  «http://www.microsoft.com/page2.xml» est un exemple d’un URI absolu qui fait référence à une ressource cible externe « page2.xm ».  « images/picture1.jpg » est un exemple d’URI relatif qui fait également référence à une cible externe ressource « 1.jpg », mais qui est résolue par rapport à l’URI du package lui-même.  
  
 `relationshipType` doit être un [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] formé conformément à la [RFC 3986](http://tools.ietf.org/html/rfc3986) *syntaxe générique d’identificateur de ressource uniforme (URI)* spécification.  Différents types de package peuvent définir des types de l’autre relation au niveau du composant.  Le tableau suivant indique le niveau de la partie `relationshipType` URI définis pour les documents qui se conforment à la *ouvrir XPS XML Paper Specification ()*.  
  
|Relation de niveau de la partie de Document XPS|URI de Type de relation|  
|-------------------------------------------|---------------------------|  
|Définitions de Signature numérique|http://schemas.microsoft.com/xps/2005/06/signature-definitions|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Ressource requise|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Police restreinte|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Pour plus d’informations sur les relations de package, consultez la section 1.3 de la *Open Packaging Conventions (OPC)* spécification disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Pour plus d’informations sur XPS documents voir le *ouvrir XPS XML Paper Specification ()* disponible en téléchargement à [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> or <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="targetMode" /> parameter is not a valid <see cref="T:System.IO.Packaging.TargetMode" /> enumeration value.</exception>
        <exception cref="T:System.ArgumentException">The part identified by the <paramref name="targetUri" /> is a relationship (the target of a relationship cannot be another relationship).  -or-  <paramref name="targetMode" /> is specified as <see cref="F:System.IO.Packaging.TargetMode.Internal" /> but <paramref name="targetUri" /> is an absolute external [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (a new relationship cannot be added).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.  -or-  A part with the specified <paramref name="id" /> already exists.</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.DeleteRelationship : string -&gt; unit" Usage="packagePart.DeleteRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to delete.</param>
        <summary>Deletes a specified part-level <see cref="T:System.IO.Packaging.PackageRelationship" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` doit être un identificateur XML valide.  Le `id` type est xsd : ID et doit respecter les conventions d’affectation de noms indiquées dans le *XML Schema Part 2 : Datatypes* spécification (consultez [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Si le texte spécifié `id` ne correspond pas à la <xref:System.IO.Packaging.PackageRelationship.Id%2A> pour chacune des relations qui sont détenues par cette partie, aucune relation n’est supprimée et aucune exception n’est levée.  
  
 Autre que la suppression de la relation spécifiée, la <xref:System.IO.Packaging.PackagePart.DeleteRelationship%2A> méthode ne modifie pas physiquement ce composant ni le composant cible.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">The package is read-only (relationships cannot be deleted).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetContentTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetContentTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContentTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetContentTypeCore();" />
      <MemberSignature Language="F#" Value="abstract member GetContentTypeCore : unit -&gt; string&#xA;override this.GetContentTypeCore : unit -&gt; string" Usage="packagePart.GetContentTypeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, returns the [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the part content.</summary>
        <returns>The [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] type of the part content.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> est une méthode virtuelle de la <xref:System.IO.Packaging.PackagePart> classe de base abstraite. Implémentez cette méthode uniquement dans les types dérivés où la valeur du type de contenu ne peut pas être fournie au moment de la construction, ou si le calcul du contenu de type valeur est une opération non triviale ou coûteuse. La valeur de retour doit être un [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] le type de contenu.  
  
 Les classes dérivées peuvent appeler <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> pour initialiser le <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriété de la classe dérivée à une valeur par défaut.  Après le <xref:System.IO.Packaging.PackagePart.ContentType%2A> propriété a été définie, elle ne peut pas être modifié.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The derived class does not provide an override implementation required for the <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.GetRelationship : string -&gt; System.IO.Packaging.PackageRelationship" Usage="packagePart.GetRelationship id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to return.</param>
        <summary>Returns the relationship that has a specified <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
        <returns>The relationship that matches the specified <paramref name="id" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` doit être un identificateur XML valide.  Le `id` type est xsd : ID et doit respecter les conventions d’affectation de noms indiquées dans le *XML Schema Part 2 : Datatypes* spécification (consultez [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Vous pouvez utiliser la <xref:System.IO.Packaging.PackagePart.RelationshipExists%2A> pour déterminer si une relation avec un objet <xref:System.IO.Packaging.PackageRelationship.Id%2A> cette partie est propriétaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> is an empty string.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).  -or-  A relationship with the specified <paramref name="id" /> does not exist in the package.</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetRelationships : unit -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a collection of all the relationships that are owned by this part.</summary>
        <returns>A collection of all the relationships that are owned by the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection retournée n’est jamais `null`; Toutefois, la collection peut contenir zéro élément si le composant ne définit pas toutes les relations.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipsByType : string -&gt; System.IO.Packaging.PackageRelationshipCollection" Usage="packagePart.GetRelationshipsByType relationshipType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">The <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> of the relationships to locate and return in the collection.</param>
        <summary>Returns a collection of the relationships that match a specified <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" />.</summary>
        <returns>A collection of the relationships that match the specified <paramref name="relationshipType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection retournée n’est jamais `null`; Toutefois, la collection peut contenir zéro élément si aucune relation correspondent à la chaîne `relationshipType` qui est défini pour la partie.  
  
 Les espaces à gauche ou dans le `relationshipType` chaîne sont supprimés automatiquement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipType" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> is an empty string.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns the part content data stream.</summary>
        <block subset="none" type="usage">
          <para>
            <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> appelle en interne la dérivée <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> méthode pour ouvrir et retourner le flux de données du composant selon le format physique implémenté dans la classe dérivée.  Par défaut, le <see cref="T:System.IO.Packaging.ZipPackagePart" /> l’implémentation de l’abstraite sous-classe <see cref="T:System.IO.Packaging.PackagePart" /> classe est fournie et utilisée.  Dans l’opération par défaut, <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> appelle en interne <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe pour ouvrir et retourner le flux de données de composant à partir d’un fichier ZIP.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="packagePart.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the part content data stream.</summary>
        <returns>The content data stream for the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ouvre le flux de contenu avec <xref:System.IO.FileMode> de <xref:System.IO.FileMode.OpenOrCreate> et <xref:System.IO.FileAccess> les autorisations qui sont les mêmes que le parent <xref:System.IO.Packaging.Package>.  
  
 La surcharge <xref:System.IO.Packaging.PackagePart.GetStream%2A> méthode vous permet de définir un spécifique <xref:System.IO.FileMode>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> appelle en interne la dérivée <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> méthode pour ouvrir et retourner le flux de données du composant selon le format physique implémenté dans la classe dérivée.  Par défaut, le <see cref="T:System.IO.Packaging.ZipPackagePart" /> l’implémentation de l’abstraite sous-classe <see cref="T:System.IO.Packaging.PackagePart" /> classe est fournie et utilisée.  Dans l’opération par défaut, <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> appelle en interne <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe pour ouvrir et retourner le flux de données de composant à partir d’un fichier ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode -&gt; System.IO.Stream" Usage="packagePart.GetStream mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <summary>Returns the content stream opened in a specified I/O <see cref="T:System.IO.FileMode" />.</summary>
        <returns>The content stream of the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IO.FileAccess> autorisations du flux de contenu retourné sont les mêmes que les autorisations du parent <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="mode" /> parameter is not a valid <see cref="T:System.IO.FileMode" /> enumeration value.</exception>
        <exception cref="T:System.IO.IOException">The <paramref name="mode" /> parameter is not compatible with the package and part stream.  -or-  The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> appelle en interne la dérivée <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> méthode pour ouvrir et retourner le flux de données du composant selon le format physique implémenté dans la classe dérivée.  Par défaut, le <see cref="T:System.IO.Packaging.ZipPackagePart" /> l’implémentation de l’abstraite sous-classe <see cref="T:System.IO.Packaging.PackagePart" /> classe est fournie et utilisée.  Dans l’opération par défaut, <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> appelle en interne <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe pour ouvrir et retourner le flux de données de composant à partir d’un fichier ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="member this.GetStream : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStream (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <param name="access">The access permissions to use in opening the content stream.</param>
        <summary>Returns the part content stream opened with a specified <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</summary>
        <returns>The content stream for the part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="mode" /> parameter is not a valid <see cref="T:System.IO.FileMode" /> enumeration value.  -or-  The <paramref name="access" /> parameter is not a valid <see cref="T:System.IO.FileAccess" /> enumeration value.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="mode" /> or <paramref name="access" /> is not compatible with the package and part stream.  -or-  The <paramref name="access" /> parameter is specified as <see cref="F:System.IO.FileAccess.Read" /> but the <paramref name="mode" /> parameter requires write access.  (<see cref="T:System.IO.FileMode" /> values of <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" />, and <see cref="F:System.IO.FileMode.Append" /> require <see cref="F:System.IO.FileAccess.Write" /> or <see cref="F:System.IO.FileAccess.ReadWrite" /> access.)  -or-  The stream object returned by the <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> method of the derived subclass is <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> appelle en interne la dérivée <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> méthode pour ouvrir et retourner le flux de données du composant selon le format physique implémenté dans la classe dérivée.  Par défaut, le <see cref="T:System.IO.Packaging.ZipPackagePart" /> l’implémentation de l’abstraite sous-classe <see cref="T:System.IO.Packaging.PackagePart" /> classe est fournie et utilisée.  Dans l’opération par défaut, <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> appelle en interne <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe pour ouvrir et retourner le flux de données de composant à partir d’un fichier ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStreamCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Stream GetStreamCore(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStreamCore (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Stream ^ GetStreamCore(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="abstract member GetStreamCore : System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.Stream" Usage="packagePart.GetStreamCore (mode, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">The I/O mode in which to open the content stream.</param>
        <param name="access">The access permissions to use in opening the content stream.</param>
        <summary>When overridden in a derived class, returns the part content stream opened with a specified <see cref="T:System.IO.FileMode" /> and <see cref="T:System.IO.FileAccess" />.</summary>
        <returns>The content data stream of the part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les applications ne doivent pas appeler <xref:System.IO.Packaging.PackagePart.GetStreamCore%2A> directement, mais doit appeler <xref:System.IO.Packaging.PackagePart.GetStream%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Dérivé <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> implémentation ne doit effectuer aucune hypothèse sur l’ordre ou les opérations effectuées par le <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> méthode qui l’appelle.</para>
        </block>
        <block subset="none" type="usage">
          <para>Dérivé <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> méthode est appelée par le <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> méthodes pour ouvrir et retourner le flux de données du composant selon le format physique implémenté dans la classe dérivée.  Par défaut, le <see cref="T:System.IO.Packaging.ZipPackagePart" /> l’implémentation de l’abstraite sous-classe <see cref="T:System.IO.Packaging.PackagePart" /> classe est fournie et utilisée.  Dans l’opération par défaut, <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> appelle en interne <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> de la <see cref="T:System.IO.Packaging.ZipPackagePart" /> classe pour ouvrir et retourner le flux de données de composant à partir d’un fichier ZIP.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Package : System.IO.Packaging.Package" Usage="System.IO.Packaging.PackagePart.Package" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent <see cref="T:System.IO.Packaging.Package" /> of the part.</summary>
        <value>Le package parent de la partie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Package%2A> est une propriété en lecture seule qui est accessible uniquement lorsque le parent <xref:System.IO.Packaging.Package> est ouvert.  
  
 Le <xref:System.IO.Packaging.PackagePart.Package%2A> propriété est automatiquement définie par le <xref:System.IO.Packaging.PackagePart.%23ctor%2A> constructeur.  Quand il est défini par le constructeur, le parent <xref:System.IO.Packaging.PackagePart.Package%2A> pour la partie ne peut pas être modifiée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberSignature Language="F#" Value="member this.RelationshipExists : string -&gt; bool" Usage="packagePart.RelationshipExists id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">The <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> of the relationship to check for.</param>
        <summary>Returns a value that indicates whether this part owns a relationship with a specified <see cref="P:System.IO.Packaging.PackageRelationship.Id" />.</summary>
        <returns>
          <see langword="true" /> if this part owns a relationship with the specified <paramref name="id" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` doit être un identificateur XML valide.  Le `id` type est xsd : ID et doit respecter les conventions d’affectation de noms indiquées dans le *XML Schema Part 2 : Datatypes* spécification (consultez [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> is not a valid XML identifier.</exception>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <exception cref="T:System.IO.IOException">The package is write-only (relationship information cannot be read).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.IO.Packaging.PackagePart.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the part.</summary>
        <value>Le [ ! Include[TLA2#tla_uri](~/Includes/tla2sharptla-URI-MD.MD)] de l’article relatif à la racine du package.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> est une propriété en lecture seule qui est accessible uniquement lorsque le parent <xref:System.IO.Packaging.Package> est ouvert.  
  
 Le <xref:System.IO.Packaging.PackagePart.Uri%2A> propriété est automatiquement définie par le <xref:System.IO.Packaging.PackagePart.%23ctor%2A> constructeur.  Quand il est défini par le constructeur, le <xref:System.IO.Packaging.PackagePart.Uri%2A> de la partie ne peut pas être modifié.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The part has been deleted.  -or-  The <see cref="P:System.IO.Packaging.PackagePart.Package" /> is not open (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> or <see cref="M:System.IO.Packaging.Package.Close" /> has been called).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>