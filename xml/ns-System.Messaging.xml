<Namespace Name="System.Messaging">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eab5ed0569927572b94947f95901b3f05d70f785" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="30734693" />
  </Metadata>
  <Docs>
    <summary>L'espace de noms <see cref="N:System.Messaging" /> fournit des classes qui vous permettent de vous connecter aux files d'attente de messages, de les analyser et de les gérer sur le réseau, ainsi que d'envoyer, de recevoir ou de lire des messages.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Membres de la <xref:System.Messaging.MessageQueue> classe incluent les méthodes suivantes pour lire et écrire des messages à la file d’attente :  
  
-   Le <xref:System.Messaging.MessageQueue.Send%2A> méthode permet à votre application écrire des messages dans la file d’attente. Surcharges de la méthode permettent de spécifier s’il faut envoyer votre message à l’aide un <xref:System.Messaging.Message> (qui fournit un contrôle détaillé sur les informations communiquées) ou tout autre objet managé, y compris les classes spécifiques à l’application. La méthode prend également en charge l’envoi de messages dans le cadre d’une transaction.  
  
-   Le <xref:System.Messaging.MessageQueue.Receive%2A>, <xref:System.Messaging.MessageQueue.ReceiveById%2A>, et <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A> méthodes fournissent des fonctionnalités pour lire les messages à partir d’une file d’attente. Comme le <xref:System.Messaging.MessageQueue.Send%2A> (méthode), ces méthodes fournissent des surcharges qui prennent en charge de traitement de la file d’attente transactionnelle. Ces méthodes fournissent également des surcharges avec délai d’attente.  
  
     Les paramètres de sortie qui permettent le traitement de continuer si la file d’attente est vide. Étant donné que ces méthodes sont des exemples de traitement synchrone, elles interrompent le thread actuel jusqu'à ce qu’un message soit disponible, sauf si vous spécifiez un délai d’attente.  
  
-   Le <xref:System.Messaging.MessageQueue.Peek%2A> méthode est similaire à <xref:System.Messaging.MessageQueue.Receive%2A>, mais elle n’entraîne pas un message à supprimer de la file d’attente lorsqu’il est lu. Étant donné que <xref:System.Messaging.MessageQueue.Peek%2A> ne modifie pas le contenu de la file d’attente, aucune surcharge pour prendre en charge de traitement transactionnel. Toutefois, étant donné que <xref:System.Messaging.MessageQueue.Peek%2A>, comme <xref:System.Messaging.MessageQueue.Receive%2A>, lit les messages de manière synchrone à partir de la file d’attente, les surcharges de la méthode ne prennent pas en charge la spécification d’un délai d’attente afin d’empêcher le thread d’attendre indéfiniment.  
  
-   Le <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.Messaging.MessageQueue.EndPeek%28System.IAsyncResult%29>, <xref:System.Messaging.MessageQueue.BeginReceive%2A>, et <xref:System.Messaging.MessageQueue.EndReceive%28System.IAsyncResult%29> méthodes permettent de lire des messages de façon asynchrone à partir de la file d’attente. Ils n’interrompent pas le thread actuel en attendant un message arrive dans la file d’attente.  
  
 Les méthodes suivantes de la <xref:System.Messaging.MessageQueue> classe fournit des fonctionnalités pour récupérer des listes de files d’attente selon les critères spécifiés et de déterminer si les files d’attente spécifiques existent :  
  
-   <xref:System.Messaging.MessageQueue.GetPrivateQueuesByMachine%28System.String%29> permet la récupération de files d’attente privées sur un ordinateur.  
  
-   <xref:System.Messaging.MessageQueue.GetPublicQueuesByCategory%28System.Guid%29>, <xref:System.Messaging.MessageQueue.GetPublicQueuesByLabel%28System.String%29>, et <xref:System.Messaging.MessageQueue.GetPublicQueuesByMachine%28System.String%29> permettent de récupérer des files d’attente publiques par les critères communs. Une surcharge de <xref:System.Messaging.MessageQueue.GetPublicQueues%2A> fournit des informations encore plus détaillées pour sélectionner des files d’attente selon plusieurs critères de recherche.  
  
 Autres méthodes de la <xref:System.Messaging.MessageQueue> classe fournissent les fonctionnalités suivantes :  
  
-   Création et la suppression de files d’attente de Message Queueing.  
  
-   À l’aide d’un énumérateur de message pour parcourir les messages dans une file d’attente.  
  
-   À l’aide d’un énumérateur de la file d’attente pour l’itération dans les files d’attente sur le système.  
  
-   Définition des droits d’accès basé sur les ACL.  
  
-   Utiliser le cache de connexion.  
  
 Le <xref:System.Messaging.Message> classe fournit un contrôle détaillé sur les informations que vous envoyez à une file d’attente, et l’objet est utilisé lors de la réception ou de la lecture des messages à partir d’une file d’attente. Outre le corps du message, les propriétés de la <xref:System.Messaging.Message> classe incluent les paramètres d’accusé de réception, sélection d’un formateur, identification, informations d’authentification et de chiffrement, horodatages, des indications sur l’utilisation de suivi, la journalisation du serveur, et files d’attente de lettres mortes et les données de transaction.  
  
 Le <xref:System.Messaging.MessageQueue> composant est associé aux trois formateurs suivants, qui vous permettent de sérialiser et désérialiser les messages envoyés et reçus à partir de files d’attente :  
  
-   Le <xref:System.Messaging.XmlMessageFormatter> fournit une messagerie faiblement couplée, l’activation du contrôle de version indépendant de types sérialisés sur le client et le serveur.  
  
-   Le <xref:System.Messaging.ActiveXMessageFormatter> est compatible avec le contrôle COM MSMQ. Il vous permet de vous envoyer les types qui peuvent être reçus par le contrôle et de recevoir des types qui ont été envoyés par le contrôle.  
  
-   Le <xref:System.Messaging.BinaryMessageFormatter> offre une alternative plus rapide à la <xref:System.Messaging.XmlMessageFormatter>, mais sans l’avantage de la messagerie faiblement couplée.  
  
 Autres classes dans le `Messaging` espace de noms prennent en charge l’accès du code et la sécurité basée sur les ACL, filtrage <xref:System.Messaging.Message> propriétés lors de la lecture des messages à partir d’une file d’attente et à l’aide de transactions lors de l’envoi et la réception des messages.  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>