<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="073a50ea8bfd90ac3738054392747b0b10e7478b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609025" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <TypeSignature Language="F#" Value="type ThreadState = " />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51b8c-101">Spécifie les états d'exécution de <see cref="T:System.Threading.Thread" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51b8c-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51b8c-102">Le <xref:System.Threading.ThreadState> énumération présente un intérêt que dans quelques scénarios de débogage.</span><span class="sxs-lookup"><span data-stu-id="51b8c-102">The <xref:System.Threading.ThreadState> enumeration is of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="51b8c-103">Votre code ne doit jamais utiliser l’état du thread pour synchroniser les activités de threads.</span><span class="sxs-lookup"><span data-stu-id="51b8c-103">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
 <span data-ttu-id="51b8c-104"><xref:System.Threading.ThreadState> définit un ensemble de tous les États d’exécution possibles pour les threads.</span><span class="sxs-lookup"><span data-stu-id="51b8c-104"><xref:System.Threading.ThreadState> defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="51b8c-105">Une fois qu’un thread est créé, il est au moins un des États, jusqu'à sa fin.</span><span class="sxs-lookup"><span data-stu-id="51b8c-105">Once a thread is created, it is in at least one of the states until it terminates.</span></span> <span data-ttu-id="51b8c-106">Threads créés dans le common language runtime sont initialement dans le `Unstarted` d’état, tandis que les threads externes qui entrent dans le runtime ne figurent déjà dans le `Running` état.</span><span class="sxs-lookup"><span data-stu-id="51b8c-106">Threads created within the common language runtime are initially in the `Unstarted` state, while external threads that come into the runtime are already in the `Running` state.</span></span> <span data-ttu-id="51b8c-107">Un `Unstarted` thread est passé par le `Running` état en appelant <xref:System.Threading.Thread.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="51b8c-107">An `Unstarted` thread is transitioned into the `Running` state by calling <xref:System.Threading.Thread.Start%2A>.</span></span> <span data-ttu-id="51b8c-108">Pas toutes les combinaisons de `ThreadState` valeurs sont valides ; par exemple, un thread ne peut pas être à la fois dans le `Aborted` et `Unstarted` États.</span><span class="sxs-lookup"><span data-stu-id="51b8c-108">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the `Aborted` and `Unstarted` states.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51b8c-109">Il existe deux énumérations,<xref:System.Threading.ThreadState?displayProperty=nameWithType> et <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="51b8c-109">There are two thread state enumerations,<xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="51b8c-110">Le tableau suivant répertorie les actions qui entraînent un changement d’état.</span><span class="sxs-lookup"><span data-stu-id="51b8c-110">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="51b8c-111">Action</span><span class="sxs-lookup"><span data-stu-id="51b8c-111">Action</span></span>|<span data-ttu-id="51b8c-112">États du thread</span><span class="sxs-lookup"><span data-stu-id="51b8c-112">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="51b8c-113">Un thread est créé dans le common language runtime.</span><span class="sxs-lookup"><span data-stu-id="51b8c-113">A thread is created within the common language runtime.</span></span>|<span data-ttu-id="51b8c-114">Non démarrée</span><span class="sxs-lookup"><span data-stu-id="51b8c-114">Unstarted</span></span>|  
|<span data-ttu-id="51b8c-115">Un autre thread appelle la <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> méthode sur le nouveau thread et l’appel retourne.</span><span class="sxs-lookup"><span data-stu-id="51b8c-115">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="51b8c-116">Le <xref:System.Threading.Thread.Start%2A> méthode ne retourne pas jusqu'à ce que le nouveau thread a démarré.</span><span class="sxs-lookup"><span data-stu-id="51b8c-116">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="51b8c-117">Il n’existe aucun moyen de savoir à quel moment le nouveau thread commence à s’exécuter, pendant l’appel à <xref:System.Threading.Thread.Start%2A>.</span><span class="sxs-lookup"><span data-stu-id="51b8c-117">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<span data-ttu-id="51b8c-118">En cours d'exécution</span><span class="sxs-lookup"><span data-stu-id="51b8c-118">Running</span></span>|  
|<span data-ttu-id="51b8c-119">Le thread appelle <xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="51b8c-119">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<span data-ttu-id="51b8c-120">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="51b8c-120">WaitSleepJoin</span></span>|  
|<span data-ttu-id="51b8c-121">Le thread appelle <xref:System.Threading.Monitor.Wait%2A> sur un autre objet.</span><span class="sxs-lookup"><span data-stu-id="51b8c-121">The thread calls <xref:System.Threading.Monitor.Wait%2A> on another object.</span></span>|<span data-ttu-id="51b8c-122">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="51b8c-122">WaitSleepJoin</span></span>|  
|<span data-ttu-id="51b8c-123">Le thread appelle <xref:System.Threading.Thread.Join%2A> sur un autre thread.</span><span class="sxs-lookup"><span data-stu-id="51b8c-123">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<span data-ttu-id="51b8c-124">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="51b8c-124">WaitSleepJoin</span></span>|  
|<span data-ttu-id="51b8c-125">Un autre thread appelle <xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="51b8c-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<span data-ttu-id="51b8c-126">En cours d'exécution</span><span class="sxs-lookup"><span data-stu-id="51b8c-126">Running</span></span>|  
|<span data-ttu-id="51b8c-127">Un autre thread appelle <xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="51b8c-127">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<span data-ttu-id="51b8c-128">SuspendRequested</span><span class="sxs-lookup"><span data-stu-id="51b8c-128">SuspendRequested</span></span>|  
|<span data-ttu-id="51b8c-129">Le thread répond à une demande <xref:System.Threading.Thread.Suspend%2A> .</span><span class="sxs-lookup"><span data-stu-id="51b8c-129">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<span data-ttu-id="51b8c-130">Interrompu</span><span class="sxs-lookup"><span data-stu-id="51b8c-130">Suspended</span></span>|  
|<span data-ttu-id="51b8c-131">Un autre thread appelle <xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="51b8c-131">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<span data-ttu-id="51b8c-132">En cours d'exécution</span><span class="sxs-lookup"><span data-stu-id="51b8c-132">Running</span></span>|  
|<span data-ttu-id="51b8c-133">Un autre thread appelle <xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="51b8c-133">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<span data-ttu-id="51b8c-134">AbortRequested</span><span class="sxs-lookup"><span data-stu-id="51b8c-134">AbortRequested</span></span>|  
|<span data-ttu-id="51b8c-135">Le thread répond à une demande <xref:System.Threading.Thread.Abort%2A> .</span><span class="sxs-lookup"><span data-stu-id="51b8c-135">The thread responds to a <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<span data-ttu-id="51b8c-136">Arrêté</span><span class="sxs-lookup"><span data-stu-id="51b8c-136">Stopped</span></span>|  
|<span data-ttu-id="51b8c-137">Un thread se termine.</span><span class="sxs-lookup"><span data-stu-id="51b8c-137">A thread is terminated.</span></span>|<span data-ttu-id="51b8c-138">Arrêté</span><span class="sxs-lookup"><span data-stu-id="51b8c-138">Stopped</span></span>|  
  
 <span data-ttu-id="51b8c-139">Outre les États mentionnés ci-dessus, il est également le `Background` état, ce qui indique si le thread s’exécute en arrière-plan ou de premier plan.</span><span class="sxs-lookup"><span data-stu-id="51b8c-139">In addition to the states noted above, there is also the `Background` state, which indicates whether the thread is running in the background or foreground.</span></span>  
  
 <span data-ttu-id="51b8c-140">Un thread peut être dans plusieurs États à un moment donné.</span><span class="sxs-lookup"><span data-stu-id="51b8c-140">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="51b8c-141">Par exemple, si un thread est bloqué sur un appel à <xref:System.Threading.Monitor.Wait%2A>et un autre thread appelle <xref:System.Threading.Thread.Abort%2A> sur le thread bloqué, le thread bloqué sera à la fois dans le `WaitSleepJoin` et `AbortRequested` États en même temps.</span><span class="sxs-lookup"><span data-stu-id="51b8c-141">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A>, and another thread calls <xref:System.Threading.Thread.Abort%2A> on the blocked thread, the blocked thread will be in both the `WaitSleepJoin` and the `AbortRequested` states at the same time.</span></span> <span data-ttu-id="51b8c-142">Dans ce cas, dès que le thread retourne de l’appel à <xref:System.Threading.Monitor.Wait%2A> ou est interrompu, il reçoit le <xref:System.Threading.ThreadAbortException> pour commencer l’abandon.</span><span class="sxs-lookup"><span data-stu-id="51b8c-142">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span>  
  
 <span data-ttu-id="51b8c-143">Le <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> propriété d’un thread fournit l’état actuel d’un thread.</span><span class="sxs-lookup"><span data-stu-id="51b8c-143">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="51b8c-144">Applications doivent utiliser un masque de bits pour déterminer si un thread est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="51b8c-144">Applications must use a bitmask to determine whether a thread is running.</span></span> <span data-ttu-id="51b8c-145">Étant donné que la valeur pour `Running` est zéro (0), pour tester si un thread est en cours d’exécution à l’aide de code c# comme `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` code ou Visual Basic comme `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span><span class="sxs-lookup"><span data-stu-id="51b8c-145">Since the value for `Running` is zero (0), test whether a thread is running by using C# code such as `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` or Visual Basic code such as `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberSignature Language="F#" Value="Aborted = 256" Usage="System.Threading.ThreadState.Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-146">L'état du thread inclut <see cref="F:System.Threading.ThreadState.AbortRequested" /> et le thread est à présent inactif ; toutefois, son état n'est pas encore passé à <see cref="F:System.Threading.ThreadState.Stopped" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-146">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberSignature Language="F#" Value="AbortRequested = 128" Usage="System.Threading.ThreadState.AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-147">La méthode <see cref="M:System.Threading.Thread.Abort(System.Object)" /> a été appelée sur le thread, mais ce dernier n'a pas encore reçu <see cref="T:System.Threading.ThreadAbortException" /> en attente qui tentera de l'arrêter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-147">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberSignature Language="F#" Value="Background = 4" Usage="System.Threading.ThreadState.Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-148">Le thread est exécuté en tant que thread d'arrière-plan, par opposition à un thread de premier plan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-148">The thread is being executed as a background thread, as opposed to a foreground thread.</span>
          </span>
          <span data-ttu-id="51b8c-149">Cet état est contrôlé par définition de la propriété <see cref="P:System.Threading.Thread.IsBackground" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-149">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberSignature Language="F#" Value="Running = 0" Usage="System.Threading.ThreadState.Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-150">Le thread a été démarré, il n'est pas bloqué et il n'y a pas de <see cref="T:System.Threading.ThreadAbortException" /> en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-150">The thread has been started, it is not blocked, and there is no pending <see cref="T:System.Threading.ThreadAbortException" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberSignature Language="F#" Value="Stopped = 16" Usage="System.Threading.ThreadState.Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-151">Le thread s'est arrêté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-151">The thread has stopped.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberSignature Language="F#" Value="StopRequested = 1" Usage="System.Threading.ThreadState.StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-152">Une demande d'arrêt du thread est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-152">The thread is being requested to stop.</span>
          </span>
          <span data-ttu-id="51b8c-153">Ceci est exclusivement destiné à un usage interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-153">This is for internal use only.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberSignature Language="F#" Value="Suspended = 64" Usage="System.Threading.ThreadState.Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-154">Le thread a été suspendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-154">The thread has been suspended.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberSignature Language="F#" Value="SuspendRequested = 2" Usage="System.Threading.ThreadState.SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-155">Une demande de suspension du thread est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-155">The thread is being requested to suspend.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberSignature Language="F#" Value="Unstarted = 8" Usage="System.Threading.ThreadState.Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-156">La méthode <see cref="M:System.Threading.Thread.Start" /> n'a pas été appelée sur le thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-156">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberSignature Language="F#" Value="WaitSleepJoin = 32" Usage="System.Threading.ThreadState.WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="51b8c-157">Le thread est bloqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-157">The thread is blocked.</span>
          </span>
          <span data-ttu-id="51b8c-158">Cela peut résulter de l'appel de <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> ou <see cref="M:System.Threading.Thread.Join" />, d'une demande de verrouillage (par exemple l'appel de <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> ou <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" />) ou de l'attente d'un objet de synchronisation de threads tel que <see cref="T:System.Threading.ManualResetEvent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51b8c-158">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock — for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> — or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>