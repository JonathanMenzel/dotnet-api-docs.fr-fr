<Type Name="Volatile" FullName="System.Threading.Volatile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6d84379ea86886f54d6dc46257755f49460aecec" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58721648" /></Metadata><TypeSignature Language="C#" Value="public static class Volatile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Volatile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Volatile" />
  <TypeSignature Language="VB.NET" Value="Public Class Volatile" />
  <TypeSignature Language="C++ CLI" Value="public ref class Volatile abstract sealed" />
  <TypeSignature Language="F#" Value="type Volatile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="beeb9-101">Contient des méthodes pour effectuer des opérations de mémoire volatile.</span><span class="sxs-lookup"><span data-stu-id="beeb9-101">Contains methods for performing volatile memory operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-102">Sur un système multiprocesseur, une opération d’écriture volatile garantit qu’une valeur écrite dans un emplacement de mémoire est immédiatement visible pour tous les processeurs.</span><span class="sxs-lookup"><span data-stu-id="beeb9-102">On a multiprocessor system, a volatile write operation ensures that a value written to a memory location is immediately visible to all processors.</span></span> <span data-ttu-id="beeb9-103">Une opération de lecture volatile Obtient la dernière valeur écrite dans un emplacement de mémoire par n’importe quel processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-103">A volatile read operation obtains the very latest value written to a memory location by any processor.</span></span> <span data-ttu-id="beeb9-104">Ces opérations peuvent nécessiter de vider les caches de processeur, ce qui peuvent affecter les performances.</span><span class="sxs-lookup"><span data-stu-id="beeb9-104">These operations might require flushing processor caches, which can affect performance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="beeb9-105">Sur un système monoprocesseur, écritures et lectures volatiles assurent qu’une valeur est lu ou écrite dans la mémoire et pas mis en cache (par exemple, dans un Registre de processeur).</span><span class="sxs-lookup"><span data-stu-id="beeb9-105">On a uniprocessor system, volatile reads and writes ensure that a value is read or written to memory and not cached (for example, in a processor register).</span></span> <span data-ttu-id="beeb9-106">Par conséquent, vous pouvez utiliser ces opérations pour synchroniser l’accès à un champ pouvant être mis à jour par un autre thread ou par du matériel.</span><span class="sxs-lookup"><span data-stu-id="beeb9-106">Thus, you can use these operations to synchronize access to a field that can be updated by another thread or by hardware.</span></span>  
  
 <span data-ttu-id="beeb9-107">Opérations de mémoire volatile sont pour les cas spéciaux de la synchronisation, où le verrouillage normal n’est pas une alternative acceptable.</span><span class="sxs-lookup"><span data-stu-id="beeb9-107">Volatile memory operations are for special cases of synchronization, where normal locking is not an acceptable alternative.</span></span> <span data-ttu-id="beeb9-108">Dans des circonstances normales, le C# `lock` instruction, Visual Basic `SyncLock` instruction et le <xref:System.Threading.Monitor> classe le moyen le plus simple et moins sujette aux erreurs de synchronisation d’accès aux données et le <xref:System.Lazy%601> classe fournit un simple à écrire du code de l’initialisation tardive sans directement à l’aide de verrouillage à double contrôle.</span><span class="sxs-lookup"><span data-stu-id="beeb9-108">Under normal circumstances, the C# `lock` statement, the Visual Basic `SyncLock` statement, and the <xref:System.Threading.Monitor> class provide the easiest and least error-prone way of synchronizing access to data, and the <xref:System.Lazy%601> class provides a simple way to write lazy initialization code without directly using double-checked locking.</span></span>  
  
 <span data-ttu-id="beeb9-109">Le <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> et <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> méthodes activer la fonctionnalité qui n’est pas pris en charge dans les langues.</span><span class="sxs-lookup"><span data-stu-id="beeb9-109">The <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods enable functionality that is not supported in languages.</span></span> <span data-ttu-id="beeb9-110">Par exemple :</span><span class="sxs-lookup"><span data-stu-id="beeb9-110">For example:</span></span>  
  
-   <span data-ttu-id="beeb9-111">Certains langages, tels que Visual Basic, ne reconnaissent pas le concept d’opérations de mémoire volatile.</span><span class="sxs-lookup"><span data-stu-id="beeb9-111">Some languages, such as Visual Basic, do not recognize the concept of volatile memory operations.</span></span> <span data-ttu-id="beeb9-112">Le <xref:System.Threading.Volatile> classe offre cette fonctionnalité dans ces langues.</span><span class="sxs-lookup"><span data-stu-id="beeb9-112">The <xref:System.Threading.Volatile> class provides that functionality in such languages.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="beeb9-113">Appel de l’une de ces méthodes affecte uniquement un accès à la mémoire unique.</span><span class="sxs-lookup"><span data-stu-id="beeb9-113">Calling one of these methods affects only a single memory access.</span></span> <span data-ttu-id="beeb9-114">Pour fournir une synchronisation efficace pour un champ, tous les accès au champ doivent utiliser <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> et <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-114">To provide effective synchronization for a field, all access to the field must use <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="beeb9-115">En c#, à l’aide de la `volatile` modificateur sur un champ garantit que chaque accès à ce champ utilise le <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> et <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> méthodes, mais la `volatile` modificateur ne peut pas être appliqué aux éléments du tableau.</span><span class="sxs-lookup"><span data-stu-id="beeb9-115">In C#, using the `volatile` modifier on a field guarantees that every access to that field uses the <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods, but the `volatile` modifier cannot be applied to array elements.</span></span> <span data-ttu-id="beeb9-116">Le <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> et <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> méthodes peuvent être utilisées sur les éléments de tableau.</span><span class="sxs-lookup"><span data-stu-id="beeb9-116">The <xref:System.Threading.Volatile.Read%2A?displayProperty=nameWithType> and <xref:System.Threading.Volatile.Write%2A?displayProperty=nameWithType> methods can be used on array elements.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="beeb9-117">Lit la valeur d'un champ.</span><span class="sxs-lookup"><span data-stu-id="beeb9-117">Reads the value of a field.</span></span> <span data-ttu-id="beeb9-118">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-118">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static bool Read (ref bool location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Read(bool&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Read(bool % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; bool" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-119">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-119">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-120">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-120">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-121">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-121">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-122">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-122">The value that was read.</span></span> <span data-ttu-id="beeb9-123">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-123">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-124">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-124">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static byte Read (ref byte location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Read(unsigned int8&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Read(System::Byte % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; byte" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Byte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-125">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-125">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-126">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-126">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-127">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-127">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-128">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-128">The value that was read.</span></span> <span data-ttu-id="beeb9-129">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-129">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-130">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-130">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static double Read (ref double location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Read(float64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Double@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Read(double % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; double" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Double" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-131">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-131">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-132">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-132">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-133">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-133">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-134">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-134">The value that was read.</span></span> <span data-ttu-id="beeb9-135">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-135">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-136">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-136">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static short Read (ref short location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Read(int16&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Read(short % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; int16" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-137">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-137">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-138">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-138">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-139">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-139">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-140">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-140">The value that was read.</span></span> <span data-ttu-id="beeb9-141">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-141">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-142">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-142">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static int Read (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Read(int % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; int" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-143">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-143">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-144">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-144">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-145">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-145">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-146">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-146">The value that was read.</span></span> <span data-ttu-id="beeb9-147">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-147">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-148">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-148">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static long Read (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Read(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Read(long % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; int64" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-149">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-149">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-150">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-150">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-151">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-151">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-152">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-152">The value that was read.</span></span> <span data-ttu-id="beeb9-153">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-153">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-154">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-154">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static IntPtr Read (ref IntPtr location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Read(native int&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Read(IntPtr % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; nativeint" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.IntPtr" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-155">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-155">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-156">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-156">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-157">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-157">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-158">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-158">The value that was read.</span></span> <span data-ttu-id="beeb9-159">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-159">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-160">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-160">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static sbyte Read (ref sbyte location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Read(int8&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.SByte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Read(System::SByte % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; sbyte" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.SByte" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-161">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-161">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-162">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-162">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-163">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-163">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-164">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-164">The value that was read.</span></span> <span data-ttu-id="beeb9-165">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-165">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-166">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-166">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static float Read (ref float location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Read(float32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.Single@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Read(float % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; single" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Single" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-167">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-167">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-168">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-168">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-169">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-169">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-170">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-170">The value that was read.</span></span> <span data-ttu-id="beeb9-171">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-171">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-172">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-172">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static ushort Read (ref ushort location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Read(unsigned int16&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Read(System::UInt16 % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; uint16" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt16" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-173">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-173">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-174">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-174">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-175">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-175">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-176">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-176">The value that was read.</span></span> <span data-ttu-id="beeb9-177">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-177">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-178">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-178">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int16@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static uint Read (ref uint location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Read(unsigned int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Read(System::UInt32 % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; uint32" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-179">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-179">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-180">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-180">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-181">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-181">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-182">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-182">The value that was read.</span></span> <span data-ttu-id="beeb9-183">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-183">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-184">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-184">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int32@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static ulong Read (ref ulong location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Read(unsigned int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Read(System::UInt64 % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; uint64" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-185">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-185">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-186">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-186">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-187">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-187">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-188">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-188">The value that was read.</span></span> <span data-ttu-id="beeb9-189">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-189">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-190">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-190">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.Int64@)" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static UIntPtr Read (ref UIntPtr location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native unsigned int Read(native unsigned int&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read(System.UIntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As UIntPtr) As UIntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static UIntPtr Read(UIntPtr % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; unativeint" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UIntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UIntPtr" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-191">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-191">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-192">Lit la valeur du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-192">Reads the value of the specified field.</span></span> <span data-ttu-id="beeb9-193">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant cette méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-193">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-194">Valeur qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-194">The value that was read.</span></span> <span data-ttu-id="beeb9-195">Il s'agit de la dernière valeur écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-195">This value is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-196">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-196">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Read(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="Read&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Read&lt;T&gt; (ref T location) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Read&lt;class T&gt;(!!T&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Read``1(``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read(Of T As Class) (ByRef location As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T Read(T % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; 'T (requires 'T : null)" Usage="System.Threading.Volatile.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T" RefType="ref" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="beeb9-197">Type du champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-197">The type of field to read.</span></span> <span data-ttu-id="beeb9-198">Il doit s'agir d'un type référence, et non d'un type valeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-198">This must be a reference type, not a value type.</span></span></typeparam>
        <param name="location"><span data-ttu-id="beeb9-199">Champ à lire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-199">The field to read.</span></span></param>
        <summary><span data-ttu-id="beeb9-200">Lit la référence d'objet à partir du champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-200">Reads the object reference from the specified field.</span></span> <span data-ttu-id="beeb9-201">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît après cette méthode dans le code, le processeur ne peut pas la déplacer avant la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-201">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears after this method in the code, the processor cannot move it before this method.</span></span></summary>
        <returns><span data-ttu-id="beeb9-202">Référence à <paramref name="T" /> qui a été lue.</span><span class="sxs-lookup"><span data-stu-id="beeb9-202">The reference to <paramref name="T" /> that was read.</span></span> <span data-ttu-id="beeb9-203">Il s'agit de la dernière référence écrite par un processeur de l'ordinateur, quel que soit le nombre de processeurs ou l'état du cache de processeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-203">This reference is the latest written by any processor in the computer, regardless of the number of processors or the state of processor cache.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-204">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-204">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="beeb9-205">Écrit une valeur dans un champ.</span><span class="sxs-lookup"><span data-stu-id="beeb9-205">Writes a value to a field.</span></span> <span data-ttu-id="beeb9-206">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-206">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref bool location, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool&amp; location, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Boolean@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Boolean, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(bool % location, bool value);" />
      <MemberSignature Language="F#" Value="static member Write :  * bool -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Boolean" RefType="ref" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-207">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-207">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-208">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-208">The value to write.</span></span> <span data-ttu-id="beeb9-209">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-209">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-210">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-210">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-211">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-211">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-212">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-212">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref byte location, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int8&amp; location, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Byte@,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Byte, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Byte % location, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member Write :  * byte -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Byte" RefType="ref" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-213">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-213">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-214">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-214">The value to write.</span></span> <span data-ttu-id="beeb9-215">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-215">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-216">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-216">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-217">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-217">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-218">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-218">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref double location, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64&amp; location, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Double, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(double % location, double value);" />
      <MemberSignature Language="F#" Value="static member Write :  * double -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-219">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-219">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-220">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-220">The value to write.</span></span> <span data-ttu-id="beeb9-221">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-221">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-222">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-222">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-223">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-223">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-224">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-224">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref short location, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int16&amp; location, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Short, value As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(short % location, short value);" />
      <MemberSignature Language="F#" Value="static member Write :  * int16 -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int16" RefType="ref" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-225">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-225">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-226">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-226">The value to write.</span></span> <span data-ttu-id="beeb9-227">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-227">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-228">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-228">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-229">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-229">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-230">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-230">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref int location, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32&amp; location, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Integer, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(int % location, int value);" />
      <MemberSignature Language="F#" Value="static member Write :  * int -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-231">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-231">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-232">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-232">The value to write.</span></span> <span data-ttu-id="beeb9-233">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-233">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-234">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-234">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-235">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-235">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-236">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-236">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref long location, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64&amp; location, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Long, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(long % location, long value);" />
      <MemberSignature Language="F#" Value="static member Write :  * int64 -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-237">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-237">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-238">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-238">The value to write.</span></span> <span data-ttu-id="beeb9-239">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-239">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-240">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-240">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-241">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de mémoire apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-241">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a memory operation appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-242">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-242">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref IntPtr location, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(native int&amp; location, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As IntPtr, value As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(IntPtr % location, IntPtr value);" />
      <MemberSignature Language="F#" Value="static member Write :  * nativeint -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-243">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-243">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-244">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-244">The value to write.</span></span> <span data-ttu-id="beeb9-245">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-245">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-246">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-246">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-247">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-247">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-248">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-248">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref sbyte location, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int8&amp; location, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.SByte@,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As SByte, value As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::SByte % location, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Write :  * sbyte -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.SByte" RefType="ref" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-249">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-249">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-250">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-250">The value to write.</span></span> <span data-ttu-id="beeb9-251">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-251">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-252">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-252">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-253">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-253">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-254">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-254">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref float location, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32&amp; location, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As Single, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(float % location, float value);" />
      <MemberSignature Language="F#" Value="static member Write :  * single -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-255">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-255">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-256">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-256">The value to write.</span></span> <span data-ttu-id="beeb9-257">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-257">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-258">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-258">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-259">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-259">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-260">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-260">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref ushort location, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int16&amp; location, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt16@,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UShort, value As UShort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt16 % location, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member Write :  * uint16 -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt16" RefType="ref" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-261">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-261">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-262">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-262">The value to write.</span></span> <span data-ttu-id="beeb9-263">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-263">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-264">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-264">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-265">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-265">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-266">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-266">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int16@,System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref uint location, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32&amp; location, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt32@,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UInteger, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt32 % location, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Write :  * uint32 -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt32" RefType="ref" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-267">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-267">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-268">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-268">The value to write.</span></span> <span data-ttu-id="beeb9-269">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-269">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-270">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-270">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-271">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-271">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-272">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-272">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int32@,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref ulong location, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64&amp; location, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UInt64@,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As ULong, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::UInt64 % location, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Write :  * uint64 -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UInt64" RefType="ref" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-273">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-273">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-274">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-274">The value to write.</span></span> <span data-ttu-id="beeb9-275">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-275">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-276">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-276">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-277">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-277">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-278">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-278">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.Int64@,System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (ref UIntPtr location, UIntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(native unsigned int&amp; location, native unsigned int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (ByRef location As UIntPtr, value As UIntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(UIntPtr % location, UIntPtr value);" />
      <MemberSignature Language="F#" Value="static member Write :  * unativeint -&gt; unit" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.UIntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.UIntPtr" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="beeb9-279">Champ dans lequel la valeur est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-279">The field where the value is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-280">Valeur à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-280">The value to write.</span></span> <span data-ttu-id="beeb9-281">La valeur est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-281">The value is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-282">Écrit la valeur spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-282">Writes the specified value to the specified field.</span></span> <span data-ttu-id="beeb9-283">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-283">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-284">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-284">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Write&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Write&lt;T&gt; (ref T location, T value) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write&lt;class T&gt;(!!T&amp; location, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Volatile.Write``1(``0@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write(Of T As Class) (ByRef location As T, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static void Write(T % location, T value);" />
      <MemberSignature Language="F#" Value="static member Write :  * 'T -&gt; unit (requires 'T : null)" Usage="System.Threading.Volatile.Write (location, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location" Type="T" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="beeb9-285">Type du champ dans lequel écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-285">The type of field to write.</span></span> <span data-ttu-id="beeb9-286">Il doit s'agir d'un type référence, et non d'un type valeur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-286">This must be a reference type, not a value type.</span></span></typeparam>
        <param name="location"><span data-ttu-id="beeb9-287">Champ dans lequel la référence d'objet est écrite.</span><span class="sxs-lookup"><span data-stu-id="beeb9-287">The field where the object reference is written.</span></span></param>
        <param name="value"><span data-ttu-id="beeb9-288">Référence d'objet à écrire.</span><span class="sxs-lookup"><span data-stu-id="beeb9-288">The object reference to write.</span></span> <span data-ttu-id="beeb9-289">La référence est écrite immédiatement, de sorte qu'elle est visible pour tous les processeurs de l'ordinateur.</span><span class="sxs-lookup"><span data-stu-id="beeb9-289">The reference is written immediately so that it is visible to all processors in the computer.</span></span></param>
        <summary><span data-ttu-id="beeb9-290">Écrit la référence d'objet spécifiée dans le champ spécifié.</span><span class="sxs-lookup"><span data-stu-id="beeb9-290">Writes the specified object reference to the specified field.</span></span> <span data-ttu-id="beeb9-291">Sur les systèmes qui en ont besoin, insère une barrière mémoire qui empêche le processeur de réorganiser les opérations de mémoire comme suit : Si une opération de lecture ou d'écriture apparaît avant cette méthode dans le code, le processeur ne peut pas la déplacer après la méthode.</span><span class="sxs-lookup"><span data-stu-id="beeb9-291">On systems that require it, inserts a memory barrier that prevents the processor from reordering memory operations as follows: If a read or write appears before this method in the code, the processor cannot move it after this method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beeb9-292">Pour plus d'informations, consultez la classe <xref:System.Threading.Volatile>.</span><span class="sxs-lookup"><span data-stu-id="beeb9-292">For more information, see the <xref:System.Threading.Volatile> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>