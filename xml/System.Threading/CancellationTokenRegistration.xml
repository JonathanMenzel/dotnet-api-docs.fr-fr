<Type Name="CancellationTokenRegistration" FullName="System.Threading.CancellationTokenRegistration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="901e9ac529bbb17d56a3003d602e4b97b08ebf0b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406961" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CancellationTokenRegistration : IDisposable, IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationTokenRegistration extends System.ValueType implements class System.IDisposable, class System.IEquatable`1&lt;valuetype System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationTokenRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationTokenRegistration&#xA;Implements IDisposable, IEquatable(Of CancellationTokenRegistration)" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationTokenRegistration : IDisposable, IEquatable&lt;System::Threading::CancellationTokenRegistration&gt;" />
  <TypeSignature Language="F#" Value="type CancellationTokenRegistration = struct&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ff0cf-101">Représente un délégué de rappel inscrit avec un <see cref="T:System.Threading.CancellationToken" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff0cf-101">Represents a callback delegate that has been registered with a <see cref="T:System.Threading.CancellationToken" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff0cf-102">Le rappel est appelé lorsque le jeton est annulé.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-102">The callback is called when the token is canceled.</span></span> <span data-ttu-id="ff0cf-103">Pour annuler l’inscription d’un rappel, de supprimer l’instance d’inscription correspondante.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-103">To unregister a callback, dispose the corresponding Registration instance.</span></span> <span data-ttu-id="ff0cf-104">Pour plus d’informations et du code des exemples, consultez [l’annulation dans les Threads managés](~/docs/standard/threading/cancellation-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="ff0cf-104">For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ff0cf-105">Tous les membres publics et protégés de <see cref="T:System.Threading.CancellationTokenRegistration" /> sont thread-safe et peuvent être utilisés simultanément par plusieurs threads, à l’exception de Dispose, qui doit être uniquement utilisé lorsque toutes les autres opérations sur le <see cref="T:System.Threading.CancellationTokenRegistration" /> s’est terminé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff0cf-105">All public and protected members of <see cref="T:System.Threading.CancellationTokenRegistration" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CancellationTokenRegistration" /> have completed.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cancellationTokenRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff0cf-106">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenRegistration" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff0cf-107">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Threading.CancellationTokenRegistration>.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-107">Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="ff0cf-108">La méthode `Dispose` rend le <xref:System.Threading.CancellationTokenRegistration> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-108">The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state.</span></span> <span data-ttu-id="ff0cf-109">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Threading.CancellationTokenRegistration> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Threading.CancellationTokenRegistration> occupée.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.</span></span>  
  
 <span data-ttu-id="ff0cf-110">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="ff0cf-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ff0cf-111">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Threading.CancellationTokenRegistration>.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="ff0cf-112">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Threading.CancellationTokenRegistration> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="ff0cf-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ff0cf-113">Détermine si l'instance actuelle de <see cref="T:System.Threading.CancellationTokenRegistration" /> est égale au <see cref="T:System.Threading.CancellationTokenRegistration" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-113">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cancellationTokenRegistration.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ff0cf-114">Autre objet auquel comparer cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-114">The other object to which to compare this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff0cf-115">Détermine si l'instance actuelle de <see cref="T:System.Threading.CancellationTokenRegistration" /> est égale au <see cref="T:System.Threading.CancellationTokenRegistration" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-115">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff0cf-116">True si cet objet et <paramref name="obj" /> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-116">True, if both this and <paramref name="obj" /> are equal.</span>
          </span>
          <span data-ttu-id="ff0cf-117">False dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-117">False, otherwise.</span>
          </span>
          <span data-ttu-id="ff0cf-118">Deux instances de <see cref="T:System.Threading.CancellationTokenRegistration" /> sont égales si elles font toutes les deux référence à la sortie d'un appel unique à la même méthode d'inscription d'un <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-118">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationTokenRegistration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.CancellationTokenRegistration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::CancellationTokenRegistration other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Threading.CancellationTokenRegistration -&gt; bool" Usage="cancellationTokenRegistration.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="ff0cf-119">Autre <see cref="T:System.Threading.CancellationTokenRegistration" /> auquel comparer cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-119">The other <see cref="T:System.Threading.CancellationTokenRegistration" /> to which to compare this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff0cf-120">Détermine si l'instance actuelle de <see cref="T:System.Threading.CancellationTokenRegistration" /> est égale au <see cref="T:System.Threading.CancellationTokenRegistration" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-120">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff0cf-121">True si cet objet et <paramref name="other" /> sont égaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-121">True, if both this and <paramref name="other" /> are equal.</span>
          </span>
          <span data-ttu-id="ff0cf-122">False dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-122">False, otherwise.</span>
          </span>
          <span data-ttu-id="ff0cf-123">Deux instances de <see cref="T:System.Threading.CancellationTokenRegistration" /> sont égales si elles font toutes les deux référence à la sortie d'un appel unique à la même méthode d'inscription d'un <see cref="T:System.Threading.CancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-123">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cancellationTokenRegistration.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff0cf-124">Sert de fonction de hachage pour un <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-124">Serves as a hash function for a <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff0cf-125">Code de hachage pour l'instance actuelle de <see cref="T:System.Threading.CancellationTokenRegistration" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-125">A hash code for the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="ff0cf-126">Première instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-126">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="ff0cf-127">Deuxième instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-127">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff0cf-128">Détermine si deux instances <see cref="T:System.Threading.CancellationTokenRegistration" /> sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-128">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff0cf-129">True si les instances sont égales ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-129">True if the instances are equal; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Threading.CancellationTokenRegistration * System.Threading.CancellationTokenRegistration -&gt; bool" Usage="System.Threading.CancellationTokenRegistration.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="ff0cf-130">Première instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-130">The first instance.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="ff0cf-131">Deuxième instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-131">The second instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff0cf-132">Détermine si les deux instances de <see cref="T:System.Threading.CancellationTokenRegistration" /> ne sont pas égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-132">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ff0cf-133">True si les instances ne sont pas égales ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff0cf-133">True if the instances are not equal; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenRegistration.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken Token { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Threading.CancellationToken" Usage="System.Threading.CancellationTokenRegistration.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>