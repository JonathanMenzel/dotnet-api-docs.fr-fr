<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7496a6510c0a8c55f5898eccf05df204630afc6b" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48586083" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="67de0-101">Objet contenant les informations que la méthode de rappel doit utiliser.</span><span class="sxs-lookup"><span data-stu-id="67de0-101">An object containing information to be used by the callback method.</span></span></param>
    <summary><span data-ttu-id="67de0-102">Représente une méthode de rappel qu'un thread du pool doit exécuter.</span><span class="sxs-lookup"><span data-stu-id="67de0-102">Represents a callback method to be executed by a thread pool thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="67de0-103"><xref:System.Threading.WaitCallback> représente une méthode de rappel que vous souhaitez exécuter sur un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="67de0-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="67de0-104">Créer le délégué en passant votre méthode de rappel à la <xref:System.Threading.WaitCallback> constructeur.</span><span class="sxs-lookup"><span data-stu-id="67de0-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="67de0-105">Votre méthode doit avoir la signature indiquée ici.</span><span class="sxs-lookup"><span data-stu-id="67de0-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="67de0-106">La méthode pour l’exécution de la file d’attente en passant le <xref:System.Threading.WaitCallback> déléguer à <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="67de0-106">Queue the method for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="67de0-107">La méthode de rappel s’exécute lorsqu’un thread de pool devienne disponible.</span><span class="sxs-lookup"><span data-stu-id="67de0-107">The callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="67de0-108">Les utilisateurs de Visual Basic peuvent omettre le <xref:System.Threading.WaitCallback> constructeur et utiliser simplement le `AddressOf` opérateur lors du passage de la méthode de rappel à <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="67de0-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="67de0-109">Visual Basic appelle automatiquement le constructeur délégué approprié.</span><span class="sxs-lookup"><span data-stu-id="67de0-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="67de0-110">Si vous souhaitez transmettre des informations à la méthode de rappel, créez un objet qui contient les informations nécessaires et transmettez-le à la <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> méthode comme deuxième argument.</span><span class="sxs-lookup"><span data-stu-id="67de0-110">If you want to pass information to the callback method, create an object that contains the necessary information and pass it to the <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> method as the second argument.</span></span> <span data-ttu-id="67de0-111">Chaque fois que la méthode de rappel s’exécute, le `state` paramètre contient cet objet.</span><span class="sxs-lookup"><span data-stu-id="67de0-111">Each time the callback method executes, the `state` parameter contains this object.</span></span>  

 <span data-ttu-id="67de0-112">Pour obtenir des exemples qui utilisent la `WaitCallback` le délégué, consultez le <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="67de0-112">For examples that use the `WaitCallback` delegate, see the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> method.</span></span>
  
 <span data-ttu-id="67de0-113">Pour plus d’informations sur le pool de threads, consultez [le pool de threads managés](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="67de0-113">For more information about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="67de0-114">Threads et threading</span><span class="sxs-lookup"><span data-stu-id="67de0-114">Threads and Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="67de0-115">Le pool de threads managés</span><span class="sxs-lookup"><span data-stu-id="67de0-115">The managed thread pool</span></span></related>
  </Docs>
</Type>