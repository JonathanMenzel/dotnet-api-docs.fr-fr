<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c971c6ff730ee4e62d7280c5bffa17634a0ecf8f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37754554" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="1deff-101">Objet contenant les informations que la méthode de rappel doit utiliser.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1deff-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="1deff-102">Représente une méthode de rappel qu'un thread du pool doit exécuter.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1deff-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1deff-103"><xref:System.Threading.WaitCallback> représente une méthode de rappel que vous souhaitez exécuter sur un <xref:System.Threading.ThreadPool> thread.</span><span class="sxs-lookup"><span data-stu-id="1deff-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="1deff-104">Créer le délégué en passant votre méthode de rappel à la <xref:System.Threading.WaitCallback> constructeur.</span><span class="sxs-lookup"><span data-stu-id="1deff-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="1deff-105">Votre méthode doit avoir la signature indiquée ici.</span><span class="sxs-lookup"><span data-stu-id="1deff-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="1deff-106">File d’attente de votre tâche pour l’exécution en passant le <xref:System.Threading.WaitCallback> déléguer à <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1deff-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1deff-107">Votre méthode de rappel s’exécute lorsqu’un thread de pool devienne disponible.</span><span class="sxs-lookup"><span data-stu-id="1deff-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1deff-108">Les utilisateurs de Visual Basic peuvent omettre le <xref:System.Threading.WaitCallback> constructeur et utiliser simplement le `AddressOf` opérateur lors du passage de la méthode de rappel à <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="1deff-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="1deff-109">Visual Basic appelle automatiquement le constructeur délégué approprié.</span><span class="sxs-lookup"><span data-stu-id="1deff-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="1deff-110">Si vous souhaitez transmettre des informations à votre méthode de rappel, créez un objet qui contient les informations nécessaires et transmettez-le à <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> lors de la file d’attente votre tâche pour l’exécution.</span><span class="sxs-lookup"><span data-stu-id="1deff-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="1deff-111">Chaque fois que votre méthode de rappel s’exécute, le `state` paramètre contient cet objet.</span><span class="sxs-lookup"><span data-stu-id="1deff-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="1deff-112">Pour plus d’informations sur l’utilisation de rappels pour synchroniser les threads du pool, consultez [le Pool de threads gérés](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="1deff-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1deff-113">Cette section contient deux exemples.</span><span class="sxs-lookup"><span data-stu-id="1deff-113">This section contains two examples.</span></span> <span data-ttu-id="1deff-114">Le premier exemple montre comment vous pouvez en file d’attente une tâche simple pour l’exécution par le pool de threads.</span><span class="sxs-lookup"><span data-stu-id="1deff-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="1deff-115">Le deuxième exemple montre comment une tâche en file d’attente et lui passer des informations.</span><span class="sxs-lookup"><span data-stu-id="1deff-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="1deff-116">**Exemple 1**</span><span class="sxs-lookup"><span data-stu-id="1deff-116">**Example 1**</span></span>  
  
 <span data-ttu-id="1deff-117">Cet exemple montre comment utiliser le <xref:System.Threading.WaitCallback> délégué en file d’attente d’une tâche pour l’exécution par le pool de threads.</span><span class="sxs-lookup"><span data-stu-id="1deff-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="1deff-118">L’exemple de code utilise le <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> surcharge de méthode en file d’attente une tâche, qui est représentée par un <xref:System.Threading.WaitCallback> qui encapsule le `ThreadProc` méthode, à exécuter lorsqu’un thread devient disponible.</span><span class="sxs-lookup"><span data-stu-id="1deff-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="1deff-119">Aucune information de tâche n’est fournie avec cette surcharge.</span><span class="sxs-lookup"><span data-stu-id="1deff-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="1deff-120">Par conséquent, les informations qui est disponibles pour le `ThreadProc` méthode est limitée à l’objet auquel appartient la méthode.</span><span class="sxs-lookup"><span data-stu-id="1deff-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="1deff-121">**Exemple 2**</span><span class="sxs-lookup"><span data-stu-id="1deff-121">**Example 2**</span></span>  
  
 <span data-ttu-id="1deff-122">Cet exemple montre comment créer un objet qui contient des informations sur la tâche.</span><span class="sxs-lookup"><span data-stu-id="1deff-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="1deff-123">Il montre également comment passer cet objet à une tâche est en file d’attente pour l’exécution par le pool de threads.</span><span class="sxs-lookup"><span data-stu-id="1deff-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>