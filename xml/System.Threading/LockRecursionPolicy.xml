<Type Name="LockRecursionPolicy" FullName="System.Threading.LockRecursionPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2aaae222fcf2f023007bf6b87e2bf7c7bb83adaa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum LockRecursionPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LockRecursionPolicy extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.LockRecursionPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Enum LockRecursionPolicy" />
  <TypeSignature Language="C++ CLI" Value="public enum class LockRecursionPolicy" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="2f990-101">Spécifie si un verrou peut être entré plusieurs fois par le même thread.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f990-101">Specifies whether a lock can be entered multiple times by the same thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f990-102">La stratégie de récurrence par défaut varie selon le type de verrou.</span><span class="sxs-lookup"><span data-stu-id="2f990-102">The default recursion policy depends on the type of lock.</span></span> <span data-ttu-id="2f990-103">La stratégie par défaut et le comportement précis de récurrence de verrou pour n’importe quel type de verrou donné, consultez la documentation pour le type.</span><span class="sxs-lookup"><span data-stu-id="2f990-103">For the default policy and the precise behavior of lock recursion for any given lock type, see the documentation for the type.</span></span> <span data-ttu-id="2f990-104">Par exemple, la <xref:System.Threading.ReaderWriterLockSlim> classe n’autorise pas un thread entrer le verrou en mode écriture si elle a déjà entré le verrou en mode lecture, quel que soit le paramètre de stratégie de verrouillage, afin de réduire le risque d’interblocages.</span><span class="sxs-lookup"><span data-stu-id="2f990-104">For example, the <xref:System.Threading.ReaderWriterLockSlim> class does not allow a thread to enter the lock in write mode if it already entered the lock in read mode, regardless of the lock policy setting, in order to reduce the chance of deadlocks.</span></span>  
  
 <span data-ttu-id="2f990-105">Actuellement uniquement un seul verrou utilise cette énumération :</span><span class="sxs-lookup"><span data-stu-id="2f990-105">Currently only one lock uses this enumeration:</span></span>  
  
-   <span data-ttu-id="2f990-106"><xref:System.Threading.ReaderWriterLockSlim>.</span><span class="sxs-lookup"><span data-stu-id="2f990-106"><xref:System.Threading.ReaderWriterLockSlim>.</span></span> <span data-ttu-id="2f990-107">Pour plus d'informations, consultez la propriété <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A>.</span><span class="sxs-lookup"><span data-stu-id="2f990-107">For more information, see the <xref:System.Threading.ReaderWriterLockSlim.RecursionPolicy%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f990-108">L’exemple suivant montre deux scénarios d’exception, qui varie selon le <xref:System.Threading.LockRecursionPolicy> paramètre et l’autre pas.</span><span class="sxs-lookup"><span data-stu-id="2f990-108">The following example shows two exception scenarios, one that depends on the <xref:System.Threading.LockRecursionPolicy> setting and one that does not.</span></span>  
  
 <span data-ttu-id="2f990-109">Dans le premier scénario, le thread entre le verrou en mode lecture et puis essaie d’entrer en mode lecture de manière récursive.</span><span class="sxs-lookup"><span data-stu-id="2f990-109">In the first scenario, the thread enters the lock in read mode and then tries to enter read mode recursively.</span></span> <span data-ttu-id="2f990-110">Si la <xref:System.Threading.ReaderWriterLockSlim> est créé en utilisant le constructeur par défaut, qui définit la stratégie de récurrence pour NoRecursion, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="2f990-110">If the <xref:System.Threading.ReaderWriterLockSlim> is created by using the default constructor, which sets recursion policy to NoRecursion, an exception is thrown.</span></span> <span data-ttu-id="2f990-111">Si SupportsRecursion est utilisée pour créer le <xref:System.Threading.ReaderWriterLockSlim>, aucune exception n’est levée.</span><span class="sxs-lookup"><span data-stu-id="2f990-111">If SupportsRecursion is used to create the <xref:System.Threading.ReaderWriterLockSlim>, no exception is thrown.</span></span>  
  
 <span data-ttu-id="2f990-112">Dans le deuxième scénario, le thread entre le verrou en mode lecture et puis essaie d’entrer le verrou en mode écriture.</span><span class="sxs-lookup"><span data-stu-id="2f990-112">In the second scenario, the thread enters the lock in read mode and then tries to enter the lock in write mode.</span></span> <span data-ttu-id="2f990-113"><xref:System.Threading.LockRecursionException> est levée indépendamment de la stratégie de récurrence du verrou.</span><span class="sxs-lookup"><span data-stu-id="2f990-113"><xref:System.Threading.LockRecursionException> is thrown regardless of the lock recursion policy.</span></span>  
  
 [!code-csharp[System.Threading.LockRecursionPolicy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/cs/example1.cs#1)]
 [!code-vb[System.Threading.LockRecursionPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.LockRecursionPolicy/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="NoRecursion">
      <MemberSignature Language="C#" Value="NoRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy NoRecursion = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.NoRecursion" />
      <MemberSignature Language="VB.NET" Value="NoRecursion" />
      <MemberSignature Language="C++ CLI" Value="NoRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f990-114">Si un thread essaie d'entrer un verrou de manière récursive, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f990-114">If a thread tries to enter a lock recursively, an exception is thrown.</span>
          </span>
          <span data-ttu-id="2f990-115">Certaines classes peuvent autoriser certaines récurrences lorsque ce paramètre est appliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f990-115">Some classes may allow certain recursions when this setting is in effect.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsRecursion">
      <MemberSignature Language="C#" Value="SupportsRecursion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.LockRecursionPolicy SupportsRecursion = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.LockRecursionPolicy.SupportsRecursion" />
      <MemberSignature Language="VB.NET" Value="SupportsRecursion" />
      <MemberSignature Language="C++ CLI" Value="SupportsRecursion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.LockRecursionPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f990-116">Un thread peut entrer un verrou de manière récursive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f990-116">A thread can enter a lock recursively.</span>
          </span>
          <span data-ttu-id="2f990-117">Certaines classes peuvent restreindre cette fonction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f990-117">Some classes may restrict this capability.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>