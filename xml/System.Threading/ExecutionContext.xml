<Type Name="ExecutionContext" FullName="System.Threading.ExecutionContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d11eb2e08ac5047a81064d0fe34fde568252e1d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExecutionContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ExecutionContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="65ad6-101">Gère le contexte d'exécution du thread actuel.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65ad6-101">Manages the execution context for the current thread.</span>
      </span>
      <span data-ttu-id="65ad6-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65ad6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-103">La <xref:System.Threading.ExecutionContext> classe fournit un conteneur unique pour toutes les informations relatives à un thread logique d’exécution.</span><span class="sxs-lookup"><span data-stu-id="65ad6-103">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="65ad6-104">Cela inclut le contexte de sécurité, contexte d’appel et le contexte de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="65ad6-104">This includes security context, call context, and synchronization context.</span></span>  
  
 <span data-ttu-id="65ad6-105">La <xref:System.Threading.ExecutionContext> classe fournit les fonctionnalités pour le code utilisateur capturer et de transférer ce contexte sur des points asynchrones définis par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="65ad6-105">The <xref:System.Threading.ExecutionContext> class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points.</span></span> <span data-ttu-id="65ad6-106">Le common language runtime garantit que le <xref:System.Threading.ExecutionContext> sont toujours transférées entre des points asynchrones définis par l’exécution dans le processus managé.</span><span class="sxs-lookup"><span data-stu-id="65ad6-106">The common language runtime ensures that the <xref:System.Threading.ExecutionContext> is consistently transferred across runtime-defined asynchronous points within the managed process.</span></span>  
  
 <span data-ttu-id="65ad6-107">Un contexte d’exécution est l’équivalent managé d’un cloisonnement COM.</span><span class="sxs-lookup"><span data-stu-id="65ad6-107">An execution context is the managed equivalent of a COM apartment.</span></span> <span data-ttu-id="65ad6-108">Dans un domaine d’application, le contexte d’exécution entier doit être transféré chaque fois qu’un thread est transféré.</span><span class="sxs-lookup"><span data-stu-id="65ad6-108">Within an application domain, the entire execution context must be transferred whenever a thread is transferred.</span></span> <span data-ttu-id="65ad6-109">Cette situation se produit pendant les transferts effectués par le <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> (méthode), la plupart des opérations de pool de threads et Windows Forms thread marshaling via la pompe de messages Windows.</span><span class="sxs-lookup"><span data-stu-id="65ad6-109">This situation occurs during transfers made by the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump.</span></span> <span data-ttu-id="65ad6-110">Il ne se produit pas dans les opérations de pool de threads unsafe (telles que la <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> méthode), qui ne transfèrent pas la pile compressée.</span><span class="sxs-lookup"><span data-stu-id="65ad6-110">It does not occur in unsafe thread pool operations (such as the <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> method), which do not transfer the compressed stack.</span></span> <span data-ttu-id="65ad6-111">Chaque fois que la pile compressée circule, le principal managé, la synchronisation, paramètres régionaux et contexte de l’utilisateur sont également flux.</span><span class="sxs-lookup"><span data-stu-id="65ad6-111">Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow.</span></span> <span data-ttu-id="65ad6-112">Le <xref:System.Threading.ExecutionContext> classe fournit le <xref:System.Threading.ExecutionContext.Capture%2A> et <xref:System.Threading.ExecutionContext.CreateCopy%2A> méthodes pour obtenir le contexte d’exécution et le <xref:System.Threading.ExecutionContext.Run%2A> pour définir le contexte d’exécution du thread actuel.</span><span class="sxs-lookup"><span data-stu-id="65ad6-112">The <xref:System.Threading.ExecutionContext> class provides the <xref:System.Threading.ExecutionContext.Capture%2A> and <xref:System.Threading.ExecutionContext.CreateCopy%2A> methods to get the execution context and the <xref:System.Threading.ExecutionContext.Run%2A> method to set the execution context for the current thread.</span></span>  
  
 <span data-ttu-id="65ad6-113">Un <xref:System.Threading.ExecutionContext> qui est associé avec un thread ne peut pas être définie sur un autre thread.</span><span class="sxs-lookup"><span data-stu-id="65ad6-113">An <xref:System.Threading.ExecutionContext> that is associated with a thread cannot be set on another thread.</span></span> <span data-ttu-id="65ad6-114">Toute tentative entraîne la levée d’une exception.</span><span class="sxs-lookup"><span data-stu-id="65ad6-114">Attempting to do so will result in an exception being thrown.</span></span> <span data-ttu-id="65ad6-115">Pour propager les <xref:System.Threading.ExecutionContext> d’un thread à un autre, faites une copie de la <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-115">To propagate the <xref:System.Threading.ExecutionContext> from one thread to another, make a copy of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="65ad6-116">En interne, le <xref:System.Threading.ExecutionContext> stocke toutes les données qui sont associées à le <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-116">Internally, the <xref:System.Threading.ExecutionContext> stores all data that is associated with the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span></span> <span data-ttu-id="65ad6-117">Cela permet la <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> propagation lorsque des données le <xref:System.Threading.ExecutionContext> est copié et transféré.</span><span class="sxs-lookup"><span data-stu-id="65ad6-117">This allows the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> data to be propagated when the <xref:System.Threading.ExecutionContext> is copied and transferred.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Threading.ExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ExecutionContext ^ Capture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-118">Capture le contexte d'exécution du thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-118">Captures the execution context from the current thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65ad6-119">Objet <see cref="T:System.Threading.ExecutionContext" /> capturant le contexte d'exécution du thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-119">An <see cref="T:System.Threading.ExecutionContext" /> object representing the execution context for the current thread.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-120">Le contexte d’exécution capturé peut être utilisé en tant que le `executionContext` paramètre pour le <xref:System.Threading.ExecutionContext.Run%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="65ad6-120">The captured execution context can be used as the `executionContext` parameter for the <xref:System.Threading.ExecutionContext.Run%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.ExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ExecutionContext ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-121">Crée une copie du contexte d'exécution actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-121">Creates a copy of the current execution context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65ad6-122">Objet <see cref="T:System.Threading.ExecutionContext" /> représentant le contexte d'exécution actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-122">An <see cref="T:System.Threading.ExecutionContext" /> object representing the current execution context.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-123">Cette méthode est utile pour propager un contexte d’exécution d’un thread à un autre.</span><span class="sxs-lookup"><span data-stu-id="65ad6-123">This method is useful for propagating an execution context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="65ad6-124">Ce contexte ne peut pas être copié, car il est utilisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-124">This context cannot be copied because it is used.</span>
          </span>
          <span data-ttu-id="65ad6-125">Seuls les contextes récemment capturés peuvent être copiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-125">Only newly captured contexts can be copied.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-126">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Threading.ExecutionContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-126">Releases all resources used by the current instance of the <see cref="T:System.Threading.ExecutionContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-127">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-127">Call `Dispose` when you are finished using the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="65ad6-128">La méthode `Dispose` rend le <xref:System.Threading.ExecutionContext> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="65ad6-128">The `Dispose` method leaves the <xref:System.Threading.ExecutionContext> in an unusable state.</span></span> <span data-ttu-id="65ad6-129">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Threading.ExecutionContext> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Threading.ExecutionContext> occupée.</span><span class="sxs-lookup"><span data-stu-id="65ad6-129">After calling `Dispose`, you must release all references to the <xref:System.Threading.ExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.ExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="65ad6-130">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="65ad6-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65ad6-131">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-131">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="65ad6-132">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Threading.ExecutionContext> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="65ad6-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="65ad6-133">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir à l'aide des informations de sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="65ad6-134">Structure <see cref="T:System.Runtime.Serialization.StreamingContext" /> représentant le contexte de destination de la sérialisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure representing the destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65ad6-135">Définit l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié avec les informations de contexte logiques nécessaires à la recréation d'une instance du contexte d'exécution en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-135">Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of the current execution context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> définit un <xref:System.Runtime.Serialization.SerializationInfo> avec la logique les informations de contexte d’appel.</span><span class="sxs-lookup"><span data-stu-id="65ad6-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="65ad6-137">Pendant la désérialisation, l’objet de contexte d’exécution est reconstitué à partir de la <xref:System.Runtime.Serialization.SerializationInfo> transmis via le flux.</span><span class="sxs-lookup"><span data-stu-id="65ad6-137">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="65ad6-138">Pour plus d'informations, consultez <xref:System.Runtime.Serialization.SerializationInfo>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-138">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65ad6-139">
            <paramref name="info" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-139">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65ad6-140">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-140">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65ad6-141">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-141">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-142">Indique si le flux du contexte d'exécution est actuellement supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-142">Indicates whether the flow of the execution context is currently suppressed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65ad6-143">
            <see langword="true" /> si le flux est supprimé ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-143">
              <see langword="true" /> if the flow is suppressed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-144">Le <xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> méthode est utilisée par les composants d’infrastructure afin de déterminer s’il faut transférer le <xref:System.Threading.ExecutionContext> pendant des opérations asynchrones.</span><span class="sxs-lookup"><span data-stu-id="65ad6-144">The <xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Threading.ExecutionContext> during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-145">Restaure le flux du contexte d'exécution sur des threads asynchrones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-145">Restores the flow of the execution context across asynchronous threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> inverse l’effet d’un avant <xref:System.Threading.ExecutionContext.SuppressFlow%2A> appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="65ad6-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> reverses the effect of a prior <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method call.</span></span>  
  
 <span data-ttu-id="65ad6-147">Cette méthode est appelée par le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode de la <xref:System.Threading.AsyncFlowControl> structure retournée par le <xref:System.Threading.ExecutionContext.SuppressFlow%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="65ad6-147">This method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the <xref:System.Threading.AsyncFlowControl> structure returned by the <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  <span data-ttu-id="65ad6-148">Vous devez utiliser le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode pour restaurer le flux du contexte d’exécution, ne pas le <xref:System.Threading.ExecutionContext.RestoreFlow%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="65ad6-148">You should use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method to restore the flow of the execution context, not the <xref:System.Threading.ExecutionContext.RestoreFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="65ad6-149">Le flux du contexte ne peut pas être restauré, car il n'est pas supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-149">The context flow cannot be restored because it is not being suppressed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Threading::ExecutionContext ^ executionContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Threading.ExecutionContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="executionContext">
          <span data-ttu-id="65ad6-150">
            <see cref="T:System.Threading.ExecutionContext" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-150">The <see cref="T:System.Threading.ExecutionContext" /> to set.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="65ad6-151">Délégué <see cref="T:System.Threading.ContextCallback" /> représentant la méthode à exécuter dans le contexte d'exécution fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-151">A <see cref="T:System.Threading.ContextCallback" /> delegate that represents the method to be run in the provided execution context.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="65ad6-152">Objet à passer à la méthode de rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-152">The object to pass to the callback method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65ad6-153">Exécute une méthode dans un contexte d'exécution spécifié sur le thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-153">Runs a method in a specified execution context on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-154">Le contexte d’exécution est retourné dans son état précédent lorsque la méthode est terminée.</span><span class="sxs-lookup"><span data-stu-id="65ad6-154">The execution context is returned to its previous state when the method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="65ad6-155">
            <paramref name="executionContext" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-155">
              <paramref name="executionContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="65ad6-156">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-156">-or-</span>
          </span>
          <span data-ttu-id="65ad6-157">Le <paramref name="executionContext" /> n'a pas été acquis à l'aide d'une opération de capture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-157">
              <paramref name="executionContext" /> was not acquired through a capture operation.</span>
          </span>
          <span data-ttu-id="65ad6-158">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-158">-or-</span>
          </span>
          <span data-ttu-id="65ad6-159">Le <paramref name="executionContext" /> a déjà été utilisé comme argument pour un appel <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-159">
              <paramref name="executionContext" /> has already been used as the argument to a <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> call.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65ad6-160">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-160">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65ad6-161">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65ad6-162">Supprime le flux du contexte d'exécution sur des threads asynchrones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-162">Suppresses the flow of the execution context across asynchronous threads.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65ad6-163">Structure <see cref="T:System.Threading.AsyncFlowControl" /> pour restaurer le flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-163">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ad6-164">Utilisez cette méthode pour supprimer le flux de la <xref:System.Threading.ExecutionContext> sur le thread actuel.</span><span class="sxs-lookup"><span data-stu-id="65ad6-164">Use this method to suppress the flow of the <xref:System.Threading.ExecutionContext> on the current thread.</span></span>  
  
 <span data-ttu-id="65ad6-165">Vous devez utiliser le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode sur le <xref:System.Threading.AsyncFlowControl> structure pour restaurer le flux de la <xref:System.Threading.ExecutionContext>.</span><span class="sxs-lookup"><span data-stu-id="65ad6-165">You must use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to restore the flow of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="65ad6-166">Cette méthode est protégée par un <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> pour <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> autorisation.</span><span class="sxs-lookup"><span data-stu-id="65ad6-166">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="65ad6-167">Un composant de niveau de confiance totale peut appeler cette méthode pour supprimer le flux de la <xref:System.Threading.ExecutionContext> pendant les appels asynchrones.</span><span class="sxs-lookup"><span data-stu-id="65ad6-167">A fully trusted component can call this method to suppress the flow of the <xref:System.Threading.ExecutionContext> during asynchronous calls.</span></span> <span data-ttu-id="65ad6-168">Lorsque le flux est supprimé, le <xref:System.Security.SecurityContext.Capture%2A> méthode renvoie `null`.</span><span class="sxs-lookup"><span data-stu-id="65ad6-168">While the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="65ad6-169">Le flux du contexte est déjà supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-169">The context flow is already suppressed.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65ad6-170">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-170">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65ad6-171">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65ad6-171">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.AsyncFlowControl" />
      </Docs>
    </Member>
  </Members>
</Type>