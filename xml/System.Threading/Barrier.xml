<Type Name="Barrier" FullName="System.Threading.Barrier">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c2012ee136cf2047bb7f0049b4f4761a1092883c" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58692590" /></Metadata><TypeSignature Language="C#" Value="public class Barrier : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Barrier extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Barrier" />
  <TypeSignature Language="VB.NET" Value="Public Class Barrier&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Barrier : IDisposable" />
  <TypeSignature Language="F#" Value="type Barrier = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5fd6e-101">Permet à plusieurs tâches de coopérer en parallèle sur un algorithme via plusieurs phases.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-101">Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-102">Un groupe de tâches de coopérer en passant par une série de phases, où chaque membre du groupe signale qu’il est arrivé à la <xref:System.Threading.Barrier> d’une phase donnée et implicitement attend l’arrivée des autres membres.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-102">A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive.</span></span> <span data-ttu-id="5fd6e-103">Le même <xref:System.Threading.Barrier> peut être utilisé pour plusieurs phases.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-103">The same <xref:System.Threading.Barrier> can be used for multiple phases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fd6e-104">L’exemple suivant montre comment utiliser un objet barrier :</span><span class="sxs-lookup"><span data-stu-id="5fd6e-104">The following example shows how to use a barrier:</span></span>  
  
 [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]
 [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="5fd6e-105">Tous les membres publics et protégés de <see cref="T:System.Threading.Barrier" /> sont thread-safe et peuvent être utilisés simultanément par plusieurs threads, à l’exception de Dispose, qui doit être uniquement utilisé lorsque toutes les autres opérations sur le <see cref="T:System.Threading.Barrier" /> terminées.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-105">All public and protected members of <see cref="T:System.Threading.Barrier" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.Barrier" /> have completed.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-106">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-106">Barrier (.NET Framework)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-107">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-107">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5fd6e-108">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Barrier" />.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-108">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-109">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-109">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-110">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-110">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier participantCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="5fd6e-111">Nombre de threads participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-111">The number of participating threads.</span></span></param>
        <summary><span data-ttu-id="5fd6e-112">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Barrier" />.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-112">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-113"><paramref name="participantCount" /> est inférieur à 0 ou supérieur à 32 767.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-113"><paramref name="participantCount" /> is less than 0 or greater than 32,767.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-114">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-114">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-115">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-115">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount, Action&lt;System.Threading.Barrier&gt; postPhaseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount, class System.Action`1&lt;class System.Threading.Barrier&gt; postPhaseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer, postPhaseAction As Action(Of Barrier))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount, Action&lt;System::Threading::Barrier ^&gt; ^ postPhaseAction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int * Action&lt;System.Threading.Barrier&gt; -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier (participantCount, postPhaseAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
        <Parameter Name="postPhaseAction" Type="System.Action&lt;System.Threading.Barrier&gt;" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="5fd6e-116">Nombre de threads participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-116">The number of participating threads.</span></span></param>
        <param name="postPhaseAction"><span data-ttu-id="5fd6e-117"><see cref="T:System.Action`1" /> à exécuter après chaque phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-117">The <see cref="T:System.Action`1" /> to be executed after each phase.</span></span> <span data-ttu-id="5fd6e-118">La valeur Null (Nothing en Visual Basic) peut être passée pour indiquer qu'aucune action n'est exécutée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-118">null (Nothing in Visual Basic) may be passed to indicate no action is taken.</span></span></param>
        <summary><span data-ttu-id="5fd6e-119">Initialise une nouvelle instance de la classe <see cref="T:System.Threading.Barrier" />.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-119">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-120">Le `postPhaseAction` délégué sera exécuté une fois que tous les participants sont arrivés à la barrière d’une phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-120">The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase.</span></span> <span data-ttu-id="5fd6e-121">Les participants ne seront pas disponible à la phase suivante jusqu'à ce que le délégué de postPhaseAction a terminé son exécution.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-121">The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-122"><paramref name="participantCount" /> est inférieur à 0 ou supérieur à 32 767.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-122"><paramref name="participantCount" /> is less than 0 or greater than 32,767.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-123">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-123">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-124">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-124">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public long AddParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipant();" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : unit -&gt; int64" Usage="barrier.AddParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd6e-125">Signale à <see cref="T:System.Threading.Barrier" /> qu'il y aura un participant supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-125">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-126">Numéro de la phase du cloisonnement à laquelle les nouveaux participants participeront en premier.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-126">The phase number of the barrier in which the new participants will first participate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-127">Si le cloisonnement exécute actuellement une action de post-phase, cet appel est bloqué jusqu'à ce que l’action de post-phase se termine et la barrière a été déplacé à la phase suivante.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-127">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-128">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-128">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-129">L'ajout d'un participant provoquerait l'augmentation du nombre de participants du cloisonnement au-delà de 32 767.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-129">Adding a participant would cause the barrier's participant count to exceed 32,767.</span></span>  
  
<span data-ttu-id="5fd6e-130">ou</span><span class="sxs-lookup"><span data-stu-id="5fd6e-130">-or-</span></span> 
<span data-ttu-id="5fd6e-131">La méthode a été appelée à partir d'une action post-phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-131">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-132">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-132">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-133">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-133">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipants">
      <MemberSignature Language="C#" Value="public long AddParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipants (participantCount As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.AddParticipants : int -&gt; int64" Usage="barrier.AddParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="5fd6e-134">Nombre de participants supplémentaires à ajouter au cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-134">The number of additional participants to add to the barrier.</span></span></param>
        <summary><span data-ttu-id="5fd6e-135">Signale à <see cref="T:System.Threading.Barrier" /> qu'il y aura des participants supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-135">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-136">Numéro de la phase du cloisonnement à laquelle les nouveaux participants participeront en premier.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-136">The phase number of the barrier in which the new participants will first participate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-137">Si le cloisonnement exécute actuellement une action de post-phase, cet appel est bloqué jusqu'à ce que l’action de post-phase se termine et la barrière a été déplacé à la phase suivante.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-137">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-138">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-138">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-139"><paramref name="participantCount" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-139"><paramref name="participantCount" /> is less than 0.</span></span>  
  
<span data-ttu-id="5fd6e-140">ou</span><span class="sxs-lookup"><span data-stu-id="5fd6e-140">-or-</span></span> 
<span data-ttu-id="5fd6e-141">L'ajout de participants (<paramref name="participantCount" />) provoquerait l'augmentation du nombre de participants du cloisonnement au-delà de 32 767.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-141">Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-142">La méthode a été appelée à partir d'une action post-phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-142">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-143">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-143">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-144">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-144">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPhaseNumber">
      <MemberSignature Language="C#" Value="public long CurrentPhaseNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPhaseNumber" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPhaseNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPhaseNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPhaseNumber : int64" Usage="System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5fd6e-145">Obtient le numéro de la phase actuelle du cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-145">Gets the number of the barrier's current phase.</span></span></summary>
        <value><span data-ttu-id="5fd6e-146">Retourne le numéro de la phase actuelle du cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-146">Returns the number of the barrier's current phase.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-147">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-147">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-148">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-148">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5fd6e-149">Libère les ressources utilisées par l’instance actuelle de la classe <see cref="T:System.Threading.Barrier" />.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-149">Releases resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-150">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-150">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-151">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-151">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="barrier.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd6e-152">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Threading.Barrier" />.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-152">Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-153">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-153">Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="5fd6e-154">La méthode `Dispose` rend le <xref:System.Threading.Barrier> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-154">The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state.</span></span> <span data-ttu-id="5fd6e-155">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Threading.Barrier> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Threading.Barrier> occupée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-155">After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.</span></span>  
  
 <span data-ttu-id="5fd6e-156">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="5fd6e-156">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5fd6e-157">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-157">Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="5fd6e-158">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Threading.Barrier> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-158">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-159">La méthode a été appelée à partir d'une action post-phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-159">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-160">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-160">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-161">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-161">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="barrier.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="5fd6e-162">true pour libérer les ressources managées et non managées ; false pour libérer uniquement les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-162">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="5fd6e-163">Libère les ressources non managées utilisées par le <see cref="T:System.Threading.Barrier" />, et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-164">Contrairement à la plupart des membres de <xref:System.Threading.Barrier>, Dispose n’est pas thread-safe et ne peut pas être utilisé en même temps que les autres membres de cette instance.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-164">Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-165">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-165">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-166">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-166">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantCount">
      <MemberSignature Language="C#" Value="public int ParticipantCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantCount : int" Usage="System.Threading.Barrier.ParticipantCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5fd6e-167">Obtient le nombre total de participants au cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-167">Gets the total number of participants in the barrier.</span></span></summary>
        <value><span data-ttu-id="5fd6e-168">Retourne le nombre total de participants au cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-168">Returns the total number of participants in the barrier.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-169">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-169">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-170">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-170">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsRemaining">
      <MemberSignature Language="C#" Value="public int ParticipantsRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantsRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantsRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantsRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantsRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantsRemaining : int" Usage="System.Threading.Barrier.ParticipantsRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5fd6e-171">Obtient le nombre de participants au cloisonnement qui n’ont pas encore été signalés dans la phase actuelle.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-171">Gets the number of participants in the barrier that haven't yet signaled in the current phase.</span></span></summary>
        <value><span data-ttu-id="5fd6e-172">Retourne le nombre de participants au cloisonnement qui n’ont pas encore été signalés dans la phase actuelle.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-172">Returns the number of participants in the barrier that haven't yet signaled in the current phase.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-173">Cela peut être égale à 0 lors d’une exécution de délégué d’action post-phase ou si ParticipantCount est égal à 0.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-173">This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-174">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-174">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-175">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-175">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipant();" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : unit -&gt; unit" Usage="barrier.RemoveParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd6e-176">Signale à <see cref="T:System.Threading.Barrier" /> qu'il y aura un participant en moins.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-176">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-177">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-177">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-178">La barrière a déjà 0 participant.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-178">The barrier already has 0 participants.</span></span>  
  
<span data-ttu-id="5fd6e-179">ou</span><span class="sxs-lookup"><span data-stu-id="5fd6e-179">-or-</span></span> 
<span data-ttu-id="5fd6e-180">La méthode a été appelée à partir d'une action post-phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-180">The method was invoked from within a post-phase action.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-181">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-181">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-182">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-182">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipants">
      <MemberSignature Language="C#" Value="public void RemoveParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipants (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipants : int -&gt; unit" Usage="barrier.RemoveParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount"><span data-ttu-id="5fd6e-183">Nombre de participants supplémentaires à supprimer du cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-183">The number of additional participants to remove from the barrier.</span></span></param>
        <summary><span data-ttu-id="5fd6e-184">Signale à <see cref="T:System.Threading.Barrier" /> qu'il y aura moins de participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-184">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-185">Si `participantCount` participants sont déjà en attente sur le cloisonnement, cette suppression accomplit le cloisonnement, l’action de post-phase est exécutée et tous les participants sont réveillés car le participant supprimé a atteint le cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-185">If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-186">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-187">Le nombre total de participants est inférieur au <paramref name="participantCount" /> spécifié</span><span class="sxs-lookup"><span data-stu-id="5fd6e-187">The total participant count is less than the specified <paramref name="participantCount" /></span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-188">La barrière a déjà 0 participant.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-188">The barrier already has 0 participants.</span></span>  
  
<span data-ttu-id="5fd6e-189">ou</span><span class="sxs-lookup"><span data-stu-id="5fd6e-189">-or-</span></span> 
<span data-ttu-id="5fd6e-190">La méthode a été appelée à partir d'une action post-phase.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-190">The method was invoked from within a post-phase action.</span></span>  
  
<span data-ttu-id="5fd6e-191">ou</span><span class="sxs-lookup"><span data-stu-id="5fd6e-191">-or-</span></span> 
<span data-ttu-id="5fd6e-192">le nombre de participant actuel est inférieur au participantCount spécifié</span><span class="sxs-lookup"><span data-stu-id="5fd6e-192">current participant count is less than the specified participantCount</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-193">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-193">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-194">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-194">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5fd6e-195">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-195">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-196">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-196">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-197">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-197">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignalAndWait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait();" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : unit -&gt; unit" Usage="barrier.SignalAndWait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5fd6e-198">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-198">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-199">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-200">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-200">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException"><span data-ttu-id="5fd6e-201">Si une exception est levée par l'action de post-phase d'un cloisonnement après que tous les threads participants aient appelé SignalAndWait, l'exception sera incluse dans un wrapper dans une BarrierPostPhaseException et levée pour tous les threads participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-201">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-202">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-202">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-203">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-203">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int -&gt; bool" Usage="barrier.SignalAndWait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="5fd6e-204">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-204">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="5fd6e-205">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement, à l'aide d'un entier signé 32 bits pour mesurer le délai d'attente.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-205">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-206">si tous les participants ont atteint le cloisonnement dans le délai spécifié ; sinon false.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-206">if all participants reached the barrier within the specified time; otherwise false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-207">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-207">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-208"><paramref name="millisecondsTimeout" /> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-208"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-209">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-209">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException"><span data-ttu-id="5fd6e-210">Si une exception est levée par l'action de post-phase d'un cloisonnement après que tous les threads participants aient appelé SignalAndWait, l'exception sera incluse dans un wrapper dans une BarrierPostPhaseException et levée pour tous les threads participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-210">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-211">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-211">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-212">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-212">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : System.Threading.CancellationToken -&gt; unit" Usage="barrier.SignalAndWait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="5fd6e-213"><see cref="T:System.Threading.CancellationToken" /> à observer.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-213">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="5fd6e-214">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement, tout en observant un jeton d'annulation.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-214">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="5fd6e-215"><paramref name="cancellationToken" /> a été annulé.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-215"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-216">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-216">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-217">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-217">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-218">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-218">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-219">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-219">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan -&gt; bool" Usage="barrier.SignalAndWait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5fd6e-220"><see cref="T:System.TimeSpan" /> qui représente le nombre de millièmes de secondes à attendre ou <see cref="T:System.TimeSpan" /> qui représente -1 millième de seconde, pour attendre indéfiniment.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-220">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="5fd6e-221">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement, à l'aide d'un objet <see cref="T:System.TimeSpan" /> qui mesure l'intervalle de temps.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-221">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-222">true si tous les autres participants ont atteint le cloisonnement ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-222">true if all other participants reached the barrier; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-223">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-223">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-224"><paramref name="timeout" /> est un nombre négatif autre que -1 milliseconde, qui représente un délai d’attente infini, ou sa valeur est supérieure à 32 767.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-224"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-225">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-225">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-226">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-226">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-227">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-227">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="5fd6e-228">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-228">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="5fd6e-229"><see cref="T:System.Threading.CancellationToken" /> à observer.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-229">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="5fd6e-230">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement, à l'aide d'un entier signé 32 bits pour mesurer le délai d'attente, tout en observant un jeton d'annulation.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-230">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-231">si tous les participants ont atteint le cloisonnement dans le délai spécifié ; sinon false.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-231">if all participants reached the barrier within the specified time; otherwise false</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fd6e-232">Si le `cancellationToken` a été annulée avant le signal a pris effet, une <xref:System.OperationCanceledException> est levée et le <xref:System.Threading.Barrier.ParticipantsRemaining%2A> valeur n’est pas diminuée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-232">If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased.</span></span> <span data-ttu-id="5fd6e-233">Si le `cancellationToken` n’est pas annulé ou est annulée une fois que le signal en vigueur puis <xref:System.Threading.Barrier.ParticipantsRemaining%2A> est diminuée et aucune <xref:System.OperationCanceledException> est levée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-233">If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="5fd6e-234"><paramref name="cancellationToken" /> a été annulé.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-234"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-235">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-235">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-236"><paramref name="millisecondsTimeout" /> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-236"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-237">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-237">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-238">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-238">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-239">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-239">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="5fd6e-240"><see cref="T:System.TimeSpan" /> qui représente le nombre de millièmes de secondes à attendre ou <see cref="T:System.TimeSpan" /> qui représente -1 millième de seconde, pour attendre indéfiniment.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-240">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="5fd6e-241"><see cref="T:System.Threading.CancellationToken" /> à observer.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-241">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="5fd6e-242">Signale qu'un participant a atteint le cloisonnement et qu'il attend que tous les autres participants atteignent également le cloisonnement, à l'aide d'un objet <see cref="T:System.TimeSpan" /> qui mesure l'intervalle de temps, tout en observant un jeton d'annulation.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-242">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval, while observing a cancellation token.</span></span></summary>
        <returns><span data-ttu-id="5fd6e-243">true si tous les autres participants ont atteint le cloisonnement ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-243">true if all other participants reached the barrier; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="5fd6e-244"><paramref name="cancellationToken" /> a été annulé.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-244"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5fd6e-245">L’instance actuelle a déjà été supprimée.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-245">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5fd6e-246"><paramref name="timeout" /> est un nombre négatif autre que -1 milliseconde, qui représente un délai d’attente infini.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-246"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5fd6e-247">La méthode a été appelée à partir d'une action post-phase, le cloisonnement comporte actuellement 0 participants, ou il est signalé par un nombre de threads plus important que celui enregistré en tant que participants.</span><span class="sxs-lookup"><span data-stu-id="5fd6e-247">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f"><span data-ttu-id="5fd6e-248">Cloisonnement (.NET Framework)</span><span class="sxs-lookup"><span data-stu-id="5fd6e-248">Barrier (.NET Framework)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19"><span data-ttu-id="5fd6e-249">Comment : synchroniser des opérations simultanées avec un objet Barrier</span><span class="sxs-lookup"><span data-stu-id="5fd6e-249">How to: Synchronize Concurrent Operations with a Barrier</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>