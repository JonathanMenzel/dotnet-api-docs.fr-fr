<Type Name="HostExecutionContextManager" FullName="System.Threading.HostExecutionContextManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41379eaea1c24fd5076cd2864cb18ba502392fa6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39811149" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HostExecutionContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostExecutionContextManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.HostExecutionContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Class HostExecutionContextManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostExecutionContextManager" />
  <TypeSignature Language="F#" Value="type HostExecutionContextManager = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les fonctionnalités qui permettent à un hôte du Common Language Runtime de participer au flux, ou migration, du contexte d'exécution.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si actuel <xref:System.AppDomainManager> a une référence à un <xref:System.Threading.HostExecutionContextManager> dans son <xref:System.AppDomainManager.HostExecutionContextManager%2A> propriété, puis le common language runtime appelle le gestionnaire chaque fois qu’un appel à la <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=nameWithType> méthode se produit, pour permettre à l’hôte de participer au flux de l’exécution contexte.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostExecutionContextManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostExecutionContextManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Threading.HostExecutionContextManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.HostExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Capture () As HostExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::HostExecutionContext ^ Capture();" />
      <MemberSignature Language="F#" Value="abstract member Capture : unit -&gt; System.Threading.HostExecutionContext&#xA;override this.Capture : unit -&gt; System.Threading.HostExecutionContext" Usage="hostExecutionContextManager.Capture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Capture le contexte d'exécution de l'hôte du thread actuel.</summary>
        <returns>Objet <see cref="T:System.Threading.HostExecutionContext" /> capturant le contexte d'exécution de l'hôte du thread actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Threading.HostExecutionContext> est créé à l’aide d’un handle sécurisé qui contient le `IUnknown` pointeur pour l’hôte qui exécute le thread actuel.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public virtual void Revert (object previousState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert(object previousState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.Revert(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Revert (previousState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Revert(System::Object ^ previousState);" />
      <MemberSignature Language="F#" Value="abstract member Revert : obj -&gt; unit&#xA;override this.Revert : obj -&gt; unit" Usage="hostExecutionContextManager.Revert previousState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previousState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="previousState">État de contexte antérieur à restaurer.</param>
        <summary>Restaure l'état antérieur du contexte d'exécution de l'hôte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `previousState` doit être l’objet retourné par la <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="previousState" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="previousState" /> n'a pas été créé sur le thread en cours.  
  
- ou - 
 <paramref name="previousState" /> n'est pas le dernier état du <see cref="T:System.Threading.HostExecutionContext" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName="SetHostExecutionContext">
      <MemberSignature Language="C#" Value="public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object SetHostExecutionContext(class System.Threading.HostExecutionContext hostExecutionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ SetHostExecutionContext(System::Threading::HostExecutionContext ^ hostExecutionContext);" />
      <MemberSignature Language="F#" Value="abstract member SetHostExecutionContext : System.Threading.HostExecutionContext -&gt; obj&#xA;override this.SetHostExecutionContext : System.Threading.HostExecutionContext -&gt; obj" Usage="hostExecutionContextManager.SetHostExecutionContext hostExecutionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostExecutionContext" Type="System.Threading.HostExecutionContext" />
      </Parameters>
      <Docs>
        <param name="hostExecutionContext">
          <see cref="T:System.Threading.HostExecutionContext" /> à définir.</param>
        <summary>Affecte le contexte d'exécution de l'hôte spécifié au contexte d'exécution de l'hôte actuel.</summary>
        <returns>Objet permettant de restaurer l'état antérieur du <see cref="T:System.Threading.HostExecutionContext" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> méthode définit actuel dans le contexte d’exécution de l’hôte <xref:System.Threading.HostExecutionContext>.  Un <xref:System.Threading.HostExecutionContext> qui a été utilisé comme argument à un autre <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> appel de méthode ne peut pas être passé comme le paramètre de cette méthode. Au lieu de cela, utilisez le <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=nameWithType> méthode pour créer une copie d’un <xref:System.Threading.HostExecutionContext> objet, puis utiliser la copie pour définir le contexte de l’exécution d’hôte.  
  
 Appelez le <xref:System.Threading.HostExecutionContextManager.Revert%2A> méthode à l’aide de l’objet retourné par cette méthode pour restaurer le <xref:System.Threading.HostExecutionContext> à son état précédent.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <paramref name="hostExecutionContext" /> n'a pas été acquis à l'aide d'une opération de capture.  
  
- ou - 
 Le <paramref name="hostExecutionContext" /> a été l'argument d'un appel de méthode <see cref="M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)" /> précédent.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
  </Members>
</Type>