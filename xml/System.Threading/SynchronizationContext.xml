<Type Name="SynchronizationContext" FullName="System.Threading.SynchronizationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21e39acd8444a88ece1a43a75c683519e22d9bbf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39937035" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SynchronizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SynchronizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.SynchronizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class SynchronizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SynchronizationContext" />
  <TypeSignature Language="F#" Value="type SynchronizationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="65653-101">Fournit les fonctionnalités de base pour propager un contexte de synchronisation dans plusieurs modèles de synchronisation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65653-101">Provides the basic functionality for propagating a synchronization context in various synchronization models.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-102">Le <xref:System.Threading.SynchronizationContext> est une classe de base qui fournit un contexte libre de threads sans synchronisation.</span><span class="sxs-lookup"><span data-stu-id="65653-102">The <xref:System.Threading.SynchronizationContext> class is a base class that provides a free-threaded context with no synchronization.</span></span>  
  
 <span data-ttu-id="65653-103">L’objectif du modèle de synchronisation implémenté par cette classe consiste à autoriser les opérations synchrones/asynchrones internes du common language runtime de fonctionner correctement avec différents modèles de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="65653-103">The purpose of the synchronization model implemented by this class is to allow the internal asynchronous/synchronous operations of the common language runtime to behave properly with different synchronization models.</span></span> <span data-ttu-id="65653-104">Ce modèle simplifie également certaines exigences gérés applications ont dû suivre afin de fonctionner correctement sous différents environnements de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="65653-104">This model also simplifies some of the requirements that managed applications have had to follow in order to work correctly under different synchronization environments.</span></span>  
  
 <span data-ttu-id="65653-105">Les fournisseurs de modèles de synchronisation peuvent étendre cette classe et fournir leurs propres implémentations de ces méthodes.</span><span class="sxs-lookup"><span data-stu-id="65653-105">Providers of synchronization models can extend this class and provide their own implementations for these methods.</span></span>  
  
 <span data-ttu-id="65653-106">Pour plus d’informations sur les contextes de synchronisation, consultez l’article [il s’agit de tous les sur le SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) dans MSDN Magazine.</span><span class="sxs-lookup"><span data-stu-id="65653-106">For more information about synchronization contexts, see the article [It's All About the SynchronizationContext](http://msdn.microsoft.com/magazine/gg598924.aspx) in the MSDN Magazine.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="65653-107">Les héritiers doivent avoir <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> et <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65653-107">Inheritors must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SynchronizationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SynchronizationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-108">Crée une instance de la classe <see cref="T:System.Threading.SynchronizationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-108">Creates a new instance of the <see cref="T:System.Threading.SynchronizationContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-109">Le constructeur par défaut n’effectue aucune initialisation de paramètre.</span><span class="sxs-lookup"><span data-stu-id="65653-109">The default constructor performs no parameter initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
          <span data-ttu-id="65653-110">Les héritiers doivent avoir <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> et <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-110">Inheritors must have <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" /> and <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public virtual System.Threading.SynchronizationContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.SynchronizationContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCopy () As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::SynchronizationContext ^ CreateCopy();" />
      <MemberSignature Language="F#" Value="abstract member CreateCopy : unit -&gt; System.Threading.SynchronizationContext&#xA;override this.CreateCopy : unit -&gt; System.Threading.SynchronizationContext" Usage="synchronizationContext.CreateCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-111">En cas de substitution dans une classe dérivée, crée une copie du contexte de synchronisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-111">When overridden in a derived class, creates a copy of the synchronization context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65653-112">Nouvel objet <see cref="T:System.Threading.SynchronizationContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-112">A new <see cref="T:System.Threading.SynchronizationContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-113">L’implémentation par défaut retourne un vide <xref:System.Threading.SynchronizationContext> objet.</span><span class="sxs-lookup"><span data-stu-id="65653-113">The default implementation returns an empty <xref:System.Threading.SynchronizationContext> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Threading.SynchronizationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ Current { System::Threading::SynchronizationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Threading.SynchronizationContext" Usage="System.Threading.SynchronizationContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="65653-114">Obtient le contexte de synchronisation du thread actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-114">Gets the synchronization context for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="65653-115">Objet <see cref="T:System.Threading.SynchronizationContext" /> représentant le contexte de synchronisation actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-115">A <see cref="T:System.Threading.SynchronizationContext" /> object representing the current synchronization context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-116">Cette propriété est utile pour propager un contexte de synchronisation d’un thread à un autre.</span><span class="sxs-lookup"><span data-stu-id="65653-116">This property is useful for propagating a synchronization context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWaitNotificationRequired">
      <MemberSignature Language="C#" Value="public bool IsWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.IsWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function IsWaitNotificationRequired () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.IsWaitNotificationRequired : unit -&gt; bool" Usage="synchronizationContext.IsWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-117">Détermine si une notification de périodes d'attente est requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-117">Determines if wait notification is required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65653-118">
            <see langword="true" /> si une notification de périodes d'attente est requise ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-118">
              <see langword="true" /> if wait notification is required; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public virtual void OperationCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OperationCompleted : unit -&gt; unit&#xA;override this.OperationCompleted : unit -&gt; unit" Usage="synchronizationContext.OperationCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-119">Lors d'une substitution dans une classe dérivée, répond à la notification selon laquelle une opération est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-119">When overridden in a derived class, responds to the notification that an operation has completed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-120">L’implémentation par défaut ne contient aucun code.</span><span class="sxs-lookup"><span data-stu-id="65653-120">The default implementation contains no code.</span></span> <span data-ttu-id="65653-121">Vous pouvez éventuellement substituer cette méthode pour fournir le code qui s’exécute lorsqu’une opération est terminée.</span><span class="sxs-lookup"><span data-stu-id="65653-121">You can optionally override this method to provide code that executes when an operation is complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationStarted">
      <MemberSignature Language="C#" Value="public virtual void OperationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OperationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.OperationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OperationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OperationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OperationStarted : unit -&gt; unit&#xA;override this.OperationStarted : unit -&gt; unit" Usage="synchronizationContext.OperationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-122">Lors d'une substitution dans une classe dérivée, répond à la notification selon laquelle une opération est lancée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-122">When overridden in a derived class, responds to the notification that an operation has started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-123">L’implémentation par défaut ne contient aucun code.</span><span class="sxs-lookup"><span data-stu-id="65653-123">The default implementation contains no code.</span></span> <span data-ttu-id="65653-124">Vous pouvez éventuellement substituer cette méthode pour fournir le code qui s’exécute au démarrage d’une opération.</span><span class="sxs-lookup"><span data-stu-id="65653-124">You can optionally override this method to provide code that executes when an operation starts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public virtual void Post (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Post(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Post (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Post(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Post : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Post : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Post (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="65653-125">Délégué <see cref="T:System.Threading.SendOrPostCallback" /> à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-125">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="65653-126">Objet passé au délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-126">The object passed to the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65653-127">Lors d’une substitution dans une classe dérivée, distribue un message asynchrone à un contexte de synchronisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-127">When overridden in a derived class, dispatches an asynchronous message to a synchronization context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-128">Le <xref:System.Threading.SynchronizationContext.Post%2A> méthode démarre une demande asynchrone pour publier un message.</span><span class="sxs-lookup"><span data-stu-id="65653-128">The <xref:System.Threading.SynchronizationContext.Post%2A> method starts an asynchronous request to post a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public virtual void Send (System.Threading.SendOrPostCallback d, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.Threading.SendOrPostCallback d, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Send (d As SendOrPostCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Send(System::Threading::SendOrPostCallback ^ d, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.Threading.SendOrPostCallback * obj -&gt; unit&#xA;override this.Send : System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="synchronizationContext.Send (d, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="65653-129">Délégué <see cref="T:System.Threading.SendOrPostCallback" /> à appeler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-129">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="65653-130">Objet passé au délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-130">The object passed to the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65653-131">Lors d’une substitution dans une classe dérivée, distribue un message synchrone à un contexte de synchronisation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-131">When overridden in a derived class, dispatches a synchronous message to a synchronization context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-132">Le <xref:System.Threading.SynchronizationContext.Send%2A> méthode lance une demande synchrone pour envoyer un message.</span><span class="sxs-lookup"><span data-stu-id="65653-132">The <xref:System.Threading.SynchronizationContext.Send%2A> method starts a synchronous request to send a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="65653-133">La méthode a été appelée dans une application Windows Store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-133">The method was called in a Windows Store app.</span>
          </span>
          <span data-ttu-id="65653-134">L'implémentation de <see cref="T:System.Threading.SynchronizationContext" /> pour les applications Windows Store ne prend pas en charge la méthode <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-134">The implementation of <see cref="T:System.Threading.SynchronizationContext" /> for Windows Store apps does not support the <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSynchronizationContext">
      <MemberSignature Language="C#" Value="public static void SetSynchronizationContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSynchronizationContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetSynchronizationContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetSynchronizationContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetSynchronizationContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetSynchronizationContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetSynchronizationContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext">
          <span data-ttu-id="65653-135">Objet <see cref="T:System.Threading.SynchronizationContext" /> à définir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-135">The <see cref="T:System.Threading.SynchronizationContext" /> object to be set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65653-136">Définit le contexte de synchronisation actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-136">Sets the current synchronization context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65653-137">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-137">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65653-138">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-138">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetThreadStaticContext">
      <MemberSignature Language="C#" Value="public static void SetThreadStaticContext (System.Threading.SynchronizationContext syncContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetThreadStaticContext(class System.Threading.SynchronizationContext syncContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetThreadStaticContext(System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetThreadStaticContext (syncContext As SynchronizationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetThreadStaticContext(System::Threading::SynchronizationContext ^ syncContext);" />
      <MemberSignature Language="F#" Value="static member SetThreadStaticContext : System.Threading.SynchronizationContext -&gt; unit" Usage="System.Threading.SynchronizationContext.SetThreadStaticContext syncContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.Obsolete("The method is not supported and will be removed")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="syncContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWaitNotificationRequired">
      <MemberSignature Language="C#" Value="protected void SetWaitNotificationRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetWaitNotificationRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.SetWaitNotificationRequired" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetWaitNotificationRequired ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetWaitNotificationRequired();" />
      <MemberSignature Language="F#" Value="member this.SetWaitNotificationRequired : unit -&gt; unit" Usage="synchronizationContext.SetWaitNotificationRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65653-139">Définit une notification selon laquelle une notification de périodes d'attente est requise et prépare la méthode de rappel pour qu'elle puisse être appelée de manière plus fiable lorsqu'une attente se produit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-139">Sets notification that wait notification is required and prepares the callback method so it can be called more reliably when a wait occurs.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public virtual int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Wait(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Wait (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Wait(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="abstract member Wait : nativeint[] * bool * int -&gt; int&#xA;override this.Wait : nativeint[] * bool * int -&gt; int" Usage="synchronizationContext.Wait (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="65653-140">Tableau de type <see cref="T:System.IntPtr" /> contenant les handles de système d'exploitation natifs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-140">An array of type <see cref="T:System.IntPtr" /> that contains the native operating system handles.</span>
          </span>
        </param>
        <param name="waitAll">
          <span data-ttu-id="65653-141">
            <see langword="true" /> pour attendre tous les handles ; <see langword="false" /> pour attendre un handle quelconque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-141">
              <see langword="true" /> to wait for all handles; <see langword="false" /> to wait for any handle.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="65653-142">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-142">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65653-143">Attend que tout ou une partie des éléments du tableau spécifié reçoivent un signal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-143">Waits for any or all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65653-144">Index du tableau de l'objet ayant respecté l'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-144">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-145">Le <xref:System.Threading.SynchronizationContext.Wait%2A> méthode appelle la déclaration externe <xref:System.Threading.SynchronizationContext.WaitHelper%2A> à effectuer l’activité d’attente.</span><span class="sxs-lookup"><span data-stu-id="65653-145">The <xref:System.Threading.SynchronizationContext.Wait%2A> method calls the external declaration <xref:System.Threading.SynchronizationContext.WaitHelper%2A> to perform the wait activity.</span></span>  <span data-ttu-id="65653-146">Remplacer le <xref:System.Threading.SynchronizationContext.Wait%2A> méthode pour modifier le comportement d’attente pour le contexte de synchronisation.</span><span class="sxs-lookup"><span data-stu-id="65653-146">Override the <xref:System.Threading.SynchronizationContext.Wait%2A> method to change the wait behavior for the synchronization context.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65653-147">
            <paramref name="waitHandles" /> a la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-147">
              <paramref name="waitHandles" /> is null.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65653-148">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-148">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65653-149">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-149">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="WaitHelper">
      <MemberSignature Language="C#" Value="protected static int WaitHelper (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 WaitHelper(native int[] waitHandles, bool waitAll, int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.SynchronizationContext.WaitHelper(System.IntPtr[],System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function WaitHelper (waitHandles As IntPtr(), waitAll As Boolean, millisecondsTimeout As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int WaitHelper(cli::array &lt;IntPtr&gt; ^ waitHandles, bool waitAll, int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="static member WaitHelper : nativeint[] * bool * int -&gt; int" Usage="System.Threading.SynchronizationContext.WaitHelper (waitHandles, waitAll, millisecondsTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitHandles" Type="System.IntPtr[]" />
        <Parameter Name="waitAll" Type="System.Boolean" />
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="waitHandles">
          <span data-ttu-id="65653-150">Tableau de type <see cref="T:System.IntPtr" /> contenant les handles de système d'exploitation natifs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-150">An array of type <see cref="T:System.IntPtr" /> that contains the native operating system handles.</span>
          </span>
        </param>
        <param name="waitAll">
          <span data-ttu-id="65653-151">
            <see langword="true" /> pour attendre tous les handles ; <see langword="false" /> pour attendre un handle quelconque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-151">
              <see langword="true" /> to wait for all handles;  <see langword="false" /> to wait for any handle.</span>
          </span>
        </param>
        <param name="millisecondsTimeout">
          <span data-ttu-id="65653-152">Nombre de millisecondes à attendre, ou <see cref="F:System.Threading.Timeout.Infinite" /> (-1) pour un délai d'attente infini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-152">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65653-153">Fonction d'assistance attendant que tout ou une partie des éléments du tableau spécifié reçoivent un signal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-153">Helper function that waits for any or all the elements in the specified array to receive a signal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65653-154">Index du tableau de l'objet ayant respecté l'attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-154">The array index of the object that satisfied the wait.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65653-155"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> est une déclaration pour une fonction d’assistance externe non managée.</span><span class="sxs-lookup"><span data-stu-id="65653-155"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> is a declaration for an unmanaged external helper function.</span></span> <span data-ttu-id="65653-156"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> est appelée par le <xref:System.Threading.SynchronizationContext.Wait%2A> méthode pour attendre un signal pour les handles de système d’exploitation spécifié.</span><span class="sxs-lookup"><span data-stu-id="65653-156"><xref:System.Threading.SynchronizationContext.WaitHelper%2A> is called by the <xref:System.Threading.SynchronizationContext.Wait%2A> method to wait for a signal for the specified operating system handles.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)" />
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="65653-157">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-157">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="65653-158">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65653-158">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>