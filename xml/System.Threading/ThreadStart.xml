<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f6f88d5dc637ec875f9d95c1fa682f7edcc0f3d1" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48665877" /></Metadata><TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="F#" Value="type ThreadStart = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Représente la méthode qui s’exécute sur un élément <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un thread managé est créé, la méthode qui s’exécute sur le thread est représentée par un <xref:System.Threading.ThreadStart> délégué ou un <xref:System.Threading.ParameterizedThreadStart> délégué qui est passé à la <xref:System.Threading.Thread.%23ctor%2A> constructeur. Le thread d’exécution ne commence pas tant que le <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> méthode est appelée. L’exécution commence à la première ligne de la méthode représentée par le <xref:System.Threading.ThreadStart> ou <xref:System.Threading.ParameterizedThreadStart> déléguer.  
  
> [!NOTE]
>  Les utilisateurs de Visual Basic et c# peuvent omettre le <xref:System.Threading.ThreadStart> ou <xref:System.Threading.ParameterizedThreadStart> constructeur délégué lors de la création d’un thread. Dans Visual Basic, utilisez la `AddressOf` opérateur lorsque vous passez votre méthode pour le <xref:System.Threading.Thread.%23ctor%2A> constructeur ; par exemple, `Dim t As New Thread(AddressOf ThreadProc)`. En c#, spécifiez simplement le nom de la procédure de thread. Le compilateur sélectionne le constructeur délégué approprié.  
>  
>  Pour C++, en commençant par le .NET Framework 2.0, la création d’un <xref:System.Threading.ThreadStart> délégué pour une méthode statique ne nécessite qu’un seul paramètre : l’adresse de la méthode de rappel, qualifiée par le nom de classe. Dans les versions antérieures, deux paramètres étaient requis lors de la création d’un délégué pour une méthode statique : zéro (null) et l’adresse de la méthode. Pour une méthode d’instance, toutes les versions requièrent deux paramètres : la variable d’instance et l’adresse de la méthode.  
  
   
  
## Examples  
 L’exemple de code suivant montre la syntaxe pour créer et utiliser un <xref:System.Threading.ThreadStart> délégué avec une méthode d’instance et une méthode statique.  
  
 Pour obtenir un autre exemple simple qui montre comment créer un <xref:System.Threading.ThreadStart> le délégué, consultez le <xref:System.Threading.Thread.Start?displayProperty=nameWithType> surcharge de méthode. Pour plus d’informations sur la création de threads, consultez [création de Threads et passage de données à l’heure de début](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
    <related type="Article" href="~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md">Création de threads et passage de données au démarrage</related>
  </Docs>
</Type>