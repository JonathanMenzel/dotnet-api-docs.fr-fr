<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2847d7cf8164513d435c7548adb57b6cd1419a68" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30526363" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ThreadStart()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ThreadStart();" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Représente la méthode qui s’exécute sur un élément <see cref="T:System.Threading.Thread" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un thread managé est créé, la méthode qui s’exécute sur le thread est représentée par un <xref:System.Threading.ThreadStart> délégué ou un <xref:System.Threading.ParameterizedThreadStart> délégué qui est passé à la <xref:System.Threading.Thread.%23ctor%2A> constructeur. Le thread d’exécution ne commence pas tant que le <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> méthode est appelée. L’exécution commence à la première ligne de la méthode représentée par le <xref:System.Threading.ThreadStart> ou <xref:System.Threading.ParameterizedThreadStart> déléguer.  
  
> [!NOTE]
>  Les utilisateurs de Visual Basic et c# peuvent omettre le <xref:System.Threading.ThreadStart> ou <xref:System.Threading.ParameterizedThreadStart> constructeur délégué lors de la création d’un thread. En Visual Basic, utilisez la `AddressOf` opérateur lors du passage de votre méthode pour le <xref:System.Threading.Thread.%23ctor%2A> constructeur ; par exemple, `Dim t As New Thread(AddressOf ThreadProc)`. En c#, spécifiez simplement le nom de la procédure de thread. Le compilateur sélectionne le bon constructeur délégué.  
  
 [C++]  
  
> [!NOTE]
>  Dans la version 2.0 du .NET Framework, création d’un <xref:System.Threading.ThreadStart> délégué pour une méthode statique en C++ requiert un seul paramètre : l’adresse de la méthode de rappel, qualifiée par le nom de classe. Dans les versions antérieures, deux paramètres étaient requis lors de la création d’un délégué pour une méthode statique : zéro (null) et l’adresse de la méthode. Pour une méthode d’instance, toutes les versions requièrent deux paramètres : la variable d’instance et l’adresse de la méthode.  
  
   
  
## Examples  
 L’exemple de code suivant illustre la syntaxe pour créer et utiliser un <xref:System.Threading.ThreadStart> délégué avec une méthode d’instance et une méthode statique.  
  
 Pour un autre exemple simple qui montre comment créer un <xref:System.Threading.ThreadStart> délégué, consultez le <xref:System.Threading.Thread.Start?displayProperty=nameWithType> surcharge de méthode. Pour plus d’informations sur la création de threads, consultez [création de Threads et passage de données au moment de démarrer](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md).  
  
 [!code-cpp[System.Threading.ThreadStart2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>