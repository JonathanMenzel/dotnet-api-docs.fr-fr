<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SemaphoreFullException.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5096d1c8bde9d947309b86d79d946baa395a19dd8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">096d1c8bde9d947309b86d79d946baa395a19dd8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.SemaphoreFullException">
          <source>The exception that is thrown when the <ph id="ph1">&lt;see cref="Overload:System.Threading.Semaphore.Release" /&gt;</ph> method is called on a semaphore whose count is already at the maximum.</source>
          <target state="translated">Exception levée lorsque la méthode <ph id="ph1">&lt;see cref="Overload:System.Threading.Semaphore.Release" /&gt;</ph> est appelée sur un sémaphore dont le compteur est déjà au maximum.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</source>
          <target state="translated">Un compteur du sémaphore est décrémenté à chaque fois qu’un thread entre dans le sémaphore et incrémenté lorsqu’un thread libère le sémaphore.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When the count is zero, subsequent requests block until other threads release the semaphore.</source>
          <target state="translated">Lorsque le nombre est zéro, les demandes suivantes bloquent jusqu'à ce que les autres threads libèrent le sémaphore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</source>
          <target state="translated">Lorsque tous les threads ont libéré le sémaphore, le nombre est à la valeur maximale spécifié lors de la création du sémaphore.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>If a programming error causes a thread to call the <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> method at this point, a <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.</source>
          <target state="translated">Si une erreur de programmation provoque un thread d’appeler le <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> (méthode) à ce stade, un <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> class does not enforce thread identity on calls to the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Threading.Semaphore&gt;</ph> classe n’applique pas l’identité de thread sur les appels à la <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType&gt;</ph> et <ph id="ph3">&lt;xref:System.Threading.Semaphore.Release%2A?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>It is not necessary for the same thread that called <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> to call <ph id="ph2">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>.</source>
          <target state="translated">Il n’est pas nécessaire pour le même thread que celui qui a appelé <ph id="ph1">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph> pour appeler <ph id="ph2">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source><ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> does not necessarily indicate a problem with the code where the exception occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> n’indique pas nécessairement un problème avec le code où l’exception s’est produite.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>Consider the following scenario: Thread A and thread B enter a semaphore that has a maximum count of two.</source>
          <target state="translated">Considérez le scénario suivant : le Thread A et le thread B entrent dans un sémaphore qui a un nombre maximal de deux.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>A programming error in thread B causes it to call <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> twice, so that the count on the semaphore is full.</source>
          <target state="translated">Une erreur de programmation dans le thread B le conduit à appeler <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph> à deux reprises, afin que le compteur du sémaphore est plein.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>As a result, when thread A eventually calls <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>, a <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> is thrown.</source>
          <target state="translated">Par conséquent, lorsque le thread A appellera <ph id="ph1">&lt;xref:System.Threading.Semaphore.Release%2A&gt;</ph>, un <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>For a list of initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class, see the <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException.%23ctor&gt;</ph> constructor.</source>
          <target state="translated">Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph>, consultez le constructeur <ph id="ph2">&lt;xref:System.Threading.SemaphoreFullException.%23ctor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The following code example shows how a programming error in one thread can lead to a <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> in another thread: Two threads enter a semaphore.</source>
          <target state="translated">L’exemple de code suivant montre comment une erreur de programmation dans un thread peut entraîner un <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> dans un autre thread : deux threads entrent dans un sémaphore.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>The second thread releases the semaphore twice, while the first thread is still executing its task.</source>
          <target state="translated">Le deuxième thread libère le sémaphore à deux reprises, tandis que le premier thread continue d’exécuter sa tâche.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.SemaphoreFullException">
          <source>When the first thread finishes and releases the semaphore, the semaphore count is already full and an exception is thrown.</source>
          <target state="translated">Lorsque le premier thread se termine et libère le sémaphore, le compteur du sémaphore est déjà complète et une exception est levée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Threading.SemaphoreFullException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with default values.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> avec des valeurs par défaut.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Adding the given count to the semaphore would cause it to exceed its maximum count."</source>
          <target state="translated">Ce constructeur initialise la <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> propriété de la nouvelle instance à un message système qui décrit l’erreur, telles que « L’ajout du nombre donné au sémaphore forcerait ce dernier à dépasser son nombre maximal autorisé ».</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">Ce message prend en compte la culture système en cours.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class.</source>
          <target state="translated">Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor">
          <source>The system-supplied error message string.</source>
          <target state="translated">La chaîne de message d’erreur fourni par le système.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> avec un message d'erreur spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is a text string intended to inform the user about the exception.</source>
          <target state="translated">Le contenu de <ph id="ph1">`message`</ph> est une chaîne de texte destinée à informer l’utilisateur sur l’exception.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture en cours du système.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of the <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> class initialized with this constructor.</source>
          <target state="translated">Le tableau suivant présente les valeurs de propriété initiales d’une instance de la <ph id="ph1">&lt;xref:System.Threading.SemaphoreFullException&gt;</ph> classe initialisée avec ce constructeur.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Property</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Value</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source><ph id="ph1">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String)">
          <source><ph id="ph1">`message`</ph>.</source>
          <target state="translated"><ph id="ph1">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object that holds the serialized object data about the exception being thrown.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> qui contient les données d’objet sérialisées relatives à l’exception levée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object that contains contextual information about the source or destination.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> qui contient les informations contextuelles sur la source ou la destination.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> avec des données sérialisées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">Ce constructeur est appelé lors de la désérialisation pour reconstituer l’objet exception transmis sur un flux.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sérialisation XML et SOAP<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Message d'erreur qui explique la raison de l'exception.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Exception ayant provoqué l'exception actuelle.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Si le paramètre <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> n’est pas <ph id="ph1">&lt;see langword="null" /&gt;</ph>, l’exception actuelle est levée dans un bloc <ph id="ph2">&lt;see langword="catch" /&gt;</ph> qui gère l’exception interne.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Threading.SemaphoreFullException" /&gt;</ph> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Une exception levée en conséquence directe d'une exception précédente doit contenir une référence à celle-ci dans la propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Threading.SemaphoreFullException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> retourne la même valeur que celle qui a été passée dans le constructeur ou retourne <ph id="ph2">`null`</ph> si la propriété <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> ne fournit pas la valeur d'exception interne au constructeur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>