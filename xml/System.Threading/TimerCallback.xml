<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="475bd-101">Objet contenant des informations spécifiques à l'application et concernant la méthode appelée par ce délégué, ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="475bd-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span></span></param>
    <summary><span data-ttu-id="475bd-102">Représente la méthode qui gère des appels d'un <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="475bd-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="475bd-103">Utilisez un `TimerCallback` délégué pour spécifier la méthode est appelée par un <xref:System.Threading.Timer>.</span><span class="sxs-lookup"><span data-stu-id="475bd-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="475bd-104">Cette méthode ne s’exécute pas dans le thread qui a créé la minuterie ; Il s’exécute dans un thread de pool de thread distinct est fourni par le système.</span><span class="sxs-lookup"><span data-stu-id="475bd-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="475bd-105">Le `TimerCallback` délégué appelle la méthode une fois après l’échéance de démarrage et continue à appeler une fois par intervalle de minuterie jusqu'à ce que le <xref:System.Threading.Timer.Dispose%2A> méthode est appelée, ou jusqu'à ce que le <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> méthode est appelée avec la valeur d’intervalle <xref:System.Threading.Timeout.Infinite>.</span><span class="sxs-lookup"><span data-stu-id="475bd-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="475bd-106">Rappels peuvent se produire après la <xref:System.Threading.Timer.Dispose> surcharge de méthode a été appelée, car le minuteur de files d’attente des rappels pour l’exécution par les threads du pool.</span><span class="sxs-lookup"><span data-stu-id="475bd-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="475bd-107">Vous pouvez utiliser la <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> la surcharge de méthode pour attendre que tous les rappels.</span><span class="sxs-lookup"><span data-stu-id="475bd-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="475bd-108">Le délégué de la minuterie est spécifié lors de la minuterie est construite et ne peut pas être modifiée.</span><span class="sxs-lookup"><span data-stu-id="475bd-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="475bd-109">L’heure de début pour un `Timer` est passé dans le `dueTime` paramètre de la `Timer` constructeurs et la période est passé dans le `period` paramètre.</span><span class="sxs-lookup"><span data-stu-id="475bd-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="475bd-110">Pour obtenir un exemple qui illustre la création et utilisation d’un `TimerCallback` délégué, consultez <xref:System.Threading.Timer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="475bd-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="475bd-111">L’exemple de code suivant montre comment créer le délégué utilisé avec la `Timer` classe.</span><span class="sxs-lookup"><span data-stu-id="475bd-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>