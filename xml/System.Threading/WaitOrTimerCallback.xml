<Type Name="WaitOrTimerCallback" FullName="System.Threading.WaitOrTimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="289e1b5b821956cddb25a0678cc80180a46e2875" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48724832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitOrTimerCallback(object state, bool timedOut);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitOrTimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitOrTimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitOrTimerCallback(System::Object ^ state, bool timedOut);" />
  <TypeSignature Language="F#" Value="type WaitOrTimerCallback = delegate of obj * bool -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
    <Parameter Name="timedOut" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="c153f-101">Objet contenant les informations que la méthode de rappel doit utiliser à chacune de ses exécutions.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c153f-101">An object containing information to be used by the callback method each time it executes.</span>
      </span>
    </param>
    <param name="timedOut">
      <span data-ttu-id="c153f-102">
        <see langword="true" /> si le <see cref="T:System.Threading.WaitHandle" /> a expiré ; <see langword="false" /> s'il a été signalé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c153f-102">
          <see langword="true" /> if the <see cref="T:System.Threading.WaitHandle" /> timed out; <see langword="false" /> if it was signaled.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="c153f-103">Représente une méthode à appeler lorsqu'un <see cref="T:System.Threading.WaitHandle" /> est signalé ou expire.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c153f-103">Represents a method to be called when a <see cref="T:System.Threading.WaitHandle" /> is signaled or times out.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c153f-104"><xref:System.Threading.WaitOrTimerCallback> représente une méthode de rappel à exécuter lorsqu’un handle d’attente inscrit expire ou est signalé.</span><span class="sxs-lookup"><span data-stu-id="c153f-104"><xref:System.Threading.WaitOrTimerCallback> represents a callback method that you want to execute when a registered wait handle times out or is signaled.</span></span> <span data-ttu-id="c153f-105">Créer le délégué en passant votre méthode de rappel à la <xref:System.Threading.WaitOrTimerCallback> constructeur.</span><span class="sxs-lookup"><span data-stu-id="c153f-105">Create the delegate by passing your callback method to the <xref:System.Threading.WaitOrTimerCallback> constructor.</span></span> <span data-ttu-id="c153f-106">Votre méthode doit avoir la signature indiquée ici.</span><span class="sxs-lookup"><span data-stu-id="c153f-106">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="c153f-107">Créez le handle d’attente inscrit en passant le <xref:System.Threading.WaitOrTimerCallback> déléguer et un <xref:System.Threading.WaitHandle> à <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c153f-107">Create the registered wait handle by passing the <xref:System.Threading.WaitOrTimerCallback> delegate and a <xref:System.Threading.WaitHandle> to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c153f-108">Votre méthode de rappel s’exécute chaque fois que le <xref:System.Threading.WaitHandle> arrive à expiration ou est signalé.</span><span class="sxs-lookup"><span data-stu-id="c153f-108">Your callback method executes each time the <xref:System.Threading.WaitHandle> times out or is signaled.</span></span>  
  
  
> [!NOTE]
>  <span data-ttu-id="c153f-109">Les utilisateurs de Visual Basic peuvent omettre le <xref:System.Threading.WaitOrTimerCallback> constructeur et utiliser simplement le `AddressOf` opérateur lors du passage de la méthode de rappel à <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="c153f-109">Visual Basic users can omit the <xref:System.Threading.WaitOrTimerCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span></span> <span data-ttu-id="c153f-110">Visual Basic appelle automatiquement le constructeur délégué approprié.</span><span class="sxs-lookup"><span data-stu-id="c153f-110">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="c153f-111">Si vous souhaitez transmettre des informations à votre méthode de rappel, créez un objet qui contient les informations nécessaires et transmettez-le à <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> lorsque vous créez le handle d’attente inscrite.</span><span class="sxs-lookup"><span data-stu-id="c153f-111">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> when you create the registered wait handle.</span></span> <span data-ttu-id="c153f-112">Chaque fois que votre méthode de rappel s’exécute, le `state` paramètre contient cet objet.</span><span class="sxs-lookup"><span data-stu-id="c153f-112">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="c153f-113">Pour plus d’informations sur l’utilisation de méthodes de rappel pour synchroniser les threads du pool, consultez [le pool de threads managés](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="c153f-113">For more information about using callback methods to synchronize thread pool threads, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c153f-114">L’exemple suivant montre comment utiliser le <xref:System.Threading.WaitOrTimerCallback> délégué pour représenter une méthode de rappel qui est exécutée lorsqu’un handle d’attente est signalé.</span><span class="sxs-lookup"><span data-stu-id="c153f-114">The following example shows how to use the <xref:System.Threading.WaitOrTimerCallback> delegate to represent a callback method that is executed when a wait handle is signaled.</span></span>  
  
 <span data-ttu-id="c153f-115">L’exemple montre également comment utiliser le <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> méthode à exécuter une méthode de rappel spécifiée lorsqu’un handle d’attente spécifié est signalé.</span><span class="sxs-lookup"><span data-stu-id="c153f-115">The example also shows how to use the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method to execute a specified callback method when a specified wait handle is signaled.</span></span> <span data-ttu-id="c153f-116">Dans cet exemple, la méthode de rappel est `WaitProc` et le handle d’attente est un <xref:System.Threading.AutoResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="c153f-116">In this example, the callback method is `WaitProc` and the wait handle is an <xref:System.Threading.AutoResetEvent>.</span></span>  
  
 <span data-ttu-id="c153f-117">L’exemple définit un `TaskInfo` classe pour contenir les informations qui sont passées au rappel lors de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c153f-117">The example defines a `TaskInfo` class to hold the information that is passed to the callback when it executes.</span></span> <span data-ttu-id="c153f-118">L’exemple crée un `TaskInfo` de l’objet et lui assigne des données de chaîne.</span><span class="sxs-lookup"><span data-stu-id="c153f-118">The example creates a `TaskInfo` object and assigns it some string data.</span></span> <span data-ttu-id="c153f-119">Le <xref:System.Threading.RegisteredWaitHandle> qui est retourné par la <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> méthode est attribuée à la `Handle` champ la `TaskInfo` de l’objet, afin que la méthode de rappel a accès à la <xref:System.Threading.RegisteredWaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="c153f-119">The <xref:System.Threading.RegisteredWaitHandle> that is returned by the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method is assigned to the `Handle` field of the `TaskInfo` object, so that the callback method has access to the <xref:System.Threading.RegisteredWaitHandle>.</span></span>  
  
 <span data-ttu-id="c153f-120">En plus de la `TaskInfo` objet, l’appel à la <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> méthode spécifie le <xref:System.Threading.AutoResetEvent> attend la tâche, un <xref:System.Threading.WaitOrTimerCallback> délégué qui représente le `WaitProc` méthode de rappel, un intervalle de délai d’attente d’une seconde et plusieurs rappels .</span><span class="sxs-lookup"><span data-stu-id="c153f-120">In addition to the `TaskInfo` object, the call to the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method specifies the <xref:System.Threading.AutoResetEvent> the task waits on, a <xref:System.Threading.WaitOrTimerCallback> delegate that represents the `WaitProc` callback method, a one-second timeout interval, and multiple callbacks.</span></span>  
  
 <span data-ttu-id="c153f-121">Lorsque le thread principal signale le <xref:System.Threading.AutoResetEvent> en appelant son <xref:System.Threading.EventWaitHandle.Set%2A> (méthode), le <xref:System.Threading.WaitOrTimerCallback> délégué est appelé.</span><span class="sxs-lookup"><span data-stu-id="c153f-121">When the main thread signals the <xref:System.Threading.AutoResetEvent> by calling its <xref:System.Threading.EventWaitHandle.Set%2A> method, the <xref:System.Threading.WaitOrTimerCallback> delegate is invoked.</span></span> <span data-ttu-id="c153f-122">Le `WaitProc` méthode tests <xref:System.Threading.RegisteredWaitHandle> pour déterminer si un délai d’expiration s’est produite.</span><span class="sxs-lookup"><span data-stu-id="c153f-122">The `WaitProc` method tests <xref:System.Threading.RegisteredWaitHandle> to determine whether a timeout occurred.</span></span> <span data-ttu-id="c153f-123">Si le rappel a été appelé parce que le handle d’attente a été signalé, le `WaitProc` annule l’inscription de la méthode le <xref:System.Threading.RegisteredWaitHandle>, l’arrêt du rappels.</span><span class="sxs-lookup"><span data-stu-id="c153f-123">If the callback was invoked because the wait handle was signaled, the `WaitProc` method unregisters the <xref:System.Threading.RegisteredWaitHandle>, stopping further callbacks.</span></span> <span data-ttu-id="c153f-124">Dans le cas d’un délai d’expiration, la tâche continue à attendre.</span><span class="sxs-lookup"><span data-stu-id="c153f-124">In the case of a timeout, the task continues waiting.</span></span> <span data-ttu-id="c153f-125">Le `WaitProc` méthode se termine en affichant un message à la console.</span><span class="sxs-lookup"><span data-stu-id="c153f-125">The `WaitProc` method ends by printing a message to the console.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">
      <span data-ttu-id="c153f-126">Threads et threading</span>
      <span class="sxs-lookup">
        <span data-stu-id="c153f-126">Threads and Threading</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md">
      <span data-ttu-id="c153f-127">Le pool de threads managés</span>
      <span class="sxs-lookup">
        <span data-stu-id="c153f-127">The managed thread pool</span>
      </span>
    </related>
  </Docs>
</Type>