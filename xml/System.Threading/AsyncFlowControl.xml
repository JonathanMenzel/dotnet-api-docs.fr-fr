<Type Name="AsyncFlowControl" FullName="System.Threading.AsyncFlowControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e6dae693cd1ac3ea4d8fb159e78d5e7190097d98" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct AsyncFlowControl : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AsyncFlowControl extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AsyncFlowControl" />
  <TypeSignature Language="VB.NET" Value="Public Structure AsyncFlowControl&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class AsyncFlowControl : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="36169-101">Fournit les fonctionnalités pour restaurer la migration, ou le flux, du contexte d'exécution entre threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36169-101">Provides the functionality to restore the migration, or flow, of the execution context between threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36169-102">Un contexte d’exécution contient toutes les informations liées à l’exécution d’un thread logique.</span><span class="sxs-lookup"><span data-stu-id="36169-102">An execution context contains all execution-related information for a logical thread.</span></span> <span data-ttu-id="36169-103">Le flux du contexte d’exécution vers d’autres threads peut être évité à l’aide de la <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> (méthode), qui retourne un <xref:System.Threading.AsyncFlowControl> structure.</span><span class="sxs-lookup"><span data-stu-id="36169-103">The flow of the execution context to other threads can be prevented by using the <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method, which returns an <xref:System.Threading.AsyncFlowControl> structure.</span></span> <span data-ttu-id="36169-104">Le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode retourné <xref:System.Threading.AsyncFlowControl> structure peut être utilisée pour annuler la suppression du flux.</span><span class="sxs-lookup"><span data-stu-id="36169-104">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the returned <xref:System.Threading.AsyncFlowControl> structure can be used to undo the flow suppression.</span></span> <span data-ttu-id="36169-105">Le <xref:System.Threading.AsyncFlowControl> structure doit être utilisée sur le même thread que celui sur lequel il a été créé.</span><span class="sxs-lookup"><span data-stu-id="36169-105">The <xref:System.Threading.AsyncFlowControl> structure must be used on the same thread on which it was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36169-106">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.AsyncFlowControl" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36169-107">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="36169-107">Call `Dispose` when you are finished using the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="36169-108">La méthode `Dispose` rend le <xref:System.Threading.AsyncFlowControl> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="36169-108">The `Dispose` method leaves the <xref:System.Threading.AsyncFlowControl> in an unusable state.</span></span> <span data-ttu-id="36169-109">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.Threading.AsyncFlowControl> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Threading.AsyncFlowControl> occupée.</span><span class="sxs-lookup"><span data-stu-id="36169-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.AsyncFlowControl> so the garbage collector can reclaim the memory that the <xref:System.Threading.AsyncFlowControl> was occupying.</span></span>  
  
 <span data-ttu-id="36169-110">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="36169-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="36169-111">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.Threading.AsyncFlowControl>.</span><span class="sxs-lookup"><span data-stu-id="36169-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.AsyncFlowControl>.</span></span> <span data-ttu-id="36169-112">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Threading.AsyncFlowControl> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="36169-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.AsyncFlowControl> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36169-113">La structure <see cref="T:System.Threading.AsyncFlowControl" /> n'est pas utilisée sur le thread sur lequel elle a été créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-113">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span>
          </span>
          <span data-ttu-id="36169-114">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-114">-or-</span>
          </span>
          <span data-ttu-id="36169-115">La structure <see cref="T:System.Threading.AsyncFlowControl" /> a déjà été utilisée pour appeler <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> ou <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-115">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36169-116">Détermine si deux instances sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-116">Determines whether two instances are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36169-117">Objet à comparer avec la structure actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-117">An object to compare with the current structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36169-118">Détermine si l'objet spécifié est égal à la structure <see cref="T:System.Threading.AsyncFlowControl" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-118">Determines whether the specified object is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36169-119">
            <see langword="true" /> si <paramref name="obj" /> est une structure <see cref="T:System.Threading.AsyncFlowControl" /> et si elle est égale à la structure <see cref="T:System.Threading.AsyncFlowControl" /> en cours ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-119">
              <see langword="true" /> if <paramref name="obj" /> is an <see cref="T:System.Threading.AsyncFlowControl" /> structure and is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.AsyncFlowControl obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Threading.AsyncFlowControl obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Threading::AsyncFlowControl obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="36169-120">Structure <see cref="T:System.Threading.AsyncFlowControl" /> à comparer à la structure en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-120">An <see cref="T:System.Threading.AsyncFlowControl" /> structure to compare with the current structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36169-121">Détermine si la structure <see cref="T:System.Threading.AsyncFlowControl" /> spécifiée est égale à la structure <see cref="T:System.Threading.AsyncFlowControl" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-121">Determines whether the specified <see cref="T:System.Threading.AsyncFlowControl" /> structure is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36169-122">
            <see langword="true" /> si <paramref name="obj" /> est égal à la structure <see cref="T:System.Threading.AsyncFlowControl" /> actuelle ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-122">
              <see langword="true" /> if <paramref name="obj" /> is equal to the current <see cref="T:System.Threading.AsyncFlowControl" /> structure; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36169-123">Obtient un code de hachage pour la structure <see cref="T:System.Threading.AsyncFlowControl" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-123">Gets a hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36169-124">Code de hachage pour la structure <see cref="T:System.Threading.AsyncFlowControl" /> actuelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-124">A hash code for the current <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="36169-125">Structure <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-125">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="36169-126">Structure <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-126">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36169-127">Compare deux structures <see cref="T:System.Threading.AsyncFlowControl" /> pour déterminer si elles sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-127">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36169-128">
            <see langword="true" /> si les deux structures sont égales ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-128">
              <see langword="true" /> if the two structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="36169-129">La méthode équivalente pour cet opérateur est <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="36169-129">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.AsyncFlowControl a, valuetype System.Threading.AsyncFlowControl b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As AsyncFlowControl, b As AsyncFlowControl) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::AsyncFlowControl a, System::Threading::AsyncFlowControl b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Threading.AsyncFlowControl" />
        <Parameter Name="b" Type="System.Threading.AsyncFlowControl" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="36169-130">Structure <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-130">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="36169-131">Structure <see cref="T:System.Threading.AsyncFlowControl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-131">An <see cref="T:System.Threading.AsyncFlowControl" /> structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36169-132">Compare deux structures <see cref="T:System.Threading.AsyncFlowControl" /> pour déterminer si elles sont inégales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-132">Compares two <see cref="T:System.Threading.AsyncFlowControl" /> structures to determine whether they are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36169-133">
            <see langword="true" /> si les structures ne sont pas égales ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-133">
              <see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="36169-134">La méthode équivalente pour cet opérateur est <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="36169-134">The equivalent method for this operator is <xref:System.Threading.AsyncFlowControl.Equals%28System.Threading.AsyncFlowControl%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public void Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AsyncFlowControl.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Sub Undo ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Undo();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36169-135">Restaure le flux du contexte d'exécution entre threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-135">Restores the flow of the execution context between threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36169-136">Le <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> méthode retourne un <xref:System.Threading.AsyncFlowControl> structure qui est utilisée pour restaurer le flux.</span><span class="sxs-lookup"><span data-stu-id="36169-136">The <xref:System.Threading.ExecutionContext.SuppressFlow%2A?displayProperty=nameWithType> method returns an <xref:System.Threading.AsyncFlowControl> structure that is used to restore the flow.</span></span>  
  
 <span data-ttu-id="36169-137">Le <xref:System.Threading.AsyncFlowControl.Undo%2A> méthode doit être appelée uniquement sur le <xref:System.Threading.AsyncFlowControl> structure retournée par qui lui est associée <xref:System.Threading.ExecutionContext.SuppressFlow%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="36169-137">The <xref:System.Threading.AsyncFlowControl.Undo%2A> method must be called only on the <xref:System.Threading.AsyncFlowControl> structure returned by its associated <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="36169-138">La structure <see cref="T:System.Threading.AsyncFlowControl" /> n'est pas utilisée sur le thread sur lequel elle a été créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-138">The <see cref="T:System.Threading.AsyncFlowControl" /> structure is not used on the thread where it was created.</span>
          </span>
          <span data-ttu-id="36169-139">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-139">-or-</span>
          </span>
          <span data-ttu-id="36169-140">La structure <see cref="T:System.Threading.AsyncFlowControl" /> a déjà été utilisée pour appeler <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> ou <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36169-140">The <see cref="T:System.Threading.AsyncFlowControl" /> structure has already been used to call <see cref="M:System.Threading.AsyncFlowControl.Dispose" /> or <see cref="M:System.Threading.AsyncFlowControl.Undo" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>