<Type Name="EnumeratorToEnumVariantMarshaler" FullName="System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f43bca4044b243b63ccd008d8c29e5ffaa057d6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EnumeratorToEnumVariantMarshaler : System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumeratorToEnumVariantMarshaler extends System.Object implements class System.Runtime.InteropServices.ICustomMarshaler" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumeratorToEnumVariantMarshaler&#xA;Implements ICustomMarshaler" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumeratorToEnumVariantMarshaler : System::Runtime::InteropServices::ICustomMarshaler" />
  <AssemblyInfo>
    <AssemblyName>CustomMarshalers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ICustomMarshaler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="65dec-101">Marshale l’interface <see langword="IEnumVARIANT" /> COM en interface <see cref="T:System.Collections.IEnumerator" /> .NET Framework, et inversement.</span>
      <span class="sxs-lookup">
        <span data-stu-id="65dec-101">Marshals the COM <see langword="IEnumVARIANT" /> interface to the .NET Framework <see cref="T:System.Collections.IEnumerator" /> interface, and vice versa.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-102">Ce marshaleur personnalisé marshale `IEnumVARIANT` à <xref:System.Collections.IEnumerator> et <xref:System.Collections.IEnumerator> à `IEnumVARIANT`.</span><span class="sxs-lookup"><span data-stu-id="65dec-102">This custom marshaler marshals `IEnumVARIANT` to <xref:System.Collections.IEnumerator> and marshals <xref:System.Collections.IEnumerator> to `IEnumVARIANT`.</span></span> <span data-ttu-id="65dec-103">Le CLR utilise automatiquement cette classe pour lier des énumérateurs COM et des énumérateurs .NET.</span><span class="sxs-lookup"><span data-stu-id="65dec-103">The CLR automatically uses this class to bridge COM enumerators and .NET enumerators.</span></span> <span data-ttu-id="65dec-104">Le <xref:System.Collections.IEnumerator> type retourné par la <xref:System.Collections.IEnumerable.GetEnumerator%2A> méthode dans la classe COM importée utilise `EnumeratorToEnumVariantMarshaler` pour mapper les appels à la `IEnumVARIANT` pointeur d’interface retourné par le membre de l’objet COM avec un DISPID de -4.</span><span class="sxs-lookup"><span data-stu-id="65dec-104">The <xref:System.Collections.IEnumerator> type returned by the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method in the imported COM class uses `EnumeratorToEnumVariantMarshaler` to map the calls to the `IEnumVARIANT` interface pointer returned by the COM object's member with a DISPID of -4.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CleanUpManagedData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpManagedData (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpManagedData(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpManagedData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpManagedData (pManagedObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpManagedData(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="65dec-105">Objet managé à détruire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-105">The managed object to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65dec-106">Effectue le nettoyage des données managées quand elles ne sont plus nécessaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-106">Performs necessary cleanup of the managed data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-107">Le CLR appelle cette méthode pour nettoyer les données managées allouées dans le <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="65dec-107">The CLR calls this method to clean up managed data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CleanUpNativeData">
      <MemberSignature Language="C#" Value="public virtual void CleanUpNativeData (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CleanUpNativeData(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.CleanUpNativeData(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CleanUpNativeData (pNativeData As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CleanUpNativeData(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="65dec-108">Pointeur vers les données non managées à détruire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-108">A pointer to the unmanaged data to be destroyed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65dec-109">Effectue le nettoyage des données non managées quand elles ne sont plus nécessaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-109">Performs necessary cleanup of the unmanaged data when it is no longer needed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-110">Le CLR appelle cette méthode pour nettoyer les données non managées allouées dans le <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="65dec-110">The CLR calls this method to clean up the unmanaged data allocated in the <xref:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.InteropServices.ICustomMarshaler GetInstance (string pstrCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.InteropServices.ICustomMarshaler GetInstance(string pstrCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (pstrCookie As String) As ICustomMarshaler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::InteropServices::ICustomMarshaler ^ GetInstance(System::String ^ pstrCookie);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ICustomMarshaler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstrCookie" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pstrCookie">
          <span data-ttu-id="65dec-111">Paramètre « cookie » de type chaîne qui peut être utilisé par le marshaleur personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-111">String "cookie" parameter that can be used by the custom marshaler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65dec-112">Retourne une instance du marshaleur personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-112">Returns an instance of the custom marshaler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65dec-113">Instance du marshaleur personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-113">An instance of the custom marshaler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-114">Tous les marshaleurs personnalisés doivent implémenter cette méthode, même s’il n’est pas dans le cadre de la <xref:System.Runtime.InteropServices.ICustomMarshaler> définition d’interface.</span><span class="sxs-lookup"><span data-stu-id="65dec-114">All custom marshalers must implement this method, although it is not part of the <xref:System.Runtime.InteropServices.ICustomMarshaler> interface definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNativeDataSize">
      <MemberSignature Language="C#" Value="public virtual int GetNativeDataSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNativeDataSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.GetNativeDataSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNativeDataSize () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetNativeDataSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="65dec-115">Retourne la taille en octets des données non managées à marshaler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-115">Returns the size in bytes of the unmanaged data to be marshaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65dec-116">-1 pour indiquer que le type géré par ce marshaleur n’est pas un type valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-116">-1 to indicate the type this marshaler handles is not a value type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-117">Étant donné que le marshaling personnalisé de types valeur n’est pas pris en charge dans le .NET Framework, cette méthode retourne toujours -1.</span><span class="sxs-lookup"><span data-stu-id="65dec-117">Because custom marshaling of value types is not supported in the .NET Framework, this method always returns -1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarshalManagedToNative">
      <MemberSignature Language="C#" Value="public virtual IntPtr MarshalManagedToNative (object pManagedObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int MarshalManagedToNative(object pManagedObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalManagedToNative(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalManagedToNative (pManagedObj As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr MarshalManagedToNative(System::Object ^ pManagedObj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pManagedObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pManagedObj">
          <span data-ttu-id="65dec-118">Objet managé à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-118">The managed object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65dec-119">Marshale un objet de code managé en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-119">Marshals an object from managed code to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65dec-120">Pointeur vers l’objet non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-120">A pointer to the unmanaged object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-121">Le CLR appelle cette méthode avec l’instance spécifiée d’un objet managé pour convertir cet objet à partir du code managé au code non managé, et il retourne un pointeur vers l’objet non managé approprié, qui représente la vue COM de cet objet.</span><span class="sxs-lookup"><span data-stu-id="65dec-121">The CLR calls this method with the specified instance of a managed object to convert that object from managed code to unmanaged code, and it returns a pointer to the appropriate unmanaged object, representing the COM view of that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65dec-122">
            <paramref name="pManagedObj" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-122">
              <paramref name="pManagedObj" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MarshalNativeToManaged">
      <MemberSignature Language="C#" Value="public virtual object MarshalNativeToManaged (IntPtr pNativeData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object MarshalNativeToManaged(native int pNativeData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.CustomMarshalers.EnumeratorToEnumVariantMarshaler.MarshalNativeToManaged(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MarshalNativeToManaged (pNativeData As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ MarshalNativeToManaged(IntPtr pNativeData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CustomMarshalers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pNativeData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pNativeData">
          <span data-ttu-id="65dec-123">Pointeur vers l’objet non managé à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-123">A pointer to the unmanaged object to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="65dec-124">Marshale un objet de code non managé en code managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-124">Marshals an object from unmanaged code to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="65dec-125">Objet managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-125">A managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65dec-126">Le CLR appelle cette méthode avec le pointeur spécifié vers un objet non managé pour convertir cet objet à partir de code non managé au code managé et retourne un objet managé qui représente la vue managée des données non managées.</span><span class="sxs-lookup"><span data-stu-id="65dec-126">The CLR calls this method with the specified pointer to an unmanaged object to convert that object from unmanaged code to managed code, and returns a managed object representing the managed view of the unmanaged data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="65dec-127">
            <paramref name="pNativeData" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-127">
              <paramref name="pNativeData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="65dec-128">L’objet non managé vers lequel <paramref name="pNativeData" /> pointe n’a pas pu être converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="65dec-128">The unmanaged object that <paramref name="pNativeData" /> points to could not be converted.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>