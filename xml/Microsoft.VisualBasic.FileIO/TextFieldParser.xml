<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TextFieldParser.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac534fefd8e673d5edb9c2fb81e0c3d6c92c4fe6c0b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34fefd8e673d5edb9c2fb81e0c3d6c92c4fe6c0b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Provides methods and properties for parsing structured text files.</source>
          <target state="translated">Fournit des méthodes et des propriétés pour analyser des fichiers texte structurés.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The <ph id="ph1">`TextFieldParser`</ph> object provides methods and properties for parsing structured text files.</source>
          <target state="translated">Le <ph id="ph1">`TextFieldParser`</ph> objet fournit des méthodes et propriétés pour analyser les fichiers texte structurés.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Parsing a text file with the <ph id="ph1">`TextFieldParser`</ph> is similar to iterating over a text file, while the <ph id="ph2">`ReadFields`</ph> method to extract fields of text is similar to splitting the strings.</source>
          <target state="translated">Analyser un fichier texte avec le <ph id="ph1">`TextFieldParser`</ph> est similaire à un fichier texte, une itération pendant la <ph id="ph2">`ReadFields`</ph> méthode pour extraire des champs de texte correspond à fractionner les chaînes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The <ph id="ph1">`TextFieldParser`</ph> can parse two types of files: delimited or fixed-width.</source>
          <target state="translated">Le <ph id="ph1">`TextFieldParser`</ph> peut analyser deux types de fichiers : délimité ou à largeur fixe.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Some properties, such as <ph id="ph1">`Delimiters`</ph> and <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> are meaningful only when working with delimited files, while the <ph id="ph3">`FieldWidths`</ph> property is meaningful only when working with fixed-width files.</source>
          <target state="translated">Certaines propriétés, telles que <ph id="ph1">`Delimiters`</ph> et <ph id="ph2">`HasFieldsEnclosedInQuotes`</ph> sont significatives uniquement lorsque vous travaillez avec des fichiers délimités, alors que le <ph id="ph3">`FieldWidths`</ph> propriété n’est significative uniquement lorsque vous travaillez avec les fichiers de longueur fixe.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> object.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`Microsoft.VisualBasic.FileIO.TextFieldParser`</ph> objet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a delimited text file</source>
          <target state="translated">Lire à partir d’un fichier texte délimité</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Lire un fichier texte de largeur fixe</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Read from a text file with multiple formats</source>
          <target state="translated">Lire à partir d’un fichier texte avec plusieurs formats</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte avec plusieurs formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>This example parses through a tab-delimited text file, <ph id="ph1">`Bigfile`</ph>.</source>
          <target state="translated">Cet exemple analyse un fichier texte délimité, <ph id="ph1">`Bigfile`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>The stream to be parsed.</source>
          <target state="translated">Flux à analyser.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet pour analyser le fichier ou un flux qui est représenté par la <ph id="ph2">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> est <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">Il n'est pas possible de lire depuis <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> stream to be parsed.</source>
          <target state="translated">Flux <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> à analyser.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`reader`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet pour analyser le fichier ou un flux qui est représenté par la <ph id="ph2">`reader`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> est <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Chemin d'accès complet au fichier à analyser.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet à analyser le fichier spécifié par le <ph id="ph2">`path`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The stream to be parsed.</source>
          <target state="translated">Flux à analyser.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet pour analyser le fichier ou un flux qui est représenté par la <ph id="ph2">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">Il n'est pas possible de lire depuis <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Chemin d'accès complet au fichier à analyser.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet à analyser le fichier spécifié par le <ph id="ph2">`path`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ou <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> est <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The stream to be parsed.</source>
          <target state="translated">Flux à analyser.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indique s'il faut rechercher les marques d'ordre des octets au début du fichier.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet pour analyser le fichier ou un flux qui est représenté par la <ph id="ph2">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si le <ph id="ph1">`detectEncoding`</ph> paramètre est <ph id="ph2">`True`</ph>, ce constructeur essaie de détecter l’encodage en examinant les trois premiers octets du fichier ou du flux de données.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Il reconnaît automatiquement Unicode UTF-8, little-endian et big-endian Unicode texte si le fichier démarre avec les marques d’ordre d’octet appropriées.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">Dans le cas contraire, l’encodage spécifié par <ph id="ph1">`defaultEncoding`</ph> est utilisée.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">Il n'est pas possible de lire depuis <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>The complete path of the file to be parsed.</source>
          <target state="translated">Chemin d'accès complet au fichier à analyser.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indique s'il faut rechercher les marques d'ordre des octets au début du fichier.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file specified by the <ph id="ph2">`path`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet à analyser le fichier spécifié par le <ph id="ph2">`path`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si le <ph id="ph1">`detectEncoding`</ph> paramètre est <ph id="ph2">`True`</ph>, ce constructeur essaie de détecter l’encodage en examinant les trois premiers octets du fichier ou du flux de données.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Il reconnaît automatiquement Unicode UTF-8, little-endian et big-endian Unicode texte si le fichier démarre avec les marques d’ordre d’octet appropriées.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">Dans le cas contraire, l’encodage spécifié par <ph id="ph1">`defaultEncoding`</ph> est utilisée.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> est une chaîne vide ou <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> est <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>The stream to be parsed.</source>
          <target state="translated">Flux à analyser.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>The character encoding to use if encoding is not determined from file.</source>
          <target state="translated">Encodage de caractères à utiliser si l'encodage n'est pas déterminé à partir du fichier.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see cref="P:System.Text.Encoding.UTF8" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Indicates whether to look for byte order marks at the beginning of the file.</source>
          <target state="translated">Indique s'il faut rechercher les marques d'ordre des octets au début du fichier.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="True" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Indicates whether to leave <bpt id="p1">&lt;c&gt;</bpt>stream<ept id="p1">&lt;/c&gt;</ept> open when the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> object is closed.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>Indique si <ept id="p1">&lt;/c&gt;</ept> doit être laissé ouvert lorsque l’objet <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> est fermé.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Default is <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Creates a new <ph id="ph1">`TextFieldParser`</ph> object to parse the file or stream that is represented by the <ph id="ph2">`stream`</ph> parameter.</source>
          <target state="translated">Crée un nouveau <ph id="ph1">`TextFieldParser`</ph> objet pour analyser le fichier ou un flux qui est représenté par la <ph id="ph2">`stream`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>If the <ph id="ph1">`detectEncoding`</ph> parameter is <ph id="ph2">`True`</ph>, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</source>
          <target state="translated">Si le <ph id="ph1">`detectEncoding`</ph> paramètre est <ph id="ph2">`True`</ph>, ce constructeur essaie de détecter l’encodage en examinant les trois premiers octets du fichier ou du flux de données.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</source>
          <target state="translated">Il reconnaît automatiquement Unicode UTF-8, little-endian et big-endian Unicode texte si le fichier démarre avec les marques d’ordre d’octet appropriées.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>Otherwise, the encoding specified by <ph id="ph1">`defaultEncoding`</ph> is used.</source>
          <target state="translated">Dans le cas contraire, l’encodage spécifié par <ph id="ph1">`defaultEncoding`</ph> est utilisée.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</source>
          <target state="translated">Lorsque vous compilez un jeu de caractères avec un paramètre de culture particulière et que vous récupérez ces mêmes caractères avec un paramètre de culture différent, les caractères ne peuvent pas être interprétés et peut provoquer une exception levée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> is <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="defaultEncoding" /&gt;</ph> a la valeur <ph id="ph3">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> cannot be read from.</source>
          <target state="translated">Il n'est pas possible de lire depuis <ph id="ph1">&lt;paramref name="stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
          <source>Closes the current <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Ferme l'objet <ph id="ph1">&lt;see langword="TextFieldParser" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
          <source>This example closes the <ph id="ph1">`TextFieldParser.FileReader`</ph>.</source>
          <target state="translated">Cet exemple ferme le <ph id="ph1">`TextFieldParser.FileReader`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>Defines comment tokens.</source>
          <target state="translated">Définit des jetons de commentaire.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</source>
          <target state="translated">Un jeton de commentaire est une chaîne qui, lorsqu'elle est placée au début d'une ligne, indique que la ligne est un commentaire et doit être ignorée par l'analyseur.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A string array that contains all of the comment tokens for the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Tableau de chaînes qui contient tous les jetons de commentaires pour l'objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le <bpt id="p1">**</bpt>tous les<ept id="p1">**</ept> onglet.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>Zero-length comment tokens are ignored.</source>
          <target state="translated">Les jetons de commentaire de longueur nulle sont ignorés.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>This example specifies that for the <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph> lines beginning with a single quotation mark (') should be ignored.</source>
          <target state="translated">Cet exemple spécifie que pour les <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph> les lignes commençant par un guillemet simple (') doivent être ignorées.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
          <source>A comment token includes white space.</source>
          <target state="translated">Un jeton de commentaire contient un espace blanc.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Defines the delimiters for a text file.</source>
          <target state="translated">Définit les séparateurs pour un fichier texte.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>A string array that contains all of the field delimiters for the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Tableau de chaînes qui contient tous séparateurs de champs pour l'objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>This property is meaningful only if the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id="ph2">`FieldType.Delimited`</ph>.</source>
          <target state="translated">Cette propriété est significative uniquement si la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> est définie sur <ph id="ph2">`FieldType.Delimited`</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Defining the delimiters for a text file can also be accomplished with the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</ph> method.</source>
          <target state="translated">Définir les délimiteurs d’un fichier texte peut également être effectué avec la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>The following table lists an example of a task involving the <ph id="ph1">`Delimiters`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie un exemple de tâche impliquant la <ph id="ph1">`Delimiters`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>Read from a delimited text file</source>
          <target state="translated">Lire à partir d’un fichier texte délimité</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>This example specifies that the delimiter for the <ph id="ph1">`TextFieldParser`</ph> object, <ph id="ph2">`FileReader`</ph>, is a comma (,).</source>
          <target state="translated">Cet exemple spécifie que le délimiteur pour les <ph id="ph1">`TextFieldParser`</ph> objet, <ph id="ph2">`FileReader`</ph>, est une virgule (,).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
          <source>A delimiter value is set to a newline character, an empty string, or <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>.</source>
          <target state="translated">Une valeur de séparateur est un caractère de saut de ligne, une chaîne vide ou <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources utilisées par l’objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources utilisées par l’objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source>Boolean.</source>
          <target state="translated">Propriété booléenne.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> releases both managed and unmanaged resources; <ph id="ph2">&lt;see langword="False" /&gt;</ph> releases only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> libère les ressources managées et non managées ; <ph id="ph2">&lt;see langword="False" /&gt;</ph> libère uniquement les ressources non managées.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object.</source>
          <target state="translated">Libère les ressources utilisées par l’objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Returns <ph id="ph1">&lt;see langword="True" /&gt;</ph> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</source>
          <target state="translated">Retourne <ph id="ph1">&lt;see langword="True" /&gt;</ph> s'il n'y a aucune ligne non vide, sans commentaire, entre la position actuelle du curseur et la fin du fichier.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if there is no more data to read; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> s'il n'y a plus de données à lire ; sinon, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>This property can be used when reading from files to determine the end of the data being read.</source>
          <target state="translated">Cette propriété peut être utilisée lors de la lecture à partir de fichiers pour déterminer la fin des données en cours de lecture.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`EndOfData`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`EndOfData`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Read from a delimited file</source>
          <target state="translated">Lire à partir d’un fichier délimité</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>Read from a fixed-width file</source>
          <target state="translated">Lire à partir d’un fichier de longueur fixe</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
          <source>This example uses the <ph id="ph1">`EndofData`</ph> property to loop through all the fields in the file with the <ph id="ph2">`TextFieldReader`</ph>, <ph id="ph3">`FileReader`</ph>.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`EndofData`</ph> propriété pour parcourir tous les champs dans le fichier avec le <ph id="ph2">`TextFieldReader`</ph>, <ph id="ph3">`FileReader`</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Returns the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Retourne la ligne qui a provoqué l'exception <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> la plus récente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Ligne qui a provoqué l'exception <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> la plus récente.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>If no <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, an empty string is returned.</source>
          <target state="translated">Si aucun <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions ont été levées, une chaîne vide est retournée.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</ph> property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A&gt;</ph> propriété peut être utilisée pour afficher le numéro de la ligne qui a provoqué l’exception.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLine`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`ErrorLine`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Read from a delimited file</source>
          <target state="translated">Lire à partir d’un fichier délimité</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>Read from a fixed-width file</source>
          <target state="translated">Lire à partir d’un fichier de longueur fixe</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
          <source>This example uses the <ph id="ph1">`ErrorLine`</ph> property to display the line causing the current <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`ErrorLine`</ph> propriété pour afficher la ligne qui provoque l’actuel <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Returns the number of the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Retourne le numéro de la ligne qui a provoqué l'exception <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> la plus récente.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The number of the line that caused the most recent <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> exception.</source>
          <target state="translated">Numéro de la ligne qui a provoqué l'exception <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /&gt;</ph> la plus récente.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>If no <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions have been thrown, -1 is returned.</source>
          <target state="translated">Si aucun <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exceptions ont été levées, -1 est retourné.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> property can be used to display the number of the line that caused the exception.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A&gt;</ph> propriété peut être utilisée pour afficher le numéro de la ligne qui a provoqué l’exception.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">Lignes vides et les commentaires ne sont pas ignorés lors de la détermination du numéro de ligne.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ErrorLineNumber`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`ErrorLineNumber`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Read from a delimited file</source>
          <target state="translated">Lire à partir d’un fichier délimité</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>Read from a fixed-width file</source>
          <target state="translated">Lire à partir d’un fichier de longueur fixe</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
          <source>This example uses the <ph id="ph1">`ErrorLineNumber`</ph> property to display the location of the line causing the current <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`ErrorLineNumber`</ph> propriété pour afficher l’emplacement de la ligne qui provoque l’actuel <ph id="ph2">&lt;xref:Microsoft.VisualBasic.FileIO.MalformedLineException&gt;</ph> exception.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>Denotes the width of each column in the text file being parsed.</source>
          <target state="translated">Désigne la largeur de chaque colonne du fichier texte en cours d'analyse.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>An integer array that contains the width of each column in the text file that is being parsed.</source>
          <target state="translated">Tableau d'entiers qui contient la largeur de chaque colonne dans le fichier texte en cours d'analyse.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>This property is meaningful only if the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> property is set to <ph id="ph2">`FieldType.FixedWidth`</ph>.</source>
          <target state="translated">Cette propriété est significative uniquement si la <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A&gt;</ph> est définie sur <ph id="ph2">`FieldType.FixedWidth`</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</source>
          <target state="translated">Si la dernière entrée du tableau est inférieure ou égale à zéro, le champ est supposé pour être de largeur variable.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>The <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</ph> method can also be used to set field widths.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A&gt;</ph> méthode peut également être utilisée pour définir des largeurs de champ.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`FieldWidths`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`FieldWidths`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Lire un fichier texte de largeur fixe</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>This example reads the file <ph id="ph1">`ParserText.txt`</ph>, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</source>
          <target state="translated">Cet exemple lit le fichier <ph id="ph1">`ParserText.txt`</ph>, en spécifiant les largeurs ; la première colonne est de 5 caractères, la deuxième de 10, la troisième de 11 et la quatrième a une largeur variable</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
          <source>A width value in any location other than the last entry of the array is less than or equal to zero.</source>
          <target state="translated">Une valeur de largeur dans un emplacement autre que la dernière entrée du tableau est inférieure ou égale à zéro.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Permet à l'objet <ph id="ph1">&lt;see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /&gt;</ph> de tenter de libérer des ressources et d'effectuer d'autres opérations de nettoyage avant d'être récupéré par l'opération garbage collection.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</source>
          <target state="translated">Indique si les champs sont placés entre guillemets lorsqu'un fichier délimité est analysé.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if fields are enclosed in quotation marks; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si les champs sont placés entre guillemets ; sinon, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le <bpt id="p1">**</bpt>tous les<ept id="p1">**</ept> onglet.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>If the property is <ph id="ph1">`True`</ph>, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</source>
          <target state="translated">Si la propriété est <ph id="ph1">`True`</ph>, l’analyseur suppose que les champs sont placés entre guillemets (« ») et peuvent contenir des fins de ligne.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>If a field is enclosed in quotation marks, for example, <ph id="ph1">`abc, "field2a,field2b", field3`</ph> and this property is <ph id="ph2">`True`</ph>, then all text enclosed in quotation marks will be returned as is; this example would return <ph id="ph3">`abc|field2a,field2b|field3`</ph>.</source>
          <target state="translated">Si un champ est placé entre guillemets, par exemple, <ph id="ph1">`abc, "field2a,field2b", field3`</ph> et cette propriété est <ph id="ph2">`True`</ph>, puis tout le texte entourée guillemets sera renvoyé telle quelle ; cet exemple retourne <ph id="ph3">`abc|field2a,field2b|field3`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>Setting this property to <ph id="ph1">`False`</ph> would make this example return <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>.</source>
          <target state="translated">Si cette propriété <ph id="ph1">`False`</ph> que cet exemple retourne <ph id="ph2">`abc|"field2a|field2b"|field3`</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
          <source>This example sets the <ph id="ph1">`HasFieldsEnclosedInQuotes`</ph> property to <ph id="ph2">`True`</ph> for <ph id="ph3">`myReader`</ph>.</source>
          <target state="translated">Cet exemple définit le <ph id="ph1">`HasFieldsEnclosedInQuotes`</ph> propriété <ph id="ph2">`True`</ph> pour <ph id="ph3">`myReader`</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>Returns the current line number, or returns -1 if no more characters are available in the stream.</source>
          <target state="translated">Retourne le nombre de lignes en cours, ou retourne -1 si aucun caractère n'est disponible dans le flux.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>The current line number.</source>
          <target state="translated">Numéro de ligne active.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le <bpt id="p1">**</bpt>tous les<ept id="p1">**</ept> onglet.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>Blank lines and comments are not ignored when determining the line number.</source>
          <target state="translated">Lignes vides et les commentaires ne sont pas ignorés lors de la détermination du numéro de ligne.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
          <source>This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</source>
          <target state="translated">Cet exemple recherche le nom « Jones » dans le fichier texte et indique la ligne où il se trouve.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Number of characters to read.</source>
          <target state="translated">Nombre de caractères à lire.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Required.</source>
          <target state="translated">Obligatoire.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Reads the specified number of characters without advancing the cursor.</source>
          <target state="translated">Lit le nombre spécifié de caractères sans avancer le curseur.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>A string that contains the specified number of characters read.</source>
          <target state="translated">Chaîne qui contient le nombre spécifié de caractères à lire.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The <ph id="ph1">`numberOfChars`</ph> value must be less than the total number of characters in the line.</source>
          <target state="translated">Le <ph id="ph1">`numberOfChars`</ph> valeur doit être inférieur au nombre total de caractères dans la ligne.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>If it is not, the string returned by <ph id="ph1">`PeekChars`</ph> will be truncated to the length of the line.</source>
          <target state="translated">Si elle n’est pas le cas, la chaîne retournée par <ph id="ph1">`PeekChars`</ph> sera tronquée à la longueur de la ligne.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Blank lines are ignored.</source>
          <target state="translated">Les lignes vides sont ignorées.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>End-of-line characters are not returned.</source>
          <target state="translated">Caractères de fin de ligne ne sont pas retournés.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The <ph id="ph1">`PeekChars`</ph> method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated">Le <ph id="ph1">`PeekChars`</ph> méthode n’effectue aucune analyse ; un caractère de fin de ligne dans un champ délimité est interprété comme la fin de la ligne.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`PeekChars`</ph> method.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`PeekChars`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>Determine the format of a field before parsing it</source>
          <target state="translated">Déterminer le format d’un champ avant de l’analyser</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte avec plusieurs formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source>This example uses <ph id="ph1">`PeekChars`</ph> to find the end of the data and stop parsing the file at that point.</source>
          <target state="translated">Cet exemple utilise <ph id="ph1">`PeekChars`</ph> pour rechercher la fin des données et arrêter l’analyse du fichier à ce stade.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="numberOfChars" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numberOfChars" /&gt;</ph> est inférieur à 0.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</source>
          <target state="translated">Lit tous les champs sur la ligne active, les retourne sous la forme d'un tableau de chaînes et avance le curseur vers la ligne suivante contenant des données.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>An array of strings that contains field values for the current line.</source>
          <target state="translated">Tableau de chaînes qui contient les valeurs de champs pour la ligne active.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>In order to allow users to parse text files in multiple formats, the <ph id="ph1">`ReadFields`</ph> method examines the values of <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, and <ph id="ph4">`FieldWidths`</ph>, if they are specified, each time it is called.</source>
          <target state="translated">Pour permettre aux utilisateurs d’analyser les fichiers texte dans plusieurs formats, la <ph id="ph1">`ReadFields`</ph> méthode examine les valeurs de <ph id="ph2">`TextFieldType`</ph>, <ph id="ph3">`Delimiters`</ph>, et <ph id="ph4">`FieldWidths`</ph>, si elles sont spécifiées, chaque fois qu’elle est appelée.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Users need to correctly configure the <ph id="ph1">`TextFieldType`</ph> and <ph id="ph2">`FieldWidths`</ph> or <ph id="ph3">`Delimiters`</ph> properties, as appropriate.</source>
          <target state="translated">Les utilisateurs doivent configurer correctement le <ph id="ph1">`TextFieldType`</ph> et <ph id="ph2">`FieldWidths`</ph> ou <ph id="ph3">`Delimiters`</ph> propriétés, selon vos besoins.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If <ph id="ph1">`TextFieldType`</ph> is set to <ph id="ph2">`Delimited`</ph>, and <ph id="ph3">`Delimiters`</ph> is not set, or if <ph id="ph4">`TextFieldType`</ph> is set to <ph id="ph5">`FixedWidth`</ph> and <ph id="ph6">`FieldWidths`</ph>, an exception is thrown.</source>
          <target state="translated">Si <ph id="ph1">`TextFieldType`</ph> a la valeur <ph id="ph2">`Delimited`</ph>, et <ph id="ph3">`Delimiters`</ph> n’est pas définie, ou si <ph id="ph4">`TextFieldType`</ph> a la valeur <ph id="ph5">`FixedWidth`</ph> et <ph id="ph6">`FieldWidths`</ph>, une exception est levée.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If <ph id="ph1">`ReadFields`</ph> encounters blank lines, they are skipped and the next non-blank line is returned.</source>
          <target state="translated">Si <ph id="ph1">`ReadFields`</ph> rencontre des lignes vides, elles sont ignorées et la prochaine ligne non vide est retournée.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>If the <ph id="ph1">`ReadFields`</ph> method cannot parse the current line, it raises an exception and does not move to the next line.</source>
          <target state="translated">Si le <ph id="ph1">`ReadFields`</ph> méthode ne peut pas analyser la ligne en cours, elle lève une exception et ne déplace pas vers la ligne suivante.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>This enables your application to attempt to parse the line again.</source>
          <target state="translated">Cela permet à votre application tente d’analyser la ligne à nouveau.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`ReadFields`</ph> method.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`ReadFields`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Read from a delimited file</source>
          <target state="translated">Lire à partir d’un fichier délimité</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Read from a fixed-width file</source>
          <target state="translated">Lire à partir d’un fichier de longueur fixe</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>This example uses the <ph id="ph1">`ReadFields`</ph> method to read from the comma-delimited file <ph id="ph2">`ParserText.txt`</ph>.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`ReadFields`</ph> méthode pour lire à partir du fichier CSV <ph id="ph2">`ParserText.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>The example writes the fields to <ph id="ph1">`Testfile.txt`</ph>.</source>
          <target state="translated">L’exemple écrit les champs à <ph id="ph1">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>A field cannot be parsed by using the specified format.</source>
          <target state="translated">Un champ ne peut pas être analysé à l'aide du format spécifié.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>Returns the current line as a string and advances the cursor to the next line.</source>
          <target state="translated">Retourne la ligne active en tant que chaîne et avance le curseur vers la ligne suivante.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>The current line from the file or stream.</source>
          <target state="translated">Ligne active du fichier ou du flux.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>The <ph id="ph1">`ReadLine`</ph> method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</source>
          <target state="translated">Le <ph id="ph1">`ReadLine`</ph> méthode n’effectue aucune analyse ; un caractère de fin de ligne dans un champ délimité est interprété comme la fin de la ligne.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source><ph id="ph1">`Nothing`</ph> is returned if the end of the file is reached.</source>
          <target state="translated"><ph id="ph1">`Nothing`</ph> est retourné si la fin du fichier est atteinte.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>This example reads through the file <ph id="ph1">`ParserText.txt`</ph> and writes it to <ph id="ph2">`Testfile.txt`</ph>.</source>
          <target state="translated">Cet exemple lit le fichier <ph id="ph1">`ParserText.txt`</ph> et écrit dans <ph id="ph2">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>If <ph id="ph1">`Testfile.txt`</ph> does not exist, it is created by the <ph id="ph2">`WriteAllText`</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`Testfile.txt`</ph> n’existe pas, il est créé par le <ph id="ph2">`WriteAllText`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
          <source>This example writes the fields as a single string; to have each line display on its own line in the destination file, a <ph id="ph1">`VbCrLf`</ph> character should be appended at the end of each line.</source>
          <target state="translated">Cet exemple écrit les champs sous forme de chaîne unique ; Pour que chaque ligne s’affiche sur sa propre ligne dans le fichier de destination, une <ph id="ph1">`VbCrLf`</ph> caractère doit être ajouté à la fin de chaque ligne.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>Reads the remainder of the text file and returns it as a string.</source>
          <target state="translated">Lit le reste du fichier texte et le retourne en tant que chaîne.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>The remaining text from the file or stream.</source>
          <target state="translated">Texte restant du fichier ou du flux.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>This is an advanced member; it does not show in IntelliSense unless you click the <bpt id="p1">**</bpt>All<ept id="p1">**</ept> tab.</source>
          <target state="translated">Il s’agit d’un membre avancé ; Il n’affiche pas dans IntelliSense, sauf si vous cliquez sur le <bpt id="p1">**</bpt>tous les<ept id="p1">**</ept> onglet.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>If there is nothing more to read because the end of the file has been reached, <ph id="ph1">`Nothing`</ph> is returned.</source>
          <target state="translated">Si aucune n’est plus à lire parce que la fin du fichier a été atteinte, <ph id="ph1">`Nothing`</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>The <ph id="ph1">`ReadToEnd`</ph> method does not ignore blank lines and comments.</source>
          <target state="translated">Le <ph id="ph1">`ReadToEnd`</ph> méthode n’ignore pas les lignes vides et des commentaires.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>This example uses the <ph id="ph1">`ReadToEnd`</ph> method to read the entire file <ph id="ph2">`ParserText.txt`</ph> and write it to the file <ph id="ph3">`Testfile.txt`</ph>.</source>
          <target state="translated">Cet exemple utilise le <ph id="ph1">`ReadToEnd`</ph> méthode pour lire l’intégralité du fichier <ph id="ph2">`ParserText.txt`</ph> et les écrire dans le fichier <ph id="ph3">`Testfile.txt`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
          <source>If <ph id="ph1">`Testfile.txt`</ph> does not exist, it is created by the <ph id="ph2">`WriteAllText`</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`Testfile.txt`</ph> n’existe pas, il est créé par le <ph id="ph2">`WriteAllText`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Array of type <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see langword="String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Sets the delimiters for the reader to the specified values, and sets the field type to <ph id="ph1">&lt;see langword="Delimited" /&gt;</ph>.</source>
          <target state="translated">Affecte les valeurs spécifiées aux séparateurs pour le lecteur et la valeur <ph id="ph1">&lt;see langword="Delimited" /&gt;</ph> au type de champ.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this method is set.</source>
          <target state="translated">Le contenu existant de la <ph id="ph1">`Delimiters`</ph> propriété est effacé lorsque cette méthode est définie.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">Cette méthode fournit un moyen de définir des délimiteurs sans créer de tableau.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>The following table lists an example of a task involving the <ph id="ph1">`SetDelimiters`</ph> method.</source>
          <target state="translated">Le tableau suivant répertorie un exemple de tâche impliquant la <ph id="ph1">`SetDelimiters`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Parse a text file</source>
          <target state="translated">Analyser un fichier texte</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source><bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Analyse des fichiers texte avec l’objet TextFieldParser<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>This example opens a text field parser and defines the delimiter as <ph id="ph1">`vbTab`</ph>.</source>
          <target state="translated">Cet exemple ouvre un analyseur de champ de texte et définit le délimiteur comme <ph id="ph1">`vbTab`</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Remplacez le chemin d’accès <ph id="ph1">`C:\logs\test.log`</ph> avec le chemin d’accès et le nom du fichier à analyser.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
          <source>A delimiter is zero-length.</source>
          <target state="translated">Un délimiteur est de longueur nulle.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Array of <ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</source>
          <target state="translated">Tableau d'<ph id="ph1">&lt;see langword="Integer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Sets the delimiters for the reader to the specified values.</source>
          <target state="translated">Affecte les valeurs spécifiées aux séparateurs pour le lecteur.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The existing contents of the <ph id="ph1">`Delimiters`</ph> property are cleared when this is set.</source>
          <target state="translated">Le contenu existant de la <ph id="ph1">`Delimiters`</ph> propriété sont désactivées lorsque ce paramètre est défini.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>This method provides a way to set delimiters without creating an array.</source>
          <target state="translated">Cette méthode fournit un moyen de définir des délimiteurs sans créer de tableau.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The following table lists example of tasks involving the <ph id="ph1">`SetFieldWidths`</ph> method.</source>
          <target state="translated">Le tableau suivant répertorie l’exemple de tâches impliquant la <ph id="ph1">`SetFieldWidths`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Parse a text file.</source>
          <target state="translated">Analyser un fichier texte.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source><bpt id="p1">[</bpt>Parsing Text Files with the TextFieldParser Object<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Analyse des fichiers texte avec l’objet TextFieldParser<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)</ept></target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>This example opens a text-field parser and defines the field width as <ph id="ph1">`5`</ph>.</source>
          <target state="translated">Cet exemple ouvre un analyseur de champ de texte et définit la largeur du champ en tant que <ph id="ph1">`5`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Remplacez le chemin d’accès <ph id="ph1">`C:\logs\test.log`</ph> avec le chemin d’accès et le nom du fichier à analyser.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>The following example opens a text-field parser and defines the field widths as <ph id="ph1">`5`</ph>, <ph id="ph2">`10`</ph>, and variable.</source>
          <target state="translated">L’exemple suivant ouvre un analyseur de champ de texte et définit la largeur de champ en tant que <ph id="ph1">`5`</ph>, <ph id="ph2">`10`</ph>et la variable.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
          <source>Replace the path <ph id="ph1">`C:\logs\test.log`</ph> with the path and name of the file you wish to parse.</source>
          <target state="translated">Remplacez le chemin d’accès <ph id="ph1">`C:\logs\test.log`</ph> avec le chemin d’accès et le nom du fichier à analyser.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">Indique si le fichier à analyser est délimité ou à largeur fixe.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>A <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /&gt;</ph> value that indicates whether the file to be parsed is delimited or fixed-width.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /&gt;</ph> qui indique si le fichier à analyser est délimité ou de longueur fixe.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>The default value of this property is delimited.</source>
          <target state="translated">La valeur par défaut de cette propriété est délimitée.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>The following table lists examples of tasks involving the <ph id="ph1">`TextFieldType`</ph> property.</source>
          <target state="translated">Le tableau suivant répertorie des exemples de tâches impliquant la <ph id="ph1">`TextFieldType`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>To</source>
          <target state="translated">À</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>See</source>
          <target state="translated">Voir</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a delimited text file</source>
          <target state="translated">Lire à partir d’un fichier texte délimité</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Comma-Delimited Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte délimités par des virgules<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a fixed-width text file</source>
          <target state="translated">Lire un fichier texte de largeur fixe</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Fixed-width Text Files<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte de largeur fixe<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)</ept></target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>Read from a text file with multiple formats</source>
          <target state="translated">Lire à partir d’un fichier texte avec plusieurs formats</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source><bpt id="p1">[</bpt>How to: Read From Text Files with Multiple Formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique : lire des fichiers texte avec plusieurs formats<ept id="p1">](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)</ept></target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and specifies that it is delimited.</source>
          <target state="translated">Cet exemple crée un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>et spécifie qu’il est délimité.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and specifies that it is fixed-width.</source>
          <target state="translated">Cet exemple crée un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>et spécifie qu’il est à largeur fixe.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>Indicates whether leading and trailing white space should be trimmed from field values.</source>
          <target state="translated">Indique si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source><ph id="ph1">&lt;see langword="True" /&gt;</ph> if leading and trailing white space should be trimmed from field values; otherwise, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="True" /&gt;</ph> si les espaces blancs de début et de fin doivent être supprimés des valeurs de champs ; sinon, <ph id="ph2">&lt;see langword="False" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>The default value for this property is <ph id="ph1">`True`</ph>.</source>
          <target state="translated">La valeur par défaut de cette propriété est <ph id="ph1">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
          <source>This example creates a <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>, and sets the <ph id="ph3">`TrimWhiteSpace`</ph> property to <ph id="ph4">`True`</ph>.</source>
          <target state="translated">Cet exemple crée un <ph id="ph1">`TextFieldParser`</ph>, <ph id="ph2">`FileReader`</ph>et définit les <ph id="ph3">`TrimWhiteSpace`</ph> propriété <ph id="ph4">`True`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>