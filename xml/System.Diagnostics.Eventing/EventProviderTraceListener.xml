<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8ef6f-101">Écouteur de <see cref="T:System.Diagnostics.TraceSource" /> qui écrit des événements dans le sous-système ETW.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6f-102">Toutes les données d’événement (trace ou debug) à partir de l’événement source est écrit dans le sous-système ETW en tant que chaîne.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="8ef6f-103">Les éléments de données sont séparées par une virgule.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="8ef6f-104">Pour spécifier un séparateur différent, utilisez la <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="8ef6f-105">Ajout de l’écouteur à <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> enregistre le fournisseur avec le sous-système ETW.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="8ef6f-106">Vous devez créer une session de suivi ETW à l’aide du programme exécutable Logman.exe (ou similaire) pour écrire les événements dans un fichier journal.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="8ef6f-107">Vous n’avez pas besoin d’un manifeste pour consommer des événements à partir de l’écouteur, car les données d’événement seront une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="8ef6f-108">Lorsque vous appelez le <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> méthodes pour écrire des événements, vous passez un <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="8ef6f-109">L’énumération contient des valeurs de niveau et de mot clé.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="8ef6f-110">Lorsque vous activez un fournisseur d’écouteur de trace à partir d’une session ETW, la valeur de niveau que vous spécifiez peut être la valeur associée à une de ces <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valeurs d’énumération :</span><span class="sxs-lookup"><span data-stu-id="8ef6f-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="8ef6f-111">Critique (la valeur est 1)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="8ef6f-112">Erreur (la valeur est 2)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="8ef6f-113">Informations (la valeur est 8)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="8ef6f-114">Verbose (la valeur est 16)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="8ef6f-115">Avertissement (la valeur est 4)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="8ef6f-116">La valeur de mot clé que vous spécifiez pour la session peut être la valeur associée à une des opérations suivantes <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> valeurs d’énumération :</span><span class="sxs-lookup"><span data-stu-id="8ef6f-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="8ef6f-117">Resume (la valeur est 2 048)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="8ef6f-118">Démarrer (la valeur est 256)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="8ef6f-119">Arrêter (la valeur est 512)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="8ef6f-120">Suspendre (la valeur est 1 024)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="8ef6f-121">Transfert (la valeur est 4 096)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ef6f-122">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="8ef6f-123">Chaîne <see cref="T:System.Guid" /> unique qui identifie le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <summary><span data-ttu-id="8ef6f-124">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> à l'aide de l'identificateur du fournisseur spécifié.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="8ef6f-125">Chaîne <see cref="T:System.Guid" /> unique qui identifie le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="8ef6f-126">Nom de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-126">Name of the listener.</span></span></param>
        <summary><span data-ttu-id="8ef6f-127">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> en utilisant l'identificateur du fournisseur spécifié et le nom de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="8ef6f-128">Chaîne <see cref="T:System.Guid" /> unique qui identifie le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="8ef6f-129">Nom de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-129">Name of the listener.</span></span></param>
        <param name="delimiter"><span data-ttu-id="8ef6f-130">Séparateur utilisé pour délimiter les données de l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-130">Delimiter used to delimit the event data.</span></span> <span data-ttu-id="8ef6f-131">(Pour plus d'informations, consultez la propriété <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />.)</span><span class="sxs-lookup"><span data-stu-id="8ef6f-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span></span></param>
        <summary><span data-ttu-id="8ef6f-132">Initialise une nouvelle instance de la classe <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> en utilisant l'identificateur du fournisseur spécifié, le nom de l'écouteur et le séparateur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ef6f-133">Ferme le flux de sortie pour qu’il ne reçoive plus la sortie de traçage ou de débogage.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-133">Closes the output stream so it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ef6f-134">Obtient et définit le séparateur utilisé pour délimiter les données de l'événement écrites dans le sous-système ETW.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-134">Gets and sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span></span></summary>
        <value><span data-ttu-id="8ef6f-135">Séparateur utilisé pour délimiter les données de l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-135">The delimiter used to delimit the event data.</span></span> <span data-ttu-id="8ef6f-136">Le délimiteur par défaut est une virgule.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-136">The default delimiter is a comma.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6f-137">L’écouteur convertit les éléments de données en chaînes et puis concatène les chaînes, à l’aide du délimiteur spécifié pour délimiter chaque élément de données dans la chaîne.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="8ef6f-138">La chaîne est ensuite écrites en tant que les données d’événement dans le sous-système ETW.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="8ef6f-139">Pour analyser correctement la chaîne, le consommateur doit connaître le délimiteur qui a été utilisé.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="8ef6f-140">Si les données contiennent une chaîne qui peut contenir une virgule, spécifiez un séparateur approprié afin que les données d’événement peuvent être analysées correctement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="8ef6f-141">Vous n’avez pas besoin d’un manifeste pour consommer des événements à partir de l’écouteur, car les données d’événement seront une chaîne unique.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="8ef6f-142">Le délimiteur s’applique aux données d’événement écrites à l’aide du <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8ef6f-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8ef6f-143">Message à émettre.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-143">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="8ef6f-144">Message détaillé à émettre.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-144">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="8ef6f-145">Émet un message d'erreur, ainsi qu'un message d'erreur détaillé, à l'écouteur que vous créez lors de l'implémentation de la classe <see cref="T:System.Diagnostics.TraceListener" />.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ef6f-146">Vide la mémoire tampon de sortie.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-146">Flushes the output buffer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ef6f-147">Obtient les attributs personnalisés pris en charge par l'écouteur de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-147">Gets the custom attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="8ef6f-148">Tableau de chaînes qui nomme les attributs personnalisés pris en charge par l'écouteur de trace, ou <see langword="null" /> s'il n'y a pas d'attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ef6f-149">Obtient une valeur qui indique si l'écouteur de trace est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-149">Gets a value indicating whether the trace listener is thread safe.</span></span></summary>
        <value>
          <span data-ttu-id="8ef6f-150"><see langword="true" /> si l'écouteur de trace est thread-safe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-150"><see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8ef6f-151">La valeur par défaut est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-151">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-152">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-153">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-153">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="8ef6f-154">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-155">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-155">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="8ef6f-156">Données de trace à émettre.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-156">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="8ef6f-157">Écrit les informations sur la trace, un objet de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-157">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-158">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-159">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-159">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="8ef6f-160">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-161">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-161">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="8ef6f-162">Tableau d'objets à émettre comme données.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-162">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="8ef6f-163">Écrit les informations sur la trace, un objet de données et les informations sur les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-163">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-164">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-165">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-165">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="8ef6f-166">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-167">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-167">A numeric identifier for the event.</span></span></param>
        <summary><span data-ttu-id="8ef6f-168">Écrit les informations sur la trace et les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-168">Writes trace and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-169">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-170">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-170">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="8ef6f-171">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-172">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-172">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="8ef6f-173">Message à écrire.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-173">A message to write.</span></span></param>
        <summary><span data-ttu-id="8ef6f-174">Écrit les informations sur la trace, un message et les informations sur les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-174">Writes trace information, a message, and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-175">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-176">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-176">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="8ef6f-177">Une des valeurs de <see cref="T:System.Diagnostics.TraceEventType" /> spécifiant le type d'événement qui a déclenché la trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-178">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-178">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="8ef6f-179">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <c>args</c>.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-179">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="8ef6f-180"><see langword="object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-180">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="8ef6f-181">Écrit les informations sur la trace, un tableau d'objets mis en forme et les informations sur les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="8ef6f-182">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="8ef6f-183">Nom utilisé pour identifier la sortie, généralement le nom de l'application qui a généré l'événement de trace.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-183">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="id"><span data-ttu-id="8ef6f-184">Identificateur numérique pour l'événement.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-184">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="8ef6f-185">Message à écrire.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-185">A message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="8ef6f-186">Objet <see cref="T:System.Guid" /> qui identifie une activité connexe.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span></span></param>
        <summary><span data-ttu-id="8ef6f-187">Écrit les informations sur la trace, un message, une identité d'activité connexe et les informations sur les événements dans la sortie spécifique de l'écouteur.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8ef6f-188">Message à écrire.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="8ef6f-189">En cas de substitution dans une classe dérivée, écrit le message spécifié dans l'écouteur que vous créez dans la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8ef6f-190">Message à écrire.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-190">A message to write.</span></span></param>
        <summary><span data-ttu-id="8ef6f-191">En cas de substitution dans une classe dérivée, écrit un message dans l'écouteur que vous créez dans la classe dérivée, suivi d'une marque de fin de ligne.</span><span class="sxs-lookup"><span data-stu-id="8ef6f-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>