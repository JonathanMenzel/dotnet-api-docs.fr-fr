<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbEnumerator.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51bde5ae17b68c87de51dbd180afb527c0932b925.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bde5ae17b68c87de51dbd180afb527c0932b925</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Exposes the <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph> method, which supports a simple iteration over a collection by a .NET Framework data provider.</source>
          <target state="translated">Expose la méthode <ph id="ph1">&lt;see cref="M:System.Collections.IEnumerable.GetEnumerator" /&gt;</ph>, qui prend en charge une itération simple sur une collection par un fournisseur de données .NET Framework.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> class is implemented by a .NET Framework data provider to provide data binding support.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> classe est implémentée par un fournisseur de données .NET Framework pour fournir la prise en charge de la liaison de données.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>By design, the <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> object is intended for use with only one resultset.</source>
          <target state="translated">Par défaut, le <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> objet a été conçu pour une utilisation avec un seul jeu de résultats.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema.</source>
          <target state="translated">Par exemple, si vous exécutez une instruction par lot contenant deux instructions SQL SELECT qui retournent des schémas différents, la deuxième instruction ne peut-être pas renvoyer l’ensemble du schéma.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbEnumerator">
          <source>To avoid this situation, obtain a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> for each resultset, and then call the <ph id="ph2">`NextResult`</ph> method of a .NET Framework data provider DataReader object.</source>
          <target state="translated">Pour éviter cette situation, vous devez obtenir un <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator&gt;</ph> pour chaque jeu de résultats, puis appelez le <ph id="ph2">`NextResult`</ph> méthode d’un objet DataReader de fournisseur de données .NET Framework.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbEnumerator">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">DataReader au sein duquel itérer.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class with the give n data reader.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> avec le lecteur de données spécifié.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> au sein duquel itérer.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> à l'aide du <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>The DataReader through which to iterate.</source>
          <target state="translated">DataReader au sein duquel itérer.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the DataReader after iterating through its data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour fermer automatiquement le DataReader après l’itération au sein de ses données ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> à l’aide du lecteur spécifié et indique de fermer automatiquement ou non le lecteur après l’itération au sein de ses données.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> through which to iterate.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataReader" /&gt;</ph> au sein duquel itérer.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to automatically close the <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour fermer automatiquement <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> après l’itération au sein de ses données ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> class using the specified <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph>, and indicates whether to automatically close the <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> after iterating through its data.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Data.Common.DbEnumerator" /&gt;</ph> à l’aide du <ph id="ph2">&lt;see langword="DataReader" /&gt;</ph> spécifié, et indique si <ph id="ph3">&lt;see langword="DataReader" /&gt;</ph> doit être fermé automatiquement après l’itération au sein de ses données.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">Obtient l’élément actuel dans la collection.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The current element in the collection.</source>
          <target state="translated">Élément actuel dans la collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>After an enumerator is created or after a <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Après avoir créé un énumérateur ou après un <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> doit être appelée pour avancer l’énumérateur jusqu’au premier élément de la collection avant de lire la valeur de <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>; sinon, <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> n’est pas défini.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> returned false, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> lève également une exception si le dernier appel à <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> a retourné false, ce qui indique la fin de la collection.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> does not move the position of the enumerator and consecutive calls to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> ne déplace pas la position de l’énumérateur et les appels successifs à <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> retournent le même objet jusqu'à ce que <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph4">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> generates an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification ou suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> génère une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> returns the element to which it is set, even if the enumerator is already invalidated.</source>
          <target state="translated">Si la collection est modifiée entre <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbEnumerator.Current%2A&gt;</ph> retourne l’élément auquel il est défini, même si l’énumérateur est déjà invalidé.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbEnumerator.Current">
          <source>The enumerator is positioned before the first element of the collection or after the last element.</source>
          <target state="translated">L'énumérateur est placé avant le premier élément de la collection ou après le dernier élément.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the collection.</source>
          <target state="translated">Avance l’énumérateur à l’élément suivant de la collection.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'énumérateur a pu avancer jusqu'à l'élément suivant ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> si l'énumérateur a dépassé la fin de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After an enumerator is created or after a call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, an enumerator is positioned before the first element of the collection, and the first call to <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> moves the enumerator over the first element of the collection.</source>
          <target state="translated">Après avoir créé un énumérateur ou après un appel à <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph>, un énumérateur est positionné avant le premier élément de la collection et le premier appel à <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> déplace l’énumérateur sur le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>After the end of the collection is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> return false until <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">Après la fin de la collection est passées, les appels suivants à <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> renvoient la valeur false jusqu'à ce que <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification ou suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La collection a été modifiée après la création de l'énumérateur.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
          <target state="translated">Rétablit l’énumérateur à sa position initiale, qui précède le premier élément de la collection.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Un énumérateur est valide tant que la collection demeure inchangée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si des modifications sont apportées à la collection, telles que l’ajout, modification ou suppression d’éléments, l’énumérateur est définitivement invalidé et l’appel suivant à <ph id="ph1">&lt;xref:System.Data.Common.DbEnumerator.MoveNext%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Data.Common.DbEnumerator.Reset%2A&gt;</ph> lève une <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">La collection a été modifiée après la création de l'énumérateur.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>