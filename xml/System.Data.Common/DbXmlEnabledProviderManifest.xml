<Type Name="DbXmlEnabledProviderManifest" FullName="System.Data.Common.DbXmlEnabledProviderManifest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84749740cfff033717bfdd327854ab5f42b34e3f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39794142" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbXmlEnabledProviderManifest : System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbXmlEnabledProviderManifest extends System.Data.Common.DbProviderManifest" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbXmlEnabledProviderManifest" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbXmlEnabledProviderManifest&#xA;Inherits DbProviderManifest" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbXmlEnabledProviderManifest abstract : System::Data::Common::DbProviderManifest" />
  <TypeSignature Language="F#" Value="type DbXmlEnabledProviderManifest = class&#xA;    inherit DbProviderManifest" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbProviderManifest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1ec6c-101">Représente un classe de base qui implémente le <see cref="T:System.Data.Common.DbProviderManifest" /> basé sur une définition XML.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-101">Represents a base class that implements the <see cref="T:System.Data.Common.DbProviderManifest" /> based on an XML definition.</span></span> <span data-ttu-id="1ec6c-102">La classe <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> permet d'obtenir des informations spécifiques au fournisseur au moment de l'exécution.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-102">You can use the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class to obtain provider-specific information at runtime.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-103">La classe <xref:System.Data.Common.DbXmlEnabledProviderManifest> est particulièrement appropriée pour les fournisseurs dont le mappage de type à EDM est symétrique.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-103">The <xref:System.Data.Common.DbXmlEnabledProviderManifest> class is especially appropriate for the providers whose type mapping to EDM is symmetrical.</span></span> <span data-ttu-id="1ec6c-104">Dans les scénarios de mappage de type symétrique, chaque type de stockage est mappé à un type EDM (Entity Data Model) unique, indépendamment du sens du mappage.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-104">In symmetrical type mapping scenarios, each storage type maps to a single Entity Data Model (EDM) type regardless of the mapping direction.</span></span> <span data-ttu-id="1ec6c-105">En d'autres termes, la mappage de type EDM-à-fournisseur est le même que le mappage de type fournisseur-à-EDM.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-105">In other words, the EDM-to-provider type mapping is the same as the provider-to-EDM type mapping.</span></span>  
  
 <span data-ttu-id="1ec6c-106">Dans les scénarios de mappage symétrique, vous pouvez faire dériver la classe de votre fournisseur personnalisé de la classe <xref:System.Data.Common.DbXmlEnabledProviderManifest> ou de la classe <xref:System.Data.Common.DbProviderManifest>.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-106">In symmetric mapping scenarios, you can either derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class or the <xref:System.Data.Common.DbProviderManifest> class.</span></span> <span data-ttu-id="1ec6c-107">Il est recommandé de faire dériver la classe de votre fournisseur personnalisé de la classe <xref:System.Data.Common.DbXmlEnabledProviderManifest> pour les scénarios de mappage symétrique car la classe <xref:System.Data.Common.DbXmlEnabledProviderManifest> vous permet de spécifier les manifestes de façon déclarative.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-107">We recommend that you derive your custom provider class from the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class for symmetric mapping scenarios because the <xref:System.Data.Common.DbXmlEnabledProviderManifest> class will allow you to specify the manifests declaratively.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbXmlEnabledProviderManifest (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbXmlEnabledProviderManifest(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbXmlEnabledProviderManifest : System.Xml.XmlReader -&gt; System.Data.Common.DbXmlEnabledProviderManifest" Usage="new System.Data.Common.DbXmlEnabledProviderManifest reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="1ec6c-108">Objet <see cref="T:System.Xml.XmlReader" /> qui fournit l'accès aux données XML dans le fichier de manifeste du fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-108">An <see cref="T:System.Xml.XmlReader" /> object that provides access to the XML data in the provider manifest file.</span></span></param>
        <summary><span data-ttu-id="1ec6c-109">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" />.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-109">Initializes a new instance of the <see cref="T:System.Data.Common.DbXmlEnabledProviderManifest" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-110">Entity Framework fournit une implémentation par défaut qui crée le fournisseur d’informations à partir de XmlReader donné du manifeste.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-110">The Entity Framework provides a default implementation that builds the provider manifest information from the given XmlReader.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFacetDescriptions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.FacetDescription&gt; GetFacetDescriptions(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetFacetDescriptions(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFacetDescriptions (type As EdmType) As ReadOnlyCollection(Of FacetDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::FacetDescription ^&gt; ^ GetFacetDescriptions(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberSignature Language="F#" Value="override this.GetFacetDescriptions : System.Data.Metadata.Edm.EdmType -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;" Usage="dbXmlEnabledProviderManifest.GetFacetDescriptions type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.FacetDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1ec6c-111"><see cref="T:System.Data.Metadata.Edm.EdmType" /> pour lequel les descriptions de facette doivent être récupérées.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-111">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> for which the facet descriptions are to be retrieved.</span></span></param>
        <summary><span data-ttu-id="1ec6c-112">Retourne la liste des descriptions de facette pour le type EDM (Entity Data Model) spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-112">Returns the list of facet descriptions for the specified Entity Data Model (EDM) type.</span></span></summary>
        <returns><span data-ttu-id="1ec6c-113">Collection de type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient la liste des descriptions de facette pour le type EDM spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-113">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of facet descriptions for the specified EDM type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreFunctions">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetStoreFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreFunctions () As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetStoreFunctions();" />
      <MemberSignature Language="F#" Value="override this.GetStoreFunctions : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ec6c-114">Retourne la liste des fonctions prises en charge par le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-114">Returns the list of provider-supported functions.</span></span></summary>
        <returns><span data-ttu-id="1ec6c-115">Collection de type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient la liste des fonctions prises en charge par le fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-115">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of provider-supported functions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-116">Cette méthode (qui n’autorise pas la valeur null) ne retourne pas de fonctions définies par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-116">This (not nullable) method does not return user-defined functions.</span></span> <span data-ttu-id="1ec6c-117">Si le fournisseur ne prend en charge aucune fonction, cette méthode retourne une collection vide.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-117">If the provider does not support any functions, this method returns an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStoreTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetStoreTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbXmlEnabledProviderManifest.GetStoreTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStoreTypes () As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetStoreTypes();" />
      <MemberSignature Language="F#" Value="override this.GetStoreTypes : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="dbXmlEnabledProviderManifest.GetStoreTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1ec6c-118">Retourne la liste des types primitifs pris en charge par le fournisseur de stockage.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-118">Returns the list of primitive types supported by the storage provider.</span></span></summary>
        <returns><span data-ttu-id="1ec6c-119">Collection de type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> qui contient la liste des types primitifs pris en charge par le fournisseur de stockage.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-119">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains the list of primitive types supported by the storage provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-120">Si le magasin ne prend pas en charge n’importe quel type, cette méthode (qui n’autorise pas la valeur null) retourne une collection vide.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-120">If the store does not support any type, this (not nullable) method returns an empty collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public override string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="System.Data.Common.DbXmlEnabledProviderManifest.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ec6c-121">Obtient le nom d'espace de noms pris en charge par le manifeste de ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-121">Gets the namespace name supported by this provider manifest.</span></span></summary>
        <value><span data-ttu-id="1ec6c-122">Nom d'espace de noms pris en charge par le manifeste de ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-122">The namespace name supported by this provider manifest.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToEdmPrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToEdmPrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToEdmPrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToEdmPrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToEdmPrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ec6c-123">Obtient le type EDM (Entity Data Model) équivalent le mieux adapté au nom du type de stockage spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-123">Gets the best mapped equivalent Entity Data Model (EDM) type for a specified storage type name.</span></span></summary>
        <value><span data-ttu-id="1ec6c-124">Type EDM équivalent le mieux adapté au nom du type de stockage spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-124">The best mapped equivalent EDM type for a specified storage type name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-125">Cette propriété (qui n’autorise pas la valeur null) retourne le <xref:System.Collections.Generic.Dictionary`2> objet, qui accepte un nom de type de stockage en tant que clé et retourne sa valeur de type EDM associée.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-125">This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary`2> object, which accepts a storage type name as a key and returns its associated EDM type value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreTypeNameToStorePrimitiveType">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Data.Metadata.Edm.PrimitiveType&gt; StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StoreTypeNameToStorePrimitiveType As Dictionary(Of String, PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ StoreTypeNameToStorePrimitiveType { System::Collections::Generic::Dictionary&lt;System::String ^, System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StoreTypeNameToStorePrimitiveType : System.Collections.Generic.Dictionary&lt;string, System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="System.Data.Common.DbXmlEnabledProviderManifest.StoreTypeNameToStorePrimitiveType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1ec6c-126">Obtient le type primitif de stockage équivalent le mieux adapté au nom du type de stockage spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-126">Gets the best mapped equivalent storage primitive type for a specified storage type name.</span></span></summary>
        <value><span data-ttu-id="1ec6c-127">Type primitif de stockage équivalent le mieux adapté au nom du type de stockage spécifié.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-127">The best mapped equivalent storage primitive type for a specified storage type name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1ec6c-128">Cette propriété (qui n’autorise pas la valeur null) retourne le <xref:System.Collections.Generic.Dictionary`2> objet, qui accepte un nom de type de stockage en tant que clé et retourne sa valeur de type primitif de stockage associé.</span><span class="sxs-lookup"><span data-stu-id="1ec6c-128">This property (not nullable) returns the <xref:System.Collections.Generic.Dictionary`2> object, which accepts a storage type name as a key and returns its associated storage primitive type value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>